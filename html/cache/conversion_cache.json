{
  "../chapter5.md": {
    "hash": "ac59d0ade278c9631e9f981afb215e91",
    "content": "<h1 id=\"2\">\u7b2c\u4e94\u7ae0\uff1a\u6b27\u62c9\u89c6\u89d2\uff082\uff09\uff1a\u7ebf\u6027\u7cfb\u7edf\u6c42\u89e3\u5668</h1>\n<p>\u5728\u6b27\u62c9\u89c6\u89d2\u7684\u7269\u7406\u4eff\u771f\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u6c42\u89e3\u5927\u89c4\u6a21\u7a00\u758f\u7ebf\u6027\u7cfb\u7edf\uff0c\u7279\u522b\u662f\u5728\u538b\u529b\u6295\u5f71\u6b65\u9aa4\u4e2d\u51fa\u73b0\u7684\u6cca\u677e\u65b9\u7a0b\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u8fd9\u4e9b\u7ebf\u6027\u7cfb\u7edf\u7684\u7279\u6027\u4ee5\u53ca\u9ad8\u6548\u6c42\u89e3\u5b83\u4eec\u7684\u5404\u79cd\u65b9\u6cd5\u3002\u4ece\u57fa\u7840\u7684\u8fed\u4ee3\u6cd5\u5230\u5148\u8fdb\u7684\u591a\u91cd\u7f51\u683c\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u7cfb\u7edf\u5730\u5b66\u4e60\u5982\u4f55\u5728\u4fdd\u8bc1\u7cbe\u5ea6\u7684\u540c\u65f6\u5b9e\u73b0\u9ad8\u6027\u80fd\u8ba1\u7b97\u3002</p>\n<h2 id=\"51-nullspaces\">5.1 \u7a00\u758f\u77e9\u9635\u4e0e\u96f6\u7a7a\u95f4(Nullspaces)</h2>\n<h3 id=\"511\">5.1.1 \u7a00\u758f\u77e9\u9635\u5b58\u50a8\u683c\u5f0f</h3>\n<p>\u5728\u7269\u7406\u4eff\u771f\u4e2d\uff0c\u79bb\u6563\u5316\u540e\u7684\u7ebf\u6027\u7cfb\u7edf\u901a\u5e38\u5177\u6709\u7a00\u758f\u6027\u2014\u2014\u77e9\u9635\u4e2d\u5927\u90e8\u5206\u5143\u7d20\u4e3a\u96f6\u3002\u4f8b\u5982\uff0c\u4e8c\u7ef45\u70b9Laplace\u7b97\u5b50\u6bcf\u884c\u6700\u591a\u53ea\u67095\u4e2a\u975e\u96f6\u5143\u7d20\u3002\u9ad8\u6548\u5b58\u50a8\u8fd9\u4e9b\u7a00\u758f\u77e9\u9635\u5bf9\u4e8e\u8282\u7701\u5185\u5b58\u548c\u52a0\u901f\u8ba1\u7b97\u81f3\u5173\u91cd\u8981\u3002</p>\n<p><strong>\u538b\u7f29\u7a00\u758f\u884c\u683c\u5f0f(CSR)</strong>\u662f\u6700\u5e38\u7528\u7684\u5b58\u50a8\u683c\u5f0f\uff1a</p>\n<ul>\n<li><code>values[]</code>: \u5b58\u50a8\u6240\u6709\u975e\u96f6\u5143\u7d20</li>\n<li><code>col_indices[]</code>: \u6bcf\u4e2a\u975e\u96f6\u5143\u7d20\u7684\u5217\u7d22\u5f15</li>\n<li><code>row_ptrs[]</code>: \u6bcf\u884c\u7684\u8d77\u59cb\u4f4d\u7f6e\u5728values\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15</li>\n</ul>\n<p>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u77e9\u9635\uff1a\n$$A = \\begin{bmatrix} 4 &amp; -1 &amp; 0 \\\\ -1 &amp; 4 &amp; -1 \\\\ 0 &amp; -1 &amp; 4 \\end{bmatrix}$$\nCSR\u8868\u793a\u4e3a\uff1a</p>\n<ul>\n<li><code>values = [4, -1, -1, 4, -1, -1, 4]</code></li>\n<li><code>col_indices = [0, 1, 0, 1, 2, 1, 2]</code></li>\n<li><code>row_ptrs = [0, 2, 5, 7]</code></li>\n</ul>\n<p><strong>\u5750\u6807\u683c\u5f0f(COO)</strong>\u9002\u5408\u6784\u5efa\u9636\u6bb5\uff1a</p>\n<ul>\n<li><code>(row[], col[], value[])</code> \u4e09\u5143\u7ec4\u8868\u793a\u6bcf\u4e2a\u975e\u96f6\u5143\u7d20</li>\n</ul>\n<h3 id=\"512\">5.1.2 \u517c\u5bb9\u6027\u6761\u4ef6</h3>\n<p>\u5bf9\u4e8e\u5947\u5f02\u7cfb\u7edf $Ax = b$\uff0c\u89e3\u5b58\u5728\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u53f3\u7aef\u9879 $b$ \u5fc5\u987b\u5782\u76f4\u4e8e\u77e9\u9635 $A$ \u7684\u96f6\u7a7a\u95f4\u3002</p>\n<p>\u8003\u8651\u7eafNeumann\u8fb9\u754c\u6761\u4ef6\u4e0b\u7684\u6cca\u677e\u65b9\u7a0b\uff1a\n$$\\nabla^2 p = \\nabla \\cdot u^*$$\n\u79bb\u6563\u5316\u540e\u5f97\u5230\u7684\u7ebf\u6027\u7cfb\u7edf\u5177\u6709\u4e00\u7ef4\u96f6\u7a7a\u95f4\uff0c\u5176\u57fa\u5411\u91cf\u4e3a $\\mathbf{1} = [1, 1, ..., 1]^T$\u3002\u8fd9\u662f\u56e0\u4e3a\u538b\u529b\u573a\u53ef\u4ee5\u76f8\u5dee\u4e00\u4e2a\u5e38\u6570\u800c\u4e0d\u5f71\u54cd\u538b\u529b\u68af\u5ea6\u3002</p>\n<p>\u517c\u5bb9\u6027\u6761\u4ef6\u8981\u6c42\uff1a\n$$\\mathbf{1}^T b = \\sum_i b_i = \\sum_i (\\nabla \\cdot u^*)_i = 0$$\n\u8fd9\u5728\u7269\u7406\u4e0a\u5bf9\u5e94\u4e8e\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u2014\u2014\u6d41\u5165\u7b49\u4e8e\u6d41\u51fa\u3002</p>\n<h3 id=\"513\">5.1.3 \u96f6\u7a7a\u95f4\u6295\u5f71</h3>\n<p>\u5f53\u7cfb\u7edf\u5177\u6709\u975e\u5e73\u51e1\u96f6\u7a7a\u95f4\u65f6\uff0c\u89e3\u4e0d\u552f\u4e00\u3002\u6211\u4eec\u9700\u8981\u5c06\u89e3\u6295\u5f71\u5230\u96f6\u7a7a\u95f4\u7684\u6b63\u4ea4\u8865\u7a7a\u95f4\u4e2d\u3002</p>\n<p>\u5bf9\u4e8e\u538b\u529b\u6cca\u677e\u65b9\u7a0b\uff0c\u5e38\u7528\u7684\u5904\u7406\u65b9\u6cd5\u5305\u62ec\uff1a</p>\n<ol>\n<li><strong>\u56fa\u5b9a\u4e00\u70b9\u538b\u529b</strong>\uff1a\u8bbe\u7f6e $p_0 = 0$\uff0c\u79fb\u9664\u4e00\u4e2a\u81ea\u7531\u5ea6</li>\n<li><strong>\u6295\u5f71\u6cd5</strong>\uff1a\u6c42\u89e3\u540e\u51cf\u53bb\u5e73\u5747\u503c $p = p - \\frac{1}{n}\\sum_i p_i$</li>\n<li><strong>\u589e\u5e7f\u7cfb\u7edf</strong>\uff1a\u6dfb\u52a0\u7ea6\u675f $\\sum_i p_i = 0$</li>\n</ol>\n<p>\u6295\u5f71\u64cd\u4f5c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n$$P = I - \\frac{\\mathbf{1}\\mathbf{1}^T}{n}$$\n\u5176\u4e2d $P$ \u662f\u6295\u5f71\u77e9\u9635\uff0c\u5c06\u5411\u91cf\u6295\u5f71\u5230\u96f6\u7a7a\u95f4\u7684\u6b63\u4ea4\u8865\u3002</p>\n<h3 id=\"514\">5.1.4 \u5947\u5f02\u7cfb\u7edf\u7684\u5904\u7406</h3>\n<p>\u5904\u7406\u5947\u5f02\u7cfb\u7edf\u7684\u5b9e\u7528\u7b56\u7565\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6b63\u5219\u5316</strong>\uff1a\u6dfb\u52a0\u5c0f\u91cf $\\epsilon I$ \u4f7f\u77e9\u9635\u975e\u5947\u5f02\n$$(A + \\epsilon I)x = b$$</p>\n</li>\n<li>\n<p><strong>\u6700\u5c0f\u4e8c\u4e58\u89e3</strong>\uff1a\u6c42\u89e3 $\\min ||Ax - b||_2$\uff0c\u4f7f\u7528\u5e7f\u4e49\u9006\n$$x = A^+ b$$</p>\n</li>\n<li>\n<p><strong>\u517c\u5bb9\u6027\u4fee\u6b63</strong>\uff1a\u5f3a\u5236\u53f3\u7aef\u9879\u6ee1\u8db3\u517c\u5bb9\u6027\u6761\u4ef6\n$$b' = b - \\frac{\\mathbf{1}^T b}{n}\\mathbf{1}$$</p>\n</li>\n<li>\n<p><strong>\u8fed\u4ee3\u6c42\u89e3\u5668\u8c03\u6574</strong>\uff1a\n   - \u5728CG\u4e2d\u4f7f\u7528\u6295\u5f71\u9884\u6761\u4ef6\n   - \u5728\u591a\u91cd\u7f51\u683c\u4e2d\u7279\u6b8a\u5904\u7406\u7c97\u7f51\u683c\u96f6\u7a7a\u95f4</p>\n</li>\n</ol>\n<h2 id=\"52-krylov\">5.2 Krylov\u5b50\u7a7a\u95f4\u6c42\u89e3\u5668</h2>\n<h3 id=\"521-krylov\">5.2.1 Krylov\u5b50\u7a7a\u95f4\u7406\u8bba</h3>\n<p>Krylov\u5b50\u7a7a\u95f4\u65b9\u6cd5\u662f\u6c42\u89e3\u5927\u89c4\u6a21\u7a00\u758f\u7ebf\u6027\u7cfb\u7edf\u7684\u4e3b\u529b\u519b\u3002\u5bf9\u4e8e\u7cfb\u7edf $Ax = b$\uff0cKrylov\u5b50\u7a7a\u95f4\u5b9a\u4e49\u4e3a\uff1a\n$$\\mathcal{K}_m(A, r_0) = \\text{span}\\{r_0, Ar_0, A^2r_0, ..., A^{m-1}r_0\\}$$\n\u5176\u4e2d $r_0 = b - Ax_0$ \u662f\u521d\u59cb\u6b8b\u5dee\u3002</p>\n<p>\u6838\u5fc3\u601d\u60f3\u662f\u5728\u9010\u6e10\u6269\u5927\u7684Krylov\u5b50\u7a7a\u95f4\u4e2d\u5bfb\u627e\u6700\u4f18\u8fd1\u4f3c\u89e3\uff1a\n$$x_m \\in x_0 + \\mathcal{K}_m(A, r_0)$$\n\u8fd9\u7c7b\u65b9\u6cd5\u7684\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u53ea\u9700\u8981\u77e9\u9635-\u5411\u91cf\u4e58\u79ef</li>\n<li>\u5185\u5b58\u9700\u6c42\u4f4e\uff08\u901a\u5e38\u662f $O(n)$\uff09</li>\n<li>\u53ef\u4ee5\u5229\u7528\u77e9\u9635\u7684\u7279\u6b8a\u7ed3\u6784</li>\n</ul>\n<h3 id=\"522-cg\">5.2.2 \u5171\u8f6d\u68af\u5ea6\u6cd5(CG)</h3>\n<p>\u5bf9\u4e8e\u5bf9\u79f0\u6b63\u5b9a(SPD)\u77e9\u9635\uff0c\u5171\u8f6d\u68af\u5ea6\u6cd5\u662f\u6700\u4f18\u9009\u62e9\u3002\u7b97\u6cd5\u901a\u8fc7\u6784\u9020\u4e00\u7ec4 $A$-\u5171\u8f6d\u7684\u641c\u7d22\u65b9\u5411 $\\{p_k\\}$\uff1a\n$$p_i^T A p_j = 0, \\quad i \\neq j$$\n<strong>CG\u7b97\u6cd5\u6838\u5fc3\u6b65\u9aa4</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u521d\u59cb\u5316</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">r_0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">Ax_0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"n\">p_0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_0</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"o\">...</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">    </span><span class=\"err\">\u03b1</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">r_k</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">r_k</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">p_k</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">p_k</span><span class=\"o\">)</span><span class=\"w\">     </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"err\">\u6b65\u957f</span>\n<span class=\"w\">    </span><span class=\"n\">x_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x_k</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u03b1</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"n\">p_k</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"err\">\u66f4\u65b0\u89e3</span>\n<span class=\"w\">    </span><span class=\"n\">r_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_k</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"err\">\u03b1</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"w\"> </span><span class=\"n\">p_k</span><span class=\"w\">            </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"err\">\u66f4\u65b0\u6b8b\u5dee</span>\n<span class=\"w\">    </span><span class=\"err\">\u03b2</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">r_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">r_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">})</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">r_k</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">r_k</span><span class=\"o\">)</span><span class=\"w\">  </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"err\">\u5171\u8f6d\u7cfb\u6570</span>\n<span class=\"w\">    </span><span class=\"n\">p_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u03b2</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"n\">p_k</span><span class=\"w\">          </span><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"err\">\u65b0\u641c\u7d22\u65b9\u5411</span>\n<span class=\"n\">end</span>\n</code></pre></div>\n\n<p>\u7406\u8bba\u4e0a\uff0cCG\u5728 $n$ \u6b65\u5185\u6536\u655b\u5230\u7cbe\u786e\u89e3\uff08\u4e0d\u8003\u8651\u820d\u5165\u8bef\u5dee\uff09\u3002\u5b9e\u9645\u6536\u655b\u901f\u5ea6\u53d6\u51b3\u4e8e\u6761\u4ef6\u6570\uff1a\n$$||e_k||_A \\leq 2\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right)^k ||e_0||_A$$\n\u5176\u4e2d $\\kappa = \\lambda_{\\max}/\\lambda_{\\min}$ \u662f\u6761\u4ef6\u6570\u3002</p>\n<h3 id=\"523-bicgstab\">5.2.3 BiCGSTAB\u65b9\u6cd5</h3>\n<p>\u5bf9\u4e8e\u975e\u5bf9\u79f0\u77e9\u9635\uff0cBiCGSTAB\uff08\u53cc\u5171\u8f6d\u68af\u5ea6\u7a33\u5b9a\u5316\uff09\u662f\u5e38\u7528\u9009\u62e9\u3002\u5b83\u7ed3\u5408\u4e86BiCG\u7684\u601d\u60f3\u548c\u7a33\u5b9a\u5316\u6280\u672f\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u521d\u59cb\u5316</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">r_0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">Ax_0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"err\">\u9009\u62e9</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"err\">\u0303</span><span class=\"n\">_0</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"err\">\u901a\u5e38</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"err\">\u0303</span><span class=\"n\">_0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_0</span><span class=\"o\">)</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"w\"> </span><span class=\"o\">...</span><span class=\"w\"> </span><span class=\"k\">do</span>\n<span class=\"w\">    </span><span class=\"err\">\u03c1</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"err\">\u0303</span><span class=\"n\">_0</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">r_k</span>\n<span class=\"w\">    </span><span class=\"err\">\u03b2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"err\">\u03c1</span><span class=\"n\">_k</span><span class=\"sr\">/\u03c1_{k-1}) \u00d7 (\u03b1/</span><span class=\"err\">\u03c9</span><span class=\"n\">_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">})</span>\n<span class=\"w\">    </span><span class=\"n\">p_k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_k</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u03b2</span><span class=\"o\">(</span><span class=\"n\">p_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"err\">\u03c9</span><span class=\"n\">_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"n\">v_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">})</span>\n<span class=\"w\">    </span><span class=\"n\">v_k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Ap_k</span>\n<span class=\"w\">    </span><span class=\"err\">\u03b1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\u03c1</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">r</span><span class=\"err\">\u0303</span><span class=\"n\">_0</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">v_k</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r_k</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"err\">\u03b1</span><span class=\"n\">v_k</span>\n<span class=\"w\">    </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">As</span>\n<span class=\"w\">    </span><span class=\"err\">\u03c9</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">^</span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"w\">    </span><span class=\"n\">x_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x_k</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u03b1</span><span class=\"n\">p_k</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"err\">\u03c9</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"n\">s</span>\n<span class=\"w\">    </span><span class=\"n\">r_</span><span class=\"o\">{</span><span class=\"n\">k</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"err\">\u03c9</span><span class=\"n\">_k</span><span class=\"w\"> </span><span class=\"n\">t</span>\n<span class=\"n\">end</span>\n</code></pre></div>\n\n<p>BiCGSTAB\u7684\u4f18\u70b9\u662f\u907f\u514d\u4e86BiCG\u4e2d\u7684\u4e0d\u89c4\u5219\u6536\u655b\u884c\u4e3a\uff0c\u7f3a\u70b9\u662f\u6bcf\u6b65\u9700\u8981\u4e24\u6b21\u77e9\u9635-\u5411\u91cf\u4e58\u79ef\u3002</p>\n<h3 id=\"524\">5.2.4 \u6536\u655b\u6027\u5206\u6790</h3>\n<p>Krylov\u65b9\u6cd5\u7684\u6536\u655b\u6027\u4e3b\u8981\u53d7\u4ee5\u4e0b\u56e0\u7d20\u5f71\u54cd\uff1a</p>\n<ol>\n<li><strong>\u8c31\u5206\u5e03</strong>\uff1a\u7279\u5f81\u503c\u805a\u96c6\u7a0b\u5ea6\u6bd4\u6761\u4ef6\u6570\u66f4\u91cd\u8981</li>\n<li><strong>\u53f3\u7aef\u9879</strong>\uff1a\u5728\u7279\u5f81\u5411\u91cf\u57fa\u4e0b\u7684\u5206\u89e3\u5f71\u54cd\u6536\u655b</li>\n<li><strong>\u820d\u5165\u8bef\u5dee</strong>\uff1a\u53ef\u80fd\u5bfc\u81f4\u6b63\u4ea4\u6027\u635f\u5931</li>\n</ol>\n<p><strong>\u91cd\u542f\u7b56\u7565</strong>\uff1a\n\u5bf9\u4e8eGMRES\u7b49\u65b9\u6cd5\uff0c\u5b58\u50a8\u9700\u6c42\u968f\u8fed\u4ee3\u6b21\u6570\u589e\u957f\u3002GMRES(m)\u6bcf $m$ \u6b65\u91cd\u542f\uff1a</p>\n<ul>\n<li>\u4f18\u70b9\uff1a\u9650\u5236\u5185\u5b58\u4f7f\u7528</li>\n<li>\u7f3a\u70b9\uff1a\u53ef\u80fd\u51cf\u6162\u6536\u655b\u751a\u81f3\u505c\u6ede</li>\n</ul>\n<p><strong>\u5b9e\u7528\u6536\u655b\u51c6\u5219</strong>\uff1a</p>\n<ul>\n<li>\u76f8\u5bf9\u6b8b\u5dee\uff1a$||r_k||/||b|| &lt; \\epsilon$</li>\n<li>\u76f8\u5bf9\u6539\u53d8\uff1a$||x_{k+1} - x_k||/||x_k|| &lt; \\epsilon$</li>\n<li>\u7ec4\u5408\u51c6\u5219\uff1a\u540c\u65f6\u8003\u8651\u6b8b\u5dee\u548c\u89e3\u7684\u53d8\u5316</li>\n</ul>\n<h2 id=\"53-preconditioning\">5.3 \u9884\u6761\u4ef6(Preconditioning)</h2>\n<h3 id=\"531\">5.3.1 \u9884\u6761\u4ef6\u7684\u4f5c\u7528</h3>\n<p>\u9884\u6761\u4ef6\u662f\u52a0\u901fKrylov\u65b9\u6cd5\u6536\u655b\u7684\u5173\u952e\u6280\u672f\u3002\u57fa\u672c\u601d\u60f3\u662f\u627e\u5230\u4e00\u4e2a\u5bb9\u6613\u6c42\u9006\u7684\u77e9\u9635 $M \\approx A$\uff0c\u5c06\u539f\u7cfb\u7edf\u8f6c\u6362\u4e3a\u6761\u4ef6\u6570\u66f4\u597d\u7684\u7b49\u4ef7\u7cfb\u7edf\u3002</p>\n<p><strong>\u5de6\u9884\u6761\u4ef6</strong>\uff1a\n$$M^{-1}Ax = M^{-1}b$$\n<strong>\u53f3\u9884\u6761\u4ef6</strong>\uff1a\n$$AM^{-1}y = b, \\quad x = M^{-1}y$$\n<strong>\u5206\u88c2\u9884\u6761\u4ef6</strong>\uff08\u5bf9\u79f0\u60c5\u51b5\uff09\uff1a\n$$L^{-1}AL^{-T}\\hat{x} = L^{-1}b, \\quad x = L^{-T}\\hat{x}$$\n\u5176\u4e2d $M = LL^T$\u3002</p>\n<p>\u7406\u60f3\u7684\u9884\u6761\u4ef6\u5668\u5e94\u8be5\u6ee1\u8db3\uff1a</p>\n<ol>\n<li>$M^{-1}A$ \u7684\u6761\u4ef6\u6570\u8fdc\u5c0f\u4e8e $A$ \u7684\u6761\u4ef6\u6570</li>\n<li>$M^{-1}v$ \u5bb9\u6613\u8ba1\u7b97</li>\n<li>$M$ \u7684\u6784\u9020\u548c\u5b58\u50a8\u5f00\u9500\u5408\u7406</li>\n</ol>\n<p>\u9884\u6761\u4ef6\u7684\u6548\u679c\u53ef\u4ee5\u901a\u8fc7\u8c31\u5206\u6790\u7406\u89e3\u3002\u5982\u679c $A$ \u7684\u7279\u5f81\u503c\u5206\u5e03\u5728 $[\\lambda_{\\min}, \\lambda_{\\max}]$\uff0c\u597d\u7684\u9884\u6761\u4ef6\u5668\u4f1a\u4f7f $M^{-1}A$ \u7684\u7279\u5f81\u503c\u805a\u96c6\u57281\u9644\u8fd1\u3002</p>\n<h3 id=\"532-jacobi\">5.3.2 Jacobi\u9884\u6761\u4ef6</h3>\n<p>\u6700\u7b80\u5355\u7684\u9884\u6761\u4ef6\u662f\u5bf9\u89d2\u9884\u6761\u4ef6\uff08Jacobi\u9884\u6761\u4ef6\uff09\uff1a\n$$M = \\text{diag}(A) = \\text{diag}(a_{11}, a_{22}, ..., a_{nn})$$\n<strong>\u4f18\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u6784\u9020\u7b80\u5355\uff1a$O(n)$ \u65f6\u95f4\u548c\u7a7a\u95f4</li>\n<li>\u5b8c\u5168\u5e76\u884c\uff1a$M^{-1}v$ \u7684\u8ba1\u7b97\u65e0\u6570\u636e\u4f9d\u8d56</li>\n<li>\u9002\u5408GPU\u5b9e\u73b0</li>\n</ul>\n<p><strong>\u7f3a\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u6539\u5584\u6709\u9650\uff1a\u901a\u5e38\u53ea\u80fd\u5c06\u6761\u4ef6\u6570\u51cf\u5c11\u5e38\u6570\u500d</li>\n<li>\u5bf9\u75c5\u6001\u95ee\u9898\u6548\u679c\u5dee</li>\n</ul>\n<p><strong>\u52a0\u6743Jacobi</strong>\uff1a\n$$M = \\omega \\text{diag}(A)$$\n\u5176\u4e2d $\\omega \\in (0, 1]$ \u662f\u677e\u5f1b\u56e0\u5b50\u3002\u5bf9\u4e8e\u67d0\u4e9b\u95ee\u9898\uff0c$\\omega &lt; 1$ \u53ef\u4ee5\u6539\u5584\u7a33\u5b9a\u6027\u3002</p>\n<h3 id=\"533-cholesky\">5.3.3 \u4e0d\u5b8c\u5168Cholesky\u5206\u89e3</h3>\n<p>\u5bf9\u4e8eSPD\u77e9\u9635\uff0c\u5b8c\u5168Cholesky\u5206\u89e3 $A = LL^T$ \u63d0\u4f9b\u4e86\u5b8c\u7f8e\u9884\u6761\u4ef6\uff0c\u4f46\u5206\u89e3\u8fc7\u7a0b\u4e2d\u7684\u586b\u5145(fill-in)\u4f7f\u5176\u5bf9\u5927\u89c4\u6a21\u7a00\u758f\u77e9\u9635\u4e0d\u5b9e\u7528\u3002</p>\n<p>\u4e0d\u5b8c\u5168Cholesky\u5206\u89e3(IC)\u901a\u8fc7\u9650\u5236\u586b\u5145\u6765\u4fdd\u6301\u7a00\u758f\u6027\uff1a</p>\n<p><strong>IC(0)</strong>\uff1a\u96f6\u586b\u5145\uff0c\u53ea\u5728 $A$ \u7684\u975e\u96f6\u4f4d\u7f6e\u8ba1\u7b97 $L$</p>\n<div class=\"codehilite\"><pre><span></span><code>for i = 1 to n do\n    L_{ii} = sqrt(A_{ii} - sum_{k&lt;i, L_{ik}\u22600} L_{ik}^2)\n    for j &gt; i where A_{ij} \u2260 0 do\n        L_{ji} = (A_{ji} - sum_{k&lt;i, L_{jk}\u22600, L_{ik}\u22600} L_{jk}L_{ik}) / L_{ii}\n    end\nend\n</code></pre></div>\n\n<p><strong>IC(p)</strong>\uff1a\u5141\u8bb8 $p$ \u7ea7\u586b\u5145</p>\n<ul>\n<li>\u7ea7\u522b\u5b9a\u4e49\uff1a$\\text{level}(i,j) = \\min_{\u8def\u5f84} \\sum \\text{level}(\u8fb9)$</li>\n<li>\u53ea\u8ba1\u7b97 $\\text{level}(i,j) \\leq p$ \u7684\u5143\u7d20</li>\n</ul>\n<p><strong>\u9608\u503cIC(\u03c4)</strong>\uff1a\u57fa\u4e8e\u6570\u503c\u5927\u5c0f\u7684\u586b\u5145\u7b56\u7565</p>\n<ul>\n<li>\u5982\u679c $|L_{ij}| &gt; \\tau \\cdot ||L_{i,:}||$\uff0c\u5219\u4fdd\u7559\u8be5\u5143\u7d20</li>\n</ul>\n<h3 id=\"534-choleskymic\">5.3.4 \u4fee\u6b63\u4e0d\u5b8c\u5168Cholesky(MIC)</h3>\n<p>\u6807\u51c6IC\u53ef\u80fd\u4e0d\u7a33\u5b9a\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u63a5\u8fd1\u5947\u5f02\u7684\u77e9\u9635\u3002\u4fee\u6b63IC\u901a\u8fc7\u4fdd\u6301\u67d0\u4e9b\u6570\u5b66\u6027\u8d28\u6765\u6539\u5584\u7a33\u5b9a\u6027\u3002</p>\n<p><strong>MIC(0)</strong>\u4fdd\u6301\u884c\u548c\uff1a\n$$\\sum_j L_{ij}L_{jk} = \\sum_j A_{jk}$$\n\u5b9e\u73b0\u65b9\u5f0f\u662f\u5c06\u4e22\u5f03\u7684\u586b\u5145\u503c\u7d2f\u52a0\u5230\u5bf9\u89d2\u5143\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>for i = 1 to n do\n    dropped_sum = 0\n    for j &lt; i do\n        if (i,j) not in pattern then\n            dropped_sum += computed_value^2\n        end\n    end\n    L_{ii} = sqrt(A_{ii} + dropped_sum - sum_{k&lt;i} L_{ik}^2)\nend\n</code></pre></div>\n\n<p><strong>AINV\u9884\u6761\u4ef6</strong>\uff1a\u8fd1\u4f3c\u9006\u9884\u6761\u4ef6\n\u76f4\u63a5\u8fd1\u4f3c $A^{-1}$ \u800c\u4e0d\u662f\u5206\u89e3 $A$\uff1a</p>\n<ul>\n<li>\u8ba1\u7b97\u7a00\u758f\u77e9\u9635 $Z \\approx L^{-1}$</li>\n<li>$M^{-1} = Z^TZ \\approx A^{-1}$</li>\n</ul>\n<h2 id=\"54\">5.4 \u591a\u91cd\u7f51\u683c\u65b9\u6cd5</h2>\n<h3 id=\"541\">5.4.1 \u8bef\u5dee\u7684\u9891\u7387\u5206\u6790</h3>\n<p>\u591a\u91cd\u7f51\u683c\u65b9\u6cd5\u7684\u6838\u5fc3\u6d1e\u5bdf\u662f\uff1a\u7b80\u5355\u8fed\u4ee3\u6cd5\uff08\u5982Jacobi\u3001Gauss-Seidel\uff09\u5bf9\u8bef\u5dee\u7684\u4e0d\u540c\u9891\u7387\u6210\u5206\u6709\u4e0d\u540c\u7684\u6548\u679c\u3002</p>\n<p>\u8003\u8651\u4e00\u7ef4Poisson\u65b9\u7a0b\u7684\u8bef\u5dee\u4f20\u64ad\u3002\u5bf9\u4e8e\u7f51\u683c\u95f4\u8ddd $h$\uff0c\u8bef\u5dee\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e0d\u540c\u9891\u7387\u7684Fourier\u6a21\u5f0f\uff1a\n$$e^{(k)} = \\sum_{j=1}^{n-1} \\alpha_j \\sin(j\\pi x/L)$$\n<strong>\u5149\u6ed1\u6027\u8d28</strong>\uff1a</p>\n<ul>\n<li>\u9ad8\u9891\u8bef\u5dee\uff08$j &gt; n/2$\uff09\uff1a\u88abJacobi/GS\u5feb\u901f\u8870\u51cf</li>\n<li>\u4f4e\u9891\u8bef\u5dee\uff08$j \\leq n/2$\uff09\uff1a\u8870\u51cf\u7f13\u6162</li>\n</ul>\n<p>\u8bef\u5dee\u8870\u51cf\u56e0\u5b50\uff1a\n$$\\mu_j = 1 - \\frac{4\\sin^2(j\\pi h/2)}{4/h^2} = \\cos^2(j\\pi h/2)$$</p>\n<ul>\n<li>\u9ad8\u9891\u6a21\u5f0f\uff08$j = n/2$\uff09\uff1a$\\mu_{n/2} = 0$\uff08\u4e00\u6b65\u6d88\u9664\uff09</li>\n<li>\u4f4e\u9891\u6a21\u5f0f\uff08$j = 1$\uff09\uff1a$\\mu_1 \\approx 1 - (\\pi h)^2/2$\uff08\u8870\u51cf\u6781\u6162\uff09</li>\n</ul>\n<p><strong>\u591a\u91cd\u7f51\u683c\u601d\u60f3</strong>\uff1a\n\u5728\u7c97\u7f51\u683c\u4e0a\uff0c\u539f\u6765\u7684\u4f4e\u9891\u8bef\u5dee\u53d8\u6210\u9ad8\u9891\u8bef\u5dee\uff0c\u53ef\u4ee5\u88ab\u6709\u6548\u6d88\u9664\u3002</p>\n<h3 id=\"542\">5.4.2 \u9650\u5236\u4e0e\u5ef6\u62d3\u7b97\u5b50</h3>\n<p>\u7f51\u683c\u95f4\u7684\u4fe1\u606f\u4f20\u9012\u901a\u8fc7\u9650\u5236(restriction)\u548c\u5ef6\u62d3(prolongation)\u7b97\u5b50\u5b9e\u73b0\u3002</p>\n<p><strong>\u9650\u5236\u7b97\u5b50</strong> $I_{2h}^h: \\Omega_h \\to \\Omega_{2h}$\uff08\u7ec6\u5230\u7c97\uff09\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6ce8\u5165(Injection)</strong>\uff1a\n$$u_{2h,i} = u_{h,2i}$$</p>\n</li>\n<li>\n<p><strong>\u5168\u6743\u91cd(Full weighting)</strong>\uff08\u4e00\u7ef4\uff09\uff1a\n$$u_{2h,i} = \\frac{1}{4}u_{h,2i-1} + \\frac{1}{2}u_{h,2i} + \\frac{1}{4}u_{h,2i+1}$$</p>\n</li>\n<li>\n<p><strong>\u5168\u6743\u91cd(Full weighting)</strong>\uff08\u4e8c\u7ef4\uff09\uff1a\n$$u_{2h,i,j} = \\frac{1}{16}\\begin{bmatrix}1 &amp; 2 &amp; 1\\\\2 &amp; 4 &amp; 2\\\\1 &amp; 2 &amp; 1\\end{bmatrix} \\cdot u_h$$\n<strong>\u5ef6\u62d3\u7b97\u5b50</strong> $I_h^{2h}: \\Omega_{2h} \\to \\Omega_h$\uff08\u7c97\u5230\u7ec6\uff09\uff1a</p>\n</li>\n<li>\n<p><strong>\u7ebf\u6027\u63d2\u503c</strong>\uff08\u4e00\u7ef4\uff09\uff1a\n$$u_{h,2i} = u_{2h,i}$$\n   $$u_{h,2i+1} = \\frac{1}{2}(u_{2h,i} + u_{2h,i+1})$$</p>\n</li>\n<li>\n<p><strong>\u53cc\u7ebf\u6027\u63d2\u503c</strong>\uff08\u4e8c\u7ef4\uff09\uff1a\n   \u4f7f\u7528\u53cc\u7ebf\u6027\u57fa\u51fd\u6570\uff0c\u7c97\u7f51\u683c\u8282\u70b9\u76f4\u63a5\u590d\u5236\uff0c\u5176\u4ed6\u70b9\u63d2\u503c</p>\n</li>\n</ol>\n<p><strong>Galerkin\u6761\u4ef6</strong>\uff1a\n\u4e3a\u4fdd\u8bc1\u53d8\u5206\u6027\u8d28\uff0c\u901a\u5e38\u9009\u62e9\uff1a\n$$I_{2h}^h = c(I_h^{2h})^T$$</p>\n<h3 id=\"543-v-cyclew-cycle\">5.4.3 V-cycle\u4e0eW-cycle</h3>\n<p>\u591a\u91cd\u7f51\u683c\u901a\u8fc7\u5728\u4e0d\u540c\u5c42\u7ea7\u95f4\u9012\u5f52\u6765\u6d88\u9664\u6240\u6709\u9891\u7387\u7684\u8bef\u5dee\u3002</p>\n<p><strong>V-cycle\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"nf\">V_cycle</span><span class=\"p\">(</span>A_h, u_h, f_h, level<span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">coarsest</span><span class=\"w\"> </span><span class=\"n\">then</span>\n<span class=\"w\">        </span><span class=\"n\">u_h</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">A_h</span>^<span class=\"p\">{</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">f_h</span><span class=\"w\">  </span><span class=\"o\">//</span><span class=\"w\"> </span>\u76f4\u63a5\u6c42\u89e3\n<span class=\"w\">    </span><span class=\"k\">else</span>\n<span class=\"w\">        </span><span class=\"o\">//</span><span class=\"w\"> </span>\u524d\u5149\u6ed1\n<span class=\"w\">        </span><span class=\"n\">u_h</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">Smooth</span><span class=\"p\">(</span><span class=\"n\">A_h</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">u_h</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f_h</span><span class=\"p\">,</span><span class=\"w\"> </span>\u03bd\u2081<span class=\"p\">)</span>\n\n<span class=\"w\">        </span><span class=\"o\">//</span><span class=\"w\"> </span>\u8ba1\u7b97\u6b8b\u5dee\u5e76\u9650\u5236\n<span class=\"w\">        </span><span class=\"n\">r_h</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">f_h</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">A_h</span><span class=\"w\"> </span><span class=\"n\">u_h</span>\n<span class=\"w\">        </span><span class=\"n\">r_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">I_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">}</span>^<span class=\"n\">h</span><span class=\"w\"> </span><span class=\"n\">r_h</span>\n\n<span class=\"w\">        </span><span class=\"o\">//</span><span class=\"w\"> </span>\u7c97\u7f51\u683c\u4fee\u6b63\n<span class=\"w\">        </span><span class=\"n\">e_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">        </span><span class=\"n\">e_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">V_cycle</span><span class=\"p\">(</span><span class=\"n\">A_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">e_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">r_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"w\">        </span><span class=\"o\">//</span><span class=\"w\"> </span>\u5ef6\u62d3\u5e76\u4fee\u6b63\n<span class=\"w\">        </span><span class=\"n\">u_h</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">u_h</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">I_h</span>^<span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">e_</span><span class=\"p\">{</span>2<span class=\"n\">h</span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"o\">//</span><span class=\"w\"> </span>\u540e\u5149\u6ed1\n<span class=\"w\">        </span><span class=\"n\">u_h</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">Smooth</span><span class=\"p\">(</span><span class=\"n\">A_h</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">u_h</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f_h</span><span class=\"p\">,</span><span class=\"w\"> </span>\u03bd\u2082<span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">end</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">u_h</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n\n<p><strong>W-cycle</strong>\uff1a\u5728\u6bcf\u5c42\u9012\u5f52\u8c03\u7528\u4e24\u6b21</p>\n<div class=\"codehilite\"><pre><span></span><code>e_{2h} = W_cycle(A_{2h}, 0, r_{2h}, level+1)\ne_{2h} = W_cycle(A_{2h}, e_{2h}, r_{2h}, level+1)\n</code></pre></div>\n\n<p><strong>F-cycle</strong>\uff1a\u4ecb\u4e8eV\u548cW\u4e4b\u95f4\u7684\u7b56\u7565</p>\n<p><strong>Full Multigrid (FMG)</strong>\uff1a\n\u4f7f\u7528\u7c97\u7f51\u683c\u89e3\u4f5c\u4e3a\u7ec6\u7f51\u683c\u521d\u503c\uff1a</p>\n<ol>\n<li>\u5728\u6700\u7c97\u7f51\u683c\u6c42\u89e3</li>\n<li>\u5ef6\u62d3\u5230\u4e0b\u4e00\u5c42\u4f5c\u4e3a\u521d\u503c</li>\n<li>\u6267\u884cV-cycle</li>\n<li>\u91cd\u590d\u76f4\u5230\u6700\u7ec6\u7f51\u683c</li>\n</ol>\n<h3 id=\"544\">5.4.4 \u7c97\u7f51\u683c\u4fee\u6b63</h3>\n<p>\u7c97\u7f51\u683c\u4fee\u6b63\u7684\u6570\u5b66\u539f\u7406\u57fa\u4e8e\u8bef\u5dee\u65b9\u7a0b\uff1a\n$$A_h e_h = r_h$$\n\u5176\u4e2d $e_h = u_h^* - u_h$ \u662f\u8bef\u5dee\uff0c$r_h = f_h - A_h u_h$ \u662f\u6b8b\u5dee\u3002</p>\n<p><strong>\u4e24\u7f51\u683c\u7b97\u6cd5\u5206\u6790</strong>\uff1a</p>\n<ol>\n<li>\u5149\u6ed1\u540e\u7684\u8bef\u5dee\u4e3b\u8981\u662f\u4f4e\u9891\u6210\u5206</li>\n<li>\u9650\u5236\u5230\u7c97\u7f51\u683c\uff1a$r_{2h} = I_{2h}^h r_h$</li>\n<li>\u6c42\u89e3\u7c97\u7f51\u683c\u8bef\u5dee\u65b9\u7a0b\uff1a$A_{2h} e_{2h} = r_{2h}$</li>\n<li>\u5ef6\u62d3\u4fee\u6b63\uff1a$u_h^{new} = u_h + I_h^{2h} e_{2h}$</li>\n</ol>\n<p><strong>\u6536\u655b\u6027\u5206\u6790</strong>\uff1a\n\u4e24\u7f51\u683c\u6536\u655b\u56e0\u5b50\uff1a\n$$\\rho_{TG} = ||(I - I_h^{2h} A_{2h}^{-1} I_{2h}^h A_h) S^{\\nu}||$$\n\u5176\u4e2d $S$ \u662f\u5149\u6ed1\u8fed\u4ee3\u77e9\u9635\u3002\u5178\u578b\u503c\uff1a$\\rho_{TG} \\approx 0.1-0.2$\u3002</p>\n<h2 id=\"55\">5.5 \u51e0\u4f55\u591a\u91cd\u7f51\u683c</h2>\n<h3 id=\"551\">5.5.1 \u7f51\u683c\u5c42\u6b21\u6784\u5efa</h3>\n<p>\u51e0\u4f55\u591a\u91cd\u7f51\u683c\u9700\u8981\u6784\u5efa\u4e00\u7cfb\u5217\u9010\u6e10\u53d8\u7c97\u7684\u7f51\u683c\u3002\u5bf9\u4e8e\u7ed3\u6784\u5316\u7f51\u683c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u5bf9\u7b80\u5355\u3002</p>\n<p><strong>\u5747\u5300\u7c97\u5316\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li>\u4e00\u7ef4\uff1a\u6bcf\u9694\u4e00\u4e2a\u70b9\u53d6\u4e00\u4e2a\uff08\u95f4\u8ddd\u7ffb\u500d\uff09</li>\n<li>\u4e8c\u7ef4\uff1a\u6bcf\u4e2a\u65b9\u5411\u90fd\u7ffb\u500d\uff0c4\u4e2a\u7ec6\u7f51\u683c\u5355\u5143\u5bf9\u5e941\u4e2a\u7c97\u7f51\u683c\u5355\u5143</li>\n<li>\u4e09\u7ef4\uff1a8\u4e2a\u7ec6\u7f51\u683c\u5355\u5143\u5bf9\u5e941\u4e2a\u7c97\u7f51\u683c\u5355\u5143</li>\n</ul>\n<p><strong>\u7f51\u683c\u5c42\u6b21\u793a\u4f8b</strong>\uff08\u4e8c\u7ef4\uff09\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Level 0 (finest):   64\u00d764   (h = 1/64)\nLevel 1:            32\u00d732   (h = 1/32)\nLevel 2:            16\u00d716   (h = 1/16)\nLevel 3:             8\u00d78    (h = 1/8)\nLevel 4 (coarsest):  4\u00d74    (h = 1/4)\n</code></pre></div>\n\n<p><strong>\u8fb9\u754c\u5904\u7406</strong>\uff1a</p>\n<ul>\n<li>Dirichlet\u8fb9\u754c\uff1a\u7c97\u7f51\u683c\u7ee7\u627f\u7ec6\u7f51\u683c\u8fb9\u754c\u6761\u4ef6</li>\n<li>Neumann\u8fb9\u754c\uff1a\u9700\u8981\u7279\u6b8a\u5904\u7406\u4ee5\u4fdd\u6301\u901a\u91cf\u5b88\u6052</li>\n</ul>\n<p><strong>\u975e\u5747\u5300\u7f51\u683c</strong>\uff1a\n\u5bf9\u4e8e\u81ea\u9002\u5e94\u7f51\u683c\uff0c\u7c97\u5316\u7b56\u7565\u66f4\u590d\u6742\uff1a</p>\n<ul>\n<li>\u805a\u96c6(agglomeration)\uff1a\u5c06\u76f8\u90bb\u7ec6\u7f51\u683c\u5355\u5143\u5408\u5e76</li>\n<li>\u786e\u4fdd\u7c97\u7f51\u683c\u7684\u8fde\u901a\u6027\u548c\u8d28\u91cf</li>\n</ul>\n<h3 id=\"552-galerkin\">5.5.2 Galerkin\u7c97\u5316</h3>\n<p>Galerkin\u7c97\u5316\u901a\u8fc7\u53d8\u5206\u539f\u7406\u81ea\u52a8\u751f\u6210\u7c97\u7f51\u683c\u7b97\u5b50\uff1a\n$$A_{2h} = I_{2h}^h A_h I_h^{2h}$$\n<strong>\u4f18\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u4fdd\u6301\u5bf9\u79f0\u6027\uff1a\u5982\u679c $A_h$ \u5bf9\u79f0\u4e14 $I_{2h}^h = (I_h^{2h})^T$\uff0c\u5219 $A_{2h}$ \u5bf9\u79f0</li>\n<li>\u4fdd\u6301\u6b63\u5b9a\u6027\uff1a\u5982\u679c $A_h$ \u6b63\u5b9a\uff0c\u5219 $A_{2h}$ \u6b63\u5b9a</li>\n<li>\u81ea\u52a8\u5904\u7406\u590d\u6742\u8fb9\u754c\u6761\u4ef6</li>\n</ul>\n<p><strong>\u8ba1\u7b97\u4f18\u5316</strong>\uff1a\n\u76f4\u63a5\u77e9\u9635\u4e09\u4e58\u79ef\u8ba1\u7b97\u5f00\u9500\u5927\uff0c\u53ef\u4ee5\u4f18\u5316\uff1a</p>\n<ol>\n<li>\u5bf9\u4e8e\u6807\u51c6\u79bb\u6563\u5316\uff0c$A_{2h}$ \u7684\u6a21\u677f\u53ef\u4ee5\u9884\u5148\u63a8\u5bfc</li>\n<li>\u5229\u7528\u7a00\u758f\u6027\uff0c\u53ea\u8ba1\u7b97\u975e\u96f6\u5143\u7d20</li>\n</ol>\n<p><strong>\u4e94\u70b9Laplace\u7b97\u5b50\u7684Galerkin\u7c97\u5316</strong>\uff1a\n\u7ec6\u7f51\u683c\u7b97\u5b50\uff1a\n$$A_h = \\frac{1}{h^2}\\begin{bmatrix}\n0 &amp; -1 &amp; 0\\\\\n-1 &amp; 4 &amp; -1\\\\\n0 &amp; -1 &amp; 0\n\\end{bmatrix}$$\n\u7c97\u7f51\u683c\u7b97\u5b50\uff08\u5168\u6743\u91cd\u9650\u5236+\u53cc\u7ebf\u6027\u5ef6\u62d3\uff09\uff1a\n$$A_{2h} = \\frac{1}{(2h)^2}\\begin{bmatrix}\n0 &amp; -1 &amp; 0\\\\\n-1 &amp; 4 &amp; -1\\\\\n0 &amp; -1 &amp; 0\n\\end{bmatrix}$$\n\u6ce8\u610f\uff1a\u7c97\u7f51\u683c\u7b97\u5b50\u4fdd\u6301\u76f8\u540c\u7684\u6a21\u677f\u5f62\u5f0f\uff01</p>\n<h3 id=\"553\">5.5.3 \u5149\u6ed1\u5668\u9009\u62e9</h3>\n<p>\u4e0d\u540c\u7684\u5149\u6ed1\u5668\u5bf9\u591a\u91cd\u7f51\u683c\u6027\u80fd\u6709\u91cd\u8981\u5f71\u54cd\u3002</p>\n<p><strong>\u70b9Jacobi</strong>\uff1a\n$$u_i^{new} = \\frac{1}{a_{ii}}(f_i - \\sum_{j \\neq i} a_{ij}u_j^{old})$$</p>\n<ul>\n<li>\u5b8c\u5168\u5e76\u884c\uff0c\u9002\u5408GPU</li>\n<li>\u9700\u8981\u6b20\u677e\u5f1b $\\omega \\approx 2/3$ \u83b7\u5f97\u6700\u4f73\u5149\u6ed1\u6027</li>\n<li>\u6536\u655b\u8f83\u6162\uff0c\u901a\u5e38\u9700\u8981\u66f4\u591a\u8fed\u4ee3</li>\n</ul>\n<p><strong>Gauss-Seidel</strong>\uff1a\n$$u_i^{new} = \\frac{1}{a_{ii}}(f_i - \\sum_{j &lt; i} a_{ij}u_j^{new} - \\sum_{j &gt; i} a_{ij}u_j^{old})$$</p>\n<ul>\n<li>\u4e32\u884c\u4f9d\u8d56\uff0c\u5e76\u884c\u6027\u5dee</li>\n<li>\u5149\u6ed1\u6548\u679c\u597d\uff0c\u6536\u655b\u5feb</li>\n<li>\u524d\u5411\u548c\u540e\u5411GS\u7684\u7ec4\u5408\uff08\u5bf9\u79f0GS\uff09\u4fdd\u6301\u5bf9\u79f0\u6027</li>\n</ul>\n<p><strong>Red-Black Gauss-Seidel</strong>\uff1a\n\u5c06\u7f51\u683c\u70b9\u6309\u68cb\u76d8\u6a21\u5f0f\u5206\u4e3a\u7ea2\u9ed1\u4e24\u7ec4\uff1a</p>\n<ol>\n<li>\u66f4\u65b0\u6240\u6709\u7ea2\u70b9\uff08\u5e76\u884c\uff09</li>\n<li>\u66f4\u65b0\u6240\u6709\u9ed1\u70b9\uff08\u5e76\u884c\uff09</li>\n</ol>\n<ul>\n<li>\u4fdd\u6301GS\u7684\u826f\u597d\u5149\u6ed1\u6027</li>\n<li>\u5b9e\u73b0\u5e76\u884c\u5316</li>\n<li>\u7279\u522b\u9002\u5408\u89c4\u5219\u7f51\u683c</li>\n</ul>\n<p><strong>\u7ebf/\u9762\u677e\u5f1b</strong>\uff1a</p>\n<ul>\n<li><strong>\u7ebf\u677e\u5f1b</strong>\uff1a\u540c\u65f6\u6c42\u89e3\u4e00\u6761\u7ebf\u4e0a\u7684\u6240\u6709\u672a\u77e5\u6570</li>\n<li><strong>\u9762\u677e\u5f1b</strong>\uff1a\u540c\u65f6\u6c42\u89e3\u4e00\u4e2a\u9762\u4e0a\u7684\u6240\u6709\u672a\u77e5\u6570</li>\n<li>\u9002\u7528\u4e8e\u5404\u5411\u5f02\u6027\u95ee\u9898\uff08\u5982 $\\epsilon u_{xx} + u_{yy} = f$ \u5f53 $\\epsilon \\ll 1$\uff09</li>\n</ul>\n<h3 id=\"554\">5.5.4 \u5e76\u884c\u591a\u91cd\u7f51\u683c</h3>\n<p>\u591a\u91cd\u7f51\u683c\u7684\u5e76\u884c\u5316\u9762\u4e34\u72ec\u7279\u6311\u6218\uff0c\u7279\u522b\u662f\u5728\u7c97\u7f51\u683c\u5c42\u7ea7\u3002</p>\n<p><strong>\u5e76\u884c\u5316\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7f51\u683c\u5206\u533a</strong>\uff1a\n   - \u7ec6\u7f51\u683c\uff1a\u826f\u597d\u7684\u8d1f\u8f7d\u5747\u8861\n   - \u7c97\u7f51\u683c\uff1a\u901a\u4fe1\u5f00\u9500\u589e\u52a0\uff0c\u8ba1\u7b97/\u901a\u4fe1\u6bd4\u4e0b\u964d</p>\n</li>\n<li>\n<p><strong>\u7c97\u7f51\u683c\u5e76\u884c\u6027\u9000\u5316</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>Level 0: 1024\u00d71024 / 64 processors = 16384 points/proc\nLevel 1: 512\u00d7512 / 64 processors = 4096 points/proc\n...\nLevel 6: 16\u00d716 / 64 processors = 4 points/proc (!)\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u89e3\u51b3\u65b9\u6848</strong>\uff1a\n   - <strong>\u805a\u96c6(Agglomeration)</strong>\uff1a\u5728\u7c97\u7f51\u683c\u4e0a\u4f7f\u7528\u66f4\u5c11\u7684\u5904\u7406\u5668\n   - <strong>\u5197\u4f59\u8ba1\u7b97</strong>\uff1a\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u8ba1\u7b97\u7c97\u7f51\u683c\u95ee\u9898\n   - <strong>\u6df7\u5408\u65b9\u6cd5</strong>\uff1a\u7c97\u7f51\u683c\u5207\u6362\u5230Krylov\u65b9\u6cd5</li>\n</ol>\n<p><strong>\u901a\u4fe1\u4f18\u5316</strong>\uff1a</p>\n<ul>\n<li><strong>\u91cd\u53e0\u8ba1\u7b97\u4e0e\u901a\u4fe1</strong>\uff1a\u5728\u7b49\u5f85\u8fb9\u754c\u6570\u636e\u65f6\u8ba1\u7b97\u5185\u90e8\u70b9</li>\n<li><strong>\u6d88\u606f\u5408\u5e76</strong>\uff1a\u5c06\u591a\u4e2a\u5c0f\u6d88\u606f\u5408\u5e76\u4e3a\u5927\u6d88\u606f</li>\n<li><strong>\u6301\u4e45\u901a\u4fe1</strong>\uff1a\u5bf9\u4e8e\u56fa\u5b9a\u901a\u4fe1\u6a21\u5f0f\uff0c\u4f7f\u7528MPI\u6301\u4e45\u901a\u4fe1</li>\n</ul>\n<p><strong>GPU\u5b9e\u73b0\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>\u7ec6\u7f51\u683c\uff1a\u9ad8\u5e76\u884c\u5ea6\uff0cGPU\u6548\u7387\u9ad8</li>\n<li>\u7c97\u7f51\u683c\uff1a\u5e76\u884c\u5ea6\u4f4e\uff0c\u53ef\u80fd\u9700\u8981CPU\u5904\u7406</li>\n<li>\u4f7f\u7528\u7edf\u4e00\u5185\u5b58\u7b80\u5316\u6570\u636e\u4f20\u8f93</li>\n</ul>\n<h2 id=\"56-amg\">5.6 \u4ee3\u6570\u591a\u91cd\u7f51\u683c(AMG)</h2>\n<h3 id=\"561\">5.6.1 \u5f3a\u8fde\u63a5\u4e0e\u7c97\u7f51\u683c\u9009\u62e9</h3>\n<p>\u4ee3\u6570\u591a\u91cd\u7f51\u683c\u4e0d\u4f9d\u8d56\u51e0\u4f55\u4fe1\u606f\uff0c\u800c\u662f\u901a\u8fc7\u5206\u6790\u77e9\u9635\u7cfb\u6570\u6765\u6784\u5efa\u7f51\u683c\u5c42\u6b21\u3002</p>\n<p><strong>\u5f3a\u8fde\u63a5\u5b9a\u4e49</strong>\uff1a\n\u8282\u70b9 $i$ \u5f3a\u8fde\u63a5\u5230\u8282\u70b9 $j$ \u5982\u679c\uff1a\n$$|a_{ij}| \\geq \\theta \\max_{k \\neq i} |a_{ik}|$$\n\u5178\u578b\u9009\u62e9 $\\theta = 0.25$ \u6216 $0.5$\u3002</p>\n<p><strong>\u5f3a\u8fde\u63a5\u7684\u610f\u4e49</strong>\uff1a</p>\n<ul>\n<li>\u5927\u7cfb\u6570\u8868\u793a\u53d8\u91cf\u95f4\u7684\u5f3a\u8026\u5408</li>\n<li>\u5149\u6ed1\u8fed\u4ee3\u96be\u4ee5\u6d88\u9664\u5f3a\u8fde\u63a5\u53d8\u91cf\u95f4\u7684\u8bef\u5dee</li>\n<li>\u9700\u8981\u5728\u7c97\u7f51\u683c\u4e0a\u540c\u65f6\u5904\u7406\u5f3a\u8fde\u63a5\u7684\u53d8\u91cf</li>\n</ul>\n<p><strong>C/F\u5206\u88c2\u7b97\u6cd5</strong>\uff08Coarse/Fine splitting\uff09\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">1.</span><span class=\"w\"> </span><span class=\"n\">\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684</span><span class=\"s\">&quot;\u5f71\u54cd\u5ea6&quot;</span><span class=\"err\">\uff1a</span><span class=\"n\">\u03bb\u1d62</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">|{</span><span class=\"n\">j</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">j\u5f3a\u8fde\u63a5\u5230i</span><span class=\"err\">}|</span>\n<span class=\"mf\">2.</span><span class=\"w\"> </span><span class=\"n\">\u521d\u59cb\u5316</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6240\u6709\u70b9\u6807\u8bb0\u4e3a\u672a\u5b9a</span><span class=\"p\">(</span><span class=\"n\">U</span><span class=\"p\">)</span>\n<span class=\"mf\">3.</span><span class=\"w\"> </span><span class=\"n\">while</span><span class=\"w\"> </span><span class=\"n\">\u5b58\u5728U\u70b9</span><span class=\"err\">\uff1a</span>\n<span class=\"w\">   </span><span class=\"n\">a</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u9009\u62e9\u03bb\u6700\u5927\u7684U\u70b9i</span><span class=\"err\">\uff0c</span><span class=\"n\">\u6807\u8bb0\u4e3aC\u70b9</span>\n<span class=\"w\">   </span><span class=\"n\">b</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u5c06\u6240\u6709\u5f3a\u8fde\u63a5\u5230i\u7684U\u70b9\u6807\u8bb0\u4e3aF\u70b9</span>\n<span class=\"w\">   </span><span class=\"n\">c</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u66f4\u65b0\u53d7\u5f71\u54cd\u70b9\u7684\u03bb\u503c</span>\n\n<span class=\"mf\">4.</span><span class=\"w\"> </span><span class=\"n\">\u540e\u5904\u7406</span><span class=\"err\">\uff1a</span><span class=\"n\">\u786e\u4fdd\u6bcf\u4e2aF\u70b9\u81f3\u5c11\u5f3a\u8fde\u63a5\u5230\u4e00\u4e2aC\u70b9</span>\n</code></pre></div>\n\n<p><strong>\u4e24\u904d\u7b97\u6cd5</strong>(Second pass)\uff1a\n\u68c0\u67e5\u6bcf\u4e2aF\u70b9\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u5f3a\u8fde\u63a5\u5230\u4efb\u4f55C\u70b9\uff0c\u5219\uff1a</p>\n<ul>\n<li>\u5c06\u5176\u6539\u4e3aC\u70b9\uff0c\u6216</li>\n<li>\u5c06\u67d0\u4e2a\u5f3a\u8fde\u63a5\u7684F\u70b9\u6539\u4e3aC\u70b9</li>\n</ul>\n<h3 id=\"562\">5.6.2 \u63d2\u503c\u7b97\u5b50\u6784\u9020</h3>\n<p>AMG\u7684\u6838\u5fc3\u662f\u6784\u9020\u597d\u7684\u63d2\u503c(\u5ef6\u62d3)\u7b97\u5b50\u3002\u57fa\u672c\u539f\u5219\u662f\u51c6\u786e\u63d2\u503c\u5149\u6ed1\u8bef\u5dee\u3002</p>\n<p><strong>\u7ecf\u5178\u63d2\u503c</strong>\uff1a\n\u5bf9\u4e8eF\u70b9 $i$\uff0c\u5176\u503c\u7531\u5f3a\u8fde\u63a5\u7684C\u70b9\u63d2\u503c\uff1a\n$$e_i = \\sum_{j \\in C_i} w_{ij} e_j$$\n\u5176\u4e2d $C_i$ \u662f\u5f3a\u8fde\u63a5\u5230 $i$ \u7684C\u70b9\u96c6\u5408\u3002</p>\n<p><strong>\u63d2\u503c\u6743\u91cd\u8ba1\u7b97</strong>\uff1a\n\u57fa\u4e8e\u5149\u6ed1\u8bef\u5dee\u5047\u8bbe $Ae \\approx 0$\uff1a\n$$a_{ii}e_i + \\sum_{j \\in N_i} a_{ij}e_j \\approx 0$$\n\u5c06\u90bb\u5c45\u5206\u4e3aC\u70b9\u548cF\u70b9\uff1a\n$$e_i = -\\frac{1}{a_{ii}} \\left( \\sum_{j \\in C_i} a_{ij}e_j + \\sum_{k \\in F_i} a_{ik}e_k \\right)$$\n\u5bf9F\u70b9\u7684\u8d21\u732e\u8fdb\u884c\u8fd1\u4f3c\uff08\u5982\u5206\u914d\u5230C\u70b9\uff09\uff0c\u5f97\u5230\u63d2\u503c\u6743\u91cd\u3002</p>\n<p><strong>\u6807\u51c6\u63d2\u503c\u516c\u5f0f</strong>\uff1a\n$$w_{ij} = -\\frac{a_{ij} + \\sum_{k \\in F_i} \\frac{a_{ik}a_{kj}}{\\sum_{m \\in C_i} a_{km}}}{a_{ii} + \\sum_{k \\in F_i} \\frac{a_{ik}a_{ki}}{a_{kk}}}$$</p>\n<h3 id=\"563-amg\">5.6.3 \u7ecf\u5178AMG\u4e0e\u5e73\u6ed1\u805a\u5408</h3>\n<p><strong>\u7ecf\u5178AMG\u7279\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u57fa\u4e8e\u5f3a\u8fde\u63a5\u7684C/F\u5206\u88c2</li>\n<li>\u76f4\u63a5\u63d2\u503c\u6784\u9020</li>\n<li>\u5bf9\u5404\u5411\u5f02\u6027\u95ee\u9898\u6548\u679c\u597d</li>\n<li>\u6784\u9020\u590d\u6742\u5ea6\u8f83\u9ad8</li>\n</ul>\n<p><strong>\u5e73\u6ed1\u805a\u5408(SA)AMG</strong>\uff1a\n\u4e0d\u540c\u4e8eC/F\u5206\u88c2\uff0cSA\u4f7f\u7528\u805a\u5408\u7b56\u7565\uff1a</p>\n<ol>\n<li>\n<p><strong>\u805a\u5408\u9636\u6bb5</strong>\uff1a\n   - \u5c06\u5f3a\u8fde\u63a5\u7684\u8282\u70b9\u805a\u5408\u6210\u7ec4\n   - \u6bcf\u7ec4\u5f62\u6210\u4e00\u4e2a\u7c97\u7f51\u683c\u8282\u70b9\n   - \u521d\u59cb\u63d2\u503c\uff1a\u5206\u7247\u5e38\u6570</p>\n</li>\n<li>\n<p><strong>\u5e73\u6ed1\u9636\u6bb5</strong>\uff1a\n   - \u5bf9\u521d\u59cb\u63d2\u503c\u5e94\u7528\u5149\u6ed1\u8fed\u4ee3\n   - $P = S \\tilde{P}$\uff0c\u5176\u4e2d $S$ \u662f\u5149\u6ed1\u7b97\u5b50\n   - \u6539\u5584\u63d2\u503c\u8d28\u91cf</p>\n</li>\n</ol>\n<p><strong>\u805a\u5408\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">1.</span><span class=\"w\"> </span><span class=\"n\">\u521d\u59cb\u5316</span><span class=\"err\">\uff1a</span><span class=\"n\">\u6240\u6709\u70b9\u672a\u805a\u5408</span>\n<span class=\"mf\">2.</span><span class=\"w\"> </span><span class=\"kr\">for</span><span class=\"w\"> </span><span class=\"n\">each</span><span class=\"w\"> </span><span class=\"n\">\u672a\u805a\u5408\u70b9</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"err\">\uff1a</span>\n<span class=\"w\">   </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"n\">\u6709\u8db3\u591f\u7684\u672a\u805a\u5408\u5f3a\u8fde\u63a5\u90bb\u5c45</span><span class=\"err\">\uff1a</span>\n<span class=\"w\">      </span><span class=\"n\">\u521b\u5efa\u65b0\u805a\u5408</span><span class=\"err\">\uff0c</span><span class=\"n\">\u5305\u542b</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"n\">\u548c\u5176\u5f3a\u8fde\u63a5\u90bb\u5c45</span>\n<span class=\"w\">   </span><span class=\"n\">else</span><span class=\"err\">\uff1a</span>\n<span class=\"w\">      </span><span class=\"n\">\u5c06</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"n\">\u52a0\u5165\u90bb\u8fd1\u7684\u805a\u5408</span>\n\n<span class=\"mf\">3.</span><span class=\"w\"> </span><span class=\"n\">\u5904\u7406\u5269\u4f59\u70b9</span><span class=\"err\">\uff08</span><span class=\"n\">\u53ef\u80fd\u9700\u8981\u653e\u677e\u5f3a\u8fde\u63a5\u51c6\u5219</span><span class=\"err\">\uff09</span>\n</code></pre></div>\n\n<h3 id=\"564-amg\">5.6.4 \u81ea\u9002\u5e94AMG</h3>\n<p>\u81ea\u9002\u5e94AMG\u901a\u8fc7\u6d4b\u8bd5\u5411\u91cf\u81ea\u52a8\u6539\u8fdb\u63d2\u503c\u7b97\u5b50\u3002</p>\n<p><strong>\u57fa\u672c\u601d\u60f3</strong>\uff1a\n\u4f7f\u7528\u5b9e\u9645\u95ee\u9898\u7684\u8fd1\u96f6\u7279\u5f81\u5411\u91cf\uff08\u4ee3\u8868\u5149\u6ed1\u8bef\u5dee\uff09\u6765\u6784\u9020\u63d2\u503c\u3002</p>\n<p><strong>\u81ea\u9002\u5e94\u8bbe\u7f6e\u7b97\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u8bbe\u7f6e\uff1a\u4f7f\u7528\u6807\u51c6AMG\u6784\u9020</li>\n<li>\u6d4b\u8bd5\u9636\u6bb5\uff1a\n   - \u6267\u884c\u591a\u91cd\u7f51\u683c\u8fed\u4ee3\n   - \u6536\u96c6\u6536\u655b\u6162\u7684\u8bef\u5dee\u5206\u91cf</li>\n<li>\u6539\u8fdb\u63d2\u503c\uff1a\n   - \u5c06\u6d4b\u8bd5\u5411\u91cf\u52a0\u5165\u63d2\u503c\u7684\u8303\u56f4\n   - \u91cd\u65b0\u6784\u9020\u7f51\u683c\u5c42\u6b21</li>\n</ol>\n<p><strong>Bootstrap AMG</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">1.</span><span class=\"w\"> </span><span class=\"n\">\u4ece\u5e38\u6570\u5411\u91cf\u5f00\u59cb</span><span class=\"err\">\uff1a</span><span class=\"n\">v</span><span class=\"err\">\u207d</span><span class=\"n\">\u2070</span><span class=\"err\">\u207e</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1</span>\n<span class=\"mf\">2.</span><span class=\"w\"> </span><span class=\"kr\">for</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1</span><span class=\"w\"> </span><span class=\"kr\">to</span><span class=\"w\"> </span><span class=\"n\">K</span><span class=\"err\">\uff1a</span>\n<span class=\"w\">   </span><span class=\"n\">a</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u7528\u5f53\u524d\u5411\u91cf\u6784\u9020AMG\u5c42\u6b21</span>\n<span class=\"w\">   </span><span class=\"n\">b</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u5e94\u7528AMG\u6c42\u89e3</span><span class=\"err\">\uff0c</span><span class=\"n\">\u8bb0\u5f55\u6536\u655b\u6162\u7684\u5206\u91cf</span>\n<span class=\"w\">   </span><span class=\"n\">c</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u66f4\u65b0\u6d4b\u8bd5\u5411\u91cf\u96c6</span><span class=\"err\">\uff1a</span><span class=\"n\">V</span><span class=\"err\">\u207d</span><span class=\"n\">\u1d4f</span><span class=\"err\">\u207e</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">[</span><span class=\"n\">v</span><span class=\"err\">\u207d</span><span class=\"n\">\u2070</span><span class=\"err\">\u207e</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"err\">\u207d</span><span class=\"n\">\u00b9</span><span class=\"err\">\u207e</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">...</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"err\">\u207d</span><span class=\"n\">\u1d4f</span><span class=\"err\">\u207e]</span>\n\n<span class=\"mf\">3.</span><span class=\"w\"> </span><span class=\"n\">\u4f7f\u7528\u6700\u7ec8\u7684\u5411\u91cf\u96c6\u6784\u9020AMG</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u81ea\u52a8\u9002\u5e94\u95ee\u9898\u7279\u6027</li>\n<li>\u5bf9\u56f0\u96be\u95ee\u9898\u6548\u679c\u663e\u8457</li>\n<li>\u53ef\u4ee5\u5904\u7406\u591a\u4e2a\u8fd1\u96f6\u7279\u5f81\u5411\u91cf</li>\n</ul>\n<p><strong>\u7f3a\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u8bbe\u7f6e\u9636\u6bb5\u5f00\u9500\u5927</li>\n<li>\u9700\u8981\u5b58\u50a8\u6d4b\u8bd5\u5411\u91cf</li>\n<li>\u5bf9\u95ee\u9898\u53d8\u5316\u654f\u611f</li>\n</ul>\n<h2 id=\"57-matrix-free\">5.7 \u65e0\u77e9\u9635(Matrix-free)\u65b9\u6cd5</h2>\n<h3 id=\"571-\">5.7.1 \u77e9\u9635-\u5411\u91cf\u4e58\u79ef\u7684\u9690\u5f0f\u8ba1\u7b97</h3>\n<p>\u5728\u73b0\u4ee3\u8ba1\u7b97\u67b6\u6784\u4e2d\uff0c\u5185\u5b58\u5e26\u5bbd\u5f80\u5f80\u662f\u6027\u80fd\u74f6\u9888\u3002\u65e0\u77e9\u9635\u65b9\u6cd5\u901a\u8fc7\u76f4\u63a5\u8ba1\u7b97\u77e9\u9635-\u5411\u91cf\u4e58\u79ef\u800c\u4e0d\u5b58\u50a8\u77e9\u9635\u6765\u4f18\u5316\u6027\u80fd\u3002</p>\n<p><strong>\u52a8\u673a</strong>\uff1a</p>\n<ul>\n<li>\u5b58\u50a8\u7a00\u758f\u77e9\u9635\u9700\u8981\u5927\u91cf\u5185\u5b58</li>\n<li>\u77e9\u9635\u5143\u7d20\u7684\u8bfb\u53d6\u53d7\u5185\u5b58\u5e26\u5bbd\u9650\u5236</li>\n<li>\u91cd\u65b0\u8ba1\u7b97\u5f80\u5f80\u6bd4\u8bfb\u53d6\u66f4\u5feb</li>\n</ul>\n<p><strong>Laplace\u7b97\u5b50\u7684\u65e0\u77e9\u9635\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">laplace_matvec</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u4e0d\u5b58\u50a8\u77e9\u9635\uff0c\u76f4\u63a5\u8ba1\u7b97 Au</span>\n    <span class=\"n\">Au</span> <span class=\"o\">=</span> <span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">)</span>\n    <span class=\"n\">inv_h2</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">*</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">Au</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">inv_h2</span> <span class=\"o\">*</span> <span class=\"p\">(</span>\n                <span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> \n\n                         <span class=\"o\">-</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">Au</span>\n</code></pre></div>\n\n<p><strong>\u6027\u80fd\u5206\u6790</strong>\uff1a</p>\n<ul>\n<li>\u4f20\u7edf\u65b9\u6cd5\uff1a\u8bfb\u53d65\u4e2a\u77e9\u9635\u5143\u7d20 + 5\u4e2a\u5411\u91cf\u5143\u7d20 = 10\u6b21\u5185\u5b58\u8bbf\u95ee</li>\n<li>\u65e0\u77e9\u9635\u65b9\u6cd5\uff1a\u8bfb\u53d65\u4e2a\u5411\u91cf\u5143\u7d20 = 5\u6b21\u5185\u5b58\u8bbf\u95ee</li>\n<li>\u7b97\u672f\u8fd0\u7b97\u589e\u52a0\u4f46\u901a\u5e38\"\u514d\u8d39\"\uff08\u8ba1\u7b97\u9690\u85cf\u5728\u5185\u5b58\u8bbf\u95ee\u5ef6\u8fdf\u4e2d\uff09</li>\n</ul>\n<h3 id=\"572\">5.7.2 \u5185\u5b58\u5e26\u5bbd\u4f18\u5316</h3>\n<p>\u73b0\u4ee3\u5904\u7406\u5668\u7684\u5173\u952e\u7279\u6027\uff1a</p>\n<ul>\n<li>\u8ba1\u7b97\u80fd\u529b &gt;&gt; \u5185\u5b58\u5e26\u5bbd</li>\n<li>FLOP/\u5b57\u8282\u6bd4\u6301\u7eed\u589e\u52a0</li>\n<li>\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\u7684\u91cd\u8981\u6027</li>\n</ul>\n<p><strong>Roofline\u6a21\u578b\u5206\u6790</strong>\uff1a\n\u7b97\u672f\u5f3a\u5ea6(AI) = FLOPs / \u5185\u5b58\u5b57\u8282\u6570</p>\n<p>\u5bf9\u4e8eLaplace\u7b97\u5b50\uff1a</p>\n<ul>\n<li>FLOPs: 5\u6b21\u4e58\u6cd5 + 4\u6b21\u52a0\u6cd5 = 9 FLOPs</li>\n<li>\u5185\u5b58: 5\u6b21\u8bfb\u53d6 \u00d7 8\u5b57\u8282 = 40\u5b57\u8282</li>\n<li>AI = 9/40 \u2248 0.225 FLOP/\u5b57\u8282</li>\n</ul>\n<p>\u8fd9\u8fdc\u4f4e\u4e8e\u73b0\u4ee3CPU\u7684\u5e73\u8861\u70b9\uff08\u901a\u5e38 &gt; 10 FLOP/\u5b57\u8282\uff09\uff0c\u8bf4\u660e\u662f\u5185\u5b58\u5e26\u5bbd\u53d7\u9650\u3002</p>\n<p><strong>\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u65f6\u95f4\u963b\u585e(Temporal blocking)</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5728\u7f13\u5b58\u4e2d\u591a\u6b21\u4f7f\u7528\u6570\u636e</span>\n<span class=\"k\">for</span> <span class=\"n\">t_block</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">,</span> <span class=\"n\">block_size</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">t_block</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">t_block</span><span class=\"o\">+</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">)):</span>\n        <span class=\"n\">update_interior</span><span class=\"p\">()</span>\n        <span class=\"n\">exchange_boundaries</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u7a7a\u95f4\u963b\u585e(Spatial blocking)</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5206\u5757\u5904\u7406\u4ee5\u63d0\u9ad8\u7f13\u5b58\u5229\u7528\u7387</span>\n<span class=\"k\">for</span> <span class=\"n\">ii</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">jj</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ii</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">ii</span><span class=\"o\">+</span><span class=\"n\">block</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)):</span>\n            <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">jj</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">jj</span><span class=\"o\">+</span><span class=\"n\">block</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)):</span>\n                <span class=\"n\">compute_stencil</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6570\u636e\u5e03\u5c40\u4f18\u5316</strong>\uff1a\n   - \u4f7f\u7528SoA\u800c\u975eAoS\u63d0\u9ad8\u5411\u91cf\u5316\u6548\u7387\n   - \u5185\u5b58\u5bf9\u9f50\u63d0\u9ad8SIMD\u6548\u7387</li>\n</ol>\n<h3 id=\"573\">5.7.3 \u7b97\u5b50\u878d\u5408\u6280\u672f</h3>\n<p>\u7b97\u5b50\u878d\u5408\u901a\u8fc7\u5408\u5e76\u591a\u4e2a\u64cd\u4f5c\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u6b21\u6570\u3002</p>\n<p><strong>\u672a\u878d\u5408\u7684CG\u8fed\u4ee3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># 5\u4e2a\u72ec\u7acb\u7684\u5faa\u73af\uff0c5\u6b21\u5185\u5b58\u904d\u5386</span>\n<span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">A</span> <span class=\"o\">@</span> <span class=\"n\">p</span>           <span class=\"c1\"># \u5faa\u73af1</span>\n<span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">rTr</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">@</span> <span class=\"n\">q</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5faa\u73af2</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">p</span>    <span class=\"c1\"># \u5faa\u73af3</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">q</span>    <span class=\"c1\"># \u5faa\u73af4</span>\n<span class=\"n\">rTr_new</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">@</span> <span class=\"n\">r</span>      <span class=\"c1\"># \u5faa\u73af5</span>\n</code></pre></div>\n\n<p><strong>\u878d\u5408\u540e\u7684\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">fused_cg_iteration</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">A_func</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u878d\u5408\u591a\u4e2a\u64cd\u4f5c\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">zeros_like</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n    <span class=\"n\">pq</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"n\">rTr_new</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97 q = Ap</span>\n        <span class=\"n\">q</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">A_func</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"c1\"># \u7d2f\u52a0 p\u00b7q</span>\n        <span class=\"n\">pq</span> <span class=\"o\">+=</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">q</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">rTr</span> <span class=\"o\">/</span> <span class=\"n\">pq</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u66f4\u65b0 x, r \u5e76\u8ba1\u7b97\u65b0\u7684 r\u00b7r</span>\n        <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"n\">r</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">q</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"n\">rTr_new</span> <span class=\"o\">+=</span> <span class=\"n\">r</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">r</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">rTr_new</span>\n</code></pre></div>\n\n<p><strong>\u878d\u5408\u6536\u76ca</strong>\uff1a</p>\n<ul>\n<li>\u51cf\u5c11\u5185\u5b58\u904d\u5386\u6b21\u6570</li>\n<li>\u63d0\u9ad8\u65f6\u95f4\u5c40\u90e8\u6027</li>\n<li>\u66f4\u597d\u7684\u7f16\u8bd1\u5668\u4f18\u5316\u673a\u4f1a</li>\n</ul>\n<h3 id=\"574-gpu\">5.7.4 GPU\u5b9e\u73b0\u7b56\u7565</h3>\n<p>GPU\u4e0a\u7684\u65e0\u77e9\u9635\u65b9\u6cd5\u9700\u8981\u7279\u6b8a\u8003\u8651\u3002</p>\n<p><strong>\u7ebf\u7a0b\u6620\u5c04\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">__global__</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">laplace_3d_kernel</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">Au</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">nx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ny</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">nz</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">inv_h2</span>\n<span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">nx</span><span class=\"mi\">-1</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>\n<span class=\"w\">        </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">ny</span><span class=\"mi\">-1</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>\n<span class=\"w\">        </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">nz</span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">nx</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">ny</span><span class=\"o\">*</span><span class=\"n\">k</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">Au</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">inv_h2</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"mi\">6</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span><span class=\"w\"> </span>\n\n<span class=\"w\">            </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"mi\">-1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"w\">            </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">-</span><span class=\"n\">nx</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"n\">nx</span><span class=\"p\">]</span>\n<span class=\"w\">            </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">-</span><span class=\"n\">nx</span><span class=\"o\">*</span><span class=\"n\">ny</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">+</span><span class=\"n\">nx</span><span class=\"o\">*</span><span class=\"n\">ny</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u5171\u4eab\u5185\u5b58\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">__global__</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">optimized_laplace_kernel</span><span class=\"p\">(...)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">__shared__</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"n\">TILE_DIM</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"n\">TILE_DIM</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u534f\u4f5c\u52a0\u8f7d\u5305\u542b\u8fb9\u754c\u7684\u6570\u636e\u5757\u5230\u5171\u4eab\u5185\u5b58</span>\n<span class=\"w\">    </span><span class=\"n\">load_tile_with_halo</span><span class=\"p\">(</span><span class=\"n\">tile</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">...);</span>\n<span class=\"w\">    </span><span class=\"nf\">__syncthreads</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u4ece\u5171\u4eab\u5185\u5b58\u8ba1\u7b97</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">TILE_DIM</span><span class=\"mi\">-1</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span>\n<span class=\"w\">        </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">TILE_DIM</span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">inv_h2</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"n\">ty</span><span class=\"p\">][</span><span class=\"n\">tx</span><span class=\"p\">]</span>\n\n<span class=\"w\">            </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"n\">ty</span><span class=\"mi\">-1</span><span class=\"p\">][</span><span class=\"n\">tx</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"n\">ty</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"n\">tx</span><span class=\"p\">]</span>\n<span class=\"w\">            </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"n\">ty</span><span class=\"p\">][</span><span class=\"n\">tx</span><span class=\"mi\">-1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"n\">ty</span><span class=\"p\">][</span><span class=\"n\">tx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5199\u56de\u5168\u5c40\u5185\u5b58</span>\n<span class=\"w\">        </span><span class=\"n\">Au</span><span class=\"p\">[</span><span class=\"n\">global_idx</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u6027\u80fd\u8003\u8651</strong>\uff1a</p>\n<ol>\n<li><strong>\u5408\u5e76\u8bbf\u95ee</strong>\uff1a\u786e\u4fdd\u76f8\u90bb\u7ebf\u7a0b\u8bbf\u95ee\u76f8\u90bb\u5185\u5b58</li>\n<li><strong>\u5360\u7528\u7387</strong>\uff1a\u5e73\u8861\u5bc4\u5b58\u5668\u4f7f\u7528\u548c\u5757\u5927\u5c0f</li>\n<li><strong>\u907f\u514d\u5206\u652f\u53d1\u6563</strong>\uff1a\u6700\u5c0f\u5316\u6761\u4ef6\u8bed\u53e5</li>\n<li><strong>\u4f7f\u7528\u7eb9\u7406\u5185\u5b58</strong>\uff1a\u5bf9\u4e8e\u6709\u7a7a\u95f4\u5c40\u90e8\u6027\u7684\u8bbf\u95ee\u6a21\u5f0f</li>\n</ol>\n<h2 id=\"58\">5.8 \u6cca\u677e\u65b9\u7a0b\u7684\u5feb\u901f\u89e3\u6cd5</h2>\n<h3 id=\"581\">5.8.1 \u683c\u6797\u51fd\u6570\u4e0e\u57fa\u672c\u89e3</h3>\n<p>\u6cca\u677e\u65b9\u7a0b $\\nabla^2 \\phi = f$ \u53ef\u4ee5\u901a\u8fc7\u683c\u6797\u51fd\u6570\u65b9\u6cd5\u6c42\u89e3\u3002</p>\n<p><strong>\u57fa\u672c\u89e3\uff08\u4e09\u7ef4\uff09</strong>\uff1a\n$$G(x, y) = -\\frac{1}{4\\pi||x-y||}$$\n<strong>\u901a\u89e3</strong>\uff1a\n$$\\phi(x) = \\int_\\Omega G(x, y) f(y) dy + \\int_{\\partial\\Omega} \\left[ G(x, y)\\frac{\\partial\\phi}{\\partial n} - \\phi(y)\\frac{\\partial G}{\\partial n} \\right] ds$$\n\u5bf9\u4e8e\u81ea\u7531\u7a7a\u95f4\uff08\u65e0\u8fb9\u754c\uff09\u95ee\u9898\uff1a\n$$\\phi(x) = -\\frac{1}{4\\pi} \\int_\\Omega \\frac{f(y)}{||x-y||} dy$$\n<strong>\u79bb\u6563\u5f62\u5f0f</strong>\uff1a\n$$\\phi_i = \\sum_j G_{ij} f_j \\Delta V_j$$\n\u5176\u4e2d $G_{ij} = -1/(4\\pi||x_i - x_j||)$\u3002</p>\n<h3 id=\"582-fmm\">5.8.2 \u5feb\u901f\u591a\u6781\u5b50\u65b9\u6cd5(FMM)</h3>\n<p>\u76f4\u63a5\u8ba1\u7b97\u6240\u6709\u7c92\u5b50\u5bf9\u76f8\u4e92\u4f5c\u7528\u9700\u8981 $O(N^2)$ \u64cd\u4f5c\u3002FMM\u901a\u8fc7\u591a\u6781\u5c55\u5f00\u5c06\u590d\u6742\u5ea6\u964d\u81f3 $O(N)$\u3002</p>\n<p><strong>\u6838\u5fc3\u601d\u60f3</strong>\uff1a</p>\n<ol>\n<li>\u8fdc\u573a\u4f7f\u7528\u591a\u6781\u5c55\u5f00\u8fd1\u4f3c</li>\n<li>\u8fd1\u573a\u76f4\u63a5\u8ba1\u7b97</li>\n<li>\u5c42\u6b21\u7ed3\u6784\u52a0\u901f\u8ba1\u7b97</li>\n</ol>\n<p><strong>\u591a\u6781\u5c55\u5f00</strong>\uff1a\n\u5bf9\u4e8e\u6e90\u70b9 $y$ \u5728\u539f\u70b9\u9644\u8fd1\uff0c\u573a\u70b9 $x$ \u8fdc\u79bb\u539f\u70b9\uff1a\n$$\\frac{1}{||x-y||} \\approx \\sum_{l=0}^p \\sum_{m=-l}^l \\frac{Y_l^m(\\hat{y})}{r^{l+1}} r_y^l Y_l^m(\\hat{x})$$\n\u5176\u4e2d $Y_l^m$ \u662f\u7403\u8c10\u51fd\u6570\u3002</p>\n<p><strong>FMM\u7b97\u6cd5\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li><strong>\u6784\u5efa\u6811\u7ed3\u6784</strong>\uff1a\u516b\u53c9\u6811(3D)\u6216\u56db\u53c9\u6811(2D)</li>\n<li><strong>\u4e0a\u884c\u904d\u5386(Upward pass)</strong>\uff1a\n   - P2M: \u7c92\u5b50\u5230\u591a\u6781\n   - M2M: \u591a\u6781\u5230\u591a\u6781\uff08\u5b50\u5230\u7236\uff09</li>\n<li><strong>\u4e0b\u884c\u904d\u5386(Downward pass)</strong>\uff1a\n   - M2L: \u591a\u6781\u5230\u5c40\u90e8\uff08\u8fdc\u573a\u4f5c\u7528\uff09\n   - L2L: \u5c40\u90e8\u5230\u5c40\u90e8\uff08\u7236\u5230\u5b50\uff09</li>\n<li><strong>\u6700\u7ec8\u6c42\u503c</strong>\uff1a\n   - L2P: \u5c40\u90e8\u5230\u7c92\u5b50\n   - P2P: \u7c92\u5b50\u5230\u7c92\u5b50\uff08\u8fd1\u573a\u76f4\u63a5\uff09</li>\n</ol>\n<h3 id=\"583-pppm\">5.8.3 PPPM\u65b9\u6cd5</h3>\n<p>Particle-Particle Particle-Mesh (PPPM) \u65b9\u6cd5\u7ed3\u5408\u4e86\u76f4\u63a5\u6c42\u548c\u548c\u7f51\u683c\u65b9\u6cd5\u3002</p>\n<p><strong>\u57fa\u672c\u601d\u60f3</strong>\uff1a\n$$\\phi = \\phi_{short} + \\phi_{long}$$</p>\n<ul>\n<li>\u77ed\u7a0b\u90e8\u5206\uff1a\u76f4\u63a5\u7c92\u5b50-\u7c92\u5b50\u76f8\u4e92\u4f5c\u7528</li>\n<li>\u957f\u7a0b\u90e8\u5206\uff1a\u901a\u8fc7FFT\u5728\u7f51\u683c\u4e0a\u6c42\u89e3</li>\n</ul>\n<p><strong>\u7b97\u6cd5\u6d41\u7a0b</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7c92\u5b50\u5230\u7f51\u683c(P2G)</strong>\uff1a\n$$\\rho_{\\text{grid}}(x) = \\sum_i q_i W(x - x_i)$$</p>\n</li>\n<li>\n<p><strong>\u7f51\u683c\u4e0a\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b</strong>\uff08FFT\uff09\uff1a\n$$\\hat{\\phi}_k = \\frac{\\hat{\\rho}_k}{k^2}$$</p>\n</li>\n<li>\n<p><strong>\u7f51\u683c\u5230\u7c92\u5b50(G2P)</strong>\uff1a\n$$\\phi_i^{\\text{long}} = \\sum_{\\text{grid}} \\phi_{\\text{grid}} W(x_{\\text{grid}} - x_i)$$</p>\n</li>\n<li>\n<p><strong>\u77ed\u7a0b\u4fee\u6b63</strong>\uff1a\n$$\\phi_i = \\phi_i^{\\text{long}} + \\sum_{j \\in \\text{near}} \\frac{q_j \\text{erfc}(\\alpha r_{ij})}{r_{ij}}$$\n<strong>\u53c2\u6570\u9009\u62e9</strong>\uff1a</p>\n</li>\n</ol>\n<ul>\n<li>$\\alpha$\uff1a\u77ed\u7a0b/\u957f\u7a0b\u5206\u79bb\u53c2\u6570</li>\n<li>\u7f51\u683c\u5206\u8fa8\u7387\uff1a\u5e73\u8861\u7cbe\u5ea6\u548c\u6548\u7387</li>\n<li>\u63d2\u503c\u9636\u6570\uff1a\u901a\u5e38\u4f7f\u75283\u6b21B\u6837\u6761</li>\n</ul>\n<h3 id=\"584-fft\">5.8.4 FFT\u65b9\u6cd5(\u5468\u671f\u8fb9\u754c)</h3>\n<p>\u5bf9\u4e8e\u5468\u671f\u8fb9\u754c\u6761\u4ef6\uff0c\u6cca\u677e\u65b9\u7a0b\u53ef\u4ee5\u901a\u8fc7FFT\u9ad8\u6548\u6c42\u89e3\u3002</p>\n<p><strong>\u7b97\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u524d\u5411FFT</strong>\uff1a\n$$\\hat{f}_k = \\text{FFT}(f)$$</p>\n</li>\n<li>\n<p><strong>\u8c31\u7a7a\u95f4\u6c42\u89e3</strong>\uff1a\n$$\\hat{\\phi}_k = \\frac{\\hat{f}_k}{-k^2}$$\n\u6ce8\u610f\uff1a$k = 0$ \u6a21\u5f0f\u9700\u8981\u7279\u6b8a\u5904\u7406\uff08\u8bbe\u4e3a0\u6216\u5e73\u5747\u503c\uff09</p>\n</li>\n<li>\n<p><strong>\u9006\u5411FFT</strong>\uff1a\n$$\\phi = \\text{IFFT}(\\hat{\\phi})$$\n<strong>\u79bb\u6563\u6ce2\u6570</strong>\uff1a\n\u5bf9\u4e8e $N \\times N$ \u7f51\u683c\uff1a\n$$k_x = \\frac{2\\pi}{L} n_x, \\quad n_x = 0, 1, ..., N-1$$\n\u5b9e\u9645\u8ba1\u7b97\u4e2d\u4f7f\u7528\uff1a\n$$k^2 = \\frac{4}{h^2}\\left[\\sin^2\\left(\\frac{\\pi n_x}{N}\\right) + \\sin^2\\left(\\frac{\\pi n_y}{N}\\right)\\right]$$\n<strong>\u975e\u5468\u671f\u8fb9\u754c\u7684\u5904\u7406</strong>\uff1a</p>\n</li>\n<li>\n<p><strong>\u6b63\u5f26\u53d8\u6362</strong>\uff1a\u9002\u7528\u4e8eDirichlet\u8fb9\u754c</p>\n</li>\n<li><strong>\u4f59\u5f26\u53d8\u6362</strong>\uff1a\u9002\u7528\u4e8eNeumann\u8fb9\u754c</li>\n<li><strong>Chebyshev\u65b9\u6cd5</strong>\uff1a\u975e\u5747\u5300\u7f51\u683c</li>\n</ol>\n<p><strong>\u5b9e\u73b0\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">poisson_fft_solve</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u524d\u5411FFT</span>\n    <span class=\"n\">f_hat</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftn</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6784\u9020\u6ce2\u6570</span>\n    <span class=\"n\">kx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftfreq</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n    <span class=\"n\">ky</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">fftfreq</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n    <span class=\"n\">kx</span><span class=\"p\">,</span> <span class=\"n\">ky</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">kx</span><span class=\"p\">,</span> <span class=\"n\">ky</span><span class=\"p\">,</span> <span class=\"n\">indexing</span><span class=\"o\">=</span><span class=\"s1\">&#39;ij&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u79bb\u6563Laplace\u7b97\u5b50\u7684\u7279\u5f81\u503c</span>\n    <span class=\"n\">k_squared</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">kx</span><span class=\"o\">*</span><span class=\"n\">h</span><span class=\"p\">))</span><span class=\"o\">/</span><span class=\"n\">h</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> \\\n                <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">ky</span><span class=\"o\">*</span><span class=\"n\">h</span><span class=\"p\">))</span><span class=\"o\">/</span><span class=\"n\">h</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n    <span class=\"c1\"># \u907f\u514d\u9664\u96f6</span>\n    <span class=\"n\">k_squared</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n    <span class=\"n\">phi_hat</span> <span class=\"o\">=</span> <span class=\"n\">f_hat</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">k_squared</span><span class=\"p\">)</span>\n    <span class=\"n\">phi_hat</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>  <span class=\"c1\"># \u8bbe\u7f6e\u5e73\u5747\u503c\u4e3a0</span>\n\n    <span class=\"c1\"># \u9006\u5411FFT</span>\n    <span class=\"k\">return</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">fft</span><span class=\"o\">.</span><span class=\"n\">ifftn</span><span class=\"p\">(</span><span class=\"n\">phi_hat</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">real</span>\n</code></pre></div>\n\n<h2 id=\"_1\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u4e86\u6b27\u62c9\u89c6\u89d2\u7269\u7406\u4eff\u771f\u4e2d\u7684\u6838\u5fc3\u8ba1\u7b97\u95ee\u9898\u2014\u2014\u5927\u89c4\u6a21\u7a00\u758f\u7ebf\u6027\u7cfb\u7edf\u7684\u6c42\u89e3\u3002\u6211\u4eec\u5b66\u4e60\u4e86\u4ece\u57fa\u7840\u8fed\u4ee3\u6cd5\u5230\u73b0\u4ee3\u9ad8\u6027\u80fd\u7b97\u6cd5\u7684\u5b8c\u6574\u8c31\u7cfb\uff1a</p>\n<p><strong>\u5173\u952e\u6982\u5ff5</strong>\uff1a</p>\n<ol>\n<li><strong>\u7a00\u758f\u77e9\u9635\u7279\u6027</strong>\uff1aCSR/COO\u5b58\u50a8\u683c\u5f0f\uff0c\u96f6\u7a7a\u95f4\u5904\u7406\uff0c\u517c\u5bb9\u6027\u6761\u4ef6</li>\n<li><strong>Krylov\u5b50\u7a7a\u95f4\u65b9\u6cd5</strong>\uff1aCG\u7528\u4e8e\u5bf9\u79f0\u6b63\u5b9a\u7cfb\u7edf\uff0cBiCGSTAB\u7528\u4e8e\u975e\u5bf9\u79f0\u7cfb\u7edf</li>\n<li><strong>\u9884\u6761\u4ef6\u6280\u672f</strong>\uff1aJacobi\u3001IC\u3001MIC\u7b49\u9884\u6761\u4ef6\u5668\u663e\u8457\u52a0\u901f\u6536\u655b</li>\n<li><strong>\u591a\u91cd\u7f51\u683c\u65b9\u6cd5</strong>\uff1a\u5229\u7528\u8bef\u5dee\u7684\u9891\u7387\u7279\u6027\uff0c\u5b9e\u73b0 $O(n)$ \u590d\u6742\u5ea6</li>\n<li><strong>\u4ee3\u6570\u591a\u91cd\u7f51\u683c</strong>\uff1a\u4e0d\u4f9d\u8d56\u51e0\u4f55\u4fe1\u606f\uff0c\u81ea\u52a8\u6784\u5efa\u7f51\u683c\u5c42\u6b21</li>\n<li><strong>\u65e0\u77e9\u9635\u65b9\u6cd5</strong>\uff1a\u4f18\u5316\u5185\u5b58\u5e26\u5bbd\u4f7f\u7528\uff0c\u9002\u5e94\u73b0\u4ee3\u8ba1\u7b97\u67b6\u6784</li>\n<li><strong>\u7279\u6b8a\u5feb\u901f\u7b97\u6cd5</strong>\uff1aFFT\u3001FMM\u3001PPPM\u7b49\u9488\u5bf9\u6cca\u677e\u65b9\u7a0b\u7684\u4f18\u5316\u65b9\u6cd5</li>\n</ol>\n<p><strong>\u6838\u5fc3\u516c\u5f0f</strong>\uff1a</p>\n<ul>\n<li>Krylov\u5b50\u7a7a\u95f4\uff1a$\\mathcal{K}_m(A, r_0) = \\text{span}\\{r_0, Ar_0, ..., A^{m-1}r_0\\}$</li>\n<li>CG\u6536\u655b\u7387\uff1a$||e_k||_A \\leq 2\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right)^k ||e_0||_A$</li>\n<li>Galerkin\u7c97\u5316\uff1a$A_{2h} = I_{2h}^h A_h I_h^{2h}$</li>\n<li>\u6cca\u677e\u65b9\u7a0b\u57fa\u672c\u89e3\uff1a$G(x, y) = -\\frac{1}{4\\pi||x-y||}$\uff083D\uff09</li>\n</ul>\n<h2 id=\"_2\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_3\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e60 5.1</strong>\uff1a\u7a00\u758f\u77e9\u9635\u5b58\u50a8\n\u7ed9\u5b9a5\u00d75\u4e09\u5bf9\u89d2\u77e9\u9635\uff1a\n$$A = \\begin{bmatrix}\n2 &amp; -1 &amp; 0 &amp; 0 &amp; 0\\\\\n-1 &amp; 2 &amp; -1 &amp; 0 &amp; 0\\\\\n0 &amp; -1 &amp; 2 &amp; -1 &amp; 0\\\\\n0 &amp; 0 &amp; -1 &amp; 2 &amp; -1\\\\\n0 &amp; 0 &amp; 0 &amp; -1 &amp; 2\n\\end{bmatrix}$$\n\u5199\u51fa\u5176CSR\u683c\u5f0f\u8868\u793a\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>CSR\u9700\u8981\u4e09\u4e2a\u6570\u7ec4\uff1avalues\uff08\u975e\u96f6\u503c\uff09\u3001col_indices\uff08\u5217\u7d22\u5f15\uff09\u3001row_ptrs\uff08\u884c\u6307\u9488\uff09\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>CSR\u8868\u793a\uff1a</p>\n<ul>\n<li>values = [2, -1, -1, 2, -1, -1, 2, -1, -1, 2, -1, -1, 2]</li>\n<li>col_indices = [0, 1, 0, 1, 2, 1, 2, 3, 2, 3, 4, 3, 4]</li>\n<li>row_ptrs = [0, 2, 5, 8, 11, 13]</li>\n</ul>\n<p>\u9a8c\u8bc1\uff1a\u7b2ci\u884c\u7684\u975e\u96f6\u5143\u7d20\u5728values[row_ptrs[i]:row_ptrs[i+1]]\u4e2d\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 5.2</strong>\uff1aCG\u8fed\u4ee3\n\u5bf9\u4e8e\u7cfb\u7edf $Ax = b$\uff0c\u5176\u4e2d\uff1a\n$$A = \\begin{bmatrix} 4 &amp; 1 \\\\ 1 &amp; 3 \\end{bmatrix}, \\quad b = \\begin{bmatrix} 1 \\\\ 2 \\end{bmatrix}$$\n\u624b\u5de5\u6267\u884c\u4e00\u6b65CG\u8fed\u4ee3\uff0c\u521d\u59cb\u731c\u6d4b $x_0 = [0, 0]^T$\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>CG\u7b2c\u4e00\u6b65\uff1a$r_0 = b - Ax_0$\uff0c$p_0 = r_0$\uff0c\u8ba1\u7b97 $\\alpha_0 = \\frac{r_0^T r_0}{p_0^T A p_0}$\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<ol>\n<li>\u521d\u59cb\u6b8b\u5dee\uff1a$r_0 = b - Ax_0 = [1, 2]^T$</li>\n<li>\u521d\u59cb\u641c\u7d22\u65b9\u5411\uff1a$p_0 = r_0 = [1, 2]^T$</li>\n<li>\u8ba1\u7b97 $Ap_0 = [4\u00b71 + 1\u00b72, 1\u00b71 + 3\u00b72]^T = [6, 7]^T$</li>\n<li>\u6b65\u957f\uff1a$\\alpha_0 = \\frac{r_0^T r_0}{p_0^T Ap_0} = \\frac{1^2 + 2^2}{1\u00b76 + 2\u00b77} = \\frac{5}{20} = 0.25$</li>\n<li>\u66f4\u65b0\u89e3\uff1a$x_1 = x_0 + \\alpha_0 p_0 = [0, 0]^T + 0.25[1, 2]^T = [0.25, 0.5]^T$</li>\n<li>\u66f4\u65b0\u6b8b\u5dee\uff1a$r_1 = r_0 - \\alpha_0 Ap_0 = [1, 2]^T - 0.25[6, 7]^T = [-0.5, 0.25]^T$</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e60 5.3</strong>\uff1a\u591a\u91cd\u7f51\u683c\u9650\u5236\u7b97\u5b50\n\u5bf9\u4e8e\u4e00\u7ef4\u7f51\u683c\u4e0a\u7684\u5411\u91cf $u_h = [1, 4, 2, 5, 3]$\uff085\u4e2a\u70b9\uff09\uff0c\u4f7f\u7528\u5168\u6743\u91cd\u9650\u5236\u7b97\u5b50\u8ba1\u7b97\u7c97\u7f51\u683c\u5411\u91cf $u_{2h}$\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4e00\u7ef4\u5168\u6743\u91cd\u9650\u5236\uff1a$u_{2h,i} = \\frac{1}{4}u_{h,2i-1} + \\frac{1}{2}u_{h,2i} + \\frac{1}{4}u_{h,2i+1}$\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7c97\u7f51\u683c\u67093\u4e2a\u70b9\uff08\u7d22\u5f150, 1, 2\u5bf9\u5e94\u7ec6\u7f51\u683c\u76840, 2, 4\uff09\uff1a</p>\n<ul>\n<li>$u_{2h,0} = u_{h,0} = 1$\uff08\u8fb9\u754c\u70b9\u76f4\u63a5\u590d\u5236\uff09</li>\n<li>$u_{2h,1} = \\frac{1}{4}u_{h,1} + \\frac{1}{2}u_{h,2} + \\frac{1}{4}u_{h,3} = \\frac{1}{4}\u00b74 + \\frac{1}{2}\u00b72 + \\frac{1}{4}\u00b75 = 3.25$</li>\n<li>$u_{2h,2} = u_{h,4} = 3$\uff08\u8fb9\u754c\u70b9\u76f4\u63a5\u590d\u5236\uff09</li>\n</ul>\n<p>\u56e0\u6b64 $u_{2h} = [1, 3.25, 3]$\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 5.4</strong>\uff1aAMG\u5f3a\u8fde\u63a5\n\u7ed9\u5b9a\u77e9\u9635\u884c\uff1a$a_i = [0, -0.1, 0, -0.8, 2.0, -0.5, 0, -0.2, -0.4]$\uff0c\u4f7f\u7528\u9608\u503c $\\theta = 0.25$\uff0c\u786e\u5b9a\u8282\u70b9 $i$ \u5f3a\u8fde\u63a5\u5230\u54ea\u4e9b\u8282\u70b9\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8282\u70b9 $j$ \u662f\u5f3a\u8fde\u63a5\u5982\u679c $|a_{ij}| \\geq \\theta \\max_{k \\neq i} |a_{ik}|$\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<ol>\n<li>\u627e\u51fa\u6700\u5927\u975e\u5bf9\u89d2\u5143\u7d20\uff1a$\\max_{k \\neq i} |a_{ik}| = 0.8$\uff08\u5bf9\u5e94\u8282\u70b93\uff09</li>\n<li>\u9608\u503c\uff1a$\\theta \\max = 0.25 \u00d7 0.8 = 0.2$</li>\n<li>\u5f3a\u8fde\u63a5\u5224\u65ad\uff1a\n   - \u8282\u70b91\uff1a$|a_{i1}| = 0.1 &lt; 0.2$ \u2717\n   - \u8282\u70b93\uff1a$|a_{i3}| = 0.8 \\geq 0.2$ \u2713\n   - \u8282\u70b95\uff1a$|a_{i5}| = 0.5 \\geq 0.2$ \u2713\n   - \u8282\u70b97\uff1a$|a_{i7}| = 0.2 \\geq 0.2$ \u2713\n   - \u8282\u70b98\uff1a$|a_{i8}| = 0.4 \\geq 0.2$ \u2713</li>\n</ol>\n<p>\u8282\u70b9 $i$ \u5f3a\u8fde\u63a5\u5230\u8282\u70b9 {3, 5, 7, 8}\u3002</p>\n</details>\n<h3 id=\"_4\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e60 5.5</strong>\uff1a\u6761\u4ef6\u6570\u4e0eCG\u6536\u655b\n\u8bc1\u660e\uff1a\u5bf9\u4e8e\u6761\u4ef6\u6570\u4e3a $\\kappa$ \u7684SPD\u77e9\u9635\uff0cCG\u65b9\u6cd5\u5728 $k = O(\\sqrt{\\kappa} \\log(1/\\epsilon))$ \u6b65\u5185\u5c06\u76f8\u5bf9\u8bef\u5dee\u964d\u81f3 $\\epsilon$\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4f7f\u7528CG\u6536\u655b\u4f30\u8ba1 $||e_k||_A \\leq 2\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right)^k ||e_0||_A$\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u4ece\u6536\u655b\u4f30\u8ba1\u51fa\u53d1\uff1a\n$$\\frac{||e_k||_A}{||e_0||_A} \\leq 2\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right)^k$$\n\u8981\u4f7f\u76f8\u5bf9\u8bef\u5dee $\\leq \\epsilon$\uff0c\u9700\u8981\uff1a\n$$2\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right)^k \\leq \\epsilon$$\n\u53d6\u5bf9\u6570\uff1a\n$$k \\log\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right) \\leq \\log(\\epsilon/2)$$\n\u5f53 $\\kappa \\gg 1$ \u65f6\uff1a\n$$\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1} = \\frac{1 - 1/\\sqrt{\\kappa}}{1 + 1/\\sqrt{\\kappa}} \\approx 1 - \\frac{2}{\\sqrt{\\kappa}}$$\n\u56e0\u6b64\uff1a\n$$\\log\\left(\\frac{\\sqrt{\\kappa} - 1}{\\sqrt{\\kappa} + 1}\\right) \\approx \\log\\left(1 - \\frac{2}{\\sqrt{\\kappa}}\\right) \\approx -\\frac{2}{\\sqrt{\\kappa}}$$\n\u4ee3\u5165\u5f97\uff1a\n$$k \\cdot \\left(-\\frac{2}{\\sqrt{\\kappa}}\\right) \\leq \\log(\\epsilon/2)$$\n$$k \\geq \\frac{\\sqrt{\\kappa}}{2} \\log(2/\\epsilon)$$\n\u56e0\u6b64 $k = O(\\sqrt{\\kappa} \\log(1/\\epsilon))$\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 5.6</strong>\uff1a\u591a\u91cd\u7f51\u683c\u590d\u6742\u5ea6\u5206\u6790\n\u5bf9\u4e8e $n \u00d7 n$ \u4e8c\u7ef4\u7f51\u683c\uff0c\u8bc1\u660eV-cycle\u591a\u91cd\u7f51\u683c\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u662f $O(n^2)$\u3002\u5047\u8bbe\u6bcf\u5c42\u4f7f\u7528\u56fa\u5b9a\u6b21\u6570\u7684Jacobi\u5149\u6ed1\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8ba1\u7b97\u6240\u6709\u5c42\u7ea7\u7684\u5de5\u4f5c\u91cf\u603b\u548c\uff0c\u5229\u7528\u51e0\u4f55\u7ea7\u6570\u6c42\u548c\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u8bbe\u6700\u7ec6\u7f51\u683c\u6709 $N = n^2$ \u4e2a\u70b9\u3002</p>\n<p>\u5404\u5c42\u7f51\u683c\u70b9\u6570\uff1a</p>\n<ul>\n<li>Level 0: $n^2$</li>\n<li>Level 1: $(n/2)^2 = n^2/4$</li>\n<li>Level 2: $(n/4)^2 = n^2/16$</li>\n<li>...</li>\n<li>Level L: $O(1)$</li>\n</ul>\n<p>\u6bcf\u5c42\u5de5\u4f5c\u91cf\u6b63\u6bd4\u4e8e\u8be5\u5c42\u70b9\u6570\u3002\u8bbe\u6bcf\u4e2a\u70b9\u7684\u5de5\u4f5c\u91cf\u4e3a $c$\uff08\u5149\u6ed1\u8fed\u4ee3\uff09\u3002</p>\n<p>V-cycle\u603b\u5de5\u4f5c\u91cf\uff1a\n$$W = c \\sum_{l=0}^L \\frac{n^2}{4^l} = cn^2 \\sum_{l=0}^L \\frac{1}{4^l}$$\n\u8fd9\u662f\u51e0\u4f55\u7ea7\u6570\uff0c\u548c\u4e3a\uff1a\n$$\\sum_{l=0}^{\\infty} \\frac{1}{4^l} = \\frac{1}{1-1/4} = \\frac{4}{3}$$\n\u56e0\u6b64\uff1a\n$$W = cn^2 \\cdot \\frac{4}{3} = O(n^2)$$\n\u8fd9\u8bc1\u660e\u4e86V-cycle\u7684\u7ebf\u6027\u590d\u6742\u5ea6\uff08\u76f8\u5bf9\u4e8e\u672a\u77e5\u6570\u4e2a\u6570\uff09\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 5.7</strong>\uff1a\u65e0\u77e9\u9635\u65b9\u6cd5\u7684\u5185\u5b58\u5e26\u5bbd\u5206\u6790\n\u5bf9\u4e8e\u4e09\u7ef4Laplace\u7b97\u5b50\uff087\u70b9\u6a21\u677f\uff09\uff0c\u6bd4\u8f83\u4f20\u7edf\u7a00\u758f\u77e9\u9635\u65b9\u6cd5\u548c\u65e0\u77e9\u9635\u65b9\u6cd5\u7684\u5185\u5b58\u5e26\u5bbd\u9700\u6c42\u3002\u5047\u8bbe\u4f7f\u7528\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8ba1\u7b97\u6bcf\u4e2a\u77e9\u9635-\u5411\u91cf\u4e58\u79ef\u9700\u8981\u7684\u5185\u5b58\u8bfb\u5199\u91cf\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p><strong>\u4f20\u7edf\u7a00\u758f\u77e9\u9635\u65b9\u6cd5</strong>\uff08CSR\u683c\u5f0f\uff09\uff1a</p>\n<ul>\n<li>\u8bfb\u53d6\uff1a7\u4e2a\u77e9\u9635\u503c + 7\u4e2a\u5217\u7d22\u5f15 + 2\u4e2a\u884c\u6307\u9488 + 7\u4e2a\u5411\u91cf\u5143\u7d20</li>\n<li>\u5199\u5165\uff1a1\u4e2a\u7ed3\u679c\u5143\u7d20</li>\n<li>\u603b\u8ba1\uff1a7\u00d78 + 7\u00d74 + 2\u00d74 + 7\u00d78 + 1\u00d78 = 156\u5b57\u8282/\u70b9</li>\n</ul>\n<p><strong>\u65e0\u77e9\u9635\u65b9\u6cd5</strong>\uff1a</p>\n<ul>\n<li>\u8bfb\u53d6\uff1a7\u4e2a\u5411\u91cf\u5143\u7d20</li>\n<li>\u5199\u5165\uff1a1\u4e2a\u7ed3\u679c\u5143\u7d20</li>\n<li>\u603b\u8ba1\uff1a7\u00d78 + 1\u00d78 = 64\u5b57\u8282/\u70b9</li>\n</ul>\n<p>\u5185\u5b58\u5e26\u5bbd\u51cf\u5c11\uff1a$\\frac{156-64}{156} \\approx 59\\%$</p>\n<p><strong>\u7b97\u672f\u5f3a\u5ea6\u6bd4\u8f83</strong>\uff1a</p>\n<ul>\n<li>\u4f20\u7edf\uff1aAI = 13 FLOPs / 156 bytes \u2248 0.083 FLOP/byte</li>\n<li>\u65e0\u77e9\u9635\uff1aAI = 13 FLOPs / 64 bytes \u2248 0.203 FLOP/byte</li>\n</ul>\n<p>\u65e0\u77e9\u9635\u65b9\u6cd5\u7684\u7b97\u672f\u5f3a\u5ea6\u63d0\u9ad8\u7ea62.4\u500d\uff0c\u66f4\u9002\u5408\u73b0\u4ee3\u5904\u7406\u5668\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e60 5.8</strong>\uff1aFFT\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\u7684\u8bef\u5dee\u5206\u6790\n\u4f7f\u7528FFT\u65b9\u6cd5\u6c42\u89e3\u5468\u671f\u8fb9\u754c\u7684\u4e8c\u7ef4\u6cca\u677e\u65b9\u7a0b\u65f6\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u7279\u6b8a\u5904\u7406 $k = 0$ \u6a21\u5f0f\uff1f\u8fd9\u5982\u4f55\u5f71\u54cd\u89e3\u7684\u552f\u4e00\u6027\uff1f</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u6cca\u677e\u65b9\u7a0b\u7684\u517c\u5bb9\u6027\u6761\u4ef6\u548c\u5468\u671f\u8fb9\u754c\u4e0b\u7684\u96f6\u7a7a\u95f4\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p><strong>\u6570\u5b66\u5206\u6790</strong>\uff1a</p>\n<p>\u6cca\u677e\u65b9\u7a0b\uff1a$\\nabla^2 u = f$</p>\n<p>Fourier\u53d8\u6362\u540e\uff1a$-k^2 \\hat{u}_k = \\hat{f}_k$</p>\n<p>\u5f53 $k = 0$ \u65f6\uff1a</p>\n<ul>\n<li>\u5de6\u8fb9\uff1a$-0^2 \\cdot \\hat{u}_0 = 0$</li>\n<li>\u53f3\u8fb9\uff1a$\\hat{f}_0 = \\int_\\Omega f dx$</li>\n</ul>\n<p><strong>\u517c\u5bb9\u6027\u6761\u4ef6</strong>\uff1a\n\u6709\u89e3\u7684\u5fc5\u8981\u6761\u4ef6\u662f $\\hat{f}_0 = 0$\uff0c\u5373\uff1a\n$$\\int_\\Omega f dx = 0$$</p>\n<p>\u8fd9\u5bf9\u5e94\u4e8e\u7269\u7406\u4e0a\u7684\u5b88\u6052\u6761\u4ef6\uff08\u5982\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u7684\u8d28\u91cf\u5b88\u6052\uff09\u3002</p>\n<p><strong>\u96f6\u7a7a\u95f4</strong>\uff1a\n$k = 0$ \u6a21\u5f0f\u5bf9\u5e94\u5e38\u6570\u51fd\u6570\uff0c\u662fLaplace\u7b97\u5b50\u5728\u5468\u671f\u8fb9\u754c\u4e0b\u7684\u96f6\u7a7a\u95f4\u3002</p>\n<p><strong>\u5904\u7406\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\u68c0\u67e5\u517c\u5bb9\u6027\uff1a\u9a8c\u8bc1 $\\sum_{ij} f_{ij} \\approx 0$</li>\n<li>\u8bbe\u7f6e $\\hat{u}_0 = 0$\uff1a\u56fa\u5b9a\u89e3\u7684\u5e73\u5747\u503c\u4e3a0</li>\n<li>\u6216\u8005\uff1a\u6dfb\u52a0\u7ea6\u675f $\\int u dx = c$</li>\n</ol>\n<p><strong>\u7269\u7406\u610f\u4e49</strong>\uff1a\n\u5728\u5468\u671f\u8fb9\u754c\u4e0b\uff0c\u6cca\u677e\u65b9\u7a0b\u53ea\u80fd\u786e\u5b9a\u52bf\u51fd\u6570\u7684\u68af\u5ea6\uff0c\u4e0d\u80fd\u786e\u5b9a\u7edd\u5bf9\u503c\u3002\u8fd9\u53cd\u6620\u4e86\u89c4\u8303\u4e0d\u53d8\u6027\u2014\u2014\u7269\u7406\u91cf\uff08\u5982\u901f\u5ea6\u3001\u7535\u573a\uff09\u53ea\u4f9d\u8d56\u4e8e\u52bf\u7684\u68af\u5ea6\u3002</p>\n</details>\n<h2 id=\"_5\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<ol>\n<li>\n<p><strong>\u96f6\u7a7a\u95f4\u5904\u7406\u4e0d\u5f53</strong>\uff1a\n   - \u9519\u8bef\uff1a\u76f4\u63a5\u6c42\u89e3\u5947\u5f02\u7cfb\u7edf\u5bfc\u81f4\u53d1\u6563\n   - \u6b63\u786e\uff1a\u6295\u5f71\u5230\u96f6\u7a7a\u95f4\u6b63\u4ea4\u8865\u6216\u56fa\u5b9a\u4e00\u70b9</p>\n</li>\n<li>\n<p><strong>\u9884\u6761\u4ef6\u5668\u9009\u62e9</strong>\uff1a\n   - \u9519\u8bef\uff1a\u5bf9\u6240\u6709\u95ee\u9898\u90fd\u7528Jacobi\u9884\u6761\u4ef6\n   - \u6b63\u786e\uff1a\u6839\u636e\u95ee\u9898\u7279\u6027\u9009\u62e9\u5408\u9002\u9884\u6761\u4ef6\u5668</p>\n</li>\n<li>\n<p><strong>\u591a\u91cd\u7f51\u683c\u7c97\u7f51\u683c</strong>\uff1a\n   - \u9519\u8bef\uff1a\u7c97\u7f51\u683c\u592a\u7c97\u5bfc\u81f4\u4e0d\u80fd\u8868\u793a\u4f4e\u9891\u8bef\u5dee\n   - \u6b63\u786e\uff1a\u4fdd\u8bc1\u7c97\u7f51\u683c\u4ecd\u80fd\u89e3\u6790\u95ee\u9898\u7684\u4e3b\u8981\u7279\u5f81</p>\n</li>\n<li>\n<p><strong>Krylov\u65b9\u6cd5\u6570\u503c\u7a33\u5b9a\u6027</strong>\uff1a\n   - \u9519\u8bef\uff1a\u5ffd\u89c6\u6b63\u4ea4\u6027\u635f\u5931\u5bfc\u81f4\u505c\u6ede\n   - \u6b63\u786e\uff1a\u4f7f\u7528\u91cd\u6b63\u4ea4\u5316\u6216\u66f4\u7a33\u5b9a\u7684\u53d8\u79cd</p>\n</li>\n<li>\n<p><strong>\u65e0\u77e9\u9635\u65b9\u6cd5\u7684\u8fb9\u754c\u5904\u7406</strong>\uff1a\n   - \u9519\u8bef\uff1a\u786c\u7f16\u7801\u8fb9\u754c\u6761\u4ef6\u5bfc\u81f4\u4e0d\u7075\u6d3b\n   - \u6b63\u786e\uff1a\u8bbe\u8ba1\u901a\u7528\u7684\u8fb9\u754c\u5904\u7406\u6846\u67b6</p>\n</li>\n</ol>\n<h2 id=\"_6\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_7\">\u6c42\u89e3\u5668\u9009\u62e9</h3>\n<ul>\n<li>[ ] \u77e9\u9635\u662f\u5426\u5bf9\u79f0\u6b63\u5b9a\uff1f\u2192 \u4f7f\u7528CG</li>\n<li>[ ] \u77e9\u9635\u662f\u5426\u975e\u5bf9\u79f0\uff1f\u2192 \u4f7f\u7528BiCGSTAB\u6216GMRES</li>\n<li>[ ] \u95ee\u9898\u89c4\u6a21\u662f\u5426\u5f88\u5927\uff1f\u2192 \u8003\u8651\u591a\u91cd\u7f51\u683c</li>\n<li>[ ] \u662f\u5426\u6709\u597d\u7684\u9884\u6761\u4ef6\u5668\uff1f\u2192 \u4f7f\u7528\u9884\u6761\u4ef6Krylov\u65b9\u6cd5</li>\n<li>[ ] \u5185\u5b58\u662f\u5426\u53d7\u9650\uff1f\u2192 \u4f7f\u7528\u65e0\u77e9\u9635\u65b9\u6cd5</li>\n</ul>\n<h3 id=\"_8\">\u6027\u80fd\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u662f\u5426\u5206\u6790\u4e86\u77e9\u9635\u7684\u7a00\u758f\u6a21\u5f0f\uff1f</li>\n<li>[ ] \u662f\u5426\u6d4b\u8bd5\u4e86\u4e0d\u540c\u7684\u9884\u6761\u4ef6\u5668\uff1f</li>\n<li>[ ] \u662f\u5426\u4f18\u5316\u4e86\u77e9\u9635-\u5411\u91cf\u4e58\u79ef\uff1f</li>\n<li>[ ] \u662f\u5426\u8003\u8651\u4e86\u5e76\u884c\u5316\uff1f</li>\n<li>[ ] \u662f\u5426\u5229\u7528\u4e86\u95ee\u9898\u7684\u7279\u6b8a\u7ed3\u6784\uff1f</li>\n</ul>\n<h3 id=\"_9\">\u6570\u503c\u7a33\u5b9a\u6027</h3>\n<ul>\n<li>[ ] \u662f\u5426\u5904\u7406\u4e86\u96f6\u7a7a\u95f4\uff1f</li>\n<li>[ ] \u662f\u5426\u8bbe\u7f6e\u4e86\u5408\u7406\u7684\u6536\u655b\u51c6\u5219\uff1f</li>\n<li>[ ] \u662f\u5426\u76d1\u63a7\u4e86\u8fed\u4ee3\u5386\u53f2\uff1f</li>\n<li>[ ] \u662f\u5426\u6709\u5907\u7528\u6c42\u89e3\u7b56\u7565\uff1f</li>\n<li>[ ] \u662f\u5426\u9a8c\u8bc1\u4e86\u89e3\u7684\u6b63\u786e\u6027\uff1f</li>\n</ul>"
  },
  "../chapter1.md": {
    "hash": "6db5f0cd0619d01ad5ec82208020389d",
    "content": "<h1 id=\"_1\">\u7b2c\u4e00\u7ae0\uff1a\u5bfc\u8bba</h1>\n<p>\u672c\u7ae0\u5c06\u4e3a\u8bfb\u8005\u5efa\u7acb\u7269\u7406\u4eff\u771f\u7684\u57fa\u7840\u77e5\u8bc6\u6846\u67b6\uff0c\u5e76\u6df1\u5165\u4ecb\u7ecdTaichi\u7f16\u7a0b\u8bed\u8a00\u7684\u6838\u5fc3\u7279\u6027\u3002\u6211\u4eec\u5c06\u4ece\u7269\u7406\u5f15\u64ce\u7684\u57fa\u672c\u6982\u5ff5\u51fa\u53d1\uff0c\u9010\u6b65\u6df1\u5165\u5230\u9ad8\u6027\u80fd\u5e76\u884c\u8ba1\u7b97\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u901a\u8fc7\u672c\u7ae0\u5b66\u4e60\uff0c\u8bfb\u8005\u5c06\u638c\u63e1\u4f7f\u7528Taichi\u8fdb\u884c\u7269\u7406\u4eff\u771f\u5f00\u53d1\u6240\u9700\u7684\u5168\u90e8\u57fa\u7840\u77e5\u8bc6\u3002</p>\n<h2 id=\"11\">1.1 \u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b\u7b80\u4ecb</h2>\n<h3 id=\"111\">1.1.1 \u7269\u7406\u5f15\u64ce\u7684\u5b9a\u4e49\u4e0e\u5e94\u7528\u9886\u57df</h3>\n<p>\u7269\u7406\u5f15\u64ce\u662f\u4e00\u7c7b\u4e13\u95e8\u7528\u4e8e\u6a21\u62df\u7269\u7406\u7cfb\u7edf\u884c\u4e3a\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\u3002\u5b83\u901a\u8fc7\u6570\u503c\u65b9\u6cd5\u6c42\u89e3\u7269\u7406\u65b9\u7a0b\uff0c\u4e3a\u865a\u62df\u4e16\u754c\u4e2d\u7684\u7269\u4f53\u63d0\u4f9b\u903c\u771f\u7684\u8fd0\u52a8\u548c\u4ea4\u4e92\u6548\u679c\u3002\u73b0\u4ee3\u7269\u7406\u5f15\u64ce\u901a\u5e38\u5305\u542b\u4e09\u5927\u6838\u5fc3\u7ec4\u4ef6\uff1a</p>\n<ol>\n<li><strong>\u521a\u4f53\u52a8\u529b\u5b66</strong>\uff1a\u6a21\u62df\u4e0d\u53ef\u53d8\u5f62\u7269\u4f53\u7684\u8fd0\u52a8\uff0c\u5904\u7406\u78b0\u649e\u68c0\u6d4b\u4e0e\u54cd\u5e94</li>\n<li><strong>\u8f6f\u4f53\u52a8\u529b\u5b66</strong>\uff1a\u6a21\u62df\u53ef\u53d8\u5f62\u7269\u4f53\u5982\u5e03\u6599\u3001\u6a61\u80f6\u3001\u808c\u8089\u7b49\u7684\u5f62\u53d8\u884c\u4e3a  </li>\n<li><strong>\u6d41\u4f53\u52a8\u529b\u5b66</strong>\uff1a\u6a21\u62df\u6db2\u4f53\u548c\u6c14\u4f53\u7684\u6d41\u52a8\uff0c\u5305\u62ec\u6c34\u6ce2\u3001\u70df\u96fe\u7b49\u6548\u679c</li>\n</ol>\n<p>\u7269\u7406\u5f15\u64ce\u7684\u5e94\u7528\u9886\u57df\u6781\u5176\u5e7f\u6cdb\uff1a</p>\n<ul>\n<li><strong>\u6e38\u620f\u4ea7\u4e1a</strong>\uff1a\u4ece\u7b80\u5355\u7684\u300a\u6124\u6012\u7684\u5c0f\u9e1f\u300b\u5230\u590d\u6742\u7684\u300a\u56f4\u653b\u300b(Besiege)\uff0c\u7269\u7406\u5f15\u64ce\u8ba9\u6e38\u620f\u4e16\u754c\u66f4\u52a0\u771f\u5b9e</li>\n<li><strong>\u5f71\u89c6\u7279\u6548</strong>\uff1a\u8fea\u58eb\u5c3c\u3001\u76ae\u514b\u65af\u7b49\u9876\u7ea7\u52a8\u753b\u5de5\u4f5c\u5ba4\u4f9d\u8d56\u7269\u7406\u4eff\u771f\u521b\u9020\u9707\u64bc\u89c6\u89c9\u6548\u679c</li>\n<li><strong>\u5de5\u7a0b\u4eff\u771f</strong>\uff1a\u6c7d\u8f66\u78b0\u649e\u6d4b\u8bd5\u3001\u5efa\u7b51\u7ed3\u6784\u5206\u6790\u3001\u6d41\u4f53\u673a\u68b0\u8bbe\u8ba1\u7b49</li>\n<li><strong>\u865a\u62df\u73b0\u5b9e</strong>\uff1a\u63d0\u4f9b\u771f\u5b9e\u7684\u89e6\u89c9\u53cd\u9988\u548c\u7269\u7406\u4ea4\u4e92\u4f53\u9a8c</li>\n<li><strong>\u673a\u5668\u4eba\u5b66</strong>\uff1a\u8bad\u7ec3\u548c\u9a8c\u8bc1\u673a\u5668\u4eba\u63a7\u5236\u7b97\u6cd5\u7684\u865a\u62df\u73af\u5883</li>\n</ul>\n<h3 id=\"112\">1.1.2 \u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u7684\u7269\u7406\u4eff\u771f</h3>\n<p>\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u53d1\u5c55\u5386\u7a0b\u4e2d\uff0c\u7269\u7406\u4eff\u771f\u626e\u6f14\u7740\u8d8a\u6765\u8d8a\u91cd\u8981\u7684\u89d2\u8272\u3002\u65e9\u671f\u7684\u52a8\u753b\u5b8c\u5168\u4f9d\u8d56\u827a\u672f\u5bb6\u624b\u5de5\u5173\u952e\u5e27\uff0c\u800c\u73b0\u4ee3\u5236\u4f5c\u6d41\u7a0b\u5df2\u7ecf\u6df1\u5ea6\u96c6\u6210\u4e86\u7269\u7406\u4eff\u771f\u6280\u672f\uff1a</p>\n<p><strong>\u4f20\u7edf\u52a8\u753b vs \u7269\u7406\u52a8\u753b</strong>\uff1a</p>\n<ul>\n<li>\u4f20\u7edf\u52a8\u753b\uff1a\u827a\u672f\u5bb6\u63a7\u5236\u6bcf\u4e00\u5e27\uff0c\u7075\u6d3b\u4f46\u8017\u65f6</li>\n<li>\u7269\u7406\u52a8\u753b\uff1a\u5b9a\u4e49\u521d\u59cb\u6761\u4ef6\u548c\u7269\u7406\u53c2\u6570\uff0c\u81ea\u52a8\u751f\u6210\u903c\u771f\u8fd0\u52a8</li>\n</ul>\n<p><strong>\u91cc\u7a0b\u7891\u4f5c\u54c1</strong>\uff1a</p>\n<ul>\n<li>1997\u5e74\u300a\u6cf0\u5766\u5c3c\u514b\u53f7\u300b\uff1a\u5927\u89c4\u6a21\u521a\u4f53\u7834\u788e\u548c\u6d41\u4f53\u4eff\u771f</li>\n<li>2013\u5e74\u300a\u51b0\u96ea\u5947\u7f18\u300b\uff1a\u57fa\u4e8e\u7269\u8d28\u70b9\u6cd5(MPM)\u7684\u96ea\u666f\u4eff\u771f</li>\n<li>2016\u5e74\u300a\u6d77\u6d0b\u5947\u7f18\u300b\uff1a\u9ad8\u5ea6\u903c\u771f\u7684\u6c34\u4f53\u548c\u5934\u53d1\u4eff\u771f</li>\n</ul>\n<p><strong>\u6280\u672f\u6f14\u8fdb</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mi\">1980</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7b80\u5355\u7c92\u5b50\u7cfb\u7edf</span>\n<span class=\"mi\">1990</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u521a\u4f53\u52a8\u529b\u5b66\u6210\u719f</span>\n<span class=\"mi\">2000</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u6d41\u4f53\u4eff\u771f\u7a81\u7834\uff08</span><span class=\"n\">SPH</span><span class=\"err\">\u3001</span><span class=\"n\">FLIP</span><span class=\"err\">\uff09</span>\n<span class=\"mi\">2010</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7edf\u4e00\u4eff\u771f\u6846\u67b6\uff08</span><span class=\"n\">MPM</span><span class=\"err\">\uff09</span>\n<span class=\"mi\">2020</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u673a\u5668\u5b66\u4e60\u589e\u5f3a\u3001\u5b9e\u65f6\u5149\u7ebf\u8ffd\u8e2a\u7269\u7406</span>\n</code></pre></div>\n\n<h3 id=\"113-cae\">1.1.3 \u5de5\u7a0bCAE\u4e0e\u6e38\u620f\u7269\u7406\u7684\u5dee\u5f02</h3>\n<p>\u867d\u7136\u90fd\u662f\u7269\u7406\u4eff\u771f\uff0c\u4f46\u5de5\u7a0b\u8ba1\u7b97\u673a\u8f85\u52a9\u5de5\u7a0b(CAE)\u4e0e\u6e38\u620f\u7269\u7406\u5728\u8bbe\u8ba1\u7406\u5ff5\u4e0a\u5b58\u5728\u672c\u8d28\u5dee\u5f02\uff1a</p>\n<p>| \u7279\u6027 | \u5de5\u7a0bCAE | \u6e38\u620f\u7269\u7406 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7279\u6027</th>\n<th>\u5de5\u7a0bCAE</th>\n<th>\u6e38\u620f\u7269\u7406</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>\u7cbe\u5ea6\u8981\u6c42</strong></td>\n<td>\u8bef\u5dee &lt; 1%\uff0c\u9700\u8981\u9a8c\u8bc1</td>\n<td>\u89c6\u89c9\u5408\u7406\u5373\u53ef</td>\n</tr>\n<tr>\n<td><strong>\u5b9e\u65f6\u6027</strong></td>\n<td>\u53ef\u4ee5\u79bb\u7ebf\u8ba1\u7b97\u6570\u5c0f\u65f6</td>\n<td>\u5fc5\u987b 60 FPS</td>\n</tr>\n<tr>\n<td><strong>\u7a33\u5b9a\u6027</strong></td>\n<td>\u7edd\u5bf9\u7a33\u5b9a\uff0c\u4e0d\u5141\u8bb8\u5d29\u6e83</td>\n<td>\u5076\u5c14\u7a7f\u6a21\u53ef\u63a5\u53d7</td>\n</tr>\n<tr>\n<td><strong>\u590d\u6742\u5ea6</strong></td>\n<td>\u767e\u4e07\u7ea7\u81ea\u7531\u5ea6</td>\n<td>\u5343\u7ea7\u81ea\u7531\u5ea6</td>\n</tr>\n<tr>\n<td><strong>\u7269\u7406\u771f\u5b9e\u6027</strong></td>\n<td>\u4e25\u683c\u9075\u5faa\u7269\u7406\u5b9a\u5f8b</td>\n<td>\u53ef\u4ee5\u4f5c\u5f0a\u63d0\u5347\u4f53\u9a8c</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u5de5\u7a0bCAE\u7684\u5178\u578b\u6d41\u7a0b</strong>\uff1a</p>\n<ol>\n<li>\u51e0\u4f55\u5efa\u6a21\uff08CAD\uff09</li>\n<li>\u7f51\u683c\u751f\u6210\uff08\u516d\u9762\u4f53/\u56db\u9762\u4f53\uff09</li>\n<li>\u8fb9\u754c\u6761\u4ef6\u8bbe\u7f6e</li>\n<li>\u6c42\u89e3\u5668\u8ba1\u7b97\uff08\u53ef\u80fd\u9700\u8981\u6570\u5c0f\u65f6\uff09</li>\n<li>\u540e\u5904\u7406\u53ef\u89c6\u5316</li>\n</ol>\n<p><strong>\u6e38\u620f\u7269\u7406\u7684\u8bbe\u8ba1\u539f\u5219</strong>\uff1a</p>\n<ol>\n<li>\u6027\u80fd\u4f18\u5148\uff1a\u5b81\u53ef\u727a\u7272\u7cbe\u5ea6\u4e5f\u8981\u4fdd\u8bc1\u5e27\u7387</li>\n<li>\u9c81\u68d2\u6027\uff1a\u5904\u7406\u5404\u79cd\u6781\u7aef\u60c5\u51b5\u4e0d\u5d29\u6e83</li>\n<li>\u53ef\u63a7\u6027\uff1a\u827a\u672f\u5bb6/\u8bbe\u8ba1\u5e08\u53ef\u4ee5\u8c03\u6574\u53c2\u6570</li>\n<li>\u786e\u5b9a\u6027\uff1a\u76f8\u540c\u8f93\u5165\u4ea7\u751f\u76f8\u540c\u7ed3\u679c\uff08\u91cd\u8981\u4e8e\u7f51\u7edc\u540c\u6b65\uff09</li>\n</ol>\n<h3 id=\"114\">1.1.4 \u5b9e\u65f6\u6027\u4e0e\u7cbe\u786e\u6027\u7684\u6743\u8861</h3>\n<p>\u5728\u7269\u7406\u4eff\u771f\u4e2d\uff0c\u5b9e\u65f6\u6027\u548c\u7cbe\u786e\u6027\u5f80\u5f80\u4e0d\u53ef\u517c\u5f97\u3002\u7406\u89e3\u8fd9\u79cd\u6743\u8861\u5bf9\u4e8e\u9009\u62e9\u5408\u9002\u7684\u7b97\u6cd5\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u65f6\u95f4\u6b65\u957f\u7684\u9009\u62e9</strong>\uff1a</p>\n<ul>\n<li>\u663e\u5f0f\u79ef\u5206\u5668\u7684\u7a33\u5b9a\u6027\u6761\u4ef6\uff1a$\\Delta t \\leq c\\sqrt{\\frac{m}{k}}$</li>\n<li>\u9690\u5f0f\u79ef\u5206\u5668\uff1a\u65e0\u6761\u4ef6\u7a33\u5b9a\u4f46\u6bcf\u6b65\u8ba1\u7b97\u91cf\u5927</li>\n<li>\u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f\uff1a\u6839\u636e\u573a\u666f\u52a8\u6001\u8c03\u6574</li>\n</ul>\n<p><strong>\u6a21\u578b\u7b80\u5316\u6280\u672f</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u51e0\u4f55\u7b80\u5316</strong>\uff1a\n   - \u78b0\u649e\u7528\u7b80\u5316\u51f8\u5305\u4ee3\u66ff\u590d\u6742\u7f51\u683c\n   - LOD (Level of Detail) \u6839\u636e\u8ddd\u79bb\u5207\u6362\u7cbe\u5ea6</p>\n</li>\n<li>\n<p><strong>\u7269\u7406\u7b80\u5316</strong>\uff1a\n   - \u521a\u4f53\u8fd1\u4f3c\uff1a\u5ffd\u7565\u5c0f\u53d8\u5f62\n   - \u8d28\u70b9\u8fd1\u4f3c\uff1a\u8fdc\u8ddd\u79bb\u7269\u4f53\u89c6\u4e3a\u8d28\u70b9\n   - \u7ef4\u5ea6\u964d\u4f4e\uff1a3D\u5e03\u6599\u75282D\u58f3\u4f53\u6a21\u62df</p>\n</li>\n<li>\n<p><strong>\u6570\u503c\u7b80\u5316</strong>\uff1a\n   - \u4f4e\u9636\u79ef\u5206\u683c\u5f0f\n   - \u7a00\u758f\u66f4\u65b0\uff08\u53ea\u66f4\u65b0\u6d3b\u8dc3\u533a\u57df\uff09\n   - \u9884\u8ba1\u7b97\u67e5\u627e\u8868</p>\n</li>\n</ol>\n<p><strong>\u6027\u80fd\u4f18\u5316\u5c42\u6b21</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">\u7b97\u6cd5\u7ea7</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"o\">(</span><span class=\"n\">n\u00b2</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"n\">log</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">)</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">O</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"err\">\u5e76\u884c\u7ea7</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">CPU\u591a\u7ebf\u7a0b</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"n\">GPU\u5927\u89c4\u6a21\u5e76\u884c</span>\n<span class=\"err\">\u8fd1\u4f3c\u7ea7</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"err\">\u7cbe\u786e\u89e3</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"err\">\u6570\u503c\u89e3</span><span class=\"w\"> </span><span class=\"err\">\u2192</span><span class=\"w\"> </span><span class=\"err\">\u542f\u53d1\u5f0f\u89e3</span>\n</code></pre></div>\n\n<h2 id=\"12-taichi\">1.2 Taichi\u7f16\u7a0b\u8bed\u8a00\u7b80\u4ecb</h2>\n<h3 id=\"121\">1.2.1 \u5b89\u88c5\u4e0e\u73af\u5883\u914d\u7f6e</h3>\n<p>Taichi\u662f\u4e00\u4e2a\u4e13\u4e3a\u9ad8\u6027\u80fd\u6570\u503c\u8ba1\u7b97\u8bbe\u8ba1\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u7279\u522b\u9002\u5408\u7269\u7406\u4eff\u771f\u3002\u5176\u6700\u5927\u7279\u70b9\u662f\u5c06Python\u7684\u6613\u7528\u6027\u4e0eC++\u7684\u6027\u80fd\u5b8c\u7f8e\u7ed3\u5408\u3002</p>\n<p><strong>\u5b89\u88c5\u65b9\u5f0f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u63a8\u8350\u4f7f\u7528pip\u5b89\u88c5</span>\npip<span class=\"w\"> </span>install<span class=\"w\"> </span>taichi\n\n<span class=\"c1\"># \u5bf9\u4e8e\u5f00\u53d1\u7248\u672c</span>\npip<span class=\"w\"> </span>install<span class=\"w\"> </span>taichi-nightly\n\n<span class=\"c1\"># \u9a8c\u8bc1\u5b89\u88c5</span>\npython<span class=\"w\"> </span>-c<span class=\"w\"> </span><span class=\"s2\">&quot;import taichi as ti; ti.init(); print(ti.__version__)&quot;</span>\n</code></pre></div>\n\n<p><strong>\u652f\u6301\u5e73\u53f0</strong>\uff1a</p>\n<ul>\n<li>\u64cd\u4f5c\u7cfb\u7edf\uff1aWindows\u3001Linux\u3001macOS</li>\n<li>Python\u7248\u672c\uff1a3.6-3.10</li>\n<li>\u540e\u7aef\u652f\u6301\uff1a</li>\n<li>CPU\uff1ax64\u3001ARM64</li>\n<li>GPU\uff1aCUDA\uff08NVIDIA\uff09\u3001Vulkan\uff08\u8de8\u5e73\u53f0\uff09\u3001Metal\uff08Apple\uff09</li>\n<li>WebGPU\uff1a\u6d4f\u89c8\u5668\u7aef\u8fd0\u884c</li>\n</ul>\n<p><strong>\u521d\u59cb\u5316\u914d\u7f6e</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">taichi</span> <span class=\"k\">as</span> <span class=\"nn\">ti</span>\n\n<span class=\"c1\"># \u57fa\u672c\u521d\u59cb\u5316</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">)</span>  <span class=\"c1\"># \u9009\u62e9CUDA\u540e\u7aef</span>\n\n<span class=\"c1\"># \u9ad8\u7ea7\u914d\u7f6e</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span>\n    <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">gpu</span><span class=\"p\">,</span>           <span class=\"c1\"># \u81ea\u52a8\u9009\u62e9\u53ef\u7528GPU</span>\n    <span class=\"n\">device_memory_GB</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>    <span class=\"c1\"># \u9650\u5236GPU\u5185\u5b58\u4f7f\u7528</span>\n    <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>            <span class=\"c1\"># \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f</span>\n    <span class=\"n\">print_ir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>         <span class=\"c1\"># \u6253\u5370\u4e2d\u95f4\u8868\u793a</span>\n    <span class=\"n\">random_seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>         <span class=\"c1\"># \u56fa\u5b9a\u968f\u673a\u79cd\u5b50</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"122\">1.2.2 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0e\u5f20\u91cf\u64cd\u4f5c</h3>\n<p>Taichi\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b\u548c\u5f20\u91cf\u64cd\u4f5c\uff0c\u4e13\u95e8\u9488\u5bf9\u79d1\u5b66\u8ba1\u7b97\u4f18\u5316\uff1a</p>\n<p><strong>\u57fa\u672c\u6570\u636e\u7c7b\u578b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6807\u91cf\u7c7b\u578b</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i64</span>    <span class=\"c1\"># 32/64\u4f4d\u6574\u6570</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f64</span>    <span class=\"c1\"># 32/64\u4f4d\u6d6e\u70b9\u6570</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">u8</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">u16</span>     <span class=\"c1\"># \u65e0\u7b26\u53f7\u6574\u6570</span>\n\n<span class=\"c1\"># \u7c7b\u578b\u63a8\u65ad</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5f20\u91cf\uff08Tensor\uff09\u5b9a\u4e49</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6807\u91cf\u573a</span>\n<span class=\"n\">temperature</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># \u5411\u91cf\u573a</span>\n<span class=\"n\">velocity</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># \u77e9\u9635\u573a</span>\n<span class=\"n\">stress</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># \u52a8\u6001\u5f62\u72b6\uff08\u9ad8\u7ea7\u7528\u6cd5\uff09</span>\n<span class=\"n\">particles</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">dynamic</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">particles</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5f20\u91cf\u64cd\u4f5c</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">tensor_operations</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u5411\u91cf\u8fd0\u7b97</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"mf\">6.0</span><span class=\"p\">])</span>\n\n    <span class=\"n\">dot_product</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>              <span class=\"c1\"># \u70b9\u79ef: 32.0</span>\n    <span class=\"n\">cross_product</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">cross</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>          <span class=\"c1\"># \u53c9\u79ef: [-3, 6, -3]</span>\n    <span class=\"n\">norm</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">()</span>                     <span class=\"c1\"># \u8303\u6570: sqrt(14)</span>\n    <span class=\"n\">normalized</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">normalized</span><span class=\"p\">()</span>         <span class=\"c1\"># \u5355\u4f4d\u5411\u91cf</span>\n\n    <span class=\"c1\"># \u77e9\u9635\u8fd0\u7b97</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n    <span class=\"n\">M_inv</span> <span class=\"o\">=</span> <span class=\"n\">M</span><span class=\"o\">.</span><span class=\"n\">inverse</span><span class=\"p\">()</span>                 <span class=\"c1\"># \u9006\u77e9\u9635</span>\n    <span class=\"n\">M_T</span> <span class=\"o\">=</span> <span class=\"n\">M</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>                 <span class=\"c1\"># \u8f6c\u7f6e</span>\n    <span class=\"n\">det</span> <span class=\"o\">=</span> <span class=\"n\">M</span><span class=\"o\">.</span><span class=\"n\">determinant</span><span class=\"p\">()</span>               <span class=\"c1\"># \u884c\u5217\u5f0f: -2</span>\n\n    <span class=\"c1\"># \u7279\u6b8a\u77e9\u9635</span>\n    <span class=\"n\">I</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"o\">.</span><span class=\"n\">identity</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>   <span class=\"c1\"># 3x3\u5355\u4f4d\u77e9\u9635</span>\n    <span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"o\">.</span><span class=\"n\">zero</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>   <span class=\"c1\"># 2x3\u96f6\u77e9\u9635</span>\n</code></pre></div>\n\n<h3 id=\"123-kernelfunc\">1.2.3 \u6838\u51fd\u6570(kernel)\u4e0e\u51fd\u6570(func)</h3>\n<p>Taichi\u7684\u8ba1\u7b97\u6838\u5fc3\u662fkernel\u548cfunc\uff0c\u5b83\u4eec\u5b9a\u4e49\u4e86\u53ef\u4ee5\u5728GPU\u4e0a\u9ad8\u6548\u6267\u884c\u7684\u8ba1\u7b97\uff1a</p>\n<p><strong>Kernel\u51fd\u6570</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">add_one</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n    <span class=\"c1\"># Kernel\u662fTaichi\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">field</span><span class=\"p\">:</span>\n        <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mf\">1.0</span>\n\n<span class=\"c1\"># Kernel\u53ef\u4ee5\u6709\u8fd4\u56de\u503c</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum_field</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">())</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">:</span>\n    <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">field</span><span class=\"p\">:</span>\n        <span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">total</span>\n</code></pre></div>\n\n<p><strong>Func\u51fd\u6570</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">complex_calculation</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Func\u53ea\u80fd\u88abKernel\u6216\u5176\u4ed6Func\u8c03\u7528</span>\n    <span class=\"c1\"># \u4f1a\u88ab\u5f3a\u5236\u5185\u8054\uff0c\u65e0\u51fd\u6570\u8c03\u7528\u5f00\u9500</span>\n    <span class=\"k\">return</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span> <span class=\"o\">*</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">use_func</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">field</span><span class=\"p\">:</span>\n        <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">complex_calculation</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u7c7b\u578b\u63d0\u793a\u4e0e\u6a21\u677f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4e25\u683c\u7c7b\u578b\u63d0\u793a</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">typed_kernel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">ndim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n        <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"mf\">2.0</span>\n\n<span class=\"c1\"># \u6a21\u677f\u53c2\u6570</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">generic_kernel</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">scalar</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">):</span>\n        <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"n\">scalar</span>\n</code></pre></div>\n\n<p><strong>\u7f16\u8bd1\u65f6\u4f18\u5316</strong>\uff1a</p>\n<ul>\n<li>\u5e38\u91cf\u6298\u53e0\uff1a\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5e38\u91cf\u8868\u8fbe\u5f0f</li>\n<li>\u6b7b\u4ee3\u7801\u6d88\u9664\uff1a\u79fb\u9664\u4e0d\u53ef\u8fbe\u4ee3\u7801</li>\n<li>\u5faa\u73af\u5c55\u5f00\uff1a\u5c0f\u5faa\u73af\u81ea\u52a8\u5c55\u5f00</li>\n<li>\u5411\u91cf\u5316\uff1a\u81ea\u52a8SIMD\u6307\u4ee4\u751f\u6210</li>\n</ul>\n<h3 id=\"124-for\">1.2.4 \u5e76\u884cfor\u5faa\u73af\u4e0e\u539f\u5b50\u64cd\u4f5c</h3>\n<p>Taichi\u7684\u4e00\u4e2a\u6838\u5fc3\u7279\u6027\u662f\u81ea\u52a8\u5e76\u884c\u5316\uff0c\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5199\u4e32\u884c\u4ee3\u7801\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5e76\u884c\u6267\u884c\uff1a</p>\n<p><strong>\u5e76\u884cFor\u5faa\u73af</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">parallel_computation</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u8fd9\u4e2a\u5faa\u73af\u4f1a\u81ea\u52a8\u5e76\u884c\u6267\u884c</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6bcf\u4e2a\u8fed\u4ee3\u72ec\u7acb\uff0c\u65e0\u6570\u636e\u7ade\u4e89</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u591a\u7ef4\u5e76\u884c\u5faa\u73af</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">):</span>\n        <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">j</span>\n</code></pre></div>\n\n<p><strong>\u539f\u5b50\u64cd\u4f5c</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span> \n<span class=\"k\">def</span> <span class=\"nf\">atomic_operations</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u5904\u7406\u5e76\u53d1\u5199\u5165\u51b2\u7a81</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u539f\u5b50\u52a0\u6cd5\uff0c\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u539f\u5b50\u6700\u5927\u503c</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_max</span><span class=\"p\">(</span><span class=\"n\">max_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u539f\u5b50\u4ea4\u6362</span>\n        <span class=\"n\">old</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_sub</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u590d\u5408\u539f\u5b50\u64cd\u4f5c</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u81ea\u52a8\u8bc6\u522b\u5e76\u8f6c\u6362\u4e3a\u539f\u5b50\u64cd\u4f5c</span>\n        <span class=\"n\">histogram</span><span class=\"p\">[</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]]</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n</code></pre></div>\n\n<p><strong>\u7ade\u6001\u6761\u4ef6\u7684\u907f\u514d</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9519\u8bef\u793a\u4f8b - \u6709\u7ade\u6001\u6761\u4ef6</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">race_condition</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u591a\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u540c\u65f6\u8bfb\u5199</span>\n        <span class=\"n\">shared_sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">shared_sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">i</span>  <span class=\"c1\"># \u5371\u9669\uff01</span>\n\n<span class=\"c1\"># \u6b63\u786e\u793a\u4f8b - \u4f7f\u7528\u539f\u5b50\u64cd\u4f5c</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span> \n<span class=\"k\">def</span> <span class=\"nf\">no_race_condition</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"n\">shared_sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">)</span>  <span class=\"c1\"># \u5b89\u5168</span>\n</code></pre></div>\n\n<p><strong>\u6027\u80fd\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>\u539f\u5b50\u64cd\u4f5c\u6bd4\u666e\u901a\u64cd\u4f5c\u616210-100\u500d</li>\n<li>\u5c3d\u91cf\u51cf\u5c11\u539f\u5b50\u64cd\u4f5c\u7684\u4f7f\u7528</li>\n<li>\u8003\u8651\u4f7f\u7528\u5f52\u7ea6(reduction)\u6a21\u5f0f</li>\n<li>\u5408\u7406\u7684\u6570\u636e\u5e03\u5c40\u53ef\u4ee5\u907f\u514d\u51b2\u7a81</li>\n</ul>\n<h2 id=\"13-taichi\">1.3 Taichi\u7684\u81ea\u52a8\u5e76\u884c\u5316</h2>\n<h3 id=\"131\">1.3.1 \u5e76\u884c\u8ba1\u7b97\u57fa\u7840\u6982\u5ff5</h3>\n<p>\u7406\u89e3Taichi\u7684\u81ea\u52a8\u5e76\u884c\u5316\u673a\u5236\uff0c\u9996\u5148\u9700\u8981\u638c\u63e1\u5e76\u884c\u8ba1\u7b97\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p>\n<p><strong>\u5e76\u884c\u8ba1\u7b97\u6a21\u578b</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6570\u636e\u5e76\u884c(Data Parallelism)</strong>\uff1a\n   - \u76f8\u540c\u64cd\u4f5c\u5e94\u7528\u4e8e\u4e0d\u540c\u6570\u636e\n   - SIMD (Single Instruction Multiple Data)\n   - \u9002\u5408\u89c4\u5219\u7684\u6570\u7ec4\u8fd0\u7b97</p>\n</li>\n<li>\n<p><strong>\u4efb\u52a1\u5e76\u884c(Task Parallelism)</strong>\uff1a\n   - \u4e0d\u540c\u4efb\u52a1\u540c\u65f6\u6267\u884c\n   - MIMD (Multiple Instruction Multiple Data)\n   - \u9002\u5408\u5f02\u6784\u8ba1\u7b97\u4efb\u52a1</p>\n</li>\n</ol>\n<p><strong>GPU\u6267\u884c\u6a21\u578b(SIMT)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>GPU\u6267\u884c\u5c42\u6b21\uff1a\nGrid\n\u251c\u2500\u2500 Block (0,0)\n\u2502   \u251c\u2500\u2500 Warp 0 (32 threads)\n\u2502   \u251c\u2500\u2500 Warp 1 (32 threads)\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 Block (0,1)\n\u2514\u2500\u2500 ...\n</code></pre></div>\n\n<p><strong>\u5e76\u884c\u7c92\u5ea6</strong>\uff1a</p>\n<ul>\n<li>\u7ec6\u7c92\u5ea6\uff1a\u6bcf\u4e2a\u6570\u636e\u5143\u7d20\u4e00\u4e2a\u7ebf\u7a0b</li>\n<li>\u4e2d\u7c92\u5ea6\uff1a\u6570\u636e\u5757\u7ea7\u522b\u5e76\u884c</li>\n<li>\u7c97\u7c92\u5ea6\uff1a\u4efb\u52a1\u7ea7\u522b\u5e76\u884c</li>\n</ul>\n<p>Taichi\u91c7\u7528\u7ec6\u7c92\u5ea6\u6570\u636e\u5e76\u884c\uff0c\u81ea\u52a8\u5c06\u5faa\u73af\u6620\u5c04\u5230GPU\u7ebf\u7a0b\u3002</p>\n<h3 id=\"132-range-forstruct-for\">1.3.2 Range-for\u4e0eStruct-for\u5faa\u73af</h3>\n<p>Taichi\u63d0\u4f9b\u4e24\u79cd\u4e3b\u8981\u7684\u5e76\u884c\u5faa\u73af\u7ed3\u6784\uff1a</p>\n<p><strong>Range-for\u5faa\u73af</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">range_for_examples</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u4e00\u7ef4\u5faa\u73af</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">i</span>\n\n    <span class=\"c1\"># \u591a\u7ef4\u5faa\u73af - \u4f7f\u7528ti.ndrange</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">):</span>\n        <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">j</span>\n\n    <span class=\"c1\"># \u5e26\u6b65\u957f\u7684\u5faa\u73af</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"n\">even_array</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">//</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n\n    <span class=\"c1\"># \u5d4c\u5957\u5faa\u73af\u4f18\u5316</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u5faa\u73af\u987a\u5e8f\u4ee5\u63d0\u9ad8\u7f13\u5b58\u5c40\u90e8\u6027</span>\n        <span class=\"n\">volume</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">j</span> <span class=\"o\">+</span> <span class=\"n\">k</span>\n</code></pre></div>\n\n<p><strong>Struct-for\u5faa\u73af</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7a00\u758f\u6570\u636e\u7ed3\u6784\u5b9a\u4e49</span>\n<span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">pointer</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ij</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n<span class=\"n\">pixel</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ij</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"n\">pixel</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">sparse_field</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">struct_for_example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u53ea\u904d\u5386\u6fc0\u6d3b\u7684\u5143\u7d20</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">sparse_field</span><span class=\"p\">:</span>\n        <span class=\"n\">sparse_field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"mf\">2.0</span>\n\n    <span class=\"c1\"># \u5206\u5c42\u904d\u5386</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">block</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Active block at (</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">j</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>ti.grouped\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">grouped_access</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u5c06\u591a\u7ef4\u7d22\u5f15\u6253\u5305\u4e3a\u5355\u4e2a\u53d8\u91cf</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">tensor_3d</span><span class=\"p\">):</span>\n        <span class=\"c1\"># I\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5305\u542b\u6240\u6709\u7ef4\u5ea6\u7684\u7d22\u5f15</span>\n        <span class=\"n\">tensor_3d</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">I</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">)</span>  <span class=\"c1\"># \u81ea\u52a8\u5c55\u5f00\u4e3a i*i + j*j + k*k</span>\n</code></pre></div>\n\n<p><strong>\u5e76\u884c\u5316\u89c4\u5219</strong>\uff1a</p>\n<ol>\n<li>\u6700\u5916\u5c42\u5faa\u73af\u81ea\u52a8\u5e76\u884c</li>\n<li>\u5185\u5c42\u5faa\u73af\u4fdd\u6301\u4e32\u884c</li>\n<li>\u5faa\u73af\u8fed\u4ee3\u5fc5\u987b\u72ec\u7acb</li>\n<li>\u4e0d\u652f\u6301break/continue</li>\n</ol>\n<h3 id=\"133\">1.3.3 \u7ebf\u7a0b\u5b89\u5168\u4e0e\u7ade\u6001\u6761\u4ef6</h3>\n<p>\u5728\u5e76\u884c\u7f16\u7a0b\u4e2d\uff0c\u6b63\u786e\u5904\u7406\u5171\u4eab\u6570\u636e\u8bbf\u95ee\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u7ade\u6001\u6761\u4ef6\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5371\u9669\u4ee3\u7801 - \u7ade\u6001\u6761\u4ef6</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">race_example</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb-\u4fee\u6539-\u5199</span>\n        <span class=\"n\">counter</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">counter</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>  <span class=\"c1\"># \u7ed3\u679c\u4e0d\u786e\u5b9a\uff01</span>\n\n<span class=\"c1\"># \u5b89\u5168\u4ee3\u7801 - \u539f\u5b50\u64cd\u4f5c</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">safe_example</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"n\">counter</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># \u4fdd\u8bc1\u6b63\u786e\u7ed3\u679c</span>\n</code></pre></div>\n\n<p><strong>Taichi\u7684\u5b89\u5168\u4fdd\u8bc1</strong>\uff1a</p>\n<ol>\n<li><strong>\u81ea\u52a8\u539f\u5b50\u5316</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Taichi\u81ea\u52a8\u8bc6\u522b\u5e76\u8f6c\u6362</span>\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span>  <span class=\"c1\"># \u81ea\u52a8\u8f6c\u6362\u4e3aatomic_add</span>\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">])</span>  <span class=\"c1\"># \u81ea\u52a8\u8f6c\u6362\u4e3aatomic_max</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u652f\u6301\u7684\u539f\u5b50\u64cd\u4f5c</strong>\uff1a\n   - <code>atomic_add</code>, <code>atomic_sub</code>\n   - <code>atomic_min</code>, <code>atomic_max</code>\n   - <code>atomic_and</code>, <code>atomic_or</code>, <code>atomic_xor</code>\n   - <code>atomic_exchange</code> (\u539f\u5b50\u4ea4\u6362)</p>\n</li>\n<li>\n<p><strong>\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">thread_local_example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5c40\u90e8\u53d8\u91cf</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">local_sum</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n            <span class=\"n\">local_sum</span> <span class=\"o\">+=</span> <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span>\n        <span class=\"n\">row_sums</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">local_sum</span>\n</code></pre></div>\n\n<p><strong>\u907f\u514d\u7ade\u6001\u7684\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li>\u6570\u636e\u5206\u533a\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u72ec\u7acb\u6570\u636e</li>\n<li>\u5f52\u7ea6\u6a21\u5f0f\uff1a\u4f7f\u7528\u6811\u5f62\u5f52\u7ea6\u51cf\u5c11\u51b2\u7a81</li>\n<li>\u53cc\u7f13\u51b2\uff1a\u8bfb\u5199\u5206\u79bb\u5230\u4e0d\u540c\u7f13\u51b2\u533a</li>\n<li>\u539f\u5b50\u64cd\u4f5c\uff1a\u5fc5\u8981\u65f6\u4f7f\u7528\u4f46\u6ce8\u610f\u6027\u80fd</li>\n</ol>\n<h3 id=\"134\">1.3.4 \u6027\u80fd\u5206\u6790\u4e0e\u8c03\u4f18\u57fa\u7840</h3>\n<p>\u7406\u89e3\u548c\u4f18\u5316Taichi\u7a0b\u5e8f\u6027\u80fd\u7684\u5173\u952e\u5de5\u5177\u548c\u6280\u672f\uff1a</p>\n<p><strong>\u5185\u7f6e\u6027\u80fd\u5206\u6790\u5668</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u542f\u7528\u6027\u80fd\u5206\u6790</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">cuda</span><span class=\"p\">,</span> <span class=\"n\">kernel_profiler</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">computation</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># \u6267\u884c\u5e76\u6253\u5370\u6027\u80fd\u62a5\u544a</span>\n<span class=\"n\">computation</span><span class=\"p\">()</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">print_kernel_profile_info</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p><strong>\u6027\u80fd\u6307\u6807</strong>\uff1a</p>\n<ol>\n<li><strong>kernel\u65f6\u95f4</strong>\uff1aGPU\u6267\u884c\u65f6\u95f4</li>\n<li><strong>\u5185\u5b58\u5e26\u5bbd</strong>\uff1a\u6570\u636e\u4f20\u8f93\u901f\u7387</li>\n<li><strong>\u5360\u7528\u7387</strong>\uff1a\u6d3b\u8dc3\u7ebf\u7a0b\u6bd4\u4f8b</li>\n<li><strong>\u7f13\u5b58\u547d\u4e2d\u7387</strong>\uff1a\u6570\u636e\u5c40\u90e8\u6027</li>\n</ol>\n<p><strong>\u5e38\u89c1\u6027\u80fd\u95ee\u9898</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u95ee\u98981\uff1a\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u5dee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">bad_access_pattern</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u5217\u4f18\u5148\u8bbf\u95ee\uff0c\u7f13\u5b58\u4e0d\u53cb\u597d</span>\n        <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\"># \u4f18\u5316\uff1a\u884c\u4f18\u5148\u8bbf\u95ee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span> \n<span class=\"k\">def</span> <span class=\"nf\">good_access_pattern</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u884c\u4f18\u5148\u8bbf\u95ee\uff0c\u7f13\u5b58\u53cb\u597d</span>\n        <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n\n<span class=\"c1\"># \u95ee\u98982\uff1a\u8fc7\u591a\u539f\u5b50\u64cd\u4f5c</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">too_many_atomics</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># \u9ad8\u51b2\u7a81</span>\n\n<span class=\"c1\"># \u4f18\u5316\uff1a\u7ebf\u7a0b\u5c40\u90e8\u7d2f\u52a0</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">optimized_histogram</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u4f7f\u7528\u7ebf\u7a0b\u5c40\u90e8\u6570\u7ec4\u51cf\u5c11\u51b2\u7a81</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">local_hist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">10</span>\n        <span class=\"c1\"># \u5148\u672c\u5730\u7d2f\u52a0</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)):</span>\n            <span class=\"n\">local_hist</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"c1\"># \u518d\u539f\u5b50\u66f4\u65b0\u5168\u5c40</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n            <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"n\">histogram</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">],</span> <span class=\"n\">local_hist</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316\u6280\u5de7\u6e05\u5355</strong>\uff1a</p>\n<ol>\n<li>\u5408\u5e76\u5185\u5b58\u8bbf\u95ee</li>\n<li>\u51cf\u5c11\u5206\u652f\u5206\u6b67</li>\n<li>\u4f7f\u7528\u5171\u4eab\u5185\u5b58</li>\n<li>\u5faa\u73af\u5c55\u5f00</li>\n<li>\u907f\u514d\u5b58\u50a8bank\u51b2\u7a81</li>\n</ol>\n<h2 id=\"14-taichi\">1.4 Taichi\u7a0b\u5e8f\u7684\u8c03\u8bd5\u6280\u5de7</h2>\n<h3 id=\"141\">1.4.1 \u8c03\u8bd5\u6a21\u5f0f\u4e0e\u8fb9\u754c\u68c0\u67e5</h3>\n<p>\u8c03\u8bd5\u662f\u5f00\u53d1\u9ad8\u8d28\u91cf\u4ee3\u7801\u7684\u5173\u952e\u73af\u8282\uff0cTaichi\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u8c03\u8bd5\u5de5\u5177\uff1a</p>\n<p><strong>\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5b8c\u6574\u8c03\u8bd5\u6a21\u5f0f</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">cpu</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u8c03\u8bd5\u9009\u9879\u8be6\u89e3</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span>\n    <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>           <span class=\"c1\"># \u542f\u7528\u6240\u6709\u8c03\u8bd5\u68c0\u67e5</span>\n    <span class=\"n\">print_ir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>        <span class=\"c1\"># \u6253\u5370\u4e2d\u95f4\u8868\u793a</span>\n    <span class=\"n\">print_kernel_llvm_ir</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># \u6253\u5370LLVM IR</span>\n    <span class=\"n\">check_out_of_bound</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>    <span class=\"c1\"># \u8fb9\u754c\u68c0\u67e5</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u8fb9\u754c\u68c0\u67e5\u5668</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">boundary_check_example</span><span class=\"p\">():</span>\n    <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8c03\u8bd5\u6a21\u5f0f\u4e0b\u4f1a\u68c0\u6d4b\u8d8a\u754c</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">101</span><span class=\"p\">):</span>  <span class=\"c1\"># \u9519\u8bef\uff1a\u8d8a\u754c\u8bbf\u95ee</span>\n        <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span>  <span class=\"c1\"># \u8fd0\u884c\u65f6\u9519\u8bef\uff1aindex 100 out of bound [0, 100)</span>\n\n    <span class=\"c1\"># \u5b89\u5168\u7684\u8bbf\u95ee\u65b9\u5f0f</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>  <span class=\"c1\"># \u663e\u5f0f\u8fb9\u754c\u68c0\u67e5</span>\n            <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span>\n</code></pre></div>\n\n<p><strong>\u65ad\u8a00\u4f7f\u7528</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_with_assert</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8fd0\u884c\u65f6\u65ad\u8a00</span>\n        <span class=\"k\">assert</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Value </span><span class=\"si\">{</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> out of range&quot;</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u524d\u7f6e\u6761\u4ef6\u68c0\u67e5</span>\n        <span class=\"n\">denominator</span> <span class=\"o\">=</span> <span class=\"n\">compute_denominator</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">denominator</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Division by zero&quot;</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numerator</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">denominator</span>\n</code></pre></div>\n\n<h3 id=\"142\">1.4.2 \u6253\u5370\u8c03\u8bd5\u4e0e\u65ad\u8a00</h3>\n<p>Taichi\u652f\u6301\u5728kernel\u4e2d\u6253\u5370\uff0c\u8fd9\u662f\u8c03\u8bd5\u7684\u91cd\u8981\u5de5\u5177\uff1a</p>\n<p><strong>\u6253\u5370\u529f\u80fd</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_debugging</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u57fa\u672c\u6253\u5370</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Starting computation&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6253\u5370\u53d8\u91cf</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;i = </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\">, value = </span><span class=\"si\">{</span><span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6761\u4ef6\u6253\u5370</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">100</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Progress: </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\">/1000&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u6253\u5370\u5411\u91cf\u548c\u77e9\u9635</span>\n    <span class=\"n\">vec</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>\n    <span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Vector:&quot;</span><span class=\"p\">,</span> <span class=\"n\">vec</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Matrix:&quot;</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u6253\u5370\u9650\u5236\u4e0e\u6700\u4f73\u5b9e\u8df5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_best_practices</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u9650\u5236\u6253\u5370\u6570\u91cf\u907f\u514d\u8f93\u51fa\u7206\u70b8</span>\n    <span class=\"n\">print_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">print_count</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Negative value at </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">print_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"c1\"># \u4f7f\u7528\u7edf\u8ba1\u800c\u975e\u9010\u4e2a\u6253\u5370</span>\n    <span class=\"n\">error_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_error</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">):</span>\n            <span class=\"n\">error_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Total errors: </span><span class=\"si\">{</span><span class=\"n\">error_count</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"143\">1.4.3 \u5e38\u89c1\u9519\u8bef\u4e0e\u89e3\u51b3\u65b9\u6848</h3>\n<p><strong>\u9519\u8bef\u7c7b\u578b1\uff1a\u8d8a\u754c\u8bbf\u95ee</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9519\u8bef\u793a\u4f8b</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">out_of_bound_error</span><span class=\"p\">():</span>\n    <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">):</span>  <span class=\"c1\"># \u9519\u8bef\uff01</span>\n        <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"c1\"># \u89e3\u51b3\u65b9\u6848</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">safe_access</span><span class=\"p\">():</span>\n    <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">arr</span><span class=\"p\">:</span>  <span class=\"c1\"># \u4f7f\u7528field\u81ea\u8eab\u4f5c\u4e3a\u8303\u56f4</span>\n        <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n\n<p><strong>\u9519\u8bef\u7c7b\u578b2\uff1a\u7c7b\u578b\u4e0d\u5339\u914d</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9519\u8bef\u793a\u4f8b</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">type_mismatch</span><span class=\"p\">():</span>\n    <span class=\"n\">int_field</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"n\">int_field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span>  <span class=\"c1\"># \u9519\u8bef\uff1a\u6d6e\u70b9\u6570\u8d4b\u503c\u7ed9\u6574\u6570</span>\n\n<span class=\"c1\"># \u89e3\u51b3\u65b9\u6848</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">correct_types</span><span class=\"p\">():</span>\n    <span class=\"n\">int_field</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"n\">int_field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">3.14</span><span class=\"p\">)</span>  <span class=\"c1\"># \u663e\u5f0f\u7c7b\u578b\u8f6c\u6362</span>\n</code></pre></div>\n\n<p><strong>\u9519\u8bef\u7c7b\u578b3\uff1a\u672a\u521d\u59cb\u5316\u53d8\u91cf</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9519\u8bef\u793a\u4f8b</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">uninitialized_error</span><span class=\"p\">():</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>  <span class=\"c1\"># \u9519\u8bef\uff1asum[0]\u672a\u521d\u59cb\u5316</span>\n\n<span class=\"c1\"># \u89e3\u51b3\u65b9\u6848</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">proper_initialization</span><span class=\"p\">():</span>\n    <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>  <span class=\"c1\"># \u663e\u5f0f\u521d\u59cb\u5316</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><strong>\u9519\u8bef\u7c7b\u578b4\uff1a\u5e76\u884c\u51b2\u7a81</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9519\u8bef\u793a\u4f8b</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">parallel_conflict</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u591a\u4e2a\u7ebf\u7a0b\u5199\u5165\u76f8\u540c\u4f4d\u7f6e</span>\n        <span class=\"n\">shared_array</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span>  <span class=\"c1\"># \u7ed3\u679c\u4e0d\u786e\u5b9a</span>\n\n<span class=\"c1\"># \u89e3\u51b3\u65b9\u6848</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">conflict_resolution</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f7f\u7528\u539f\u5b50\u64cd\u4f5c</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_max</span><span class=\"p\">(</span><span class=\"n\">shared_array</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"144\">1.4.4 \u6027\u80fd\u74f6\u9888\u8bc6\u522b</h3>\n<p>\u8bc6\u522b\u548c\u89e3\u51b3\u6027\u80fd\u74f6\u9888\u662f\u4f18\u5316\u7684\u5173\u952e\uff1a</p>\n<p><strong>\u6027\u80fd\u5206\u6790\u5de5\u5177</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"c1\"># \u624b\u52a8\u8ba1\u65f6</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">timed_kernel</span><span class=\"p\">():</span>\n    <span class=\"c1\"># kernel\u4ee3\u7801</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"n\">timed_kernel</span><span class=\"p\">()</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sync</span><span class=\"p\">()</span>  <span class=\"c1\"># \u91cd\u8981\uff1a\u7b49\u5f85GPU\u5b8c\u6210</span>\n<span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Average time: </span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"si\">:</span><span class=\"s2\">.2f</span><span class=\"si\">}</span><span class=\"s2\"> ms&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u4f7f\u7528Taichi profiler</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">kernel_profiler</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># \u8fd0\u884ckernels</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">print_kernel_profile_info</span><span class=\"p\">(</span><span class=\"s2\">&quot;time&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># \u6309\u65f6\u95f4\u6392\u5e8f</span>\n</code></pre></div>\n\n<p><strong>\u5e38\u89c1\u6027\u80fd\u74f6\u9888</strong>\uff1a</p>\n<ol>\n<li><strong>\u5185\u5b58\u5e26\u5bbd\u9650\u5236</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u95ee\u9898\uff1a\u968f\u673a\u5185\u5b58\u8bbf\u95ee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">random_access</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]]</span>  <span class=\"c1\"># \u7f13\u5b58\u4e0d\u53cb\u597d</span>\n\n<span class=\"c1\"># \u4f18\u5316\uff1a\u987a\u5e8f\u8bbf\u95ee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">sequential_access</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>  <span class=\"c1\"># \u7f13\u5b58\u53cb\u597d</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u8ba1\u7b97\u74f6\u9888</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u95ee\u9898\uff1a\u590d\u6742\u6570\u5b66\u8fd0\u7b97</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">expensive_math</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">tan</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])))</span>\n\n<span class=\"c1\"># \u4f18\u5316\uff1a\u67e5\u8868\u6216\u8fd1\u4f3c</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">optimized_math</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f7f\u7528\u6cf0\u52d2\u5c55\u5f00\u6216\u67e5\u627e\u8868</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">fast_approximation</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u6838\u51fd\u6570\u7c92\u5ea6</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u95ee\u9898\uff1akernel\u592a\u5c0f\uff0c\u542f\u52a8\u5f00\u9500\u5927</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n    <span class=\"n\">small_kernel</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>  <span class=\"c1\"># 1000\u6b21kernel\u542f\u52a8</span>\n\n<span class=\"c1\"># \u4f18\u5316\uff1a\u6279\u5904\u7406</span>\n<span class=\"n\">large_kernel</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>  <span class=\"c1\"># 1\u6b21kernel\u542f\u52a8</span>\n</code></pre></div>\n\n<h2 id=\"15-dop\">1.5 \u9762\u5411\u6570\u636e\u7684\u7f16\u7a0b(DOP)</h2>\n<h3 id=\"151-aos-vs-soa\">1.5.1 AoS vs SoA\u5e03\u5c40</h3>\n<p>\u6570\u636e\u5e03\u5c40\u5bf9\u6027\u80fd\u6709\u51b3\u5b9a\u6027\u5f71\u54cd\uff0c\u7406\u89e3AoS(Array of Structures)\u548cSoA(Structure of Arrays)\u7684\u5dee\u5f02\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>AoS\u5e03\u5c40\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Array of Structures - \u6570\u636e\u6309\u5bf9\u8c61\u7ec4\u7ec7</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">ParticleSystemAoS</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particles</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Struct</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;y&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;vx&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;vy&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;mass&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span>\n        <span class=\"p\">},</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_positions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particles</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u8bbf\u95ee\u540c\u4e00\u7c92\u5b50\u7684\u4e0d\u540c\u5c5e\u6027 - \u7f13\u5b58\u53cb\u597d</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">vx</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">vy</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n</code></pre></div>\n\n<p><strong>SoA\u5e03\u5c40\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Structure of Arrays - \u6570\u636e\u6309\u5c5e\u6027\u7ec4\u7ec7</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">ParticleSystemSoA</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vx</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vy</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_positions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n            <span class=\"c1\"># \u8bbf\u95ee\u4e0d\u540c\u6570\u7ec4\u7684\u76f8\u540c\u7d22\u5f15 - SIMD\u53cb\u597d</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vx</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vy</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n</code></pre></div>\n\n<p><strong>\u6027\u80fd\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u64cd\u4f5c\u7c7b\u578b | AoS | SoA |</p>\n<table>\n<thead>\n<tr>\n<th>\u64cd\u4f5c\u7c7b\u578b</th>\n<th>AoS</th>\n<th>SoA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u5355\u5bf9\u8c61\u5168\u5c5e\u6027\u8bbf\u95ee</td>\n<td>\u4f18\u79c0</td>\n<td>\u8f83\u5dee</td>\n</tr>\n<tr>\n<td>\u6279\u91cf\u5355\u5c5e\u6027\u5904\u7406</td>\n<td>\u8f83\u5dee</td>\n<td>\u4f18\u79c0</td>\n</tr>\n<tr>\n<td>SIMD\u5411\u91cf\u5316</td>\n<td>\u56f0\u96be</td>\n<td>\u7b80\u5355</td>\n</tr>\n<tr>\n<td>\u7f13\u5b58\u5229\u7528\u7387</td>\n<td>\u53d6\u51b3\u4e8e\u8bbf\u95ee\u6a21\u5f0f</td>\n<td>\u901a\u5e38\u66f4\u597d</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u6df7\u5408\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># AoSoA - Array of Structure of Arrays</span>\n<span class=\"c1\"># \u7ed3\u5408\u4e24\u8005\u4f18\u52bf</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">HybridLayout</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">block_size</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blocks</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Struct</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">({</span>\n            <span class=\"s1\">&#39;x&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;y&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;vx&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">),</span>\n            <span class=\"s1\">&#39;vy&#39;</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"n\">block_size</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"n\">block_size</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"152\">1.5.2 \u7f13\u5b58\u53cb\u597d\u7684\u6570\u636e\u7ec4\u7ec7</h3>\n<p>\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6027\u80fd\u74f6\u9888\u5f80\u5f80\u662f\u5185\u5b58\u8bbf\u95ee\u800c\u975e\u8ba1\u7b97\uff0c\u4f18\u5316\u6570\u636e\u5e03\u5c40\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u7f13\u5b58\u5c42\u7ea7</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u5bc4\u5b58\u5668: ~1 cycle\nL1\u7f13\u5b58: ~4 cycles (32KB)\nL2\u7f13\u5b58: ~12 cycles (256KB)\nL3\u7f13\u5b58: ~40 cycles (8MB)\n\u4e3b\u5185\u5b58: ~200 cycles\n</code></pre></div>\n\n<p><strong>\u7a7a\u95f4\u5c40\u90e8\u6027\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5dee\uff1a\u8de8\u6b65\u8bbf\u95ee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">poor_spatial_locality</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u6bcf\u6b21\u8bbf\u95ee\u8df3\u8fc7m\u4e2a\u5143\u7d20</span>\n            <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">j</span> <span class=\"o\">*</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># \u597d\uff1a\u8fde\u7eed\u8bbf\u95ee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>  \n<span class=\"k\">def</span> <span class=\"nf\">good_spatial_locality</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u8fde\u7eed\u5185\u5b58\u8bbf\u95ee</span>\n            <span class=\"nb\">sum</span> <span class=\"o\">+=</span> <span class=\"n\">matrix</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">m</span> <span class=\"o\">+</span> <span class=\"n\">j</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><strong>\u65f6\u95f4\u5c40\u90e8\u6027\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5dee\uff1a\u53cd\u590d\u52a0\u8f7d\u76f8\u540c\u6570\u636e</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">poor_temporal_locality</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n                <span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># \u597d\uff1a\u5206\u5757\u77e9\u9635\u4e58\u6cd5</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">blocked_matmul</span><span class=\"p\">():</span>\n    <span class=\"n\">tile_size</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>\n    <span class=\"k\">for</span> <span class=\"n\">bi</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">tile_size</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">bj</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">tile_size</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">bk</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">tile_size</span><span class=\"p\">):</span>\n                <span class=\"c1\"># \u5904\u7406tile_size x tile_size\u7684\u5757</span>\n                <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">bi</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">bi</span> <span class=\"o\">+</span> <span class=\"n\">tile_size</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)):</span>\n                    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">bj</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">bj</span> <span class=\"o\">+</span> <span class=\"n\">tile_size</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">)):</span>\n                        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">bk</span><span class=\"p\">,</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">bk</span> <span class=\"o\">+</span> <span class=\"n\">tile_size</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">)):</span>\n                            <span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><strong>\u6570\u636e\u5bf9\u9f50</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u786e\u4fdd\u6570\u636e\u5bf9\u9f50\u5230\u7f13\u5b58\u884c(64\u5b57\u8282)</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">AlignedData</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Taichi\u81ea\u52a8\u5904\u7406\u5bf9\u9f50</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u624b\u52a8\u586b\u5145\u907f\u514d\u4f2a\u5171\u4eab</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">counters</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padding</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>  <span class=\"c1\"># \u586b\u5145\u5230\u7f13\u5b58\u884c</span>\n</code></pre></div>\n\n<h3 id=\"153\">1.5.3 \u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u4f18\u5316</h3>\n<p>\u4e0d\u540c\u7684\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u5bf9\u6027\u80fd\u5f71\u54cd\u5de8\u5927\uff1a</p>\n<p><strong>\u5408\u5e76\u8bbf\u95ee(Coalesced Access)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># GPU\u4e0a\u7684\u5408\u5e76\u8bbf\u95ee</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">coalesced_access</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u597d\uff1a\u76f8\u90bb\u7ebf\u7a0b\u8bbf\u95ee\u76f8\u90bb\u5185\u5b58</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mf\">2.0</span>\n\n    <span class=\"c1\"># \u5dee\uff1a\u8de8\u6b65\u8bbf\u95ee</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">stride</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mf\">2.0</span>\n</code></pre></div>\n\n<p><strong>Bank\u51b2\u7a81\u907f\u514d</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5171\u4eab\u5185\u5b58bank\u51b2\u7a81</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">bank_conflict_example</span><span class=\"p\">():</span>\n    <span class=\"n\">shared_mem</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u51b2\u7a81\uff1a\u6240\u6709\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00bank</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">shared_mem</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">4</span><span class=\"p\">]</span>  <span class=\"c1\"># 8\u8def\u51b2\u7a81</span>\n\n    <span class=\"c1\"># \u65e0\u51b2\u7a81\uff1a\u6dfb\u52a0\u504f\u79fb</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">):</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">shared_mem</span><span class=\"p\">[(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">i</span> <span class=\"o\">//</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">32</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><strong>\u9884\u53d6\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">manual_prefetch</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u8f6f\u4ef6\u9884\u53d6\u63d0\u793a</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"n\">prefetch_distance</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u9884\u53d6\u672a\u6765\u8981\u7528\u7684\u6570\u636e</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">prefetch</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">prefetch_distance</span><span class=\"p\">])</span>\n        <span class=\"c1\"># \u5904\u7406\u5f53\u524d\u6570\u636e</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">complex_computation</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<h3 id=\"154\">1.5.4 \u5411\u91cf\u5316\u7f16\u7a0b\u6280\u5de7</h3>\n<p>\u5229\u7528SIMD\u6307\u4ee4\u63d0\u5347\u8ba1\u7b97\u5bc6\u96c6\u578b\u4ee3\u7801\u6027\u80fd\uff1a</p>\n<p><strong>\u81ea\u52a8\u5411\u91cf\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">auto_vectorization</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Taichi\u81ea\u52a8\u5411\u91cf\u5316\u7b80\u5355\u5faa\u73af</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>  <span class=\"c1\"># \u81ea\u52a8\u4f7f\u7528SIMD</span>\n\n    <span class=\"c1\"># \u590d\u6742\u64cd\u4f5c\u53ef\u80fd\u963b\u6b62\u5411\u91cf\u5316</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>  <span class=\"c1\"># \u5206\u652f\u963b\u6b62\u5411\u91cf\u5316</span>\n            <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p><strong>\u663e\u5f0f\u5411\u91cf\u64cd\u4f5c</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">explicit_vectorization</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u4f7f\u7528\u5411\u91cf\u7c7b\u578b</span>\n    <span class=\"n\">vec_size</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n    <span class=\"n\">n_vec</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"n\">vec_size</span>\n\n    <span class=\"c1\"># \u5411\u91cf\u5316\u4e3b\u5faa\u73af</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_vec</span><span class=\"p\">):</span>\n        <span class=\"n\">vec_a</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)])</span>\n        <span class=\"n\">vec_b</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)])</span>\n        <span class=\"n\">vec_c</span> <span class=\"o\">=</span> <span class=\"n\">vec_a</span> <span class=\"o\">+</span> <span class=\"n\">vec_b</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n            <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">vec_c</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># \u5904\u7406\u5269\u4f59\u5143\u7d20</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_vec</span> <span class=\"o\">*</span> <span class=\"n\">vec_size</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<p><strong>\u5411\u91cf\u5316\u53cb\u597d\u7684\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5f52\u7ea6\u64cd\u4f5c\u7684\u5411\u91cf\u5316</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">vectorized_reduction</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">:</span>\n    <span class=\"c1\"># \u4f7f\u7528\u591a\u4e2a\u7d2f\u52a0\u5668\u51cf\u5c11\u4f9d\u8d56</span>\n    <span class=\"n\">sum0</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"n\">sum1</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"n\">sum2</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"n\">sum3</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n    <span class=\"c1\"># 4\u8def\u5c55\u5f00</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"mi\">4</span><span class=\"p\">):</span>\n        <span class=\"n\">sum0</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">4</span> <span class=\"o\">+</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">sum1</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">4</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">sum2</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">4</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">sum3</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">4</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># \u5408\u5e76\u7ed3\u679c</span>\n    <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">sum0</span> <span class=\"o\">+</span> <span class=\"n\">sum1</span> <span class=\"o\">+</span> <span class=\"n\">sum2</span> <span class=\"o\">+</span> <span class=\"n\">sum3</span>\n\n    <span class=\"c1\"># \u5904\u7406\u5269\u4f59</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">((</span><span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"mi\">4</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">total</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">total</span>\n</code></pre></div>\n\n<h2 id=\"16-oop\">1.6 \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b(OOP)</h2>\n<h3 id=\"161-taichi\">1.6.1 Taichi\u4e2d\u7684\u7c7b\u4e0e\u88c5\u9970\u5668</h3>\n<p>Taichi\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u901a\u8fc7<code>@ti.data_oriented</code>\u88c5\u9970\u5668\u5b9e\u73b0\uff1a</p>\n<p><strong>\u57fa\u672c\u7c7b\u5b9a\u4e49</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">RigidBody</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mass</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">velocity</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u662fTaichi fields</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n\n        <span class=\"c1\"># \u521d\u59cb\u5316</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mass</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">position</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">velocity</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_physics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"c1\"># kernel\u53ef\u4ee5\u4f5c\u4e3a\u6210\u5458\u51fd\u6570</span>\n        <span class=\"n\">acceleration</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">acceleration</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n    <span class=\"k\">def</span> <span class=\"nf\">compute_kinetic_energy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">:</span>\n        <span class=\"c1\"># func\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6210\u5458\u51fd\u6570</span>\n        <span class=\"k\">return</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">norm_sqr</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p><strong>\u7ee7\u627f\u4e0e\u591a\u6001</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">Particle</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">ChargedParticle</span><span class=\"p\">(</span><span class=\"n\">Particle</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">charge</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">E_field</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u7535\u573a\u529b</span>\n            <span class=\"n\">force</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">E_field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">force</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n</code></pre></div>\n\n<h3 id=\"162-odop\">1.6.2 ODOP\u8bbe\u8ba1\u6a21\u5f0f</h3>\n<p>ODOP (Objective Data-Oriented Programming) \u7ed3\u5408OOP\u7684\u62bd\u8c61\u80fd\u529b\u548cDOP\u7684\u6027\u80fd\u4f18\u52bf\uff1a</p>\n<p><strong>ODOP\u539f\u5219</strong>\uff1a</p>\n<ol>\n<li>\u6570\u636e\u548c\u884c\u4e3a\u5c01\u88c5\u5728\u7c7b\u4e2d</li>\n<li>\u4f7f\u7528SoA\u5e03\u5c40\u4f18\u5316\u6027\u80fd</li>\n<li>\u6279\u91cf\u64cd\u4f5c\u800c\u975e\u5355\u5bf9\u8c61\u64cd\u4f5c</li>\n<li>\u6700\u5c0f\u5316\u865a\u51fd\u6570\u8c03\u7528</li>\n</ol>\n<p><strong>ODOP\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">ParticleSystem</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">max_particles</span><span class=\"p\">):</span>\n        <span class=\"c1\"># SoA\u5e03\u5c40</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">max_particles</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">max_particles</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">life</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">max_particles</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">max_particles</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">emit_particles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)):</span>\n        <span class=\"n\">old_count</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"n\">num</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">old_count</span> <span class=\"o\">+</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                <span class=\"n\">idx</span> <span class=\"o\">=</span> <span class=\"n\">old_count</span> <span class=\"o\">+</span> <span class=\"n\">i</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pos</span> <span class=\"o\">+</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span>\n                    <span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n                    <span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n                    <span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.1</span>\n                <span class=\"p\">])</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">life</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u6279\u91cf\u66f4\u65b0\u6240\u6709\u7c92\u5b50</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]):</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                <span class=\"c1\"># \u91cd\u529b</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">-=</span> <span class=\"mf\">9.81</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n                <span class=\"c1\"># \u4f4d\u7f6e\u66f4\u65b0</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n                <span class=\"c1\"># \u751f\u547d\u503c\u8870\u51cf</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">life</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n                <span class=\"c1\"># \u6b7b\u4ea1\u68c0\u6d4b</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">life</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n\n<h3 id=\"163\">1.6.3 \u592a\u9633\u7cfb\u4eff\u771f\u6848\u4f8b</h3>\n<p>\u5b8c\u6574\u7684\u9762\u5411\u5bf9\u8c61\u592a\u9633\u7cfb\u4eff\u771f\u793a\u4f8b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">taichi</span> <span class=\"k\">as</span> <span class=\"nn\">ti</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">arch</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">gpu</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">CelestialBody</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"n\">N</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">N</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">compute_force</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"mf\">6.67430e-11</span>  <span class=\"c1\"># \u5f15\u529b\u5e38\u6570</span>\n\n        <span class=\"c1\"># \u6e05\u96f6\u529b</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">N</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u4e07\u6709\u5f15\u529b</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">N</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">N</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"n\">j</span><span class=\"p\">:</span>\n                    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                    <span class=\"n\">r_mag</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">()</span>\n                    <span class=\"k\">if</span> <span class=\"n\">r_mag</span> <span class=\"o\">&gt;</span> <span class=\"mf\">1e-6</span><span class=\"p\">:</span>  <span class=\"c1\"># \u907f\u514d\u9664\u96f6</span>\n                        <span class=\"n\">F_mag</span> <span class=\"o\">=</span> <span class=\"n\">G</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">r_mag</span> <span class=\"o\">*</span> <span class=\"n\">r_mag</span><span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">F_mag</span> <span class=\"o\">*</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">normalized</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_verlet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Velocity Verlet\u79ef\u5206</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">N</span><span class=\"p\">):</span>\n            <span class=\"c1\"># \u66f4\u65b0\u4f4d\u7f6e</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">+</span> \\\n                               <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n\n        <span class=\"c1\"># \u91cd\u65b0\u8ba1\u7b97\u529b</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compute_force</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># \u66f4\u65b0\u901f\u5ea6</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">N</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">initialize_solar_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u592a\u9633</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.989e30</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">6.96e8</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u5730\u7403</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">5.972e24</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.496e11</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">2.978e4</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">radius</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">6.371e6</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># \u66f4\u591a\u884c\u661f...</span>\n</code></pre></div>\n\n<h3 id=\"164\">1.6.4 \u4ee3\u7801\u590d\u7528\u4e0e\u6a21\u5757\u5316</h3>\n<p>\u826f\u597d\u7684OOP\u8bbe\u8ba1\u4fc3\u8fdb\u4ee3\u7801\u590d\u7528\uff1a</p>\n<p><strong>\u7ec4\u4ef6\u5316\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">Transform</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u4f4d\u7f6e\u548c\u65b9\u5411\u7ec4\u4ef6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>  <span class=\"c1\"># \u56db\u5143\u6570</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>  \n<span class=\"k\">class</span> <span class=\"nc\">Mesh</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7f51\u683c\u7ec4\u4ef6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">indices</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vertices</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">indices</span><span class=\"p\">))</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">GameObject</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7ec4\u5408\u591a\u4e2a\u7ec4\u4ef6&quot;&quot;&quot;</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">Transform</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics</span> <span class=\"o\">=</span> <span class=\"n\">RigidBody</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">renderer</span> <span class=\"o\">=</span> <span class=\"n\">MeshRenderer</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u534f\u8c03\u5404\u7ec4\u4ef6\u66f4\u65b0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sync_transform</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p><strong>\u63a5\u53e3\u8bbe\u8ba1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Integrator</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u79ef\u5206\u5668\u63a5\u53e3&quot;&quot;&quot;</span>\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">EulerIntegrator</span><span class=\"p\">(</span><span class=\"n\">Integrator</span><span class=\"p\">):</span>\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>  \n    <span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">:</span>\n            <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">velocity</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">VerletIntegrator</span><span class=\"p\">(</span><span class=\"n\">Integrator</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prev_position</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">:</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">-</span> \\\n                               <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prev_position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> \\\n                               <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prev_position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">temp</span>\n</code></pre></div>\n\n<h2 id=\"17-mp\">1.7 \u5143\u7f16\u7a0b(MP)</h2>\n<h3 id=\"171\">1.7.1 \u6a21\u677f\u6838\u51fd\u6570</h3>\n<p>Taichi\u7684\u5143\u7f16\u7a0b\u5141\u8bb8\u7f16\u5199\u9ad8\u5ea6\u901a\u7528\u548c\u4f18\u5316\u7684\u4ee3\u7801\uff1a</p>\n<p><strong>\u57fa\u672c\u6a21\u677f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">copy_field</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">dst</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u901a\u7528\u7684field\u590d\u5236\u51fd\u6570&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">):</span>\n        <span class=\"n\">dst</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">src</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># \u53ef\u7528\u4e8e\u4efb\u4f55\u7ef4\u5ea6\u548c\u7c7b\u578b\u7684field</span>\n<span class=\"n\">field_2d</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"n\">field_3d</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">))</span>\n<span class=\"n\">copy_field</span><span class=\"p\">(</span><span class=\"n\">field_2d</span><span class=\"p\">,</span> <span class=\"n\">another_2d_field</span><span class=\"p\">)</span>\n<span class=\"n\">copy_field</span><span class=\"p\">(</span><span class=\"n\">field_3d</span><span class=\"p\">,</span> <span class=\"n\">another_3d_field</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u53c2\u6570\u5316kernel</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">parametric_kernel</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> \n                     <span class=\"n\">alpha</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span>\n                     <span class=\"n\">beta</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7f16\u8bd1\u65f6\u53c2\u6570\u5316&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">):</span>\n        <span class=\"c1\"># alpha\u548cbeta\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a</span>\n        <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">beta</span>\n\n<span class=\"c1\"># \u4e3a\u4e0d\u540c\u53c2\u6570\u751f\u6210\u7279\u5316\u7248\u672c</span>\n<span class=\"n\">parametric_kernel</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">)</span>  <span class=\"c1\"># \u751f\u6210\u4e00\u4e2a\u7248\u672c</span>\n<span class=\"n\">parametric_kernel</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>  <span class=\"c1\"># \u751f\u6210\u53e6\u4e00\u4e2a\u7248\u672c</span>\n</code></pre></div>\n\n<h3 id=\"172\">1.7.2 \u7ef4\u5ea6\u65e0\u5173\u7f16\u7a0b</h3>\n<p>\u7f16\u5199\u53ef\u4ee5\u57282D/3D\u751a\u81f3\u66f4\u9ad8\u7ef4\u5ea6\u5de5\u4f5c\u7684\u4ee3\u7801\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">laplacian</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u8ba1\u7b97\u4efb\u610f\u7ef4\u5ea6\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">2.0</span> <span class=\"o\">*</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u9759\u6001\u5faa\u73af\uff0c\u7f16\u8bd1\u65f6\u5c55\u5f00</span>\n        <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">))):</span>\n            <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">unit</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"p\">),</span> <span class=\"n\">d</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">I</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">I</span> <span class=\"o\">-</span> <span class=\"n\">offset</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>  <span class=\"c1\"># \u8fb9\u754c\u6761\u4ef6</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">I</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">I</span> <span class=\"o\">+</span> <span class=\"n\">offset</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span>  <span class=\"c1\"># \u8fb9\u754c\u6761\u4ef6</span>\n\n<span class=\"c1\"># \u540c\u4e00\u51fd\u6570\u7528\u4e8e2D\u548c3D</span>\n<span class=\"n\">field_2d</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"n\">laplacian_2d</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n<span class=\"n\">laplacian</span><span class=\"p\">(</span><span class=\"n\">field_2d</span><span class=\"p\">,</span> <span class=\"n\">laplacian_2d</span><span class=\"p\">)</span>\n\n<span class=\"n\">field_3d</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">))</span>\n<span class=\"n\">laplacian_3d</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">))</span>\n<span class=\"n\">laplacian</span><span class=\"p\">(</span><span class=\"n\">field_3d</span><span class=\"p\">,</span> <span class=\"n\">laplacian_3d</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u7ef4\u5ea6\u901a\u7528\u7684\u7269\u7406\u4eff\u771f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">GenericParticleSystem</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">dim</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dim</span> <span class=\"o\">=</span> <span class=\"n\">dim</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">velocity</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mass</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">compute_pairwise_force</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">zero</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dim</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n                               <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">j</span><span class=\"p\">:</span>\n                <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                <span class=\"n\">r_norm</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"n\">r_norm</span> <span class=\"o\">&gt;</span> <span class=\"mf\">1e-6</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># Lennard-Jones\u52bf</span>\n                    <span class=\"n\">f_mag</span> <span class=\"o\">=</span> <span class=\"mi\">24</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"n\">r_norm</span><span class=\"o\">**</span><span class=\"mi\">14</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">r_norm</span><span class=\"o\">**</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n                    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">f_mag</span> <span class=\"o\">*</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">normalized</span><span class=\"p\">()</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">f</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">force</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">f</span>\n</code></pre></div>\n\n<h3 id=\"173\">1.7.3 \u7f16\u8bd1\u65f6\u5206\u652f\u4e0e\u5faa\u73af\u5c55\u5f00</h3>\n<p>\u5229\u7528<code>ti.static</code>\u8fdb\u884c\u7f16\u8bd1\u65f6\u4f18\u5316\uff1a</p>\n<p><strong>\u9759\u6001\u5206\u652f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">static_branching</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u7f16\u8bd1\u65f6\u51b3\u5b9a\u5206\u652f</span>\n        <span class=\"k\">if</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"n\">mode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;add&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mf\">1.0</span>\n        <span class=\"k\">elif</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"n\">mode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;mul&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"mf\">2.0</span>\n        <span class=\"k\">elif</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"n\">mode</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;sin&#39;</span><span class=\"p\">):</span>\n            <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># \u751f\u6210\u4e09\u4e2a\u4e0d\u540c\u7684kernel\u7248\u672c</span>\n<span class=\"n\">static_branching</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"s1\">&#39;add&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">static_branching</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mul&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">static_branching</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"s1\">&#39;sin&#39;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u9759\u6001\u5faa\u73af\u5c55\u5f00</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">matrix_vector_multiply</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> \n                          <span class=\"n\">vec</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span>\n                          <span class=\"n\">result</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span>\n                          <span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7f16\u8bd1\u65f6\u5df2\u77e5\u5927\u5c0f\u7684\u77e9\u9635\u5411\u91cf\u4e58\u6cd5&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n        <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"c1\"># \u5b8c\u5168\u5c55\u5f00\u7684\u5faa\u73af</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)):</span>\n            <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">mat</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># \u4e3a\u4e0d\u540c\u5927\u5c0f\u751f\u6210\u4f18\u5316\u7248\u672c</span>\n<span class=\"n\">mat4</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n<span class=\"n\">vec4</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n<span class=\"n\">res4</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n<span class=\"n\">matrix_vector_multiply</span><span class=\"p\">(</span><span class=\"n\">mat4</span><span class=\"p\">,</span> <span class=\"n\">vec4</span><span class=\"p\">,</span> <span class=\"n\">res4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u9012\u5f52\u6a21\u677f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum_recursive</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u7f16\u8bd1\u65f6\u9012\u5f52\u6a21\u677f&quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">-</span> <span class=\"n\">l</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u57fa\u7840\u60c5\u51b5\uff1a\u76f4\u63a5\u6c42\u548c</span>\n        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">):</span>\n            <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">s</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u9012\u5f52\u60c5\u51b5\uff1a\u5206\u6cbb</span>\n        <span class=\"n\">mid</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">l</span> <span class=\"o\">+</span> <span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"mi\">2</span>\n        <span class=\"k\">return</span> <span class=\"n\">sum_recursive</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">mid</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">sum_recursive</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">mid</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"174\">1.7.4 \u9759\u6001\u7c7b\u578b\u63a8\u5bfc</h3>\n<p>Taichi\u7684\u7c7b\u578b\u7cfb\u7edf\u652f\u6301\u7f16\u8bd1\u65f6\u7c7b\u578b\u63a8\u5bfc\uff1a</p>\n<p><strong>\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">type_deduction_example</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>  <span class=\"c1\"># ti.i32</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mf\">3.14</span>  <span class=\"c1\"># ti.f32</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>  <span class=\"c1\"># ti.f32 (\u81ea\u52a8\u63d0\u5347)</span>\n\n    <span class=\"c1\"># \u5411\u91cf\u7c7b\u578b\u63a8\u5bfc</span>\n    <span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>  <span class=\"c1\"># ti.types.vector(3, ti.i32)</span>\n    <span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>  <span class=\"c1\"># ti.types.vector(3, ti.f32)</span>\n    <span class=\"n\">v3</span> <span class=\"o\">=</span> <span class=\"n\">v1</span> <span class=\"o\">+</span> <span class=\"n\">v2</span>  <span class=\"c1\"># ti.types.vector(3, ti.f32)</span>\n</code></pre></div>\n\n<p><strong>\u6cdb\u578b\u51fd\u6570</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">generic_norm</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">())</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u81ea\u52a8\u63a8\u5bfc\u8fd4\u56de\u7c7b\u578b&quot;&quot;&quot;</span>\n    <span class=\"n\">norm_sqr</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">vec</span><span class=\"o\">.</span><span class=\"n\">n</span><span class=\"p\">)):</span>\n        <span class=\"n\">norm_sqr</span> <span class=\"o\">+=</span> <span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">vec</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">norm_sqr</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u53ef\u7528\u4e8e\u4e0d\u540c\u7cbe\u5ea6</span>\n<span class=\"n\">vec_f32</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span>\n<span class=\"n\">norm_f32</span> <span class=\"o\">=</span> <span class=\"n\">generic_norm</span><span class=\"p\">(</span><span class=\"n\">vec_f32</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8fd4\u56def32</span>\n\n<span class=\"n\">vec_f64</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">],</span> <span class=\"n\">dt</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f64</span><span class=\"p\">)</span>  \n<span class=\"n\">norm_f64</span> <span class=\"o\">=</span> <span class=\"n\">generic_norm</span><span class=\"p\">(</span><span class=\"n\">vec_f64</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8fd4\u56def64</span>\n</code></pre></div>\n\n<p><strong>\u7c7b\u578b\u7ea6\u675f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">type_constrained</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">ndim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;\u660e\u786e\u7684\u7c7b\u578b\u7ea6\u675f&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n        <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># \u53ea\u63a5\u53d72D f32\u6570\u7ec4</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">type_constrained</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>  <span class=\"c1\"># OK</span>\n\n<span class=\"c1\"># arr_3d = np.random.rand(10, 10, 10).astype(np.float32)</span>\n<span class=\"c1\"># type_constrained(arr_3d)  # \u7f16\u8bd1\u9519\u8bef\uff1a\u7ef4\u5ea6\u4e0d\u5339\u914d</span>\n</code></pre></div>\n\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u5168\u9762\u4ecb\u7ecd\u4e86\u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b\u548cTaichi\u7f16\u7a0b\u8bed\u8a00\u7684\u6838\u5fc3\u6982\u5ff5\uff1a</p>\n<p><strong>\u5173\u952e\u6982\u5ff5\u56de\u987e</strong>\uff1a</p>\n<ol>\n<li><strong>\u7269\u7406\u5f15\u64ce\u57fa\u7840</strong>\uff1a\u7406\u89e3\u4e86\u7269\u7406\u4eff\u771f\u5728\u6e38\u620f\u3001\u7535\u5f71\u548c\u5de5\u7a0b\u4e2d\u7684\u5e94\u7528\uff0c\u4ee5\u53ca\u5b9e\u65f6\u6027\u4e0e\u7cbe\u786e\u6027\u7684\u6743\u8861</li>\n<li><strong>Taichi\u8bed\u8a00\u7279\u6027</strong>\uff1a\u638c\u63e1\u4e86kernel/func\u3001\u5f20\u91cf\u64cd\u4f5c\u3001\u81ea\u52a8\u5e76\u884c\u5316\u7b49\u6838\u5fc3\u529f\u80fd</li>\n<li><strong>\u7f16\u7a0b\u8303\u5f0f</strong>\uff1a\n   - DOP\uff1a\u6570\u636e\u5e03\u5c40\u4f18\u5316\uff08AoS vs SoA\uff09\u3001\u7f13\u5b58\u53cb\u597d\u8bbe\u8ba1\u3001\u5411\u91cf\u5316\n   - OOP\uff1a\u7c7b\u5c01\u88c5\u3001ODOP\u6a21\u5f0f\u3001\u7ec4\u4ef6\u5316\u8bbe\u8ba1\n   - MP\uff1a\u6a21\u677f\u7f16\u7a0b\u3001\u7ef4\u5ea6\u901a\u7528\u4ee3\u7801\u3001\u7f16\u8bd1\u65f6\u4f18\u5316</li>\n</ol>\n<p><strong>\u91cd\u8981\u516c\u5f0f\u548c\u7b97\u6cd5</strong>\uff1a</p>\n<ul>\n<li>\u7a33\u5b9a\u6027\u6761\u4ef6\uff1a$\\Delta t \\leq c\\sqrt{\\frac{m}{k}}$\uff08\u663e\u5f0f\u79ef\u5206\u5668\uff09</li>\n<li>\u7f13\u5b58\u8bbf\u95ee\u65f6\u95f4\uff1aL1(~4 cycles) &lt; L2(~12 cycles) &lt; L3(~40 cycles) &lt; \u4e3b\u5b58(~200 cycles)</li>\n<li>\u5e76\u884c\u6548\u7387\uff1a$E = \\frac{S}{p} = \\frac{T_1}{p \\cdot T_p}$\uff0c\u5176\u4e2dS\u662f\u52a0\u901f\u6bd4\uff0cp\u662f\u5904\u7406\u5668\u6570</li>\n</ul>\n<p><strong>\u6027\u80fd\u4f18\u5316\u8981\u70b9</strong>\uff1a</p>\n<ol>\n<li>\u6570\u636e\u5c40\u90e8\u6027\uff1a\u884c\u4f18\u5148\u8bbf\u95ee\u3001\u5206\u5757\u7b97\u6cd5\u3001\u9884\u53d6</li>\n<li>\u5e76\u884c\u5316\uff1a\u907f\u514d\u7ade\u6001\u6761\u4ef6\u3001\u51cf\u5c11\u539f\u5b50\u64cd\u4f5c\u3001\u8d1f\u8f7d\u5747\u8861</li>\n<li>\u5411\u91cf\u5316\uff1aSIMD\u53cb\u597d\u7684\u6570\u636e\u5e03\u5c40\u3001\u5faa\u73af\u5c55\u5f00\u3001\u907f\u514d\u5206\u652f</li>\n</ol>\n<h2 id=\"_3\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_4\">\u57fa\u7840\u9898\uff08\u719f\u6089\u6750\u6599\uff09</h3>\n<p><strong>\u7ec3\u4e601.1</strong>\uff1a\u7f16\u5199\u4e00\u4e2aTaichi kernel\uff0c\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u573a\u7684\u70b9\u79ef\u3002\u8981\u6c42\u652f\u6301\u4efb\u610f\u7ef4\u5ea6\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4f7f\u7528<code>ti.template()</code>\u548c<code>ti.grouped()</code>\u5b9e\u73b0\u7ef4\u5ea6\u65e0\u5173\u7684\u4ee3\u7801\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">vector_field_dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">())</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"k\">for</span> <span class=\"n\">I</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">grouped</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">):</span>\n        <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u70b9\uff1a\u4f7f\u7528<code>ti.grouped</code>\u904d\u5386\u4efb\u610f\u7ef4\u5ea6\u7684field\uff0c\u5229\u7528\u5411\u91cf\u7684<code>dot</code>\u65b9\u6cd5\u8ba1\u7b97\u70b9\u79ef\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e601.2</strong>\uff1a\u6bd4\u8f83AoS\u548cSoA\u5e03\u5c40\u5728\u7c92\u5b50\u7cfb\u7edf\u66f4\u65b0\u4e2d\u7684\u6027\u80fd\u5dee\u5f02\u3002\u5b9e\u73b0\u4e24\u4e2a\u7248\u672c\u5e76\u6d4b\u91cf\u6267\u884c\u65f6\u95f4\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u5206\u522b\u5b9e\u73b0\u53ea\u66f4\u65b0\u4f4d\u7f6e\u548c\u66f4\u65b0\u6240\u6709\u5c5e\u6027\u4e24\u79cd\u60c5\u51b5\uff0c\u89c2\u5bdf\u54ea\u79cd\u5e03\u5c40\u66f4\u4f18\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>AoS\u5728\u8bbf\u95ee\u5355\u4e2a\u7c92\u5b50\u7684\u6240\u6709\u5c5e\u6027\u65f6\u66f4\u4f18\uff08\u5982\u78b0\u649e\u68c0\u6d4b\uff09\uff0cSoA\u5728\u6279\u91cf\u66f4\u65b0\u5355\u4e00\u5c5e\u6027\u65f6\u66f4\u4f18\uff08\u5982\u4f4d\u7f6e\u66f4\u65b0\uff09\u3002\u5177\u4f53\u6027\u80fd\u5dee\u5f02\u53d6\u51b3\u4e8e\uff1a</p>\n<ul>\n<li>\u7f13\u5b58\u884c\u5927\u5c0f\uff08\u901a\u5e3864\u5b57\u8282\uff09</li>\n<li>SIMD\u5411\u91cf\u5bbd\u5ea6</li>\n<li>\u8bbf\u95ee\u6a21\u5f0f\u7684\u89c4\u5f8b\u6027</li>\n</ul>\n<p>\u6d4b\u91cf\u7ed3\u679c\u901a\u5e38\u663e\u793aSoA\u5728\u7eaf\u4f4d\u7f6e\u66f4\u65b0\u65f6\u5feb2-4\u500d\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e601.3</strong>\uff1a\u5b9e\u73b0\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u76f4\u65b9\u56fe\u7edf\u8ba1kernel\uff0c\u7edf\u8ba10-255\u8303\u56f4\u5185\u6574\u6570\u7684\u51fa\u73b0\u9891\u7387\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\uff0c\u4f46\u8981\u6ce8\u610f\u4f18\u5316\u7b56\u7565\u51cf\u5c11\u51b2\u7a81\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">histogram</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">hist</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n    <span class=\"c1\"># \u6e05\u96f6</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">):</span>\n        <span class=\"n\">hist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"c1\"># \u7edf\u8ba1</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"n\">hist</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u4f18\u5316\u7248\u672c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u7a0b\u5c40\u90e8\u6570\u7ec4\u51cf\u5c11\u539f\u5b50\u64cd\u4f5c\u9891\u7387\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e601.4</strong>\uff1a\u4f7f\u7528Taichi\u7684\u8c03\u8bd5\u529f\u80fd\u627e\u51fa\u4ee5\u4e0b\u4ee3\u7801\u7684\u9519\u8bef\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">buggy_kernel</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>  <span class=\"c1\"># \u6709bug</span>\n</code></pre></div>\n\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u8fb9\u754c\u6761\u4ef6\u548c\u6570\u7ec4\u8bbf\u95ee\u8303\u56f4\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5f53<code>i = arr.shape[0] - 1</code>\u65f6\uff0c<code>arr[i+1]</code>\u4f1a\u8d8a\u754c\u3002\u4fee\u6b63\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">fixed_kernel</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">()):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div>\n\n</details>\n<h3 id=\"_5\">\u6311\u6218\u9898\uff08\u6df1\u5165\u601d\u8003\uff09</h3>\n<p><strong>\u7ec3\u4e601.5</strong>\uff1a\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u9ad8\u6548\u76842D\u7a7a\u95f4\u54c8\u5e0c\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u52a8\u6001\u63d2\u5165\u548c\u8303\u56f4\u67e5\u8be2\u3002\u8981\u6c42\uff1a</p>\n<ul>\n<li>\u652f\u6301\u767e\u4e07\u7ea7\u7c92\u5b50</li>\n<li>\u67e5\u8be2\u534a\u5f84\u5185\u7684\u6240\u6709\u90bb\u5c45</li>\n<li>\u5904\u7406\u975e\u5747\u5300\u5206\u5e03</li>\n</ul>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u4f7f\u7528\u591a\u7ea7\u7f51\u683c\u6216\u81ea\u9002\u5e94\u7f51\u683c\u5927\u5c0f\uff0c\u5904\u7406\u7a00\u758f\u548c\u5bc6\u96c6\u533a\u57df\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5173\u952e\u8bbe\u8ba1\u8981\u70b9\uff1a</p>\n<ol>\n<li>\u4f7f\u7528\u8d28\u6570\u8868\u5927\u5c0f\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81</li>\n<li>\u94fe\u8868\u5904\u7406\u51b2\u7a81\uff0c\u4f46\u8981\u8003\u8651\u5185\u5b58\u5c40\u90e8\u6027</li>\n<li>\u52a8\u6001\u8c03\u6574\u7f51\u683c\u5927\u5c0f\u57fa\u4e8e\u5c40\u90e8\u5bc6\u5ea6</li>\n<li>\u4f7f\u7528Morton\u7f16\u7801\u4fdd\u6301\u7a7a\u95f4\u5c40\u90e8\u6027</li>\n</ol>\n<p>\u6027\u80fd\u4f18\u5316\uff1a</p>\n<ul>\n<li>\u9884\u5206\u914d\u5185\u5b58\u6c60\u907f\u514d\u52a8\u6001\u5206\u914d</li>\n<li>\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u5e76\u884c\u6784\u5efa</li>\n<li>\u5b9a\u671f\u91cd\u5efa\u4ee5\u4fdd\u6301\u6548\u7387</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e601.6</strong>\uff1a\u5b9e\u73b0\u4e00\u4e2a\u901a\u7528\u7684\u5f52\u7ea6\uff08reduction\uff09\u6846\u67b6\uff0c\u652f\u6301\u4efb\u610f\u4e8c\u5143\u64cd\u4f5c\u548c\u6570\u636e\u7c7b\u578b\u3002\u8981\u6c42\u5728GPU\u4e0a\u8fbe\u5230\u63a5\u8fd1\u5cf0\u503c\u5e26\u5bbd\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651warp-level primitives\u3001shared memory\u4f7f\u7528\u3001\u591a\u7ea7\u5f52\u7ea6\u7b56\u7565\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u9ad8\u6548\u5f52\u7ea6\u7684\u5173\u952e\u6280\u672f\uff1a</p>\n<ol>\n<li><strong>Warp\u5185\u5f52\u7ea6</strong>\uff1a\u5229\u7528warp shuffle\u6307\u4ee4\u907f\u514d\u5171\u4eab\u5185\u5b58</li>\n<li><strong>\u591a\u7ea7\u7b56\u7565</strong>\uff1awarp\u7ea7\u2192block\u7ea7\u2192grid\u7ea7</li>\n<li><strong>\u8d1f\u8f7d\u5747\u8861</strong>\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u591a\u4e2a\u5143\u7d20</li>\n<li><strong>\u5185\u5b58\u8bbf\u95ee</strong>\uff1a\u5408\u5e76\u8bbf\u95ee\u6a21\u5f0f\uff0c\u907f\u514dbank\u51b2\u7a81</li>\n</ol>\n<p>\u7406\u8bba\u5206\u6790\uff1a</p>\n<ul>\n<li>\u5e26\u5bbd\u5229\u7528\u7387 = \u5b9e\u9645\u5e26\u5bbd / \u5cf0\u503c\u5e26\u5bbd</li>\n<li>\u76ee\u6807\uff1a\u8fbe\u523080%\u4ee5\u4e0a\u7684\u5e26\u5bbd\u5229\u7528\u7387</li>\n<li>\u74f6\u9888\uff1a\u6700\u540e\u51e0\u6b65\u7684\u5e76\u884c\u5ea6\u4e0b\u964d</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e601.7</strong>\uff1a\u4f7f\u7528\u5143\u7f16\u7a0b\u6280\u672f\u5b9e\u73b0\u4e00\u4e2a\u7f16\u8bd1\u65f6\u8ba1\u7b97\u7684\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\uff08FFT\uff09\u3002\u652f\u63012\u7684\u5e42\u6b21\u5927\u5c0f\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4f7f\u7528<code>ti.static</code>\u5c55\u5f00\u8776\u5f62\u64cd\u4f5c\uff0c\u9884\u8ba1\u7b97\u65cb\u8f6c\u56e0\u5b50\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u5143\u7f16\u7a0bFFT\u7684\u8981\u70b9\uff1a</p>\n<ol>\n<li>\u7f16\u8bd1\u65f6\u786e\u5b9aFFT\u5927\u5c0f\u548c\u8fed\u4ee3\u6b21\u6570</li>\n<li>\u9759\u6001\u5c55\u5f00\u6240\u6709\u5faa\u73af\u5c42\u7ea7</li>\n<li>\u9884\u8ba1\u7b97twiddle factors\u4e3a\u5e38\u91cf</li>\n<li>\u4f7f\u7528\u4f4d\u53cd\u8f6c\u7684\u67e5\u8868\u5b9e\u73b0</li>\n</ol>\n<p>\u6027\u80fd\u8003\u8651\uff1a</p>\n<ul>\n<li>\u5bc4\u5b58\u5668\u538b\u529bvs\u5faa\u73af\u5f00\u9500\u6743\u8861</li>\n<li>\u5171\u4eab\u5185\u5b58bank\u51b2\u7a81\u907f\u514d</li>\n<li>\u9002\u5408\u5c0f\u5c3a\u5bf8FFT\uff08\u22641024\u70b9\uff09</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e601.8</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u7269\u7406\u5f15\u64ce\u7684\u6574\u4f53\u67b6\u6784\uff0c\u6574\u5408\u672c\u7ae0\u6240\u5b66\u7684\u6240\u6709\u6982\u5ff5\u3002\u5305\u62ec\uff1a</p>\n<ul>\n<li>\u6a21\u5757\u5316\u8bbe\u8ba1\uff08\u78b0\u649e\u68c0\u6d4b\u3001\u7ea6\u675f\u6c42\u89e3\u3001\u79ef\u5206\u5668\uff09</li>\n<li>\u6570\u636e\u7ed3\u6784\u9009\u62e9\uff08\u7c92\u5b50\u3001\u521a\u4f53\u3001\u7ea6\u675f\uff09</li>\n<li>\u5e76\u884c\u5316\u7b56\u7565</li>\n<li>\u53ef\u6269\u5c55\u6027\u8003\u8651</li>\n</ul>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u53c2\u8003\u73b0\u4ee3\u7269\u7406\u5f15\u64ce\u5982Bullet\u3001PhysX\u7684\u8bbe\u8ba1\uff0c\u4f46\u8981\u8003\u8651Taichi\u7684\u7279\u70b9\u3002</p>\n</details>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<p>\u67b6\u6784\u8bbe\u8ba1\u8981\u70b9\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6838\u5fc3\u6a21\u5757</strong>\uff1a\n   - BroadPhase\uff1a\u7a7a\u95f4\u5212\u5206\uff0c\u5feb\u901f\u5254\u9664\n   - NarrowPhase\uff1a\u7cbe\u786e\u78b0\u649e\u68c0\u6d4b\n   - ConstraintSolver\uff1a\u7ea6\u675f\u6c42\u89e3\uff08PGS/SI\uff09\n   - Integrator\uff1a\u65f6\u95f4\u79ef\u5206\uff08\u63d2\u4ef6\u5f0f\uff09</p>\n</li>\n<li>\n<p><strong>\u6570\u636e\u7ec4\u7ec7</strong>\uff1a\n   - ECS\u6a21\u5f0f\uff1a\u5b9e\u4f53-\u7ec4\u4ef6-\u7cfb\u7edf\n   - SoA\u5e03\u5c40\uff1a\u6027\u80fd\u4f18\u5316\n   - \u53cc\u7f13\u51b2\uff1a\u907f\u514d\u7ade\u6001</p>\n</li>\n<li>\n<p><strong>\u5e76\u884c\u7b56\u7565</strong>\uff1a\n   - \u7a7a\u95f4\u5206\u533a\u5e76\u884c\n   - \u56fe\u7740\u8272\u907f\u514d\u51b2\u7a81\n   - \u4efb\u52a1\u56fe\u8c03\u5ea6</p>\n</li>\n<li>\n<p><strong>\u6269\u5c55\u6027</strong>\uff1a\n   - \u63d2\u4ef6\u5f0f\u529b\u573a\n   - \u81ea\u5b9a\u4e49\u7ea6\u675f\n   - \u811a\u672c\u7ed1\u5b9a</p>\n</li>\n</ol>\n</details>\n<h2 id=\"_6\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<h3 id=\"1\">1. \u5e76\u884c\u7f16\u7a0b\u9677\u9631</h3>\n<p><strong>\u9677\u96311</strong>\uff1a\u5047\u8bbekernel\u5185\u7684\u6267\u884c\u987a\u5e8f</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u9519\u8bef\uff1a\u4f9d\u8d56\u6267\u884c\u987a\u5e8f</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">wrong</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>  <span class=\"c1\"># \u5e76\u884c\u6267\u884c\uff0c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff01</span>\n</code></pre></div>\n\n<p><strong>\u89e3\u51b3</strong>\uff1a\u4f7f\u7528\u4e32\u884c\u5faa\u73af\u6216\u6539\u53d8\u7b97\u6cd5</p>\n<p><strong>\u9677\u96312</strong>\uff1a\u8fc7\u5ea6\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f4e\u6548\uff1a\u5927\u91cf\u539f\u5b50\u64cd\u4f5c</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">inefficient</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">):</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>  <span class=\"c1\"># \u4e25\u91cd\u7684\u4e32\u884c\u5316</span>\n</code></pre></div>\n\n<p><strong>\u89e3\u51b3</strong>\uff1a\u4f7f\u7528\u5f52\u7ea6\u6216\u7ebf\u7a0b\u5c40\u90e8\u7d2f\u52a0</p>\n<h3 id=\"2\">2. \u5185\u5b58\u8bbf\u95ee\u9677\u9631</h3>\n<p><strong>\u9677\u96313</strong>\uff1a\u5217\u4e3b\u5e8f\u8bbf\u95ee\u4e8c\u7ef4\u6570\u7ec4</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7f13\u5b58\u4e0d\u53cb\u597d</span>\n<span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">])</span>  <span class=\"c1\"># \u8de8\u6b65\u8bbf\u95ee</span>\n</code></pre></div>\n\n<p><strong>\u89e3\u51b3</strong>\uff1a\u8c03\u6574\u5faa\u73af\u987a\u5e8f\u6216\u8f6c\u7f6e\u6570\u636e</p>\n<p><strong>\u9677\u96314</strong>\uff1a\u4f2a\u5171\u4eab</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u591a\u7ebf\u7a0b\u5199\u5165\u76f8\u90bb\u5185\u5b58</span>\n<span class=\"n\">counters</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">num_threads</span><span class=\"p\">)</span>\n<span class=\"c1\"># \u4e0d\u540c\u7ebf\u7a0b\u7684counter\u53ef\u80fd\u5728\u540c\u4e00\u7f13\u5b58\u884c</span>\n</code></pre></div>\n\n<p><strong>\u89e3\u51b3</strong>\uff1a\u6dfb\u52a0\u586b\u5145\u6216\u4f7f\u7528\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf</p>\n<h3 id=\"3\">3. \u7c7b\u578b\u7cfb\u7edf\u9677\u9631</h3>\n<p><strong>\u9677\u96315</strong>\uff1a\u6574\u6570\u9664\u6cd5\u7cbe\u5ea6\u635f\u5931</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u610f\u5916\u7684\u6574\u6570\u9664\u6cd5</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"mi\">3</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>  <span class=\"c1\"># \u5728kernel\u4e2d\u53ef\u80fd\u662f1\u800c\u975e1.5</span>\n</code></pre></div>\n\n<p><strong>\u89e3\u51b3</strong>\uff1a\u663e\u5f0f\u4f7f\u7528\u6d6e\u70b9\u6570\u6216\u8f6c\u6362\u7c7b\u578b</p>\n<h3 id=\"4\">4. \u8c03\u8bd5\u9677\u9631</h3>\n<p><strong>\u9677\u96316</strong>\uff1aGPU\u8c03\u8bd5\u65f6\u5fd8\u8bb0\u540c\u6b65</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">kernel</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>  <span class=\"c1\"># \u53ef\u80fd\u8bfb\u5230\u65e7\u503c\uff01</span>\n</code></pre></div>\n\n<p><strong>\u89e3\u51b3</strong>\uff1a\u6dfb\u52a0<code>ti.sync()</code>\u786e\u4fddGPU\u5b8c\u6210</p>\n<h2 id=\"_7\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_8\">\u8bbe\u8ba1\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u5e03\u5c40\uff08AoS/SoA/AoSoA\uff09</li>\n<li>[ ] \u8bc6\u522b\u5e76\u884c\u5316\u673a\u4f1a\u548c\u6570\u636e\u4f9d\u8d56</li>\n<li>[ ] \u8003\u8651\u7f13\u5b58\u53cb\u597d\u7684\u7b97\u6cd5\u8bbe\u8ba1</li>\n<li>[ ] \u89c4\u5212\u5185\u5b58\u4f7f\u7528\u548c\u6570\u636e\u6d41</li>\n</ul>\n<h3 id=\"_9\">\u5b9e\u73b0\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u4f7f\u7528<code>ti.template()</code>\u7f16\u5199\u901a\u7528\u4ee3\u7801</li>\n<li>[ ] \u6700\u5c0f\u5316\u539f\u5b50\u64cd\u4f5c\u4f7f\u7528</li>\n<li>[ ] \u786e\u4fdd\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u5408\u7406</li>\n<li>[ ] \u9002\u5f53\u4f7f\u7528<code>ti.static</code>\u4f18\u5316</li>\n</ul>\n<h3 id=\"_10\">\u4f18\u5316\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u4f7f\u7528\u6027\u80fd\u5206\u6790\u5de5\u5177\u5b9a\u4f4d\u74f6\u9888</li>\n<li>[ ] \u8003\u8651\u5411\u91cf\u5316\u548c\u5faa\u73af\u5c55\u5f00</li>\n<li>[ ] \u5e73\u8861\u8ba1\u7b97\u4e0e\u5185\u5b58\u8bbf\u95ee</li>\n<li>[ ] \u9a8c\u8bc1\u5e76\u884c\u6b63\u786e\u6027</li>\n</ul>\n<h3 id=\"_11\">\u8c03\u8bd5\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u8fdb\u884c\u8fb9\u754c\u68c0\u67e5</li>\n<li>[ ] \u4f7f\u7528\u5c0f\u6570\u636e\u96c6\u9a8c\u8bc1\u6b63\u786e\u6027</li>\n<li>[ ] \u6dfb\u52a0\u65ad\u8a00\u68c0\u67e5\u4e0d\u53d8\u91cf</li>\n<li>[ ] \u8bb0\u5f55\u6027\u80fd\u57fa\u51c6\u7528\u4e8e\u56de\u5f52\u6d4b\u8bd5</li>\n</ul>\n<h3 id=\"_12\">\u4ee3\u7801\u8d28\u91cf</h3>\n<ul>\n<li>[ ] \u9075\u5faaODOP\u8bbe\u8ba1\u6a21\u5f0f</li>\n<li>[ ] \u6a21\u5757\u5316\u548c\u53ef\u6d4b\u8bd5\u6027</li>\n<li>[ ] \u6587\u6863\u5316\u6027\u80fd\u5173\u952e\u51b3\u7b56</li>\n<li>[ ] \u8003\u8651\u8de8\u5e73\u53f0\u517c\u5bb9\u6027</li>\n</ul>"
  },
  "../chapter10.md": {
    "hash": "9e9662c7256eb153e2d78e53977875ae",
    "content": "<h1 id=\"_1\">\u7b2c\u5341\u7ae0\uff1a\u53ef\u5fae\u7f16\u7a0b\u4e0e\u673a\u5668\u5b66\u4e60</h1>\n<p>\u53ef\u5fae\u7f16\u7a0b\u6b63\u5728\u9769\u65b0\u7269\u7406\u4eff\u771f\u9886\u57df\u3002\u4f20\u7edf\u7684\u7269\u7406\u5f15\u64ce\u662f\"\u524d\u5411\"\u7684\u2014\u2014\u7ed9\u5b9a\u521d\u59cb\u6761\u4ef6\u548c\u53c2\u6570\uff0c\u8ba1\u7b97\u7cfb\u7edf\u7684\u6f14\u5316\u3002\u800c\u53ef\u5fae\u7f16\u7a0b\u4f7f\u6211\u4eec\u80fd\u591f\"\u53cd\u5411\"\u6c42\u89e3\uff1a\u7ed9\u5b9a\u671f\u671b\u7684\u7ed3\u679c\uff0c\u81ea\u52a8\u63a8\u5bfc\u51fa\u6240\u9700\u7684\u53c2\u6570\u6216\u63a7\u5236\u7b56\u7565\u3002\u8fd9\u79cd\u7aef\u5230\u7aef\u7684\u4f18\u5316\u80fd\u529b\u4e3a\u7269\u7406\u4eff\u771f\u5f00\u8f9f\u4e86\u5168\u65b0\u7684\u5e94\u7528\u573a\u666f\uff0c\u4ece\u673a\u5668\u4eba\u63a7\u5236\u5230\u6750\u6599\u8bbe\u8ba1\uff0c\u4ece\u6d41\u4f53\u4f18\u5316\u5230\u52a8\u753b\u751f\u6210\u3002</p>\n<p>\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u53ef\u5fae\u7269\u7406\u4eff\u771f\u7684\u6838\u5fc3\u6280\u672f\uff0c\u5305\u62ec\u81ea\u52a8\u5fae\u5206\u7684\u5b9e\u73b0\u539f\u7406\u3001\u4f18\u5316\u7b97\u6cd5\u7684\u9009\u62e9\u7b56\u7565\u3001\u9006\u95ee\u9898\u7684\u6c42\u89e3\u6846\u67b6\uff0c\u4ee5\u53ca\u4e0e\u673a\u5668\u5b66\u4e60\u7684\u7ed3\u5408\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5229\u7528Taichi\u7684\u81ea\u52a8\u5fae\u5206\u529f\u80fd\u6784\u5efa\u53ef\u5fae\u4eff\u771f\u7cfb\u7edf\uff0c\u5e76\u901a\u8fc7\u4e30\u5bcc\u7684\u6848\u4f8b\u5c55\u793a\u8fd9\u4e9b\u6280\u672f\u7684\u5b9e\u9645\u5e94\u7528\u3002\u638c\u63e1\u8fd9\u4e9b\u5185\u5bb9\u540e\uff0c\u8bfb\u8005\u5c06\u80fd\u591f\u8bbe\u8ba1\u548c\u5b9e\u73b0\u667a\u80fd\u5316\u7684\u7269\u7406\u7cfb\u7edf\uff0c\u8ba9\u4eff\u771f\u4e0d\u4ec5\u80fd\u9884\u6d4b\u672a\u6765\uff0c\u66f4\u80fd\u4f18\u5316\u51b3\u7b56\u3002</p>\n<h2 id=\"101\">10.1 \u53ef\u5fae\u4eff\u771f\u57fa\u7840</h2>\n<p>\u53ef\u5fae\u4eff\u771f\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u6574\u4e2a\u7269\u7406\u7cfb\u7edf\u89c6\u4e3a\u4e00\u4e2a\u53ef\u5fae\u51fd\u6570\uff0c\u4ece\u8f93\u5165\u53c2\u6570\u5230\u6700\u7ec8\u7ed3\u679c\u7684\u6bcf\u4e00\u6b65\u8ba1\u7b97\u90fd\u4fdd\u7559\u68af\u5ea6\u4fe1\u606f\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u4efb\u610f\u53c2\u6570\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u8fdb\u800c\u4f18\u5316\u7cfb\u7edf\u884c\u4e3a\u3002</p>\n<h3 id=\"1011\">10.1.1 \u7aef\u5230\u7aef\u4f18\u5316</h3>\n<p>\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u5f39\u9053\u95ee\u9898\uff1a\u7ed9\u5b9a\u76ee\u6807\u4f4d\u7f6e\uff0c\u6c42\u89e3\u6700\u4f18\u53d1\u5c04\u89d2\u5ea6\u3002\u4f20\u7edf\u65b9\u6cd5\u9700\u8981\u591a\u6b21\u8bd5\u5c04\u6216\u89e3\u6790\u6c42\u89e3\uff0c\u800c\u53ef\u5fae\u4eff\u771f\u53ef\u4ee5\u76f4\u63a5\u4f18\u5316\uff1a</p>\n<p>$$\\mathcal{L}(\\theta) = |x_{final}(\\theta) - x_{target}|^2$$\n\u5176\u4e2d$x_{final}(\\theta)$\u662f\u53d1\u5c04\u89d2\u4e3a$\\theta$\u65f6\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u901a\u8fc7\u81ea\u52a8\u5fae\u5206\u8ba1\u7b97$\\frac{\\partial \\mathcal{L}}{\\partial \\theta}$\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u627e\u5230\u6700\u4f18\u89d2\u5ea6\u3002</p>\n<p>\u66f4\u590d\u6742\u7684\u4f8b\u5b50\u5305\u62ec\uff1a</p>\n<ul>\n<li><strong>\u8f6f\u4f53\u673a\u5668\u4eba\u63a7\u5236</strong>\uff1a\u4f18\u5316\u9a71\u52a8\u5668\u5e8f\u5217\u4f7f\u673a\u5668\u4eba\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e</li>\n<li><strong>\u6d41\u4f53\u5f62\u72b6\u4f18\u5316</strong>\uff1a\u8bbe\u8ba1\u6700\u5c0f\u963b\u529b\u7684\u7269\u4f53\u5f62\u72b6</li>\n<li><strong>\u6750\u6599\u53c2\u6570\u8bc6\u522b</strong>\uff1a\u4ece\u5b9e\u9a8c\u6570\u636e\u53cd\u63a8\u6750\u6599\u5c5e\u6027</li>\n</ul>\n<p>\u7aef\u5230\u7aef\u4f18\u5316\u7684\u5173\u952e\u662f\u4fdd\u6301\u6574\u4e2a\u8ba1\u7b97\u94fe\u7684\u53ef\u5fae\u6027\u3002\u8fd9\u8981\u6c42\u6211\u4eec\uff1a</p>\n<ol>\n<li>\u4f7f\u7528\u53ef\u5fae\u7684\u6570\u503c\u683c\u5f0f\uff08\u5982\u53ef\u5fae\u7684\u78b0\u649e\u5904\u7406\uff09</li>\n<li>\u907f\u514d\u4e0d\u53ef\u5fae\u64cd\u4f5c\uff08\u5982\u786c\u9608\u503c\u3001\u79bb\u6563\u9009\u62e9\uff09</li>\n<li>\u5904\u7406\u6570\u503c\u7a33\u5b9a\u6027\u95ee\u9898\uff08\u907f\u514d\u68af\u5ea6\u7206\u70b8/\u6d88\u5931\uff09</li>\n</ol>\n<h3 id=\"1012\">10.1.2 \u53c2\u6570\u654f\u611f\u5ea6\u5206\u6790</h3>\n<p>\u5728\u4f18\u5316\u4e4b\u524d\uff0c\u7406\u89e3\u53c2\u6570\u5982\u4f55\u5f71\u54cd\u7cfb\u7edf\u884c\u4e3a\u81f3\u5173\u91cd\u8981\u3002\u654f\u611f\u5ea6\u5206\u6790\u8ba1\u7b97\uff1a\n$$S_{ij} = \\frac{\\partial y_i}{\\partial \\theta_j}$$\n\u5176\u4e2d$y_i$\u662f\u7b2c$i$\u4e2a\u8f93\u51fa\uff0c$\\theta_j$\u662f\u7b2c$j$\u4e2a\u53c2\u6570\u3002\u654f\u611f\u5ea6\u77e9\u9635$S$\u544a\u8bc9\u6211\u4eec\uff1a</p>\n<ul>\n<li>\u54ea\u4e9b\u53c2\u6570\u5bf9\u7ed3\u679c\u5f71\u54cd\u6700\u5927</li>\n<li>\u53c2\u6570\u95f4\u662f\u5426\u5b58\u5728\u8026\u5408\u6548\u5e94</li>\n<li>\u4f18\u5316\u95ee\u9898\u662f\u5426\u826f\u6001\uff08well-posed\uff09</li>\n</ul>\n<p>\u5bf9\u4e8e\u65f6\u95f4\u76f8\u5173\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u654f\u611f\u5ea6\u7684\u65f6\u95f4\u6f14\u5316\uff1a\n$$\\frac{d}{dt}\\frac{\\partial x}{\\partial \\theta} = \\frac{\\partial f}{\\partial x}\\frac{\\partial x}{\\partial \\theta} + \\frac{\\partial f}{\\partial \\theta}$$\n\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u654f\u611f\u5ea6\u7684ODE\uff0c\u53ef\u4ee5\u4e0e\u539f\u7cfb\u7edf\u4e00\u8d77\u6c42\u89e3\u3002</p>\n<h3 id=\"1013\">10.1.3 \u4f34\u968f\u65b9\u6cd5</h3>\n<p>\u5f53\u53c2\u6570\u7ef4\u5ea6\u8fdc\u5927\u4e8e\u76ee\u6807\u7ef4\u5ea6\u65f6\uff08\u5982\u4f18\u5316\u6574\u4e2a\u901f\u5ea6\u573a\uff09\uff0c\u76f4\u63a5\u8ba1\u7b97\u6240\u6709\u68af\u5ea6\u7684\u6210\u672c\u8fc7\u9ad8\u3002\u4f34\u968f\u65b9\u6cd5\uff08Adjoint Method\uff09\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>\n<p>\u8003\u8651\u4f18\u5316\u95ee\u9898\uff1a\n$$\\min_\\theta \\mathcal{L}(x(T), \\theta) \\quad \\text{s.t.} \\quad \\dot{x} = f(x, \\theta, t)$$\n\u5f15\u5165\u62c9\u683c\u6717\u65e5\u4e58\u5b50$\\lambda(t)$\uff08\u79f0\u4e3a\u4f34\u968f\u53d8\u91cf\uff09\uff0c\u6784\u9020\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff1a\n$$\\mathcal{L}_{aug} = \\mathcal{L}(x(T), \\theta) + \\int_0^T \\lambda^T[\\dot{x} - f(x, \\theta, t)]dt$$\n\u901a\u8fc7\u53d8\u5206\u6cd5\uff0c\u6211\u4eec\u5f97\u5230\u4f34\u968f\u65b9\u7a0b\uff1a\n$$\\dot{\\lambda} = -\\left(\\frac{\\partial f}{\\partial x}\\right)^T \\lambda, \\quad \\lambda(T) = \\frac{\\partial \\mathcal{L}}{\\partial x(T)}$$\n\u68af\u5ea6\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a\n$$\\frac{d\\mathcal{L}}{d\\theta} = \\int_0^T \\lambda^T \\frac{\\partial f}{\\partial \\theta} dt$$\n\u4f34\u968f\u65b9\u6cd5\u7684\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u8ba1\u7b97\u6210\u672c\u4e0e\u53c2\u6570\u6570\u91cf\u65e0\u5173</li>\n<li>\u53ea\u9700\u4e00\u6b21\u524d\u5411\u6c42\u89e3\u548c\u4e00\u6b21\u53cd\u5411\u6c42\u89e3</li>\n<li>\u5185\u5b58\u9700\u6c42\u53ef\u901a\u8fc7Checkpointing\u63a7\u5236</li>\n</ul>\n<h3 id=\"1014-checkpointing\">10.1.4 Checkpointing\u6280\u672f</h3>\n<p>\u53ef\u5fae\u4eff\u771f\u7684\u4e3b\u8981\u6311\u6218\u662f\u5185\u5b58\u9700\u6c42\u2014\u2014\u53cd\u5411\u4f20\u64ad\u9700\u8981\u5b58\u50a8\u6240\u6709\u4e2d\u95f4\u72b6\u6001\u3002\u5bf9\u4e8e\u957f\u65f6\u95f4\u4eff\u771f\uff0c\u8fd9\u53ef\u80fd\u9700\u8981TB\u7ea7\u5185\u5b58\u3002Checkpointing\u901a\u8fc7\u65f6\u95f4-\u5185\u5b58\u6743\u8861\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>\n<p><strong>\u57fa\u672c\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li>\u524d\u5411\u4f20\u64ad\u65f6\u53ea\u4fdd\u5b58\u90e8\u5206\u65f6\u523b\u7684\u72b6\u6001\uff08checkpoints\uff09</li>\n<li>\u53cd\u5411\u4f20\u64ad\u65f6\u4ece\u6700\u8fd1\u7684checkpoint\u91cd\u65b0\u8ba1\u7b97\u6240\u9700\u72b6\u6001</li>\n</ol>\n<p><strong>\u6700\u4f18Checkpoint\u5206\u5e03</strong>\uff1a\n\u5bf9\u4e8e$n$\u4e2a\u65f6\u95f4\u6b65\u548c$c$\u4e2acheckpoints\uff0c\u6700\u4f18\u5206\u5e03\u9075\u5faa\u5bf9\u6570\u89c4\u5f8b\uff1a\n$$t_i = T\\left(\\frac{i}{c}\\right)^{p}, \\quad p = \\frac{\\log c}{\\log n}$$\n<strong>\u9012\u5f52\u4e8c\u5206\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">checkpoint_binary</span><span class=\"p\">(</span><span class=\"k\">start</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">end</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">budget</span><span class=\"p\">)</span><span class=\"err\">:</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">budget</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"err\">:</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"err\">[]</span>\n<span class=\"w\">    </span><span class=\"n\">mid</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">start</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"k\">end</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">//</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"n\">left_budget</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">budget</span><span class=\"w\"> </span><span class=\"o\">//</span><span class=\"w\"> </span><span class=\"mi\">2</span>\n<span class=\"w\">    </span><span class=\"n\">right_budget</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">budget</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">left_budget</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">checkpoint_binary</span><span class=\"p\">(</span><span class=\"k\">start</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mid</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">left_budget</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">mid</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span>\n<span class=\"w\">           </span><span class=\"n\">checkpoint_binary</span><span class=\"p\">(</span><span class=\"n\">mid</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">end</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right_budget</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u8fd9\u79cd\u7b56\u7565\u4fdd\u8bc1\u91cd\u8ba1\u7b97\u6b21\u6570\u4e3a$O(\\log n)$\u3002</p>\n<p><strong>\u5b9e\u8df5\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>Checkpoint\u7c92\u5ea6\uff1a\u592a\u7ec6\u589e\u52a0\u5f00\u9500\uff0c\u592a\u7c97\u589e\u52a0\u91cd\u8ba1\u7b97</li>\n<li>\u5f02\u6b65Checkpoint\uff1a\u5229\u7528GPU\u8ba1\u7b97\u65f6\u5f02\u6b65\u4fdd\u5b58\u5230CPU/\u78c1\u76d8</li>\n<li>\u81ea\u9002\u5e94\u7b56\u7565\uff1a\u6839\u636e\u5185\u5b58\u538b\u529b\u52a8\u6001\u8c03\u6574checkpoint\u5bc6\u5ea6</li>\n</ul>\n<p>\u901a\u8fc7\u5408\u7406\u4f7f\u7528Checkpointing\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6709\u9650\u5185\u5b58\u4e0b\u5904\u7406\u4efb\u610f\u957f\u5ea6\u7684\u53ef\u5fae\u4eff\u771f\u3002</p>\n<h2 id=\"102\">10.2 \u81ea\u52a8\u5fae\u5206\u5b9e\u73b0</h2>\n<p>\u81ea\u52a8\u5fae\u5206\uff08Automatic Differentiation, AD\uff09\u662f\u53ef\u5fae\u7f16\u7a0b\u7684\u6838\u5fc3\u6280\u672f\u3002\u4e0e\u6570\u503c\u5fae\u5206\uff08\u6709\u9650\u5dee\u5206\uff09\u548c\u7b26\u53f7\u5fae\u5206\u4e0d\u540c\uff0cAD\u80fd\u591f\u9ad8\u6548\u4e14\u7cbe\u786e\u5730\u8ba1\u7b97\u5bfc\u6570\uff0c\u6ca1\u6709\u622a\u65ad\u8bef\u5dee\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6\u4ec5\u4e3a\u539f\u51fd\u6570\u7684\u5e38\u6570\u500d\u3002</p>\n<h3 id=\"1021\">10.2.1 \u8ba1\u7b97\u56fe\u6784\u5efa</h3>\n<p>\u81ea\u52a8\u5fae\u5206\u7684\u57fa\u7840\u662f\u5c06\u8ba1\u7b97\u8fc7\u7a0b\u8868\u793a\u4e3a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u5176\u4e2d\u8282\u70b9\u4ee3\u8868\u53d8\u91cf\uff0c\u8fb9\u4ee3\u8868\u64cd\u4f5c\u3002</p>\n<p><strong>\u57fa\u672c\u5143\u7d20</strong>\uff1a</p>\n<ul>\n<li><strong>\u53d8\u91cf\u8282\u70b9</strong>\uff1a\u8f93\u5165\u53c2\u6570\u3001\u4e2d\u95f4\u7ed3\u679c\u3001\u8f93\u51fa\u503c</li>\n<li><strong>\u64cd\u4f5c\u8282\u70b9</strong>\uff1a\u57fa\u672c\u8fd0\u7b97\uff08+\u3001-\u3001\u00d7\u3001\u00f7\uff09\u3001\u51fd\u6570\u8c03\u7528\uff08sin\u3001exp\uff09</li>\n<li><strong>\u8fb9</strong>\uff1a\u6570\u636e\u4f9d\u8d56\u5173\u7cfb</li>\n</ul>\n<p><strong>\u53cc\u6570\uff08Dual Number\uff09\u8868\u793a</strong>\uff1a\n\u5bf9\u4e8e\u524d\u5411\u6a21\u5f0fAD\uff0c\u6bcf\u4e2a\u53d8\u91cf\u540c\u65f6\u5b58\u50a8\u503c\u548c\u5bfc\u6570\uff1a\n$$\\tilde{x} = (x, \\dot{x}) = x + \\dot{x}\\epsilon$$\n\u5176\u4e2d$\\epsilon^2 = 0$\u3002\u8fd0\u7b97\u89c4\u5219\uff1a</p>\n<ul>\n<li>$\\tilde{x} + \\tilde{y} = (x + y, \\dot{x} + \\dot{y})$</li>\n<li>$\\tilde{x} \\times \\tilde{y} = (xy, x\\dot{y} + y\\dot{x})$</li>\n<li>$f(\\tilde{x}) = (f(x), f'(x)\\dot{x})$</li>\n</ul>\n<p><strong>\u8ba1\u7b97\u56fe\u793a\u4f8b</strong>\uff1a\n\u8003\u8651\u51fd\u6570$f(x, y) = x^2 + \\sin(xy)$\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"err\">\u2500\u252c\u2500</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">\u00d7</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"err\">\u2500</span><span class=\"w\"> </span><span class=\"n\">x\u00b2</span><span class=\"w\"> </span><span class=\"err\">\u2500\u2510</span>\n<span class=\"w\">   </span><span class=\"err\">\u2502</span><span class=\"w\">              </span><span class=\"err\">\u251c\u2500</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">+</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"err\">\u2500</span><span class=\"w\"> </span><span class=\"n\">f</span>\n<span class=\"w\">   </span><span class=\"err\">\u2514\u2500</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">\u00d7</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"err\">\u2500</span><span class=\"w\"> </span><span class=\"n\">xy</span><span class=\"w\"> </span><span class=\"err\">\u2500</span><span class=\"w\"> </span><span class=\"o\">[</span><span class=\"n\">sin</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"err\">\u2500\u2518</span>\n<span class=\"w\">     </span><span class=\"err\">\u2502</span>\n<span class=\"n\">y</span><span class=\"w\"> </span><span class=\"err\">\u2500\u2500\u2500\u2518</span>\n</code></pre></div>\n\n<p><strong>\u52a8\u6001\u56fevs\u9759\u6001\u56fe</strong>\uff1a</p>\n<ul>\n<li><strong>\u9759\u6001\u56fe</strong>\uff1a\u7f16\u8bd1\u65f6\u6784\u5efa\uff0c\u4f18\u5316\u673a\u4f1a\u591a\uff0c\u5982TensorFlow 1.x</li>\n<li><strong>\u52a8\u6001\u56fe</strong>\uff1a\u8fd0\u884c\u65f6\u6784\u5efa\uff0c\u7075\u6d3b\u6027\u9ad8\uff0c\u5982PyTorch\u3001Taichi</li>\n</ul>\n<p>Taichi\u4f7f\u7528\u9759\u6001\u7f16\u8bd1\u4e0e\u52a8\u6001\u6267\u884c\u7684\u6df7\u5408\u6a21\u5f0f\uff0c\u5728kernel\u7f16\u8bd1\u65f6\u6784\u5efa\u8ba1\u7b97\u56fe\uff0c\u8fd0\u884c\u65f6\u9ad8\u6548\u6267\u884c\u3002</p>\n<h3 id=\"1022-vs\">10.2.2 \u524d\u5411vs\u53cd\u5411\u4f20\u64ad</h3>\n<p><strong>\u524d\u5411\u6a21\u5f0f\uff08Forward Mode\uff09</strong>\uff1a\n\u8ba1\u7b97\u65b9\u5411\u4e0e\u539f\u51fd\u6570\u76f8\u540c\uff0c\u9002\u5408\u8f93\u5165\u7ef4\u5ea6\u5c0f\u4e8e\u8f93\u51fa\u7ef4\u5ea6\u7684\u60c5\u51b5\u3002</p>\n<p>\u5bf9\u4e8e$y = f(x)$\uff0c\u524d\u5411\u6a21\u5f0f\u8ba1\u7b97\uff1a\n$$\\dot{y} = \\frac{\\partial f}{\\partial x}\\dot{x}$$\n\u7b97\u6cd5\u6d41\u7a0b\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u5316\uff1a$\\dot{x}_i = e_i$\uff08\u7b2c$i$\u4e2a\u5355\u4f4d\u5411\u91cf\uff09</li>\n<li>\u524d\u5411\u8ba1\u7b97\uff1a\u5bf9\u6bcf\u4e2a\u64cd\u4f5c\u540c\u65f6\u8ba1\u7b97\u503c\u548c\u5bfc\u6570</li>\n<li>\u8f93\u51fa\uff1a\u5f97\u5230\u7b2c$i$\u5217\u7684Jacobian\u77e9\u9635</li>\n</ol>\n<p><strong>\u53cd\u5411\u6a21\u5f0f\uff08Reverse Mode\uff09</strong>\uff1a\n\u8ba1\u7b97\u65b9\u5411\u4e0e\u539f\u51fd\u6570\u76f8\u53cd\uff0c\u9002\u5408\u8f93\u51fa\u7ef4\u5ea6\u5c0f\u4e8e\u8f93\u5165\u7ef4\u5ea6\u7684\u60c5\u51b5\uff08\u6700\u5e38\u89c1\uff09\u3002</p>\n<p>\u5f15\u5165\u4f34\u968f\u53d8\u91cf$\\bar{v} = \\frac{\\partial \\mathcal{L}}{\\partial v}$\uff0c\u53cd\u5411\u6a21\u5f0f\u8ba1\u7b97\uff1a\n$$\\bar{x} = \\frac{\\partial f}{\\partial x}^T \\bar{y}$$\n\u7b97\u6cd5\u6d41\u7a0b\uff1a</p>\n<ol>\n<li>\u524d\u5411\u4f20\u64ad\uff1a\u8ba1\u7b97\u6240\u6709\u4e2d\u95f4\u503c</li>\n<li>\u521d\u59cb\u5316\uff1a$\\bar{y} = 1$</li>\n<li>\u53cd\u5411\u4f20\u64ad\uff1a\u4ece\u8f93\u51fa\u5230\u8f93\u5165\u8ba1\u7b97\u4f34\u968f\u53d8\u91cf</li>\n<li>\u7d2f\u79ef\u68af\u5ea6\uff1a$\\bar{x}_i += \\frac{\\partial v}{\\partial x_i}\\bar{v}$</li>\n</ol>\n<p><strong>\u57fa\u672c\u64cd\u4f5c\u7684\u53cd\u5411\u89c4\u5219</strong>\uff1a</p>\n<ul>\n<li>\u52a0\u6cd5\uff1a$z = x + y \\Rightarrow \\bar{x} += \\bar{z}, \\bar{y} += \\bar{z}$</li>\n<li>\u4e58\u6cd5\uff1a$z = xy \\Rightarrow \\bar{x} += y\\bar{z}, \\bar{y} += x\\bar{z}$</li>\n<li>\u9664\u6cd5\uff1a$z = x/y \\Rightarrow \\bar{x} += \\bar{z}/y, \\bar{y} -= x\\bar{z}/y^2$</li>\n<li>\u5e42\u51fd\u6570\uff1a$z = x^n \\Rightarrow \\bar{x} += nx^{n-1}\\bar{z}$</li>\n</ul>\n<h3 id=\"1023\">10.2.3 \u9ad8\u9636\u5bfc\u6570</h3>\n<p>\u8ba1\u7b97Hessian\u77e9\u9635$H_{ij} = \\frac{\\partial^2 f}{\\partial x_i \\partial x_j}$\u5bf9\u4e8e\u725b\u987f\u6cd5\u7b49\u4e8c\u9636\u4f18\u5316\u7b97\u6cd5\u81f3\u5173\u91cd\u8981\u3002</p>\n<p><strong>\u65b9\u6cd5\u4e00\uff1a\u5d4c\u5957\u5fae\u5206</strong>\n\u5bf9\u68af\u5ea6\u518d\u6b21\u5e94\u7528AD\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4e00\u9636\u5bfc\u6570</span>\n<span class=\"k\">def</span> <span class=\"nf\">grad_f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">autograd</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u4e8c\u9636\u5bfc\u6570</span>\n<span class=\"k\">def</span> <span class=\"nf\">hessian_f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">autograd</span><span class=\"p\">(</span><span class=\"n\">grad_f</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u65b9\u6cd5\u4e8c\uff1a\u524d\u5411\u5bf9\u53cd\u5411\uff08Forward-over-Reverse\uff09</strong></p>\n<ol>\n<li>\u53cd\u5411\u6a21\u5f0f\u8ba1\u7b97\u68af\u5ea6$g(x) = \\nabla f(x)$</li>\n<li>\u524d\u5411\u6a21\u5f0f\u8ba1\u7b97$Hv = \\nabla g(x) \\cdot v$</li>\n</ol>\n<p>\u8fd9\u79cd\u65b9\u6cd5\u8ba1\u7b97Hessian\u5411\u91cf\u79ef\u7684\u6210\u672c\u4ec5\u4e3a$O(1)$\u6b21\u51fd\u6570\u8bc4\u4f30\u3002</p>\n<p><strong>\u65b9\u6cd5\u4e09\uff1a\u8fb9\u5bf9\u8fb9\uff08Edge Pushing\uff09</strong>\n\u76f4\u63a5\u5728\u8ba1\u7b97\u56fe\u4e0a\u4f20\u64ad\u4e8c\u9636\u5bfc\u6570\u4fe1\u606f\uff1a\n$$\\frac{\\partial^2 f}{\\partial x_i \\partial x_j} = \\sum_{k} \\frac{\\partial f}{\\partial v_k} \\frac{\\partial^2 v_k}{\\partial x_i \\partial x_j} + \\sum_{k,l} \\frac{\\partial^2 f}{\\partial v_k \\partial v_l} \\frac{\\partial v_k}{\\partial x_i} \\frac{\\partial v_l}{\\partial x_j}$$\n<strong>\u7a00\u758fHessian\u7684\u5229\u7528</strong>\uff1a\n\u7269\u7406\u95ee\u9898\u7684Hessian\u901a\u5e38\u7a00\u758f\uff08\u5982FEM\u521a\u5ea6\u77e9\u9635\uff09\u3002\u53ef\u4ee5\u901a\u8fc7\u56fe\u7740\u8272\uff08Graph Coloring\uff09\u51cf\u5c11\u8ba1\u7b97\uff1a</p>\n<ul>\n<li>\u5c06\u53d8\u91cf\u5206\u7ec4\uff0c\u540c\u7ec4\u53d8\u91cf\u7684Hessian\u5143\u7d20\u4e0d\u91cd\u53e0</li>\n<li>\u6bcf\u7ec4\u53ea\u9700\u4e00\u6b21\u524d\u5411\u4f20\u64ad</li>\n<li>\u603b\u8ba1\u7b97\u91cf\u4ece$O(n)$\u964d\u81f3$O(\\chi)$\uff0c\u5176\u4e2d$\\chi$\u662f\u7740\u8272\u6570</li>\n</ul>\n<h3 id=\"1024-ad\">10.2.4 \u6df7\u5408\u6a21\u5f0fAD</h3>\n<p>\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7eaf\u524d\u5411\u6216\u7eaf\u53cd\u5411\u6a21\u5f0f\u90fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u6df7\u5408\u6a21\u5f0f\u6839\u636e\u95ee\u9898\u7ed3\u6784\u9009\u62e9\u6700\u4f73\u7b56\u7565\u3002</p>\n<p><strong>\u77e9\u9635\u94fe\u5f0f\u6cd5\u5219</strong>\uff1a\n\u5bf9\u4e8e\u590d\u5408\u51fd\u6570$h = f \\circ g$\uff0cJacobian\u77e9\u9635\u6ee1\u8db3\uff1a\n$$J_h = J_f J_g$$\n\u77e9\u9635\u4e58\u6cd5\u7684\u987a\u5e8f\u5f71\u54cd\u8ba1\u7b97\u91cf\u3002\u8bbe$J_f \\in \\mathbb{R}^{m \\times k}$\uff0c$J_g \\in \\mathbb{R}^{k \\times n}$\uff1a</p>\n<ul>\n<li>\u5de6\u4e58$(J_f J_g)$\uff1a$O(mkn)$</li>\n<li>\u53f3\u4e58$J_f (J_g)$\uff1a$O(mkn)$</li>\n<li>\u4f46\u5982\u679c\u5148\u8ba1\u7b97$v^T J_f$\uff1a$O(mk + kn)$</li>\n</ul>\n<p><strong>\u6700\u4f18Jacobian\u7d2f\u79ef</strong>\uff1a\nBauer\u5b9a\u7406\uff1a\u5bfb\u627e\u6700\u4f18\u8ba1\u7b97\u987a\u5e8f\u662fNP\u56f0\u96be\u7684\u3002\u5b9e\u7528\u542f\u53d1\u5f0f\uff1a</p>\n<ol>\n<li><strong>\u8d2a\u5fc3\u9009\u62e9</strong>\uff1a\u6bcf\u6b65\u9009\u62e9\u8ba1\u7b97\u91cf\u6700\u5c0f\u7684\u64cd\u4f5c</li>\n<li><strong>\u52a8\u6001\u89c4\u5212</strong>\uff1a\u5bf9\u5c0f\u89c4\u6a21\u95ee\u9898\u6c42\u89e3\u6700\u4f18\u987a\u5e8f</li>\n<li><strong>\u9884\u8bbe\u6a21\u5f0f</strong>\uff1a\u6839\u636e\u95ee\u9898\u7c7b\u578b\u9009\u62e9\u524d\u5411/\u53cd\u5411/\u6df7\u5408</li>\n</ol>\n<p><strong>\u7a00\u758f\u6027\u5229\u7528</strong>\uff1a\n\u7269\u7406\u4eff\u771f\u4e2d\u7684Jacobian\u901a\u5e38\u9ad8\u5ea6\u7a00\u758f\uff1a</p>\n<ul>\n<li><strong>\u538b\u7f29\u5b58\u50a8</strong>\uff1a\u53ea\u5b58\u50a8\u975e\u96f6\u5143\u7d20</li>\n<li><strong>\u7a00\u758fAD</strong>\uff1a\u53ea\u8ba1\u7b97\u975e\u96f6\u5143\u7d20\u7684\u5bfc\u6570</li>\n<li><strong>\u7b26\u53f7\u5206\u6790</strong>\uff1a\u9884\u5148\u786e\u5b9a\u7a00\u758f\u6a21\u5f0f</li>\n</ul>\n<p><strong>\u5b9e\u73b0\u6280\u5de7</strong>\uff1a</p>\n<ol>\n<li><strong>\u8868\u8fbe\u5f0f\u6a21\u677f</strong>\uff1a\u5ef6\u8fdf\u8ba1\u7b97\uff0c\u4f18\u5316\u6574\u4e2a\u8868\u8fbe\u5f0f</li>\n<li><strong>\u7b97\u5b50\u878d\u5408</strong>\uff1a\u5c06\u591a\u4e2a\u64cd\u4f5c\u5408\u5e76\uff0c\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee</li>\n<li><strong>\u5185\u5b58\u6c60</strong>\uff1a\u9884\u5206\u914d\u5185\u5b58\uff0c\u907f\u514d\u52a8\u6001\u5206\u914d\u5f00\u9500</li>\n<li><strong>\u5e76\u884c\u5316</strong>\uff1a\u72ec\u7acb\u7684\u5bfc\u6570\u8ba1\u7b97\u53ef\u4ee5\u5e76\u884c\u6267\u884c</li>\n</ol>\n<p>\u901a\u8fc7\u5408\u7406\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\uff0c\u73b0\u4ee3AD\u7cfb\u7edf\u53ef\u4ee5\u8fbe\u5230\u63a5\u8fd1\u624b\u5199\u5bfc\u6570\u4ee3\u7801\u7684\u6027\u80fd\uff0c\u540c\u65f6\u4fdd\u6301\u81ea\u52a8\u5316\u7684\u4fbf\u5229\u6027\u3002</p>\n<h2 id=\"103\">10.3 \u4f18\u5316\u7b97\u6cd5</h2>\n<p>\u6709\u4e86\u68af\u5ea6\u4fe1\u606f\u540e\uff0c\u9009\u62e9\u5408\u9002\u7684\u4f18\u5316\u7b97\u6cd5\u81f3\u5173\u91cd\u8981\u3002\u7269\u7406\u4eff\u771f\u7684\u4f18\u5316\u95ee\u9898\u901a\u5e38\u5177\u6709\u7279\u6b8a\u7ed3\u6784\uff1a\u9ad8\u7ef4\u3001\u975e\u51f8\u3001\u5b58\u5728\u7ea6\u675f\u3001\u8ba1\u7b97\u6602\u8d35\u3002\u672c\u8282\u4ecb\u7ecd\u5404\u7c7b\u4f18\u5316\u7b97\u6cd5\u53ca\u5176\u5728\u7269\u7406\u95ee\u9898\u4e2d\u7684\u5e94\u7528\u3002</p>\n<h3 id=\"1031\">10.3.1 \u68af\u5ea6\u4e0b\u964d\u53d8\u79cd</h3>\n<p><strong>\u57fa\u7840\u68af\u5ea6\u4e0b\u964d</strong>\uff1a\n$$\\theta_{k+1} = \\theta_k - \\alpha \\nabla f(\\theta_k)$$\n\u5b66\u4e60\u7387$\\alpha$\u7684\u9009\u62e9\u81f3\u5173\u91cd\u8981\u3002\u8fc7\u5927\u5bfc\u81f4\u632f\u8361\uff0c\u8fc7\u5c0f\u6536\u655b\u7f13\u6162\u3002</p>\n<p><strong>\u52a8\u91cf\u6cd5\uff08Momentum\uff09</strong>\uff1a\n\u5f15\u5165\u901f\u5ea6\u53d8\u91cf\u7d2f\u79ef\u5386\u53f2\u68af\u5ea6\u4fe1\u606f\uff1a\n$$v_{k+1} = \\beta v_k + (1-\\beta) \\nabla f(\\theta_k)$$\n$$\\theta_{k+1} = \\theta_k - \\alpha v_{k+1}$$\n\u7269\u7406\u89e3\u91ca\uff1a\u5c06\u4f18\u5316\u8fc7\u7a0b\u89c6\u4e3a\u963b\u5c3c\u7cfb\u7edf\u4e2d\u7684\u8d28\u70b9\u8fd0\u52a8\uff0c$\\beta$\u662f\u963b\u5c3c\u7cfb\u6570\u3002</p>\n<p><strong>Nesterov\u52a0\u901f\u68af\u5ea6\uff08NAG\uff09</strong>\uff1a\n\u5148\u6839\u636e\u52a8\u91cf\"\u5c55\u671b\"\u672a\u6765\u4f4d\u7f6e\uff0c\u518d\u8ba1\u7b97\u68af\u5ea6\uff1a\n$$v_{k+1} = \\beta v_k + (1-\\beta) \\nabla f(\\theta_k - \\alpha \\beta v_k)$$\n$$\\theta_{k+1} = \\theta_k - \\alpha v_{k+1}$$\n\u6536\u655b\u901f\u5ea6\u4ece$O(1/k)$\u63d0\u5347\u5230$O(1/k^2)$\u3002</p>\n<p><strong>Adam\u4f18\u5316\u5668</strong>\uff1a\n\u81ea\u9002\u5e94\u5b66\u4e60\u7387\uff0c\u5bf9\u6bcf\u4e2a\u53c2\u6570\u7ef4\u62a4\u4e00\u9636\u77e9\u548c\u4e8c\u9636\u77e9\u4f30\u8ba1\uff1a\n$$m_{k+1} = \\beta_1 m_k + (1-\\beta_1) \\nabla f(\\theta_k)$$\n$$v_{k+1} = \\beta_2 v_k + (1-\\beta_2) [\\nabla f(\\theta_k)]^2$$\n$$\\hat{m} = m_{k+1}/(1-\\beta_1^{k+1}), \\quad \\hat{v} = v_{k+1}/(1-\\beta_2^{k+1})$$\n$$\\theta_{k+1} = \\theta_k - \\alpha \\hat{m}/(\\sqrt{\\hat{v}} + \\epsilon)$$\n\u9ed8\u8ba4\u53c2\u6570\uff1a$\\beta_1=0.9$\uff0c$\\beta_2=0.999$\uff0c$\\epsilon=10^{-8}$\u3002</p>\n<p><strong>RMSprop</strong>\uff1a\n\u4ec5\u4f7f\u7528\u4e8c\u9636\u77e9\uff0c\u9002\u5408\u975e\u5e73\u7a33\u76ee\u6807\uff1a\n$$v_{k+1} = \\beta v_k + (1-\\beta) [\\nabla f(\\theta_k)]^2$$\n$$\\theta_{k+1} = \\theta_k - \\alpha \\nabla f(\\theta_k)/\\sqrt{v_{k+1} + \\epsilon}$$\n<strong>AdaGrad</strong>\uff1a\n\u7d2f\u79ef\u6240\u6709\u5386\u53f2\u68af\u5ea6\u5e73\u65b9\uff1a\n$$G_{k+1} = G_k + [\\nabla f(\\theta_k)]^2$$\n$$\\theta_{k+1} = \\theta_k - \\alpha \\nabla f(\\theta_k)/\\sqrt{G_{k+1} + \\epsilon}$$\n\u9002\u5408\u7a00\u758f\u68af\u5ea6\uff0c\u4f46\u5b66\u4e60\u7387\u5355\u8c03\u9012\u51cf\u53ef\u80fd\u8fc7\u65e9\u505c\u6b62\u3002</p>\n<h3 id=\"1032\">10.3.2 \u62df\u725b\u987f\u65b9\u6cd5</h3>\n<p>\u725b\u987f\u6cd5\u4f7f\u7528\u4e8c\u9636\u4fe1\u606f\u52a0\u901f\u6536\u655b\uff1a\n$$\\theta_{k+1} = \\theta_k - H^{-1} \\nabla f(\\theta_k)$$\n\u5176\u4e2d$H$\u662fHessian\u77e9\u9635\u3002\u76f4\u63a5\u8ba1\u7b97$H$\u6210\u672c\u9ad8\u6602\uff0c\u62df\u725b\u987f\u65b9\u6cd5\u901a\u8fc7\u5386\u53f2\u4fe1\u606f\u8fd1\u4f3c\u3002</p>\n<p><strong>BFGS\u7b97\u6cd5</strong>\uff1a\n\u7ef4\u62a4Hessian\u9006\u7684\u8fd1\u4f3c$B_k \\approx H^{-1}$\uff1a\n$$s_k = \\theta_{k+1} - \\theta_k, \\quad y_k = \\nabla f(\\theta_{k+1}) - \\nabla f(\\theta_k)$$\n$$B_{k+1} = (I - \\rho_k s_k y_k^T) B_k (I - \\rho_k y_k s_k^T) + \\rho_k s_k s_k^T$$\n\u5176\u4e2d$\\rho_k = 1/(y_k^T s_k)$\u3002</p>\n<p><strong>L-BFGS\uff08\u9650\u5236\u5185\u5b58BFGS\uff09</strong>\uff1a\n\u53ea\u5b58\u50a8\u6700\u8fd1$m$\u6b65\u7684$(s_k, y_k)$\u5bf9\uff0c\u901a\u8fc7\u4e24\u6b65\u9012\u5f52\u8ba1\u7b97\u641c\u7d22\u65b9\u5411\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u7b2c\u4e00\u6b65</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4ece\u53f3\u5411\u5de6\u9012\u5f52</span>\n<span class=\"n\">q</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">\u2207</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">\u03b8</span><span class=\"p\">)</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">...,</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"nl\">m</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"n\">\u03b1</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">\u03c1</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"n\">\u1d40</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">q</span>\n<span class=\"w\">    </span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">\u03b1</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u521d\u59cb\u5316</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4f7f\u7528\u7b80\u5355\u7684\u5bf9\u89d2\u8fd1\u4f3c</span>\n<span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">H\u2080</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">q</span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u7b2c\u4e8c\u6b65</span><span class=\"err\">\uff1a</span><span class=\"n\">\u4ece\u5de6\u5411\u53f3\u9012\u5f52</span><span class=\"w\">  </span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">...,</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"err\">:</span>\n<span class=\"w\">    </span><span class=\"n\">\u03b2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">\u03c1</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"n\">\u1d40</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">r</span>\n<span class=\"w\">    </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">\u03b1</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">\u03b2</span><span class=\"p\">)</span>\n\n<span class=\"n\">\u641c\u7d22\u65b9\u5411</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">r</span>\n</code></pre></div>\n\n<p>\u5185\u5b58\u9700\u6c42\uff1a$O(mn)$\uff0c\u5176\u4e2d$m$\u901a\u5e38\u53d63-20\u3002</p>\n<p><strong>\u7ebf\u641c\u7d22\u7b56\u7565</strong>\uff1a\n\u62df\u725b\u987f\u65b9\u6cd5\u9700\u8981\u7ebf\u641c\u7d22\u786e\u5b9a\u6b65\u957f\uff1a</p>\n<ol>\n<li><strong>Armijo\u6761\u4ef6</strong>\uff1a$f(\\theta + \\alpha p) \\leq f(\\theta) + c_1 \\alpha \\nabla f(\\theta)^T p$</li>\n<li><strong>Wolfe\u6761\u4ef6</strong>\uff1a\u52a0\u4e0a\u66f2\u7387\u6761\u4ef6$\\nabla f(\\theta + \\alpha p)^T p \\geq c_2 \\nabla f(\\theta)^T p$</li>\n<li><strong>\u5f3aWolfe\u6761\u4ef6</strong>\uff1a$|\\nabla f(\\theta + \\alpha p)^T p| \\leq c_2 |\\nabla f(\\theta)^T p|$</li>\n</ol>\n<p>\u5178\u578b\u53c2\u6570\uff1a$c_1 = 10^{-4}$\uff0c$c_2 = 0.9$\u3002</p>\n<h3 id=\"1033\">10.3.3 \u7ea6\u675f\u4f18\u5316</h3>\n<p>\u7269\u7406\u95ee\u9898\u5e38\u5e26\u7ea6\u675f\uff0c\u5982\u4e0d\u53ef\u538b\u7f29\u6027\u3001\u63a5\u89e6\u7ea6\u675f\u3001\u5173\u8282\u9650\u5236\u7b49\u3002</p>\n<p><strong>\u95ee\u9898\u5f62\u5f0f</strong>\uff1a\n$$\\min_\\theta f(\\theta) \\quad \\text{s.t.} \\quad g_i(\\theta) \\leq 0, \\quad h_j(\\theta) = 0$$\n<strong>\u7f5a\u51fd\u6570\u6cd5</strong>\uff1a\n\u5c06\u7ea6\u675f\u8f6c\u5316\u4e3a\u7f5a\u9879\uff1a\n$$f_{penalty}(\\theta) = f(\\theta) + \\mu \\sum_i \\max(0, g_i(\\theta))^2 + \\mu \\sum_j h_j(\\theta)^2$$\n\u968f\u7740$\\mu \\to \\infty$\uff0c\u89e3\u6536\u655b\u5230\u539f\u95ee\u9898\u3002\u4f46$\\mu$\u8fc7\u5927\u5bfc\u81f4\u75c5\u6001\u3002</p>\n<p><strong>\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u6cd5\uff08ALM\uff09</strong>\uff1a\n\u7ed3\u5408\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u548c\u7f5a\u51fd\u6570\uff1a\n$$\\mathcal{L}_\\mu(\\theta, \\lambda, \\nu) = f(\\theta) + \\sum_i \\lambda_i g_i(\\theta) + \\frac{\\mu}{2}\\sum_i \\max(0, g_i(\\theta))^2 + \\sum_j \\nu_j h_j(\\theta) + \\frac{\\mu}{2}\\sum_j h_j(\\theta)^2$$\n\u4ea4\u66ff\u66f4\u65b0\uff1a</p>\n<ol>\n<li>\u56fa\u5b9a$(\\lambda, \\nu)$\uff0c\u4f18\u5316$\\theta$</li>\n<li>\u66f4\u65b0\u4e58\u5b50\uff1a$\\lambda_i \\leftarrow \\max(0, \\lambda_i + \\mu g_i(\\theta))$\uff0c$\\nu_j \\leftarrow \\nu_j + \\mu h_j(\\theta)$</li>\n</ol>\n<p><strong>\u5185\u70b9\u6cd5\uff08Interior Point Method\uff09</strong>\uff1a\n\u4f7f\u7528\u969c\u788d\u51fd\u6570\u5904\u7406\u4e0d\u7b49\u5f0f\u7ea6\u675f\uff1a\n$$f_{barrier}(\\theta) = f(\\theta) - \\tau \\sum_i \\log(-g_i(\\theta))$$\n\u968f\u7740$\\tau \\to 0$\uff0c\u89e3\u6536\u655b\u3002\u9700\u8981\u4fdd\u6301\u4e25\u683c\u53ef\u884c\u6027$g_i(\\theta) &lt; 0$\u3002</p>\n<p><strong>\u6295\u5f71\u68af\u5ea6\u6cd5</strong>\uff1a\n\u6bcf\u6b65\u540e\u6295\u5f71\u5230\u53ef\u884c\u57df\uff1a\n$$\\theta_{k+1} = \\Pi_\\mathcal{C}[\\theta_k - \\alpha \\nabla f(\\theta_k)]$$\n\u5bf9\u4e8e\u76d2\u7ea6\u675f$a \\leq \\theta \\leq b$\uff0c\u6295\u5f71\u7b80\u5355\uff1a\n$$[\\Pi_\\mathcal{C}(\\theta)]_i = \\max(a_i, \\min(b_i, \\theta_i))$$</p>\n<h3 id=\"1034\">10.3.4 \u968f\u673a\u4f18\u5316</h3>\n<p>\u5f53\u68af\u5ea6\u8ba1\u7b97\u6602\u8d35\u6216\u5b58\u5728\u566a\u58f0\u65f6\uff0c\u968f\u673a\u4f18\u5316\u65b9\u6cd5\u66f4\u5b9e\u7528\u3002</p>\n<p><strong>\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff08SGD\uff09</strong>\uff1a\n\u4f7f\u7528\u68af\u5ea6\u7684\u65e0\u504f\u4f30\u8ba1\uff1a\n$$\\theta_{k+1} = \\theta_k - \\alpha_k \\tilde{\\nabla} f(\\theta_k)$$\n\u5176\u4e2d$\\mathbb{E}[\\tilde{\\nabla} f] = \\nabla f$\u3002\u5b66\u4e60\u7387\u9700\u6ee1\u8db3Robbins-Monro\u6761\u4ef6\uff1a\n$$\\sum_k \\alpha_k = \\infty, \\quad \\sum_k \\alpha_k^2 &lt; \\infty$$\n<strong>\u65b9\u5dee\u7f29\u51cf\u6280\u672f</strong>\uff1a</p>\n<ul>\n<li><strong>SVRG</strong>\uff1a\u5468\u671f\u6027\u8ba1\u7b97\u5b8c\u6574\u68af\u5ea6\u4f5c\u4e3a\u951a\u70b9</li>\n<li><strong>SAGA</strong>\uff1a\u5b58\u50a8\u6bcf\u4e2a\u6837\u672c\u7684\u5386\u53f2\u68af\u5ea6</li>\n<li><strong>SAG</strong>\uff1a\u4f7f\u7528\u5386\u53f2\u68af\u5ea6\u7684\u5e73\u5747</li>\n</ul>\n<p><strong>\u534f\u65b9\u5dee\u77e9\u9635\u81ea\u9002\u5e94\uff08CMA-ES\uff09</strong>\uff1a\n\u7ef4\u62a4\u9ad8\u65af\u5206\u5e03$\\mathcal{N}(\\mu, \\sigma^2 C)$\u91c7\u6837\u5019\u9009\u89e3\uff1a</p>\n<ol>\n<li>\u91c7\u6837\uff1a$x_i \\sim \\mathcal{N}(\\mu, \\sigma^2 C)$</li>\n<li>\u8bc4\u4f30\u5e76\u6392\u5e8f</li>\n<li>\u66f4\u65b0\u5747\u503c\uff1a$\\mu \\leftarrow \\sum_{i=1}^{\\lambda} w_i x_{i:\u03bb}$</li>\n<li>\u66f4\u65b0\u534f\u65b9\u5dee\uff1a\u8003\u8651\u8fdb\u5316\u8def\u5f84\u548c\u79e9-1\u3001\u79e9-$\\mu$\u66f4\u65b0</li>\n</ol>\n<p>\u9002\u5408\u975e\u51f8\u3001\u591a\u5cf0\u3001\u566a\u58f0\u95ee\u9898\uff0c\u4f46\u91c7\u6837\u6548\u7387\u4f4e\u3002</p>\n<p><strong>\u7c92\u5b50\u7fa4\u4f18\u5316\uff08PSO\uff09</strong>\uff1a\n\u6a21\u62df\u9e1f\u7fa4\u89c5\u98df\u884c\u4e3a\uff1a\n$$v_i \\leftarrow \\omega v_i + c_1 r_1 (p_i - x_i) + c_2 r_2 (g - x_i)$$\n$$x_i \\leftarrow x_i + v_i$$\n\u5176\u4e2d$p_i$\u662f\u7c92\u5b50\u5386\u53f2\u6700\u4f18\uff0c$g$\u662f\u5168\u5c40\u6700\u4f18\u3002</p>\n<p><strong>\u6a21\u62df\u9000\u706b\uff08SA\uff09</strong>\uff1a\n\u4ee5\u6982\u7387\u63a5\u53d7\u52a3\u89e3\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\uff1a\n$$P(accept) = \\begin{cases}\n1 &amp; \\text{if } f(x_{new}) &lt; f(x_{current}) \\\\\n\\exp(-(f(x_{new}) - f(x_{current}))/T) &amp; \\text{otherwise}\n\\end{cases}$$\n\u6e29\u5ea6$T$\u9010\u6e10\u964d\u4f4e\uff0c\u6700\u7ec8\u6536\u655b\u5230\u5168\u5c40\u6700\u4f18\uff08\u7406\u8bba\u4e0a\uff09\u3002</p>\n<p><strong>\u5b9e\u8df5\u5efa\u8bae</strong>\uff1a</p>\n<ol>\n<li><strong>\u95ee\u9898\u89c4\u6a21\u5c0f\uff08&lt;100\u7ef4\uff09</strong>\uff1a\u62df\u725b\u987f\u65b9\u6cd5\uff08L-BFGS\uff09</li>\n<li><strong>\u95ee\u9898\u89c4\u6a21\u5927\u4f46\u5149\u6ed1</strong>\uff1aAdam\u6216\u5176\u53d8\u79cd</li>\n<li><strong>\u5b58\u5728\u7ea6\u675f</strong>\uff1a\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u6216\u6295\u5f71\u65b9\u6cd5</li>\n<li><strong>\u975e\u51f8\u591a\u5cf0</strong>\uff1aCMA-ES\u6216\u591a\u8d77\u70b9\u5c40\u90e8\u641c\u7d22</li>\n<li><strong>\u68af\u5ea6\u566a\u58f0\u5927</strong>\uff1a\u65b9\u5dee\u7f29\u51cfSGD\u6216\u65e0\u68af\u5ea6\u65b9\u6cd5</li>\n</ol>\n<h2 id=\"104\">10.4 \u9006\u95ee\u9898\u6c42\u89e3</h2>\n<p>\u9006\u95ee\u9898\u5728\u7269\u7406\u4eff\u771f\u4e2d\u65e0\u5904\u4e0d\u5728\uff1a\u4ece\u89c2\u6d4b\u6570\u636e\u63a8\u65ad\u7cfb\u7edf\u53c2\u6570\u3001\u8bbe\u8ba1\u63a7\u5236\u7b56\u7565\u3001\u8bc6\u522b\u6750\u6599\u5c5e\u6027\u3002\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u662f\u4e0d\u9002\u5b9a\u7684\uff08ill-posed\uff09\uff0c\u9700\u8981\u6b63\u5219\u5316\u6280\u672f\u4fdd\u8bc1\u89e3\u7684\u7a33\u5b9a\u6027\u548c\u552f\u4e00\u6027\u3002</p>\n<h3 id=\"1041\">10.4.1 \u53c2\u6570\u8bc6\u522b</h3>\n<p>\u53c2\u6570\u8bc6\u522b\u662f\u6700\u57fa\u672c\u7684\u9006\u95ee\u9898\uff1a\u7ed9\u5b9a\u7cfb\u7edf\u54cd\u5e94\uff0c\u63a8\u65ad\u5185\u5728\u53c2\u6570\u3002</p>\n<p><strong>\u95ee\u9898\u8bbe\u5b9a</strong>\uff1a\n\u8bbe\u7cfb\u7edf\u7531\u53c2\u6570$\\theta$\u63a7\u5236\uff0c\u4ea7\u751f\u89c2\u6d4b$y = \\mathcal{F}(\\theta) + \\epsilon$\uff0c\u5176\u4e2d$\\mathcal{F}$\u662f\u524d\u5411\u6a21\u578b\uff0c$\\epsilon$\u662f\u6d4b\u91cf\u566a\u58f0\u3002\u76ee\u6807\u662f\u4ece\u89c2\u6d4b$y_{obs}$\u4f30\u8ba1$\\theta$\u3002</p>\n<p><strong>\u6700\u5c0f\u4e8c\u4e58\u6846\u67b6</strong>\uff1a\n$$\\min_\\theta |y_{obs} - \\mathcal{F}(\\theta)|^2_2$$\n\u5bf9\u4e8e\u7ebf\u6027\u7cfb\u7edf$y = A\\theta$\uff0c\u89e3\u4e3a$\\theta = (A^T A)^{-1} A^T y_{obs}$\u3002\u4f46\u7269\u7406\u7cfb\u7edf\u901a\u5e38\u9ad8\u5ea6\u975e\u7ebf\u6027\u3002</p>\n<p><strong>\u8d1d\u53f6\u65af\u6846\u67b6</strong>\uff1a\n\u5f15\u5165\u5148\u9a8c$p(\\theta)$\uff0c\u901a\u8fc7\u8d1d\u53f6\u65af\u5b9a\u7406\uff1a\n$$p(\\theta|y_{obs}) \\propto p(y_{obs}|\\theta) p(\\theta)$$\n\u6700\u5927\u540e\u9a8c\u4f30\u8ba1\uff08MAP\uff09\uff1a\n$$\\theta_{MAP} = \\arg\\max_\\theta \\log p(y_{obs}|\\theta) + \\log p(\\theta)$$\n<strong>\u6750\u6599\u53c2\u6570\u8bc6\u522b\u5b9e\u4f8b</strong>\uff1a\n\u8003\u8651\u5f39\u6027\u6750\u6599\uff0c\u4ece\u4f4d\u79fb\u573a\u63a8\u65ad\u6768\u6c0f\u6a21\u91cf$E$\u548c\u6cca\u677e\u6bd4$\\nu$\uff1a</p>\n<ol>\n<li>\u65bd\u52a0\u5df2\u77e5\u8f7d\u8377$f$</li>\n<li>\u6d4b\u91cf\u4f4d\u79fb\u573a$u_{obs}$</li>\n<li>\u6700\u5c0f\u5316\uff1a$\\mathcal{L}(E, \\nu) = |u_{FEM}(E, \\nu) - u_{obs}|^2 + \\alpha(E^2 + \\nu^2)$</li>\n</ol>\n<p><strong>\u591a\u5c3a\u5ea6\u53c2\u6570\u573a</strong>\uff1a\n\u5f53\u53c2\u6570\u662f\u7a7a\u95f4\u53d8\u5316\u7684\u573a$\\theta(x)$\u65f6\uff0c\u95ee\u9898\u7ef4\u5ea6\u7206\u70b8\u3002\u4f7f\u7528\u964d\u7ef4\u8868\u793a\uff1a\n$$\\theta(x) = \\sum_{i=1}^n c_i \\phi_i(x)$$\n\u5176\u4e2d$\\phi_i$\u662f\u57fa\u51fd\u6570\uff08\u5982B\u6837\u6761\u3001\u5f84\u5411\u57fa\u51fd\u6570\uff09\u3002</p>\n<h3 id=\"1042\">10.4.2 \u521d\u59cb\u6761\u4ef6\u4f18\u5316</h3>\n<p>\u52a8\u529b\u5b66\u7cfb\u7edf\u5bf9\u521d\u59cb\u6761\u4ef6\u6781\u5176\u654f\u611f\u3002\u521d\u59cb\u6761\u4ef6\u4f18\u5316\u5728\u8f68\u8ff9\u89c4\u5212\u3001\u52a8\u753b\u751f\u6210\u4e2d\u81f3\u5173\u91cd\u8981\u3002</p>\n<p><strong>\u8f68\u8ff9\u5339\u914d\u95ee\u9898</strong>\uff1a\n\u7ed9\u5b9a\u76ee\u6807\u8f68\u8ff9$x_{target}(t)$\uff0c\u5bfb\u627e\u521d\u59cb\u6761\u4ef6$(x_0, v_0)$\u4f7f\u7cfb\u7edf\u8f68\u8ff9\u6700\u63a5\u8fd1\u76ee\u6807\uff1a\n$$\\min_{x_0, v_0} \\int_0^T |x(t) - x_{target}(t)|^2 dt$$\n\u5176\u4e2d$x(t)$\u6ee1\u8db3\u52a8\u529b\u5b66\u65b9\u7a0b$\\ddot{x} = f(x, \\dot{x}, t)$\u3002</p>\n<p><strong>\u6253\u9776\u6cd5\uff08Shooting Method\uff09</strong>\uff1a</p>\n<ol>\n<li>\u53c2\u6570\u5316\u521d\u59cb\u6761\u4ef6</li>\n<li>\u524d\u5411\u79ef\u5206\u5f97\u5230\u8f68\u8ff9</li>\n<li>\u8ba1\u7b97\u76ee\u6807\u51fd\u6570</li>\n<li>\u4f7f\u7528\u4f34\u968f\u65b9\u6cd5\u8ba1\u7b97\u68af\u5ea6</li>\n<li>\u66f4\u65b0\u521d\u59cb\u6761\u4ef6</li>\n</ol>\n<p><strong>\u591a\u91cd\u6253\u9776\u6cd5</strong>\uff1a\n\u957f\u65f6\u95f4\u8f68\u8ff9\u5bf9\u521d\u59cb\u6761\u4ef6\u8fc7\u4e8e\u654f\u611f\u3002\u5c06\u65f6\u95f4\u533a\u95f4$[0, T]$\u5206\u5272\u4e3a$[t_i, t_{i+1}]$\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u5f15\u5165\u51b3\u7b56\u53d8\u91cf\uff1a\n$$\\min_{x_i, v_i} \\sum_{i=0}^{N-1} \\int_{t_i}^{t_{i+1}} |x(t) - x_{target}(t)|^2 dt$$\n\u7ea6\u675f\u6761\u4ef6\uff1a\u8f68\u8ff9\u5728\u8282\u70b9\u5904\u8fde\u7eed\u3002</p>\n<p><strong>\u7a00\u758f\u6027\u5229\u7528</strong>\uff1a\n\u521d\u59cb\u6761\u4ef6\u901a\u5e38\u53ea\u5f71\u54cd\u5c40\u90e8\u533a\u57df\u3002\u4f7f\u7528\u7a00\u758f\u8868\u793a\uff1a</p>\n<ul>\n<li><strong>\u4e3b\u52a8\u96c6\u8bc6\u522b</strong>\uff1a\u786e\u5b9a\u54ea\u4e9b\u81ea\u7531\u5ea6\u9700\u8981\u4f18\u5316</li>\n<li><strong>\u5206\u5c42\u4f18\u5316</strong>\uff1a\u5148\u4f18\u5316\u7c97\u7f51\u683c\uff0c\u518d\u7ec6\u5316</li>\n<li><strong>\u5c40\u90e8\u652f\u6491</strong>\uff1a\u4f7f\u7528\u7d27\u652f\u6491\u57fa\u51fd\u6570</li>\n</ul>\n<h3 id=\"1043\">10.4.3 \u63a7\u5236\u95ee\u9898</h3>\n<p>\u63a7\u5236\u95ee\u9898\u5bfb\u627e\u65f6\u53d8\u8f93\u5165$u(t)$\u4f7f\u7cfb\u7edf\u8fbe\u5230\u671f\u671b\u72b6\u6001\u3002</p>\n<p><strong>\u6700\u4f18\u63a7\u5236\u6846\u67b6</strong>\uff1a\n$$\\min_{u(t)} \\int_0^T L(x(t), u(t), t) dt + \\Phi(x(T))$$\n$$\\text{s.t.} \\quad \\dot{x} = f(x, u, t), \\quad x(0) = x_0$$\n\u5176\u4e2d$L$\u662f\u8fd0\u884c\u6210\u672c\uff0c$\\Phi$\u662f\u7ec8\u7aef\u6210\u672c\u3002</p>\n<p><strong>Pontryagin\u6700\u5927\u503c\u539f\u7406</strong>\uff1a\n\u5f15\u5165\u54c8\u5bc6\u987f\u51fd\u6570\uff1a\n$$H(x, u, \\lambda, t) = L(x, u, t) + \\lambda^T f(x, u, t)$$\n\u6700\u4f18\u63a7\u5236\u6ee1\u8db3\uff1a</p>\n<ul>\n<li>\u72b6\u6001\u65b9\u7a0b\uff1a$\\dot{x} = \\partial H/\\partial \\lambda$</li>\n<li>\u4f34\u968f\u65b9\u7a0b\uff1a$\\dot{\\lambda} = -\\partial H/\\partial x$</li>\n<li>\u6700\u4f18\u6027\u6761\u4ef6\uff1a$\\partial H/\\partial u = 0$</li>\n</ul>\n<p><strong>\u76f4\u63a5\u6cd5vs\u95f4\u63a5\u6cd5</strong>\uff1a</p>\n<ul>\n<li><strong>\u95f4\u63a5\u6cd5</strong>\uff1a\u6c42\u89e3\u6700\u4f18\u6027\u6761\u4ef6\uff08\u8fb9\u503c\u95ee\u9898\uff09</li>\n<li><strong>\u76f4\u63a5\u6cd5</strong>\uff1a\u79bb\u6563\u5316\u63a7\u5236\uff0c\u8f6c\u5316\u4e3aNLP\u95ee\u9898</li>\n</ul>\n<p><strong>\u6a21\u578b\u9884\u6d4b\u63a7\u5236\uff08MPC\uff09</strong>\uff1a\n\u5728\u7ebf\u6c42\u89e3\u6709\u9650\u65f6\u57df\u4f18\u5316\u95ee\u9898\uff1a</p>\n<ol>\n<li>\u5728\u65f6\u523b$t$\uff0c\u6c42\u89e3$[t, t+T_{horizon}]$\u7684\u6700\u4f18\u63a7\u5236</li>\n<li>\u6267\u884c\u7b2c\u4e00\u4e2a\u63a7\u5236\u52a8\u4f5c</li>\n<li>\u79fb\u52a8\u65f6\u95f4\u7a97\u53e3\uff0c\u91cd\u590d</li>\n</ol>\n<p>\u9002\u5408\u5904\u7406\u7ea6\u675f\u548c\u5e72\u6270\u3002</p>\n<p><strong>\u8f6f\u4f53\u673a\u5668\u4eba\u63a7\u5236\u5b9e\u4f8b</strong>\uff1a\n\u63a7\u5236\u53d8\u91cf\uff1a\u5404\u9a71\u52a8\u5668\u7684\u538b\u529b$p_i(t)$\n\u76ee\u6807\uff1a\u5230\u8fbe\u6307\u5b9a\u4f4d\u7f6e\u540c\u65f6\u6700\u5c0f\u5316\u80fd\u8017\n$$\\min_{p(t)} |x_{tip}(T) - x_{target}|^2 + \\alpha \\int_0^T |p(t)|^2 dt$$\n\u6311\u6218\uff1a</p>\n<ul>\n<li>\u9ad8\u5ea6\u975e\u7ebf\u6027\uff08\u5927\u53d8\u5f62\uff09</li>\n<li>\u63a5\u89e6\u7ea6\u675f</li>\n<li>\u9a71\u52a8\u5668\u9650\u5236</li>\n</ul>\n<h3 id=\"1044\">10.4.4 \u6b63\u5219\u5316\u6280\u672f</h3>\n<p>\u9006\u95ee\u9898\u901a\u5e38\u4e0d\u9002\u5b9a\uff0c\u9700\u8981\u6b63\u5219\u5316\u4fdd\u8bc1\u89e3\u7684\u7a33\u5b9a\u6027\u3002</p>\n<p><strong>Tikhonov\u6b63\u5219\u5316</strong>\uff1a\n$$\\min_\\theta |y_{obs} - \\mathcal{F}(\\theta)|^2_2 + \\alpha |\\Gamma\\theta|^2_2$$\n\u5176\u4e2d$\\Gamma$\u662f\u6b63\u5219\u5316\u7b97\u5b50\uff1a</p>\n<ul>\n<li>$\\Gamma = I$\uff1a\u53c2\u6570\u5927\u5c0f\u60e9\u7f5a\uff08L2\u6b63\u5219\u5316\uff09</li>\n<li>$\\Gamma = \\nabla$\uff1a\u68af\u5ea6\u60e9\u7f5a\uff08\u5e73\u6ed1\u6027\uff09</li>\n<li>$\\Gamma = \\Delta$\uff1a\u62c9\u666e\u62c9\u65af\u60e9\u7f5a\uff08\u66f4\u5f3a\u5e73\u6ed1\u6027\uff09</li>\n</ul>\n<p><strong>\u53c2\u6570\u9009\u62e9</strong>\uff1a\n\u9009\u62e9\u6b63\u5219\u5316\u53c2\u6570$\\alpha$\u7684\u65b9\u6cd5\uff1a</p>\n<ol>\n<li><strong>L-\u66f2\u7ebf</strong>\uff1a\u753b\u51fa$\\log|y_{obs} - \\mathcal{F}(\\theta)|$\u5bf9$\\log|\\Gamma\\theta|$\uff0c\u9009\u62e9\u62d0\u70b9</li>\n<li><strong>\u5e7f\u4e49\u4ea4\u53c9\u9a8c\u8bc1\uff08GCV\uff09</strong>\uff1a\u6700\u5c0f\u5316$GCV(\\alpha) = \\frac{|y_{obs} - \\mathcal{F}(\\theta_\\alpha)|^2}{[1 - tr(A_\\alpha)/n]^2}$</li>\n<li><strong>Morozov\u504f\u5dee\u539f\u7406</strong>\uff1a\u9009\u62e9$\\alpha$\u4f7f\u6b8b\u5dee\u7b49\u4e8e\u566a\u58f0\u6c34\u5e73</li>\n</ol>\n<p><strong>\u7a00\u758f\u6b63\u5219\u5316</strong>\uff1a\nL1\u6b63\u5219\u5316\u4fc3\u8fdb\u7a00\u758f\u89e3\uff1a\n$$\\min_\\theta |y_{obs} - \\mathcal{F}(\\theta)|^2_2 + \\alpha |\\theta|_1$$\n\u7269\u7406\u5e94\u7528\uff1a</p>\n<ul>\n<li>\u635f\u4f24\u5b9a\u4f4d\uff08\u635f\u4f24\u7a00\u758f\u5206\u5e03\uff09</li>\n<li>\u6e90\u9879\u8bc6\u522b\uff08\u70b9\u6e90\uff09</li>\n<li>\u7279\u5f81\u9009\u62e9\uff08\u8bc6\u522b\u5173\u952e\u53c2\u6570\uff09</li>\n</ul>\n<p><strong>\u603b\u53d8\u5dee\uff08TV\uff09\u6b63\u5219\u5316</strong>\uff1a\n\u4fdd\u6301\u8fb9\u7f18\u7684\u540c\u65f6\u53bb\u566a\uff1a\n$$TV(\\theta) = \\int |\\nabla\\theta| dx$$\n\u9002\u7528\u4e8e\uff1a</p>\n<ul>\n<li>\u5206\u7247\u5e38\u6570\u53c2\u6570\uff08\u5982\u5c42\u72b6\u6750\u6599\uff09</li>\n<li>\u88c2\u7eb9\u68c0\u6d4b</li>\n<li>\u76f8\u754c\u9762\u8bc6\u522b</li>\n</ul>\n<p><strong>\u591a\u5c3a\u5ea6\u6b63\u5219\u5316</strong>\uff1a\n\u4e0d\u540c\u5c3a\u5ea6\u4f7f\u7528\u4e0d\u540c\u6b63\u5219\u5316\u5f3a\u5ea6\uff1a\n$$\\mathcal{R}(\\theta) = \\sum_j \\alpha_j |\\mathcal{W}_j \\theta|^2$$\n\u5176\u4e2d$\\mathcal{W}_j$\u662f\u5c0f\u6ce2\u53d8\u6362\u7684\u7b2c$j$\u5c42\u3002</p>\n<p><strong>\u7269\u7406\u7ea6\u675f\u4f5c\u4e3a\u6b63\u5219\u5316</strong>\uff1a\n\u5229\u7528\u7269\u7406\u77e5\u8bc6\u6784\u9020\u6b63\u5219\u9879\uff1a</p>\n<ul>\n<li><strong>\u5b88\u6052\u5f8b</strong>\uff1a$\\mathcal{R}_{cons} = |\\nabla \\cdot (\\rho u)|^2$\uff08\u8d28\u91cf\u5b88\u6052\uff09</li>\n<li><strong>\u5bf9\u79f0\u6027</strong>\uff1a$\\mathcal{R}_{sym} = |\\theta(x) - \\theta(\\mathcal{S}x)|^2$</li>\n<li><strong>\u5355\u8c03\u6027</strong>\uff1a$\\mathcal{R}_{mono} = \\sum_i \\max(0, -\\partial\\theta/\\partial x_i)^2$</li>\n</ul>\n<p>\u901a\u8fc7\u5408\u7406\u7684\u6b63\u5219\u5316\uff0c\u53ef\u4ee5\u5c06\u75c5\u6001\u9006\u95ee\u9898\u8f6c\u5316\u4e3a\u826f\u6001\u95ee\u9898\uff0c\u5f97\u5230\u7269\u7406\u5408\u7406\u4e14\u6570\u503c\u7a33\u5b9a\u7684\u89e3\u3002</p>\n<h2 id=\"105\">10.5 \u795e\u7ecf\u7f51\u7edc\u4e0e\u7269\u7406\u4eff\u771f</h2>\n<p>\u6df1\u5ea6\u5b66\u4e60\u4e0e\u7269\u7406\u4eff\u771f\u7684\u7ed3\u5408\u6b63\u5728\u521b\u9020\u65b0\u7684\u53ef\u80fd\u6027\u3002\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5b66\u4e60\u590d\u6742\u7684\u7269\u7406\u89c4\u5f8b\u3001\u52a0\u901f\u8ba1\u7b97\u3001\u5904\u7406\u4e0d\u786e\u5b9a\u6027\uff0c\u800c\u7269\u7406\u77e5\u8bc6\u53ef\u4ee5\u6307\u5bfc\u7f51\u7edc\u8bbe\u8ba1\u3001\u63d0\u4f9b\u5f52\u7eb3\u504f\u7f6e\u3001\u4fdd\u8bc1\u9884\u6d4b\u7684\u7269\u7406\u5408\u7406\u6027\u3002</p>\n<h3 id=\"1051-physics-informed-neural-networks\">10.5.1 Physics-Informed Neural Networks</h3>\n<p>Physics-Informed Neural Networks (PINNs)\u901a\u8fc7\u5c06\u7269\u7406\u5b9a\u5f8b\u5d4c\u5165\u635f\u5931\u51fd\u6570\uff0c\u5b9e\u73b0\u6570\u636e\u9ad8\u6548\u7684\u5b66\u4e60\u3002</p>\n<p><strong>\u57fa\u672c\u601d\u60f3</strong>\uff1a\n\u795e\u7ecf\u7f51\u7edc$u_\\theta(x, t)$\u8fd1\u4f3cPDE\u7684\u89e3\uff0c\u635f\u5931\u51fd\u6570\u5305\u542b\uff1a</p>\n<ol>\n<li>\u6570\u636e\u62df\u5408\u9879\uff1a$\\mathcal{L}_{data} = \\frac{1}{N_d}\\sum_{i=1}^{N_d} |u_\\theta(x_i, t_i) - u_i|^2$</li>\n<li>PDE\u6b8b\u5dee\u9879\uff1a$\\mathcal{L}_{PDE} = \\frac{1}{N_f}\\sum_{i=1}^{N_f} |\\mathcal{N}<a href=\"x_i, t_i\">u_\\theta</a>|^2$</li>\n<li>\u8fb9\u754c\u6761\u4ef6\u9879\uff1a$\\mathcal{L}_{BC} = \\frac{1}{N_b}\\sum_{i=1}^{N_b} |\\mathcal{B}<a href=\"x_i, t_i\">u_\\theta</a> - g_i|^2$</li>\n<li>\u521d\u59cb\u6761\u4ef6\u9879\uff1a$\\mathcal{L}_{IC} = \\frac{1}{N_0}\\sum_{i=1}^{N_0} |u_\\theta(x_i, 0) - u_0(x_i)|^2$</li>\n</ol>\n<p>\u603b\u635f\u5931\uff1a$\\mathcal{L} = \\mathcal{L}_{data} + \\lambda_1\\mathcal{L}_{PDE} + \\lambda_2\\mathcal{L}_{BC} + \\lambda_3\\mathcal{L}_{IC}$</p>\n<p><strong>\u81ea\u52a8\u5fae\u5206\u8ba1\u7b97PDE\u7b97\u5b50</strong>\uff1a\n\u5bf9\u4e8eNavier-Stokes\u65b9\u7a0b$\\frac{\\partial u}{\\partial t} + u \\cdot \\nabla u = -\\nabla p + \\nu \\Delta u$\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">navier_stokes_residual</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">u_nn</span><span class=\"p\">,</span> <span class=\"n\">p_nn</span><span class=\"p\">):</span>\n    <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">u_nn</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">p_nn</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n\n    <span class=\"n\">u_t</span> <span class=\"o\">=</span> <span class=\"n\">grad</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">u_x</span> <span class=\"o\">=</span> <span class=\"n\">grad</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">u_xx</span> <span class=\"o\">=</span> <span class=\"n\">grad</span><span class=\"p\">(</span><span class=\"n\">u_x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">p_x</span> <span class=\"o\">=</span> <span class=\"n\">grad</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n\n    <span class=\"n\">residual</span> <span class=\"o\">=</span> <span class=\"n\">u_t</span> <span class=\"o\">+</span> <span class=\"n\">u</span> <span class=\"o\">*</span> <span class=\"n\">u_x</span> <span class=\"o\">+</span> <span class=\"n\">p_x</span> <span class=\"o\">-</span> <span class=\"n\">nu</span> <span class=\"o\">*</span> <span class=\"n\">u_xx</span>\n    <span class=\"k\">return</span> <span class=\"n\">residual</span>\n</code></pre></div>\n\n<p><strong>\u91c7\u6837\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li><strong>\u5747\u5300\u91c7\u6837</strong>\uff1a\u5728\u8ba1\u7b97\u57df\u5185\u5747\u5300\u5206\u5e03\u914d\u70b9</li>\n<li><strong>\u91cd\u8981\u6027\u91c7\u6837</strong>\uff1a\u5728\u9ad8\u68af\u5ea6\u533a\u57df\u589e\u52a0\u91c7\u6837\u5bc6\u5ea6</li>\n<li><strong>\u81ea\u9002\u5e94\u91c7\u6837</strong>\uff1a\u57fa\u4e8e\u6b8b\u5dee\u5927\u5c0f\u52a8\u6001\u8c03\u6574\u91c7\u6837\u70b9</li>\n<li><strong>\u62c9\u4e01\u8d85\u7acb\u65b9\u91c7\u6837</strong>\uff1a\u4fdd\u8bc1\u91c7\u6837\u7684\u7a7a\u95f4\u8986\u76d6\u6027</li>\n</ul>\n<p><strong>\u7f51\u7edc\u67b6\u6784\u9009\u62e9</strong>\uff1a</p>\n<ul>\n<li><strong>\u5168\u8fde\u63a5\u7f51\u7edc</strong>\uff1a\u6700\u7b80\u5355\uff0c\u9002\u5408\u4f4e\u7ef4\u95ee\u9898</li>\n<li><strong>\u4fee\u6b63\u7684\u7f51\u7edc</strong>\uff1a$u_\\theta(x,t) = A(x,t) + B(x,t)N_\\theta(x,t)$\uff0c\u5176\u4e2d$A$\u6ee1\u8db3\u8fb9\u754c\u6761\u4ef6</li>\n<li><strong>\u591a\u5c3a\u5ea6\u7f51\u7edc</strong>\uff1a\u4f7f\u7528\u5085\u91cc\u53f6\u7279\u5f81\u7f16\u7801\u9ad8\u9891\u4fe1\u606f</li>\n<li><strong>DeepONet</strong>\uff1a\u5b66\u4e60\u7b97\u5b50\u800c\u975e\u5355\u4e2a\u89e3</li>\n</ul>\n<p><strong>\u8bad\u7ec3\u6280\u5de7</strong>\uff1a</p>\n<ol>\n<li><strong>\u635f\u5931\u6743\u91cd\u8c03\u6574</strong>\uff1a\u4f7f\u7528\u68af\u5ea6\u7edf\u8ba1\u81ea\u9002\u5e94\u8c03\u6574$\\lambda_i$</li>\n<li><strong>\u8bfe\u7a0b\u5b66\u4e60</strong>\uff1a\u4ece\u7b80\u5355\u5230\u590d\u6742\u9010\u6b65\u589e\u52a0PDE\u590d\u6742\u5ea6</li>\n<li><strong>\u8fc1\u79fb\u5b66\u4e60</strong>\uff1a\u5728\u76f8\u4f3c\u95ee\u9898\u95f4\u8fc1\u79fb\u77e5\u8bc6</li>\n<li><strong>\u7269\u7406\u91cf\u5f52\u4e00\u5316</strong>\uff1a\u786e\u4fdd\u5404\u9879\u635f\u5931\u5728\u540c\u4e00\u91cf\u7ea7</li>\n</ol>\n<h3 id=\"1052-gnn\">10.5.2 \u56fe\u795e\u7ecf\u7f51\u7edc(GNN)</h3>\n<p>\u56fe\u795e\u7ecf\u7f51\u7edc\u81ea\u7136\u9002\u5408\u8868\u793a\u7c92\u5b50\u7cfb\u7edf\u548c\u7f51\u683c\u7ed3\u6784\uff0c\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5b66\u4e60\u590d\u6742\u7684\u76f8\u4e92\u4f5c\u7528\u3002</p>\n<p><strong>\u56fe\u8868\u793a</strong>\uff1a</p>\n<ul>\n<li><strong>\u8282\u70b9</strong>\uff1a\u7c92\u5b50\u6216\u7f51\u683c\u9876\u70b9\uff0c\u7279\u5f81\u5305\u62ec\u4f4d\u7f6e\u3001\u901f\u5ea6\u3001\u6750\u6599\u5c5e\u6027</li>\n<li><strong>\u8fb9</strong>\uff1a\u76f8\u4e92\u4f5c\u7528\u5bf9\uff0c\u7279\u5f81\u5305\u62ec\u76f8\u5bf9\u4f4d\u7f6e\u3001\u8ddd\u79bb</li>\n<li><strong>\u5168\u5c40\u7279\u5f81</strong>\uff1a\u7cfb\u7edf\u7ea7\u5c5e\u6027\u5982\u603b\u80fd\u91cf\u3001\u5916\u529b\u573a</li>\n</ul>\n<p><strong>\u6d88\u606f\u4f20\u9012\u673a\u5236</strong>\uff1a\n\u8282\u70b9$i$\u7684\u66f4\u65b0\u89c4\u5219\uff1a\n$$m_{ij}^{(k)} = \\phi_e(h_i^{(k)}, h_j^{(k)}, e_{ij})$$\n$$m_i^{(k)} = \\bigoplus_{j \\in \\mathcal{N}(i)} m_{ij}^{(k)}$$\n$$h_i^{(k+1)} = \\phi_h(h_i^{(k)}, m_i^{(k)})$$\n\u5176\u4e2d$\\phi_e$\u662f\u8fb9\u51fd\u6570\uff0c$\\phi_h$\u662f\u8282\u70b9\u66f4\u65b0\u51fd\u6570\uff0c$\\bigoplus$\u662f\u805a\u5408\u64cd\u4f5c\uff08\u5982\u6c42\u548c\u3001\u6700\u5927\u503c\u3001\u5e73\u5747\uff09\u3002</p>\n<p><strong>\u7269\u7406\u5f52\u7eb3\u504f\u7f6e</strong>\uff1a</p>\n<ol>\n<li><strong>\u5e73\u79fb\u4e0d\u53d8\u6027</strong>\uff1a\u4f7f\u7528\u76f8\u5bf9\u5750\u6807$x_j - x_i$\u800c\u975e\u7edd\u5bf9\u5750\u6807</li>\n<li><strong>\u65cb\u8f6c\u7b49\u53d8\u6027</strong>\uff1a\u4f7f\u7528SE(3)\u7b49\u53d8\u7f51\u7edc\u5c42</li>\n<li><strong>\u6392\u5217\u4e0d\u53d8\u6027</strong>\uff1a\u805a\u5408\u64cd\u4f5c\u5bf9\u90bb\u5c45\u987a\u5e8f\u4e0d\u654f\u611f</li>\n<li><strong>\u5c40\u90e8\u6027</strong>\uff1a\u53ea\u8003\u8651\u8fd1\u90bb\u76f8\u4e92\u4f5c\u7528</li>\n</ol>\n<p><strong>GNS (Graph Network Simulator)\u67b6\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u7f16\u7801\u5668\uff1a\u5c06\u7c92\u5b50\u72b6\u6001\u7f16\u7801\u4e3a\u8282\u70b9\u7279\u5f81\n\u5904\u7406\u5668\uff1aK\u6b65\u6d88\u606f\u4f20\u9012\uff0c\u5b66\u4e60\u52a8\u529b\u5b66\n\u89e3\u7801\u5668\uff1a\u9884\u6d4b\u52a0\u901f\u5ea6\u6216\u529b\n</code></pre></div>\n\n<p>\u8bad\u7ec3\u76ee\u6807\uff1a\u9884\u6d4b\u4e0b\u4e00\u65f6\u523b\u72b6\u6001\u6216\u76f4\u63a5\u9884\u6d4b\u52a0\u901f\u5ea6\u3002</p>\n<p><strong>\u591a\u5c3a\u5ea6\u56fe\u7f51\u7edc</strong>\uff1a\n\u5904\u7406\u4e0d\u540c\u5c3a\u5ea6\u7684\u76f8\u4e92\u4f5c\u7528\uff1a</p>\n<ul>\n<li><strong>\u5c42\u6b21\u56fe</strong>\uff1a\u6784\u5efa\u591a\u7ea7\u56fe\uff0c\u7c97\u7c92\u5ea6\u8282\u70b9\u805a\u5408\u7ec6\u7c92\u5ea6\u4fe1\u606f</li>\n<li><strong>\u591a\u8df3\u8fde\u63a5</strong>\uff1a\u5141\u8bb8K\u8df3\u90bb\u5c45\u76f4\u63a5\u901a\u4fe1</li>\n<li><strong>\u6ce8\u610f\u529b\u673a\u5236</strong>\uff1a\u5b66\u4e60\u4e0d\u540c\u5c3a\u5ea6\u76f8\u4e92\u4f5c\u7528\u7684\u91cd\u8981\u6027</li>\n</ul>\n<h3 id=\"1053\">10.5.3 \u795e\u7ecf\u5e38\u5fae\u5206\u65b9\u7a0b</h3>\n<p>\u795e\u7ecf\u5e38\u5fae\u5206\u65b9\u7a0b\uff08Neural ODEs\uff09\u5c06\u8fde\u7eed\u52a8\u529b\u5b66\u4e0e\u6df1\u5ea6\u5b66\u4e60\u7ed3\u5408\uff0c\u63d0\u4f9b\u4e86\u65b0\u7684\u5efa\u6a21\u8303\u5f0f\u3002</p>\n<p><strong>\u57fa\u672c\u5f62\u5f0f</strong>\uff1a\n$$\\frac{dh}{dt} = f_\\theta(h(t), t)$$\n\u5176\u4e2d$f_\\theta$\u662f\u795e\u7ecf\u7f51\u7edc\u53c2\u6570\u5316\u7684\u5411\u91cf\u573a\u3002</p>\n<p><strong>\u524d\u5411\u4f20\u64ad</strong>\uff1a\n\u4f7f\u7528ODE\u6c42\u89e3\u5668\uff08\u5982Runge-Kutta\uff09\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">neural_ode_forward</span><span class=\"p\">(</span><span class=\"n\">h0</span><span class=\"p\">,</span> <span class=\"n\">t0</span><span class=\"p\">,</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">f_theta</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u4f7f\u7528\u81ea\u9002\u5e94\u6b65\u957fODE\u6c42\u89e3\u5668</span>\n    <span class=\"n\">h1</span> <span class=\"o\">=</span> <span class=\"n\">odeint</span><span class=\"p\">(</span><span class=\"n\">f_theta</span><span class=\"p\">,</span> <span class=\"n\">h0</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">t0</span><span class=\"p\">,</span> <span class=\"n\">t1</span><span class=\"p\">])[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">h1</span>\n</code></pre></div>\n\n<p><strong>\u53cd\u5411\u4f20\u64ad\uff08\u4f34\u968f\u65b9\u6cd5\uff09</strong>\uff1a\n\u5b9a\u4e49\u589e\u5e7f\u72b6\u6001$[h(t), \\lambda(t), \\theta(t)]$\uff0c\u53cd\u5411\u6c42\u89e3\uff1a\n$$\\frac{d\\lambda}{dt} = -\\lambda^T \\frac{\\partial f_\\theta}{\\partial h}$$\n$$\\frac{d\\mathcal{L}}{d\\theta} = -\\int_{t_1}^{t_0} \\lambda^T \\frac{\\partial f_\\theta}{\\partial \\theta} dt$$\n<strong>\u4f18\u52bf</strong>\uff1a</p>\n<ol>\n<li><strong>\u5185\u5b58\u6548\u7387</strong>\uff1a\u4e0d\u9700\u8981\u5b58\u50a8\u4e2d\u95f4\u6fc0\u6d3b\u503c</li>\n<li><strong>\u81ea\u9002\u5e94\u8ba1\u7b97</strong>\uff1a\u6839\u636e\u95ee\u9898\u590d\u6742\u5ea6\u8c03\u6574\u8ba1\u7b97\u91cf</li>\n<li><strong>\u53ef\u9006\u6027</strong>\uff1a\u4fdd\u8bc1\u53cc\u5c04\u6620\u5c04</li>\n<li><strong>\u8fde\u7eed\u65f6\u95f4\u5efa\u6a21</strong>\uff1a\u81ea\u7136\u5904\u7406\u4e0d\u89c4\u5219\u91c7\u6837\u6570\u636e</li>\n</ol>\n<p><strong>\u589e\u5f3a\u7684Neural ODE</strong>\uff1a</p>\n<ul>\n<li><strong>Augmented Neural ODE</strong>\uff1a\u589e\u52a0\u989d\u5916\u7ef4\u5ea6\u9632\u6b62\u8f68\u8ff9\u4ea4\u53c9</li>\n<li><strong>Second-order Neural ODE</strong>\uff1a$\\ddot{x} = f_\\theta(x, \\dot{x}, t)$\uff0c\u66f4\u9002\u5408\u7269\u7406\u7cfb\u7edf</li>\n<li><strong>Hamiltonian Neural Networks</strong>\uff1a\u4fdd\u8bc1\u80fd\u91cf\u5b88\u6052</li>\n<li><strong>Lagrangian Neural Networks</strong>\uff1a\u4ece\u62c9\u683c\u6717\u65e5\u91cf\u5b66\u4e60\u52a8\u529b\u5b66</li>\n</ul>\n<p><strong>\u7269\u7406\u5e94\u7528\u5b9e\u4f8b</strong>\uff1a</p>\n<ol>\n<li><strong>\u5206\u5b50\u52a8\u529b\u5b66</strong>\uff1a\u5b66\u4e60\u539f\u5b50\u95f4\u76f8\u4e92\u4f5c\u7528\u52bf</li>\n<li><strong>\u6d41\u4f53\u52a8\u529b\u5b66</strong>\uff1a\u5b66\u4e60\u4e9a\u7f51\u683c\u5c3a\u5ea6\u6a21\u578b</li>\n<li><strong>\u5929\u4f53\u529b\u5b66</strong>\uff1a\u957f\u65f6\u95f4\u7a33\u5b9a\u7684\u8f68\u9053\u9884\u6d4b</li>\n</ol>\n<h3 id=\"1054\">10.5.4 \u6df7\u5408\u65b9\u6cd5</h3>\n<p>\u7ed3\u5408\u795e\u7ecf\u7f51\u7edc\u7684\u7075\u6d3b\u6027\u548c\u7269\u7406\u6c42\u89e3\u5668\u7684\u53ef\u9760\u6027\uff0c\u6df7\u5408\u65b9\u6cd5\u5728\u5b9e\u8df5\u4e2d\u8868\u73b0\u4f18\u5f02\u3002</p>\n<p><strong>\u6b8b\u5dee\u5b66\u4e60</strong>\uff1a\n\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u7269\u7406\u6a21\u578b\u7684\u4fee\u6b63\u9879\uff1a\n$$\\frac{du}{dt} = f_{physics}(u) + f_{NN}(u; \\theta)$$</p>\n<p>\u5176\u4e2d$f_{physics}$\u662f\u5df2\u77e5\u7684\u7b80\u5316\u6a21\u578b\uff0c$f_{NN}$\u5b66\u4e60\u672a\u5efa\u6a21\u7684\u6548\u5e94\u3002</p>\n<p><strong>\u6df7\u5408\u67b6\u6784\u793a\u4f8b</strong>\uff1a</p>\n<ol>\n<li><strong>\u6e4d\u6d41\u5efa\u6a21</strong>\uff1aRANS\u65b9\u7a0b + \u795e\u7ecf\u7f51\u7edc\u6e4d\u6d41\u95ed\u5408</li>\n<li><strong>\u591a\u5c3a\u5ea6\u6a21\u62df</strong>\uff1a\u7c97\u7f51\u683c\u6c42\u89e3\u5668 + \u795e\u7ecf\u7f51\u7edc\u8d85\u5206\u8fa8\u7387</li>\n<li><strong>\u672c\u6784\u5173\u7cfb</strong>\uff1a\u7ebf\u5f39\u6027 + \u795e\u7ecf\u7f51\u7edc\u975e\u7ebf\u6027\u4fee\u6b63</li>\n</ol>\n<p><strong>\u53ef\u5fae\u7269\u7406\u5c42</strong>\uff1a\n\u5c06\u7269\u7406\u6c42\u89e3\u5668\u4f5c\u4e3a\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u5c42\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">DifferentiablePhysicsLayer</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8fd0\u884c\u7269\u7406\u4eff\u771f</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">physics_solver</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">backward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">grad_output</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u4f7f\u7528\u4f34\u968f\u65b9\u6cd5\u8ba1\u7b97\u68af\u5ea6</span>\n        <span class=\"n\">grad_input</span><span class=\"p\">,</span> <span class=\"n\">grad_params</span> <span class=\"o\">=</span> <span class=\"n\">adjoint_solver</span><span class=\"p\">(</span><span class=\"n\">grad_output</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">grad_input</span><span class=\"p\">,</span> <span class=\"n\">grad_params</span>\n</code></pre></div>\n\n<p><strong>\u6df7\u5408\u8bad\u7ec3\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u9884\u8bad\u7ec3</strong>\uff1a\u5148\u8bad\u7ec3\u7eaf\u795e\u7ecf\u7f51\u7edc\uff0c\u518d\u5fae\u8c03\u6df7\u5408\u6a21\u578b</li>\n<li><strong>\u8bfe\u7a0b\u5b66\u4e60</strong>\uff1a\u9010\u6b65\u589e\u52a0\u7269\u7406\u590d\u6742\u5ea6</li>\n<li><strong>\u591a\u4efb\u52a1\u5b66\u4e60</strong>\uff1a\u540c\u65f6\u5b66\u4e60\u591a\u4e2a\u7269\u7406\u91cf</li>\n<li><strong>\u5bf9\u6297\u8bad\u7ec3</strong>\uff1a\u4f7f\u7528\u5224\u522b\u5668\u786e\u4fdd\u7269\u7406\u5408\u7406\u6027</li>\n</ol>\n<p><strong>\u4e0d\u786e\u5b9a\u6027\u91cf\u5316</strong>\uff1a</p>\n<ul>\n<li><strong>\u8d1d\u53f6\u65af\u795e\u7ecf\u7f51\u7edc</strong>\uff1a\u8f93\u51fa\u9884\u6d4b\u7684\u4e0d\u786e\u5b9a\u6027</li>\n<li><strong>\u96c6\u6210\u65b9\u6cd5</strong>\uff1a\u591a\u4e2a\u6a21\u578b\u7684\u9884\u6d4b\u96c6\u6210</li>\n<li><strong>Dropout\u4e0d\u786e\u5b9a\u6027</strong>\uff1a\u6d4b\u8bd5\u65f6\u4f7f\u7528dropout\u4f30\u8ba1\u4e0d\u786e\u5b9a\u6027</li>\n</ul>\n<p><strong>\u6a21\u578b\u9009\u62e9\u51c6\u5219</strong>\uff1a</p>\n<ol>\n<li><strong>\u6570\u636e\u53ef\u7528\u6027</strong>\uff1a\u6570\u636e\u5c11\u7528PINN\uff0c\u6570\u636e\u591a\u7528\u7eaf\u6570\u636e\u9a71\u52a8</li>\n<li><strong>\u7269\u7406\u77e5\u8bc6</strong>\uff1a\u77e5\u8bc6\u5b8c\u5907\u7528\u6df7\u5408\u65b9\u6cd5\uff0c\u77e5\u8bc6\u7f3a\u4e4f\u7528\u9ed1\u76d2\u65b9\u6cd5</li>\n<li><strong>\u6cdb\u5316\u9700\u6c42</strong>\uff1a\u9700\u8981\u5916\u63a8\u7528\u7269\u7406\u7ea6\u675f\uff0c\u63d2\u503c\u7528\u795e\u7ecf\u7f51\u7edc</li>\n<li><strong>\u8ba1\u7b97\u6548\u7387</strong>\uff1a\u5728\u7ebf\u5e94\u7528\u7528\u795e\u7ecf\u7f51\u7edc\uff0c\u79bb\u7ebf\u5206\u6790\u7528\u4f20\u7edf\u65b9\u6cd5</li>\n</ol>"
  },
  "../chapter4.md": {
    "hash": "34d9dbfbe1d23f41b7f3f328b17a5fac",
    "content": "<h1 id=\"1\">\u7b2c\u56db\u7ae0\uff1a\u6b27\u62c9\u89c6\u89d2\uff081\uff09</h1>\n<p>\u672c\u7ae0\u6211\u4eec\u5c06\u4ece\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u8f6c\u5411\u6b27\u62c9\u89c6\u89d2\uff0c\u63a2\u8ba8\u57fa\u4e8e\u7f51\u683c\u7684\u6d41\u4f53\u4eff\u771f\u65b9\u6cd5\u3002\u6b27\u62c9\u65b9\u6cd5\u5728\u5904\u7406\u5927\u53d8\u5f62\u6d41\u52a8\u3001\u81ea\u7531\u8868\u9762\u8ffd\u8e2a\u548c\u4e0d\u53ef\u538b\u7f29\u6027\u7ea6\u675f\u65b9\u9762\u5177\u6709\u72ec\u7279\u4f18\u52bf\u3002\u6211\u4eec\u5c06\u6df1\u5165\u7406\u89e3Navier-Stokes\u65b9\u7a0b\u7684\u6570\u503c\u6c42\u89e3\uff0c\u638c\u63e1\u538b\u529b\u6295\u5f71\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u5904\u7406\u5404\u79cd\u8fb9\u754c\u6761\u4ef6\u3002</p>\n<h2 id=\"41-vs\">4.1 \u6b27\u62c9vs\u62c9\u683c\u6717\u65e5\u63cf\u8ff0</h2>\n<h3 id=\"411\">4.1.1 \u7269\u8d28\u5bfc\u6570\u4e0e\u5bf9\u6d41\u9879</h3>\n<p>\u5728\u6d41\u4f53\u529b\u5b66\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8ffd\u8e2a\u6d41\u4f53\u8d28\u70b9\u7684\u7269\u7406\u91cf\u53d8\u5316\u3002\u6b27\u62c9\u89c6\u89d2\u4e0b\uff0c\u6211\u4eec\u5728\u56fa\u5b9a\u7684\u7a7a\u95f4\u4f4d\u7f6e\u89c2\u5bdf\u6d41\u4f53\uff0c\u8fd9\u5bfc\u81f4\u4e86\u7269\u8d28\u5bfc\u6570\u7684\u51fa\u73b0\uff1a</p>\n<p>$$\\frac{D}{Dt} = \\frac{\\partial}{\\partial t} + \\mathbf{u} \\cdot \\nabla$$\n\u5176\u4e2d\u7b2c\u4e00\u9879 $\\frac{\\partial}{\\partial t}$ \u662f\u5c40\u90e8\u65f6\u95f4\u5bfc\u6570\uff0c\u8868\u793a\u56fa\u5b9a\u4f4d\u7f6e\u5904\u7269\u7406\u91cf\u7684\u65f6\u95f4\u53d8\u5316\u7387\uff1b\u7b2c\u4e8c\u9879 $\\mathbf{u} \\cdot \\nabla$ \u662f\u5bf9\u6d41\u9879\uff0c\u8868\u793a\u7531\u4e8e\u6d41\u4f53\u8fd0\u52a8\u5bfc\u81f4\u7684\u7269\u7406\u91cf\u53d8\u5316\u3002</p>\n<p><strong>\u7269\u8d28\u5bfc\u6570\u7684\u7269\u7406\u610f\u4e49</strong>\uff1a\u8003\u8651\u4e00\u4e2a\u6d41\u4f53\u8d28\u70b9\u6cbf\u8f68\u8ff9 $\\mathbf{x}(t)$ \u8fd0\u52a8\uff0c\u5176\u643a\u5e26\u7684\u7269\u7406\u91cf $\\phi$ \u7684\u53d8\u5316\u7387\u4e3a\uff1a\n$$\\frac{d\\phi}{dt} = \\frac{\\partial \\phi}{\\partial t} + \\frac{\\partial \\phi}{\\partial x_i}\\frac{dx_i}{dt} = \\frac{\\partial \\phi}{\\partial t} + u_i\\frac{\\partial \\phi}{\\partial x_i}$$\n\u8fd9\u91cc\u4f7f\u7528\u4e86\u7231\u56e0\u65af\u5766\u6c42\u548c\u7ea6\u5b9a\u3002\u7269\u8d28\u5bfc\u6570\u8fde\u63a5\u4e86\u62c9\u683c\u6717\u65e5\u63cf\u8ff0\uff08\u8ddf\u968f\u8d28\u70b9\uff09\u548c\u6b27\u62c9\u63cf\u8ff0\uff08\u56fa\u5b9a\u7a7a\u95f4\u70b9\uff09\u3002</p>\n<p>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u901f\u5ea6\u573a\u7684\u7269\u8d28\u5bfc\u6570\uff1a\n$$\\frac{D\\mathbf{u}}{Dt} = \\frac{\\partial \\mathbf{u}}{\\partial t} + (\\mathbf{u} \\cdot \\nabla)\\mathbf{u}$$\n\u5c55\u5f00\u5bf9\u6d41\u9879\u7684\u5206\u91cf\u5f62\u5f0f\uff08\u4ee52D\u4e3a\u4f8b\uff09\uff1a\n$$(\\mathbf{u} \\cdot \\nabla)\\mathbf{u} = \\begin{pmatrix} u\\frac{\\partial u}{\\partial x} + v\\frac{\\partial u}{\\partial y} \\\\ u\\frac{\\partial v}{\\partial x} + v\\frac{\\partial v}{\\partial y} \\end{pmatrix}$$\n\u8fd9\u4e2a\u5bf9\u6d41\u9879 $(\\mathbf{u} \\cdot \\nabla)\\mathbf{u}$ \u662f\u975e\u7ebf\u6027\u7684\uff0c\u4e5f\u662fNavier-Stokes\u65b9\u7a0b\u6570\u503c\u6c42\u89e3\u7684\u4e3b\u8981\u6311\u6218\u4e4b\u4e00\u3002\u5b83\u5bfc\u81f4\u4e86\u6e4d\u6d41\u7b49\u590d\u6742\u73b0\u8c61\u7684\u4ea7\u751f\u3002</p>\n<p><strong>\u5bf9\u6d41\u9879\u7684\u53e6\u4e00\u79cd\u7406\u89e3</strong>\uff1a\u4f7f\u7528\u5411\u91cf\u6052\u7b49\u5f0f\uff0c\u5bf9\u6d41\u9879\u53ef\u4ee5\u6539\u5199\u4e3a\uff1a\n$$(\\mathbf{u} \\cdot \\nabla)\\mathbf{u} = \\nabla(\\frac{|\\mathbf{u}|^2}{2}) - \\mathbf{u} \\times (\\nabla \\times \\mathbf{u})$$\n\u7b2c\u4e00\u9879\u662f\u52a8\u80fd\u68af\u5ea6\uff0c\u7b2c\u4e8c\u9879\u5305\u542b\u6da1\u91cf $\\boldsymbol{\\omega} = \\nabla \\times \\mathbf{u}$\uff0c\u4f53\u73b0\u4e86\u65cb\u8f6c\u6548\u5e94\u5bf9\u52a8\u91cf\u8f93\u9001\u7684\u5f71\u54cd\u3002</p>\n<h3 id=\"412-navier-stokes\">4.1.2 \u4e0d\u53ef\u538bNavier-Stokes\u65b9\u7a0b</h3>\n<p>\u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u7684\u8fd0\u52a8\u7531Navier-Stokes\u65b9\u7a0b\u63cf\u8ff0\uff1a\n$$\\rho \\frac{D\\mathbf{u}}{Dt} = -\\nabla p + \\mu \\nabla^2 \\mathbf{u} + \\rho \\mathbf{g}$$\n\u914d\u5408\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\uff1a\n$$\\nabla \\cdot \\mathbf{u} = 0$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\rho$ \u662f\u6d41\u4f53\u5bc6\u5ea6\uff08\u5bf9\u4e8e\u4e0d\u53ef\u538b\u6d41\u4f53\u4e3a\u5e38\u6570\uff09</li>\n<li>$p$ \u662f\u538b\u529b\uff08\u5b9e\u9645\u4e0a\u662f\u538b\u529b\u9664\u4ee5\u5bc6\u5ea6\uff0c\u6709\u538b\u529b\u52bf\u7684\u91cf\u7eb2\uff09</li>\n<li>$\\mu$ \u662f\u52a8\u529b\u7c98\u5ea6</li>\n<li>$\\nu = \\mu/\\rho$ \u662f\u8fd0\u52a8\u7c98\u5ea6</li>\n<li>$\\mathbf{g}$ \u662f\u91cd\u529b\u52a0\u901f\u5ea6</li>\n</ul>\n<p>\u5c55\u5f00\u7269\u8d28\u5bfc\u6570\u540e\uff0c\u52a8\u91cf\u65b9\u7a0b\u53d8\u4e3a\uff1a\n$$\\rho \\left(\\frac{\\partial \\mathbf{u}}{\\partial t} + (\\mathbf{u} \\cdot \\nabla)\\mathbf{u}\\right) = -\\nabla p + \\mu \\nabla^2 \\mathbf{u} + \\rho \\mathbf{g}$$\n<strong>\u65e0\u91cf\u7eb2\u5316\u4e0eReynolds\u6570</strong>\uff1a\u901a\u8fc7\u7279\u5f81\u5c3a\u5ea6 $L$\u3001\u7279\u5f81\u901f\u5ea6 $U$ \u548c\u7279\u5f81\u65f6\u95f4 $L/U$ \u65e0\u91cf\u7eb2\u5316\uff0c\u53ef\u5f97\uff1a\n$$\\frac{\\partial \\mathbf{u}^*}{\\partial t^*} + (\\mathbf{u}^* \\cdot \\nabla^*)\\mathbf{u}^* = -\\nabla^* p^* + \\frac{1}{Re} \\nabla^{*2} \\mathbf{u}^* + \\frac{1}{Fr^2}\\hat{\\mathbf{g}}$$\n\u5176\u4e2d Reynolds\u6570 $Re = \\frac{UL}{\\nu}$ \u8868\u5f81\u60ef\u6027\u529b\u4e0e\u7c98\u6027\u529b\u4e4b\u6bd4\uff0cFroude\u6570 $Fr = \\frac{U}{\\sqrt{gL}}$ \u8868\u5f81\u60ef\u6027\u529b\u4e0e\u91cd\u529b\u4e4b\u6bd4\u3002</p>\n<p><strong>\u538b\u529b\u7684\u4f5c\u7528</strong>\uff1a\u5728\u4e0d\u53ef\u538b\u7f29\u6d41\u4e2d\uff0c\u538b\u529b\u4e0d\u662f\u72b6\u6001\u53d8\u91cf\uff0c\u800c\u662f\u4e00\u4e2a\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff0c\u7528\u4e8e\u5f3a\u5236\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u7ea6\u675f\u3002\u538b\u529b\u77ac\u65f6\u8c03\u6574\u4ee5\u7ef4\u6301 $\\nabla \\cdot \\mathbf{u} = 0$\u3002</p>\n<p><strong>\u6da1\u91cf\u5f62\u5f0f</strong>\uff1a\u53d6\u52a8\u91cf\u65b9\u7a0b\u7684\u65cb\u5ea6\uff0c\u53ef\u5f97\u6da1\u91cf\u8f93\u9001\u65b9\u7a0b\uff1a\n$$\\frac{D\\boldsymbol{\\omega}}{Dt} = (\\boldsymbol{\\omega} \\cdot \\nabla)\\mathbf{u} + \\nu \\nabla^2 \\boldsymbol{\\omega}$$\n\u57282D\u60c5\u51b5\u4e0b\uff0c\u6da1\u91cf\u62c9\u4f38\u9879 $(\\boldsymbol{\\omega} \\cdot \\nabla)\\mathbf{u}$ \u6d88\u5931\uff0c\u6da1\u91cf\u4ec5\u901a\u8fc7\u5bf9\u6d41\u548c\u6269\u6563\u6f14\u5316\u3002</p>\n<h3 id=\"413\">4.1.3 \u7b97\u5b50\u5206\u88c2\u65b9\u6cd5</h3>\n<p>\u76f4\u63a5\u6c42\u89e3\u8026\u5408\u7684\u901f\u5ea6-\u538b\u529b\u7cfb\u7edf\u975e\u5e38\u56f0\u96be\u3002Chorin\u548cTemam\u63d0\u51fa\u7684\u7b97\u5b50\u5206\u88c2\u65b9\u6cd5\u5c06Navier-Stokes\u65b9\u7a0b\u5206\u89e3\u4e3a\u51e0\u4e2a\u5b50\u6b65\u9aa4\uff1a</p>\n<ol>\n<li><strong>\u5bf9\u6d41\u6b65</strong>\uff1a\u6c42\u89e3 $\\frac{\\partial \\mathbf{u}}{\\partial t} + (\\mathbf{u} \\cdot \\nabla)\\mathbf{u} = 0$</li>\n<li><strong>\u5916\u529b\u6b65</strong>\uff1a\u6dfb\u52a0\u91cd\u529b\u548c\u7c98\u6027\u529b $\\frac{\\partial \\mathbf{u}}{\\partial t} = \\nu \\nabla^2 \\mathbf{u} + \\mathbf{g}$</li>\n<li><strong>\u6295\u5f71\u6b65</strong>\uff1a\u901a\u8fc7\u538b\u529b\u6295\u5f71\u4f7f\u901f\u5ea6\u573a\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6</li>\n</ol>\n<p><strong>\u6570\u5b66\u57fa\u7840</strong>\uff1a\u7b97\u5b50\u5206\u88c2\u57fa\u4e8eTrotter-Lie\u516c\u5f0f\u3002\u5bf9\u4e8e\u65b9\u7a0b $\\frac{\\partial u}{\\partial t} = (A + B)u$\uff0c\u5176\u89e3\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\uff1a\n$$u(t + \\Delta t) \\approx e^{\\Delta t B} e^{\\Delta t A} u(t) + O(\\Delta t^2)$$\n\u8fd9\u662f\u4e00\u9636\u5206\u88c2\u3002\u4e8c\u9636Strang\u5206\u88c2\u4e3a\uff1a\n$$u(t + \\Delta t) \\approx e^{\\Delta t B/2} e^{\\Delta t A} e^{\\Delta t B/2} u(t) + O(\\Delta t^3)$$\n<strong>\u5177\u4f53\u7b97\u6cd5\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u9884\u6d4b\u6b65</strong>\uff08\u5ffd\u7565\u538b\u529b\uff09\uff1a\n$$\\mathbf{u}^* = \\mathbf{u}^n + \\Delta t \\left[ -(\\mathbf{u}^n \\cdot \\nabla)\\mathbf{u}^n + \\nu \\nabla^2 \\mathbf{u}^n + \\mathbf{g} \\right]$$</p>\n</li>\n<li>\n<p><strong>\u538b\u529b\u6c42\u89e3</strong>\uff1a\n$$\\nabla^2 p^{n+1} = \\frac{\\rho}{\\Delta t} \\nabla \\cdot \\mathbf{u}^*$$</p>\n</li>\n<li>\n<p><strong>\u901f\u5ea6\u4fee\u6b63</strong>\uff1a\n$$\\mathbf{u}^{n+1} = \\mathbf{u}^* - \\frac{\\Delta t}{\\rho} \\nabla p^{n+1}$$\n\u8fd9\u79cd\u5206\u88c2\u4f7f\u5f97\u6bcf\u4e2a\u5b50\u95ee\u9898\u90fd\u53ef\u4ee5\u9ad8\u6548\u6c42\u89e3\u3002\u5728Taichi\u4e2d\uff0c\u5178\u578b\u7684\u5b9e\u73b0\u6846\u67b6\u5982\u4e0b\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">step</span><span class=\"p\">():</span>\n    <span class=\"n\">advect_velocity</span><span class=\"p\">()</span>      <span class=\"c1\"># \u5bf9\u6d41\u6b65</span>\n    <span class=\"n\">apply_external_forces</span><span class=\"p\">()</span> <span class=\"c1\"># \u5916\u529b\u6b65  </span>\n    <span class=\"n\">project_velocity</span><span class=\"p\">()</span>      <span class=\"c1\"># \u6295\u5f71\u6b65</span>\n    <span class=\"n\">advect_other_quantities</span><span class=\"p\">()</span> <span class=\"c1\"># \u8f93\u9001\u5176\u4ed6\u7269\u7406\u91cf</span>\n</code></pre></div>\n\n<p><strong>\u5206\u88c2\u8bef\u5dee\u5206\u6790</strong>\uff1a\u7b97\u5b50\u5206\u88c2\u5f15\u5165\u7684\u8bef\u5dee\u4e3b\u8981\u6765\u81ea\u4e8e\u5ffd\u7565\u4e86\u5404\u9879\u4e4b\u95f4\u7684\u8026\u5408\u3002\u4f8b\u5982\uff0c\u538b\u529b\u68af\u5ea6\u5b9e\u9645\u4e0a\u4f1a\u5f71\u54cd\u5bf9\u6d41\uff0c\u4f46\u5728\u5206\u88c2\u65b9\u6cd5\u4e2d\u8fd9\u79cd\u5f71\u54cd\u88ab\u5ef6\u8fdf\u5230\u6295\u5f71\u6b65\u3002\u8fd9\u79cd\u8bef\u5dee\u901a\u5e38\u662f $O(\\Delta t)$\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u9ad8\u9636\u5206\u88c2\u65b9\u6848\u51cf\u5c0f\u3002</p>\n<h3 id=\"414-cfl\">4.1.4 \u7a33\u5b9a\u6027\u4e0eCFL\u6761\u4ef6</h3>\n<p>\u663e\u5f0f\u65f6\u95f4\u79ef\u5206\u7684\u7a33\u5b9a\u6027\u53d7CFL\uff08Courant-Friedrichs-Lewy\uff09\u6761\u4ef6\u9650\u5236\uff1a\n$$\\Delta t \\leq C \\frac{\\Delta x}{|\\mathbf{u}|_{\\max}}$$\n\u5176\u4e2d $C$ \u662fCFL\u6570\uff0c\u901a\u5e38\u53d60.5-1.0\u3002\u8fd9\u4e2a\u6761\u4ef6\u786e\u4fdd\u5728\u4e00\u4e2a\u65f6\u95f4\u6b65\u5185\uff0c\u6d41\u4f53\u7c92\u5b50\u79fb\u52a8\u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u7f51\u683c\u5355\u5143\u3002</p>\n<p><strong>CFL\u6761\u4ef6\u7684\u63a8\u5bfc</strong>\uff1a\u8003\u8651\u4e00\u7ef4\u7ebf\u6027\u5bf9\u6d41\u65b9\u7a0b $\\frac{\\partial u}{\\partial t} + c\\frac{\\partial u}{\\partial x} = 0$\uff0c\u4f7f\u7528\u524d\u5411\u65f6\u95f4\u3001\u4e2d\u5fc3\u7a7a\u95f4\u5dee\u5206\uff1a\n$$\\frac{u_i^{n+1} - u_i^n}{\\Delta t} + c\\frac{u_{i+1}^n - u_{i-1}^n}{2\\Delta x} = 0$$\n\u901a\u8fc7von Neumann\u7a33\u5b9a\u6027\u5206\u6790\uff0c\u4ee3\u5165 $u_i^n = \\hat{u}^n e^{ik_xi\\Delta x}$\uff0c\u53ef\u5f97\u653e\u5927\u56e0\u5b50\uff1a\n$$G = 1 - i\\nu \\sin(k\\Delta x)$$\n\u5176\u4e2d $\\nu = c\\Delta t/\\Delta x$ \u662fCFL\u6570\u3002\u7a33\u5b9a\u6027\u8981\u6c42 $|G| \\leq 1$\uff0c\u4f46\u5bf9\u4e8e\u4e2d\u5fc3\u5dee\u5206\u8fd9\u6c38\u8fdc\u65e0\u6cd5\u6ee1\u8db3\u3002\u4f7f\u7528\u8fce\u98ce\u683c\u5f0f\u53ef\u5f97\u7a33\u5b9a\u6761\u4ef6 $\\nu \\leq 1$\u3002</p>\n<p>\u5bf9\u4e8e\u7c98\u6027\u9879\uff0c\u5982\u679c\u4f7f\u7528\u663e\u5f0f\u79ef\u5206\uff0c\u8fd8\u9700\u8981\u6ee1\u8db3\u6269\u6563\u7a33\u5b9a\u6027\u6761\u4ef6\uff1a\n$$\\Delta t \\leq \\frac{(\\Delta x)^2}{2d\\nu}$$\n\u5176\u4e2d $d$ \u662f\u7a7a\u95f4\u7ef4\u5ea6\u3002\u7531\u4e8e\u8fd9\u4e2a\u6761\u4ef6\u5bf9\u5c0f\u7f51\u683c\u975e\u5e38\u4e25\u683c\uff08$\\Delta t \\propto (\\Delta x)^2$\uff09\uff0c\u7c98\u6027\u9879\u901a\u5e38\u4f7f\u7528\u9690\u5f0f\u6216\u534a\u9690\u5f0f\u65b9\u6cd5\u5904\u7406\u3002</p>\n<p><strong>\u591a\u7269\u7406\u573a\u7684\u7efc\u5408\u7a33\u5b9a\u6027\u6761\u4ef6</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u5bf9\u6d41CFL</strong>\uff1a$\\Delta t_{adv} = C_{adv} \\frac{\\Delta x}{|\\mathbf{u}|_{\\max}}$</p>\n</li>\n<li>\n<p><strong>\u7c98\u6027\u7a33\u5b9a\u6027</strong>\uff1a$\\Delta t_{visc} = C_{visc} \\frac{(\\Delta x)^2}{\\nu}$</p>\n</li>\n<li>\n<p><strong>\u8868\u9762\u5f20\u529b</strong>\uff08\u5982\u679c\u5b58\u5728\uff09\uff1a$\\Delta t_{\\sigma} = C_{\\sigma} \\sqrt{\\frac{\\rho (\\Delta x)^3}{\\sigma}}$</p>\n</li>\n<li>\n<p><strong>\u91cd\u529b\u6ce2</strong>\uff08\u81ea\u7531\u8868\u9762\uff09\uff1a$\\Delta t_{grav} = C_{grav} \\sqrt{\\frac{\\Delta x}{g}}$</p>\n</li>\n</ol>\n<p>\u6700\u7ec8\u65f6\u95f4\u6b65\u957f\uff1a$\\Delta t = \\min(\\Delta t_{adv}, \\Delta t_{visc}, \\Delta t_{\\sigma}, \\Delta t_{grav})$</p>\n<p>\u5176\u4e2d $C_{adv} \\approx 0.5$, $C_{visc} \\approx 0.25$, $C_{\\sigma} \\approx 0.5$, $C_{grav} \\approx 0.5$ \u662f\u5b89\u5168\u7cfb\u6570\u3002</p>\n<h2 id=\"42\">4.2 \u7f51\u683c\u7c7b\u578b\u4e0e\u79bb\u6563\u5316</h2>\n<h3 id=\"421-vsstaggered-grid\">4.2.1 \u540c\u4f4d\u7f51\u683cvs\u4ea4\u9519\u7f51\u683c(Staggered Grid)</h3>\n<p><strong>\u540c\u4f4d\u7f51\u683c\uff08Collocated Grid\uff09</strong>\uff1a</p>\n<ul>\n<li>\u6240\u6709\u7269\u7406\u91cf\uff08\u901f\u5ea6\u5206\u91cf\u3001\u538b\u529b\u7b49\uff09\u5b58\u50a8\u5728\u7f51\u683c\u5355\u5143\u4e2d\u5fc3</li>\n<li>\u5b9e\u73b0\u7b80\u5355\uff0c\u4f46\u53ef\u80fd\u4ea7\u751f\u68cb\u76d8\u683c\u538b\u529b\u632f\u8361</li>\n<li>\u9700\u8981\u7279\u6b8a\u5904\u7406\u6765\u907f\u514d\u6570\u503c\u4e0d\u7a33\u5b9a</li>\n</ul>\n<p><strong>\u68cb\u76d8\u683c\u95ee\u9898\u7684\u6839\u6e90</strong>\uff1a\u5728\u540c\u4f4d\u7f51\u683c\u4e0a\uff0c\u538b\u529b\u68af\u5ea6\u4f7f\u7528\u4e2d\u5fc3\u5dee\u5206\uff1a\n$$\\left(\\frac{\\partial p}{\\partial x}\\right)_i = \\frac{p_{i+1} - p_{i-1}}{2\\Delta x}$$\n\u8fd9\u4e2a\u79bb\u6563\u7b97\u5b50\u65e0\u6cd5\u611f\u77e5\u68cb\u76d8\u683c\u6a21\u5f0f $p_i = (-1)^i$\uff0c\u56e0\u4e3a $p_{i+1} - p_{i-1} = 0$\u3002\u8fd9\u5bfc\u81f4\u538b\u529b\u6cca\u677e\u65b9\u7a0b\u7684\u96f6\u7a7a\u95f4\u5305\u542b\u975e\u7269\u7406\u7684\u9ad8\u9891\u6a21\u5f0f\u3002</p>\n<p><strong>\u4ea4\u9519\u7f51\u683c\uff08MAC Grid\uff09</strong>\uff1a</p>\n<ul>\n<li>\u538b\u529b\u5b58\u50a8\u5728\u5355\u5143\u4e2d\u5fc3</li>\n<li>\u901f\u5ea6\u5206\u91cf\u5b58\u50a8\u5728\u5bf9\u5e94\u7684\u5355\u5143\u9762\u4e2d\u5fc3</li>\n<li>$u$ \u5b58\u50a8\u5728 $(i+1/2, j)$ \u4f4d\u7f6e</li>\n<li>$v$ \u5b58\u50a8\u5728 $(i, j+1/2)$ \u4f4d\u7f6e</li>\n</ul>\n<p>MAC\u7f51\u683c\u7684\u5e03\u5c40\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>      v(i,j+1/2)\n         |\nu(i-1/2,j)---p(i,j)---u(i+1/2,j)\n         |\n      v(i,j-1/2)\n</code></pre></div>\n\n<p><strong>MAC\u7f51\u683c\u7684\u6570\u5b66\u4f18\u52bf</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7d27\u51d1\u7684\u68af\u5ea6-\u6563\u5ea6\u5bf9</strong>\uff1a\u6563\u5ea6\u548c\u68af\u5ea6\u7b97\u5b50\u4e92\u4e3a\u8d1f\u8f6c\u7f6e\uff1a\n$$\\langle \\nabla \\cdot \\mathbf{u}, p \\rangle = -\\langle \\mathbf{u}, \\nabla p \\rangle$$\n\u8fd9\u4fdd\u8bc1\u4e86\u79bb\u6563\u7cfb\u7edf\u7684\u80fd\u91cf\u5b88\u6052\u6027\u3002</p>\n</li>\n<li>\n<p><strong>\u81ea\u7136\u7684\u901a\u91cf\u8ba1\u7b97</strong>\uff1a\u901f\u5ea6\u76f4\u63a5\u5b9a\u4e49\u5728\u5355\u5143\u754c\u9762\u4e0a\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u8d28\u91cf\u901a\u91cf\u3002</p>\n</li>\n<li>\n<p><strong>\u6700\u4f18\u7684inf-sup\u6761\u4ef6</strong>\uff1aMAC\u79bb\u6563\u6ee1\u8db3\u79bb\u6563inf-sup\uff08LBB\uff09\u6761\u4ef6\uff0c\u4fdd\u8bc1\u4e86\u538b\u529b\u7684\u552f\u4e00\u6027\u3002</p>\n</li>\n</ol>\n<p><strong>\u5b9e\u73b0\u7ec6\u8282</strong>\uff1a\u5728Taichi\u4e2d\uff0cMAC\u7f51\u683c\u7684\u7d22\u5f15\u7ea6\u5b9a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u538b\u529b\u548c\u6807\u91cf\u573a\uff1a\u5355\u5143\u4e2d\u5fc3</span>\n<span class=\"n\">pressure</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">nx</span><span class=\"p\">,</span> <span class=\"n\">ny</span><span class=\"p\">))</span>\n<span class=\"c1\"># u\u901f\u5ea6\uff1a\u5782\u76f4\u9762\u4e2d\u5fc3</span>\n<span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">nx</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">ny</span><span class=\"p\">))</span>\n<span class=\"c1\"># v\u901f\u5ea6\uff1a\u6c34\u5e73\u9762\u4e2d\u5fc3  </span>\n<span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">nx</span><span class=\"p\">,</span> <span class=\"n\">ny</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<h3 id=\"422-mac\">4.2.2 MAC\u7f51\u683c\u7684\u4f18\u52bf</h3>\n<ol>\n<li><strong>\u81ea\u7136\u6ee1\u8db3\u6563\u5ea6\u5b9a\u7406</strong>\uff1a\u5728\u5355\u5143\u8fb9\u754c\u4e0a\u76f4\u63a5\u8ba1\u7b97\u901a\u91cf</li>\n<li><strong>\u907f\u514d\u538b\u529b\u632f\u8361</strong>\uff1a\u538b\u529b\u548c\u901f\u5ea6\u7684\u8026\u5408\u66f4\u7d27\u5bc6</li>\n<li><strong>\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u7b80\u5355</strong>\uff1a\u901f\u5ea6\u5206\u91cf\u76f4\u63a5\u4f4d\u4e8e\u8fb9\u754c\u4e0a</li>\n<li><strong>\u5b88\u6052\u6027\u597d</strong>\uff1a\u79bb\u6563\u540e\u4ecd\u4fdd\u6301\u8d28\u91cf\u3001\u52a8\u91cf\u5b88\u6052</li>\n</ol>\n<p>\u79bb\u6563\u6563\u5ea6\u7b97\u5b50\u5728MAC\u7f51\u683c\u4e0a\u7279\u522b\u7b80\u6d01\uff1a\n$$(\\nabla \\cdot \\mathbf{u})_{i,j} = \\frac{u_{i+1/2,j} - u_{i-1/2,j}}{\\Delta x} + \\frac{v_{i,j+1/2} - v_{i,j-1/2}}{\\Delta y}$$</p>\n<h3 id=\"423\">4.2.3 \u53cc\u7ebf\u6027\u63d2\u503c</h3>\n<p>\u7531\u4e8e\u901f\u5ea6\u5206\u91cf\u5b58\u50a8\u5728\u4e0d\u540c\u4f4d\u7f6e\uff0c\u7ecf\u5e38\u9700\u8981\u63d2\u503c\u83b7\u53d6\u4efb\u610f\u4f4d\u7f6e\u7684\u901f\u5ea6\u3002\u5bf9\u4e8e\u53cc\u7ebf\u6027\u63d2\u503c\uff1a\n$$f(x,y) = f_{00}(1-\\alpha)(1-\\beta) + f_{10}\\alpha(1-\\beta) + f_{01}(1-\\alpha)\\beta + f_{11}\\alpha\\beta$$\n\u5176\u4e2d $\\alpha = (x - x_0)/\\Delta x$\uff0c$\\beta = (y - y_0)/\\Delta y$ \u662f\u5c40\u90e8\u5750\u6807\u3002</p>\n<p>\u5728Taichi\u4e2d\u5b9e\u73b0\u53cc\u7ebf\u6027\u63d2\u503c\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">bilinear_interp</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n    <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"n\">fx</span><span class=\"p\">,</span> <span class=\"n\">fy</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">-</span> <span class=\"n\">j</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">fx</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">fy</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n            <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">fx</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">fy</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n            <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">fx</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">fy</span> <span class=\"o\">+</span>\n            <span class=\"n\">field</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">fx</span> <span class=\"o\">*</span> <span class=\"n\">fy</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"424\">4.2.4 \u6563\u5ea6\u4e0e\u68af\u5ea6\u7b97\u5b50\u79bb\u6563</h3>\n<p><strong>\u6563\u5ea6\u7b97\u5b50</strong>\uff08\u7528\u4e8e\u4e0d\u53ef\u538b\u7f29\u7ea6\u675f\uff09\uff1a\n$$(\\nabla \\cdot \\mathbf{u})_{i,j} = \\frac{u_{i+1/2,j} - u_{i-1/2,j}}{\\Delta x} + \\frac{v_{i,j+1/2} - v_{i,j-1/2}}{\\Delta y}$$\n<strong>\u68af\u5ea6\u7b97\u5b50</strong>\uff08\u7528\u4e8e\u538b\u529b\u68af\u5ea6\uff09\uff1a\n$$(\\nabla p)_x|_{i+1/2,j} = \\frac{p_{i+1,j} - p_{i,j}}{\\Delta x}$$\n$$(\\nabla p)_y|_{i,j+1/2} = \\frac{p_{i,j+1} - p_{i,j}}{\\Delta y}$$\n<strong>Laplace\u7b97\u5b50</strong>\uff08\u7528\u4e8e\u7c98\u6027\u9879\u548c\u538b\u529b\u6cca\u677e\u65b9\u7a0b\uff09\uff1a\n$$(\\nabla^2 p)_{i,j} = \\frac{p_{i+1,j} - 2p_{i,j} + p_{i-1,j}}{(\\Delta x)^2} + \\frac{p_{i,j+1} - 2p_{i,j} + p_{i,j-1}}{(\\Delta y)^2}$$</p>\n<h2 id=\"43-semi-lagrangian-advection\">4.3 \u534a\u62c9\u683c\u6717\u65e5\u8f93\u9001(Semi-Lagrangian Advection)</h2>\n<h3 id=\"431\">4.3.1 \u53cd\u5411\u7c92\u5b50\u8ffd\u8e2a</h3>\n<p>\u534a\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7ed3\u5408\u4e86\u62c9\u683c\u6717\u65e5\u548c\u6b27\u62c9\u65b9\u6cd5\u7684\u4f18\u70b9\u3002\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5bf9\u4e8e\u7f51\u683c\u70b9 $\\mathbf{x}$\uff0c\u8ffd\u8e2a\u5230\u8fbe\u8be5\u70b9\u7684\u6d41\u4f53\u7c92\u5b50\u5728\u4e0a\u4e00\u65f6\u523b\u7684\u4f4d\u7f6e $\\mathbf{x}_{prev}$\uff1a\n$$\\mathbf{x}_{prev} = \\mathbf{x} - \\Delta t \\cdot \\mathbf{u}(\\mathbf{x})$$\n\u7136\u540e\u901a\u8fc7\u63d2\u503c\u83b7\u53d6\u8be5\u4f4d\u7f6e\u7684\u7269\u7406\u91cf\u4f5c\u4e3a\u65b0\u65f6\u523b\u7684\u503c\uff1a\n$$q^{n+1}(\\mathbf{x}) = q^n(\\mathbf{x}_{prev})$$\n\u8fd9\u79cd\u65b9\u6cd5\u65e0\u6761\u4ef6\u7a33\u5b9a\uff0c\u5141\u8bb8\u4f7f\u7528\u5927\u65f6\u95f4\u6b65\u957f\uff0c\u4f46\u4f1a\u5f15\u5165\u6570\u503c\u8017\u6563\u3002</p>\n<h3 id=\"432\">4.3.2 \u901f\u5ea6\u63d2\u503c\u7b56\u7565</h3>\n<p>\u7b80\u5355\u7684\u4e00\u9636\u7cbe\u5ea6\u8ffd\u8e2a\u4f7f\u7528\u5f53\u524d\u4f4d\u7f6e\u7684\u901f\u5ea6\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7Runge-Kutta\u65b9\u6cd5\u63d0\u9ad8\u7cbe\u5ea6\uff1a</p>\n<p><strong>RK2\uff08\u4e2d\u70b9\u6cd5\uff09</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">backtrace_rk2</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">:</span>\n    <span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">x_mid</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">v1</span>\n    <span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x_mid</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">v2</span>\n</code></pre></div>\n\n<p><strong>RK3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>  \n<span class=\"k\">def</span> <span class=\"nf\">backtrace_rk3</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">:</span>\n    <span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">v1</span>\n    <span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">)</span>\n    <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">0.75</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">v2</span>\n    <span class=\"n\">v3</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x2</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mf\">2.0</span><span class=\"o\">/</span><span class=\"mf\">9.0</span> <span class=\"o\">*</span> <span class=\"n\">v1</span> <span class=\"o\">+</span> <span class=\"mf\">1.0</span><span class=\"o\">/</span><span class=\"mf\">3.0</span> <span class=\"o\">*</span> <span class=\"n\">v2</span> <span class=\"o\">+</span> <span class=\"mf\">4.0</span><span class=\"o\">/</span><span class=\"mf\">9.0</span> <span class=\"o\">*</span> <span class=\"n\">v3</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"433\">4.3.3 \u6570\u503c\u8017\u6563\u95ee\u9898</h3>\n<p>\u534a\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u6570\u503c\u8017\u6563\uff0c\u8868\u73b0\u4e3a\uff1a</p>\n<ul>\n<li>\u6da1\u65cb\u5feb\u901f\u8870\u51cf</li>\n<li>\u7ec6\u8282\u7279\u5f81\u6a21\u7cca</li>\n<li>\u80fd\u91cf\u4e0d\u5b88\u6052</li>\n</ul>\n<p>\u6570\u503c\u8017\u6563\u7684\u6839\u6e90\u662f\u63d2\u503c\u8fc7\u7a0b\u4e2d\u7684\u5e73\u6ed1\u6548\u5e94\u3002\u6bcf\u6b21\u63d2\u503c\u76f8\u5f53\u4e8e\u5e94\u7528\u4e86\u4e00\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\uff0c\u591a\u6b21\u8f93\u9001\u540e\u9ad8\u9891\u4fe1\u606f\u9010\u6e10\u4e22\u5931\u3002</p>\n<h3 id=\"434\">4.3.4 \u5355\u8c03\u6027\u4fdd\u6301</h3>\n<p>\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u975e\u7269\u7406\u7684\u65b0\u6781\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u9650\u5236\u5668\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">clamp_extrema</span><span class=\"p\">(</span><span class=\"n\">q_new</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n    <span class=\"c1\"># \u83b7\u53d6\u5468\u56f4\u7f51\u683c\u70b9\u7684\u6700\u5927\u6700\u5c0f\u503c</span>\n    <span class=\"n\">q_min</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">inf</span>\n    <span class=\"n\">q_max</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">inf</span>\n    <span class=\"k\">for</span> <span class=\"n\">di</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">dj</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">):</span>\n            <span class=\"n\">q_neighbor</span> <span class=\"o\">=</span> <span class=\"n\">q_field</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">di</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"n\">dj</span><span class=\"p\">]</span>\n            <span class=\"n\">q_min</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">q_min</span><span class=\"p\">,</span> <span class=\"n\">q_neighbor</span><span class=\"p\">)</span>\n            <span class=\"n\">q_max</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">q_max</span><span class=\"p\">,</span> <span class=\"n\">q_neighbor</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">q_new</span><span class=\"p\">,</span> <span class=\"n\">q_min</span><span class=\"p\">,</span> <span class=\"n\">q_max</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"44\">4.4 \u9ad8\u9636\u8f93\u9001\u683c\u5f0f</h2>\n<h3 id=\"441-maccormack\">4.4.1 MacCormack\u65b9\u6cd5</h3>\n<p>MacCormack\u65b9\u6cd5\u901a\u8fc7\u524d\u5411\u548c\u540e\u5411\u8f93\u9001\u4f30\u8ba1\u8bef\u5dee\u5e76\u8865\u507f\uff1a</p>\n<ol>\n<li>\u524d\u5411\u8f93\u9001\uff1a$\\phi^* = \\text{SemiLagrangian}(\\phi^n, \\Delta t)$</li>\n<li>\u540e\u5411\u8f93\u9001\uff1a$\\phi^{**} = \\text{SemiLagrangian}(\\phi^*, -\\Delta t)$  </li>\n<li>\u8bef\u5dee\u4f30\u8ba1\uff1a$e = \\frac{1}{2}(\\phi^n - \\phi^{**})$</li>\n<li>\u4fee\u6b63\u7ed3\u679c\uff1a$\\phi^{n+1} = \\phi^* + e$</li>\n</ol>\n<p>\u5b9e\u73b0\u65f6\u9700\u8981\u52a0\u5165\u9650\u5236\u5668\u9632\u6b62\u8fc7\u51b2\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">maccormack_advect</span><span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">phi_new</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(),</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u524d\u5411\u8f93\u9001</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">phi</span><span class=\"p\">:</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span>\n        <span class=\"n\">x_prev</span> <span class=\"o\">=</span> <span class=\"n\">backtrace</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">)</span>\n        <span class=\"n\">phi_star</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">bilinear_sample</span><span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">,</span> <span class=\"n\">x_prev</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u540e\u5411\u8f93\u9001  </span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">phi</span><span class=\"p\">:</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span>\n        <span class=\"n\">x_next</span> <span class=\"o\">=</span> <span class=\"n\">backtrace</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">dt</span><span class=\"p\">)</span>\n        <span class=\"n\">phi_nn</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">bilinear_sample</span><span class=\"p\">(</span><span class=\"n\">phi_star</span><span class=\"p\">,</span> <span class=\"n\">x_next</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8bef\u5dee\u8865\u507f</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">phi</span><span class=\"p\">:</span>\n        <span class=\"n\">phi_new</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">phi_star</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">phi_nn</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">])</span>\n        <span class=\"n\">phi_new</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">clamp_extrema</span><span class=\"p\">(</span><span class=\"n\">phi_new</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"442-bfecc\">4.4.2 BFECC\u65b9\u6cd5</h3>\n<p>BFECC (Back and Forth Error Compensation and Correction) \u662f\u53e6\u4e00\u79cd\u51cf\u5c11\u6570\u503c\u8017\u6563\u7684\u65b9\u6cd5\uff1a</p>\n<ol>\n<li>\u524d\u5411\u8f93\u9001\uff1a$\\phi^{n+1/2} = A(\\phi^n)$</li>\n<li>\u540e\u5411\u8f93\u9001\uff1a$\\phi^{n*} = A^{-1}(\\phi^{n+1/2})$</li>\n<li>\u8bef\u5dee\u4f30\u8ba1\uff1a$e = \\frac{1}{2}(\\phi^n - \\phi^{n*})$</li>\n<li>\u4fee\u6b63\u8f93\u5165\uff1a$\\tilde{\\phi}^n = \\phi^n + e$</li>\n<li>\u6700\u7ec8\u8f93\u9001\uff1a$\\phi^{n+1} = A(\\tilde{\\phi}^n)$</li>\n</ol>\n<p>\u5176\u4e2d $A$ \u8868\u793a\u8f93\u9001\u7b97\u5b50\uff0c$A^{-1}$ \u8868\u793a\u53cd\u5411\u8f93\u9001\u3002</p>\n<h3 id=\"443-runge-kutta\">4.4.3 Runge-Kutta\u79ef\u5206</h3>\n<p>\u5bf9\u4e8e\u901f\u5ea6\u573a\u7684\u9ad8\u9636\u79ef\u5206\uff0c\u5e38\u7528RK4\u65b9\u6cd5\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">rk4_backtrace</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">vec2</span><span class=\"p\">:</span>\n    <span class=\"n\">k1</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">k2</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">k1</span><span class=\"p\">)</span>\n    <span class=\"n\">k3</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">k2</span><span class=\"p\">)</span>\n    <span class=\"n\">k4</span> <span class=\"o\">=</span> <span class=\"n\">sample_velocity</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">k3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">k1</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">k2</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">k3</span> <span class=\"o\">+</span> <span class=\"n\">k4</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mf\">6.0</span>\n</code></pre></div>\n\n<h3 id=\"444-clamping\">4.4.4 \u9650\u5236\u5668\u4e0e\u5939\u6301(Clamping)</h3>\n<p>\u4e3a\u4e86\u4fdd\u6301\u7269\u7406\u91cf\u7684\u754c\u9650\u548c\u907f\u514d\u632f\u8361\uff0c\u9700\u8981\u4f7f\u7528\u5404\u79cd\u9650\u5236\u5668\uff1a</p>\n<p><strong>MinMod\u9650\u5236\u5668</strong>\uff1a\n$$\\text{minmod}(a, b) = \\begin{cases}\na &amp; \\text{if } |a| &lt; |b| \\text{ and } ab &gt; 0 \\\\\nb &amp; \\text{if } |b| &lt; |a| \\text{ and } ab &gt; 0 \\\\\n0 &amp; \\text{otherwise}\n\\end{cases}$$\n<strong>Superbee\u9650\u5236\u5668</strong>\uff1a\n$$\\text{superbee}(a, b) = \\text{maxmod}(\\text{minmod}(2a, b), \\text{minmod}(a, 2b))$$\n\u8fd9\u4e9b\u9650\u5236\u5668\u786e\u4fdd\u9ad8\u9636\u65b9\u6cd5\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u6781\u503c\uff0c\u4fdd\u6301\u89e3\u7684\u7269\u7406\u6027\u3002</p>\n<h2 id=\"45-chorin\">4.5 Chorin\u5f0f\u538b\u529b\u6295\u5f71</h2>\n<h3 id=\"451-helmholtz-hodge\">4.5.1 Helmholtz-Hodge\u5206\u89e3</h3>\n<p>Helmholtz-Hodge\u5b9a\u7406\u6307\u51fa\uff0c\u4efb\u610f\u5411\u91cf\u573a\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u4e3a\u65e0\u6563\u573a\u548c\u65e0\u65cb\u573a\u4e4b\u548c\uff1a\n$$\\mathbf{u} = \\mathbf{u}_{div-free} + \\nabla \\phi$$\n\u5176\u4e2d $\\nabla \\cdot \\mathbf{u}_{div-free} = 0$\u3002\u8fd9\u662f\u538b\u529b\u6295\u5f71\u6cd5\u7684\u7406\u8bba\u57fa\u7840\u3002</p>\n<h3 id=\"452\">4.5.2 \u538b\u529b\u6cca\u677e\u65b9\u7a0b\u63a8\u5bfc</h3>\n<p>\u4ece\u52a8\u91cf\u65b9\u7a0b\u51fa\u53d1\uff1a\n$$\\frac{\\mathbf{u}^{n+1} - \\mathbf{u}^*}{\\Delta t} = -\\frac{1}{\\rho}\\nabla p$$\n\u5176\u4e2d $\\mathbf{u}^*$ \u662f\u4e0d\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u7684\u4e2d\u95f4\u901f\u5ea6\u3002</p>\n<p>\u5bf9\u4e24\u8fb9\u53d6\u6563\u5ea6\uff0c\u5e76\u5e94\u7528\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6 $\\nabla \\cdot \\mathbf{u}^{n+1} = 0$\uff1a\n$$\\nabla \\cdot \\mathbf{u}^{n+1} - \\nabla \\cdot \\mathbf{u}^* = -\\frac{\\Delta t}{\\rho} \\nabla^2 p$$\n\u56e0\u6b64\u5f97\u5230\u538b\u529b\u6cca\u677e\u65b9\u7a0b\uff1a\n$$\\nabla^2 p = \\frac{\\rho}{\\Delta t} \\nabla \\cdot \\mathbf{u}^*$$</p>\n<h3 id=\"453\">4.5.3 \u79bb\u6563\u5316\u4e0e\u8fb9\u754c\u6761\u4ef6</h3>\n<p>\u5728MAC\u7f51\u683c\u4e0a\uff0c\u538b\u529b\u6cca\u677e\u65b9\u7a0b\u7684\u79bb\u6563\u5f62\u5f0f\u4e3a\uff1a\n$$\\frac{p_{i+1,j} - 2p_{i,j} + p_{i-1,j}}{(\\Delta x)^2} + \\frac{p_{i,j+1} - 2p_{i,j} + p_{i,j-1}}{(\\Delta y)^2} = \\frac{\\rho}{\\Delta t} \\cdot divergence_{i,j}$$\n<strong>\u8fb9\u754c\u6761\u4ef6</strong>\uff1a</p>\n<ul>\n<li><strong>\u56fa\u4f53\u8fb9\u754c</strong>\uff1a\u6cd5\u5411\u538b\u529b\u68af\u5ea6\u4e3a\u96f6\uff08Neumann\u6761\u4ef6\uff09$\\frac{\\partial p}{\\partial n} = 0$</li>\n<li><strong>\u81ea\u7531\u8868\u9762</strong>\uff1a\u538b\u529b\u4e3a\u5927\u6c14\u538b\uff08Dirichlet\u6761\u4ef6\uff09$p = 0$</li>\n<li><strong>\u5468\u671f\u8fb9\u754c</strong>\uff1a\u538b\u529b\u548c\u68af\u5ea6\u90fd\u5468\u671f\u5ef6\u62d3</li>\n</ul>\n<p>\u79bb\u6563\u7cfb\u7edf\u53ef\u4ee5\u5199\u6210\u77e9\u9635\u5f62\u5f0f $\\mathbf{A}\\mathbf{p} = \\mathbf{b}$\uff0c\u5176\u4e2d $\\mathbf{A}$ \u662f\u79bb\u6563Laplace\u7b97\u5b50\u3002</p>\n<h3 id=\"454\">4.5.4 \u901f\u5ea6\u4fee\u6b63\u6b65</h3>\n<p>\u6c42\u89e3\u538b\u529b\u540e\uff0c\u901a\u8fc7\u538b\u529b\u68af\u5ea6\u4fee\u6b63\u901f\u5ea6\u573a\uff1a\n$$\\mathbf{u}^{n+1} = \\mathbf{u}^* - \\frac{\\Delta t}{\\rho} \\nabla p$$\n\u5728MAC\u7f51\u683c\u4e0a\u7684\u5177\u4f53\u5f62\u5f0f\uff1a\n$$u_{i+1/2,j}^{n+1} = u_{i+1/2,j}^* - \\frac{\\Delta t}{\\rho} \\frac{p_{i+1,j} - p_{i,j}}{\\Delta x}$$\n$$v_{i,j+1/2}^{n+1} = v_{i,j+1/2}^* - \\frac{\\Delta t}{\\rho} \\frac{p_{i,j+1} - p_{i,j}}{\\Delta y}$$\n\u6295\u5f71\u540e\u7684\u901f\u5ea6\u573a\u81ea\u52a8\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u3002</p>\n<h2 id=\"46\">4.6 \u56fa\u4f53\u8fb9\u754c\u6761\u4ef6</h2>\n<h3 id=\"461\">4.6.1 \u65e0\u6ed1\u79fb\u6761\u4ef6</h3>\n<p>\u5bf9\u4e8e\u7c98\u6027\u6d41\u4f53\uff0c\u5728\u56fa\u4f53\u58c1\u9762\u4e0a\u9700\u8981\u6ee1\u8db3\u65e0\u6ed1\u79fb\u6761\u4ef6\uff1a</p>\n<ul>\n<li>\u6cd5\u5411\u901f\u5ea6\uff1a$\\mathbf{u} \\cdot \\mathbf{n} = 0$</li>\n<li>\u5207\u5411\u901f\u5ea6\uff1a$\\mathbf{u} \\cdot \\mathbf{t} = 0$</li>\n</ul>\n<p>\u5728MAC\u7f51\u683c\u4e0a\uff0c\u76f4\u63a5\u8bbe\u7f6e\u8fb9\u754c\u4e0a\u7684\u901f\u5ea6\u5206\u91cf\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">enforce_boundary</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u5de6\u53f3\u8fb9\u754c</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ny</span><span class=\"p\">):</span>\n        <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>      <span class=\"c1\"># \u5de6\u8fb9\u754c</span>\n        <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">nx</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>     <span class=\"c1\"># \u53f3\u8fb9\u754c</span>\n    <span class=\"c1\"># \u4e0a\u4e0b\u8fb9\u754c  </span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">nx</span><span class=\"p\">):</span>\n        <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>      <span class=\"c1\"># \u4e0b\u8fb9\u754c</span>\n        <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">ny</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>     <span class=\"c1\"># \u4e0a\u8fb9\u754c</span>\n</code></pre></div>\n\n<h3 id=\"462\">4.6.2 \u81ea\u7531\u6ed1\u79fb\u6761\u4ef6</h3>\n<p>\u81ea\u7531\u6ed1\u79fb\u6761\u4ef6\u53ea\u7ea6\u675f\u6cd5\u5411\u901f\u5ea6\uff0c\u5141\u8bb8\u5207\u5411\u6ed1\u52a8\uff1a</p>\n<ul>\n<li>\u6cd5\u5411\u901f\u5ea6\uff1a$\\mathbf{u} \\cdot \\mathbf{n} = 0$</li>\n<li>\u5207\u5411\u5e94\u529b\uff1a$\\tau \\cdot \\mathbf{t} = 0$</li>\n</ul>\n<p>\u5b9e\u73b0\u65f6\uff0c\u8bbe\u7f6e\u6cd5\u5411\u901f\u5ea6\u4e3a\u96f6\uff0c\u4f46\u4e0d\u4fee\u6539\u5207\u5411\u901f\u5ea6\u3002</p>\n<h3 id=\"463\">4.6.3 \u6d78\u5165\u8fb9\u754c\u6cd5</h3>\n<p>\u5bf9\u4e8e\u590d\u6742\u51e0\u4f55\u5f62\u72b6\uff0c\u6d78\u5165\u8fb9\u754c\u6cd5\uff08Immersed Boundary Method\uff09\u5c06\u8fb9\u754c\u529b\u4f5c\u4e3a\u4f53\u79ef\u529b\u6dfb\u52a0\u5230\u52a8\u91cf\u65b9\u7a0b\u4e2d\uff1a\n$$\\rho \\frac{D\\mathbf{u}}{Dt} = -\\nabla p + \\mu \\nabla^2 \\mathbf{u} + \\mathbf{f}_{IB}$$\n\u5176\u4e2d $\\mathbf{f}_{IB}$ \u662f\u8fb9\u754c\u529b\uff0c\u901a\u8fc7\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6216\u7f5a\u51fd\u6570\u65b9\u6cd5\u8ba1\u7b97\u3002</p>\n<h3 id=\"464\">4.6.4 \u5207\u5272\u5355\u5143\u6cd5</h3>\n<p>\u5207\u5272\u5355\u5143\u6cd5\uff08Cut-cell Method\uff09\u7cbe\u786e\u5904\u7406\u4e0e\u7f51\u683c\u4e0d\u5bf9\u9f50\u7684\u8fb9\u754c\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u6bcf\u4e2a\u5355\u5143\u88ab\u56fa\u4f53\u5360\u636e\u7684\u4f53\u79ef\u5206\u6570</li>\n<li>\u4fee\u6539\u79bb\u6563\u7b97\u5b50\u4ee5\u8003\u8651\u90e8\u5206\u5355\u5143</li>\n<li>\u5728\u5207\u5272\u5355\u5143\u4e0a\u5e94\u7528\u7279\u6b8a\u7684\u63d2\u503c\u548c\u68af\u5ea6\u8ba1\u7b97</li>\n</ol>\n<p>\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8fbe\u5230\u4e8c\u9636\u7cbe\u5ea6\uff0c\u4f46\u5b9e\u73b0\u76f8\u5bf9\u590d\u6742\u3002</p>\n<h2 id=\"47\">4.7 \u81ea\u7531\u8868\u9762\u8fb9\u754c\u6761\u4ef6</h2>\n<h3 id=\"471\">4.7.1 \u8fd0\u52a8\u5b66\u6761\u4ef6</h3>\n<p>\u81ea\u7531\u8868\u9762\u5fc5\u987b\u6ee1\u8db3\u8fd0\u52a8\u5b66\u6761\u4ef6\uff1a\u8868\u9762\u4e0a\u7684\u7c92\u5b50\u59cb\u7ec8\u4fdd\u6301\u5728\u8868\u9762\u4e0a\u3002\u7528\u7b49\u52bf\u9762\u51fd\u6570 $\\phi$ \u8868\u793a\u754c\u9762\uff0c\u5176\u6ee1\u8db3\uff1a\n$$\\frac{D\\phi}{Dt} = \\frac{\\partial \\phi}{\\partial t} + \\mathbf{u} \\cdot \\nabla \\phi = 0$$\n\u8fd9\u662f\u4e00\u4e2aHamilton-Jacobi\u578b\u65b9\u7a0b\uff0c\u63cf\u8ff0\u4e86\u754c\u9762\u7684\u8f93\u9001\u3002</p>\n<h3 id=\"472\">4.7.2 \u52a8\u529b\u5b66\u6761\u4ef6</h3>\n<p>\u5728\u81ea\u7531\u8868\u9762\u4e0a\uff0c\u5e94\u529b\u5fc5\u987b\u8fde\u7eed\u3002\u5ffd\u7565\u7a7a\u6c14\u7684\u5f71\u54cd\uff0c\u8fb9\u754c\u6761\u4ef6\u4e3a\uff1a\n$$p = p_{atm} - \\sigma \\kappa$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$p_{atm}$ \u662f\u5927\u6c14\u538b\uff08\u901a\u5e38\u8bbe\u4e3a0\uff09</li>\n<li>$\\sigma$ \u662f\u8868\u9762\u5f20\u529b\u7cfb\u6570</li>\n<li>$\\kappa = \\nabla \\cdot \\mathbf{n}$ \u662f\u754c\u9762\u66f2\u7387</li>\n</ul>\n<h3 id=\"473\">4.7.3 \u8868\u9762\u5f20\u529b\u5904\u7406</h3>\n<p><strong>\u8fde\u7eed\u8868\u9762\u529b\uff08CSF\uff09\u6a21\u578b</strong>\u5c06\u8868\u9762\u5f20\u529b\u8f6c\u6362\u4e3a\u4f53\u79ef\u529b\uff1a\n$$\\mathbf{F}_{st} = \\sigma \\kappa \\delta(\\phi) \\nabla \\phi$$\n\u5176\u4e2d $\\delta(\\phi)$ \u662fDirac delta\u51fd\u6570\u7684\u5149\u6ed1\u8fd1\u4f3c\u3002\u5728\u5b9e\u9645\u8ba1\u7b97\u4e2d\uff1a\n$$\\kappa = \\nabla \\cdot \\left(\\frac{\\nabla \\phi}{|\\nabla \\phi|}\\right)$$\n\u4e3a\u4e86\u6570\u503c\u7a33\u5b9a\u6027\uff0c\u901a\u5e38\u4f7f\u7528\u5149\u6ed1\u7684delta\u51fd\u6570\uff1a\n$$\\delta_{\\epsilon}(\\phi) = \\begin{cases}\n\\frac{1}{2\\epsilon}\\left(1 + \\cos\\left(\\frac{\\pi\\phi}{\\epsilon}\\right)\\right) &amp; |\\phi| &lt; \\epsilon \\\\\n0 &amp; \\text{otherwise}\n\\end{cases}$$</p>\n<h3 id=\"474-ghost-fluid\">4.7.4 Ghost Fluid\u65b9\u6cd5</h3>\n<p>Ghost Fluid\u65b9\u6cd5\u5728\u754c\u9762\u4e24\u4fa7\u4f7f\u7528\u865a\u62df\u503c\u6765\u5904\u7406\u4e0d\u8fde\u7eed\uff1a</p>\n<ol>\n<li>\u5728\u754c\u9762\u9644\u8fd1\u5b9a\u4e49ghost cells</li>\n<li>\u6839\u636e\u754c\u9762\u6761\u4ef6\u5916\u63a8\u7269\u7406\u91cf\u5230ghost cells</li>\n<li>\u4f7f\u7528\u6807\u51c6\u79bb\u6563\u683c\u5f0f\uff0c\u81ea\u52a8\u5904\u7406\u754c\u9762\u8df3\u8dc3\u6761\u4ef6</li>\n</ol>\n<p>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u538b\u529b\u7684ghost\u503c\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">extrapolate_pressure</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">phi</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">phi</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>  <span class=\"c1\"># \u754c\u9762\u7a7f\u8fc7\u5355\u5143</span>\n        <span class=\"c1\"># \u7ebf\u6027\u5916\u63a8\u538b\u529b\u503c</span>\n        <span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"n\">phi</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">phi</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">theta</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">theta</span> <span class=\"o\">*</span> <span class=\"n\">p_air</span>\n    <span class=\"k\">return</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h2 id=\"_1\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86\u6b27\u62c9\u89c6\u89d2\u4e0b\u7684\u6d41\u4f53\u4eff\u771f\u6838\u5fc3\u6982\u5ff5\uff1a</p>\n<ol>\n<li><strong>\u7269\u8d28\u5bfc\u6570</strong>\uff1a$\\frac{D}{Dt} = \\frac{\\partial}{\\partial t} + \\mathbf{u} \\cdot \\nabla$ \u8fde\u63a5\u4e86\u6b27\u62c9\u548c\u62c9\u683c\u6717\u65e5\u63cf\u8ff0</li>\n<li><strong>\u7b97\u5b50\u5206\u88c2</strong>\uff1a\u5c06\u590d\u6742\u7684Navier-Stokes\u65b9\u7a0b\u5206\u89e3\u4e3a\u5bf9\u6d41\u3001\u5916\u529b\u548c\u6295\u5f71\u4e09\u6b65</li>\n<li><strong>MAC\u7f51\u683c</strong>\uff1a\u4ea4\u9519\u7f51\u683c\u81ea\u7136\u6ee1\u8db3\u79bb\u6563\u6563\u5ea6\u5b9a\u7406\uff0c\u907f\u514d\u538b\u529b\u632f\u8361</li>\n<li><strong>\u534a\u62c9\u683c\u6717\u65e5\u8f93\u9001</strong>\uff1a\u65e0\u6761\u4ef6\u7a33\u5b9a\u4f46\u6709\u6570\u503c\u8017\u6563\uff0c\u9700\u8981\u9ad8\u9636\u4fee\u6b63</li>\n<li><strong>\u538b\u529b\u6295\u5f71</strong>\uff1a\u901a\u8fc7\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b $\\nabla^2 p = \\frac{\\rho}{\\Delta t}\\nabla \\cdot \\mathbf{u}^*$ \u5b9e\u73b0\u4e0d\u53ef\u538b\u7f29\u6027</li>\n<li><strong>\u8fb9\u754c\u6761\u4ef6</strong>\uff1a\u56fa\u4f53\u8fb9\u754c\u7684\u65e0\u6ed1\u79fb/\u81ea\u7531\u6ed1\u79fb\uff0c\u81ea\u7531\u8868\u9762\u7684\u8fd0\u52a8\u5b66/\u52a8\u529b\u5b66\u6761\u4ef6</li>\n</ol>\n<p>\u638c\u63e1\u8fd9\u4e9b\u6982\u5ff5\u662f\u5b9e\u73b0\u7a33\u5b9a\u9ad8\u6548\u7684\u6d41\u4f53\u6c42\u89e3\u5668\u7684\u57fa\u7840\u3002</p>\n<h2 id=\"_2\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_3\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e604.1</strong> \u63a8\u5bfc\u4e8c\u7ef4\u60c5\u51b5\u4e0b\u7684\u7269\u8d28\u5bfc\u6570\u5c55\u5f00\u5f0f\u3002\u5bf9\u4e8e\u6807\u91cf\u573a $\\phi(x,y,t)$\uff0c\u8bc1\u660e\uff1a\n$$\\frac{D\\phi}{Dt} = \\frac{\\partial \\phi}{\\partial t} + u\\frac{\\partial \\phi}{\\partial x} + v\\frac{\\partial \\phi}{\\partial y}$$</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u6d41\u4f53\u8d28\u70b9\u7684\u8f68\u8ff9 $\\mathbf{x}(t)$\uff0c\u4f7f\u7528\u94fe\u5f0f\u6cd5\u5219\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u6cbf\u7740\u6d41\u4f53\u8d28\u70b9\u7684\u8f68\u8ff9 $\\mathbf{x}(t) = (x(t), y(t))$\uff0c\u6709 $\\frac{dx}{dt} = u$\uff0c$\\frac{dy}{dt} = v$\u3002</p>\n<p>\u5e94\u7528\u94fe\u5f0f\u6cd5\u5219\uff1a\n$$\\frac{D\\phi}{Dt} = \\frac{d}{dt}\\phi(x(t), y(t), t) = \\frac{\\partial \\phi}{\\partial t} + \\frac{\\partial \\phi}{\\partial x}\\frac{dx}{dt} + \\frac{\\partial \\phi}{\\partial y}\\frac{dy}{dt}$$\n\u4ee3\u5165\u901f\u5ea6\u5206\u91cf\uff1a\n$$\\frac{D\\phi}{Dt} = \\frac{\\partial \\phi}{\\partial t} + u\\frac{\\partial \\phi}{\\partial x} + v\\frac{\\partial \\phi}{\\partial y} = \\frac{\\partial \\phi}{\\partial t} + \\mathbf{u} \\cdot \\nabla\\phi$$</p>\n</details>\n<p><strong>\u7ec3\u4e604.2</strong> \u5728MAC\u7f51\u683c\u4e0a\uff0c\u7ed9\u5b9a\u901f\u5ea6\u573a $u_{i+1/2,j}$ \u548c $v_{i,j+1/2}$\uff0c\u5199\u51fa\u8ba1\u7b97\u5355\u5143 $(i,j)$ \u5904\u6563\u5ea6\u7684\u516c\u5f0f\u3002\u5982\u679c $\\Delta x = \\Delta y = h$\uff0c\u6563\u5ea6\u4e3a\u96f6\u610f\u5473\u7740\u4ec0\u4e48\uff1f</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u6d41\u5165\u548c\u6d41\u51fa\u5355\u5143\u7684\u901a\u91cf\u5e73\u8861\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u6563\u5ea6\u516c\u5f0f\uff1a\n$$(\\nabla \\cdot \\mathbf{u})_{i,j} = \\frac{u_{i+1/2,j} - u_{i-1/2,j}}{\\Delta x} + \\frac{v_{i,j+1/2} - v_{i,j-1/2}}{\\Delta y}$$\n\u5f53 $\\Delta x = \\Delta y = h$ \u65f6\uff1a\n$$(\\nabla \\cdot \\mathbf{u})_{i,j} = \\frac{1}{h}[(u_{i+1/2,j} - u_{i-1/2,j}) + (v_{i,j+1/2} - v_{i,j-1/2})]$$\n\u6563\u5ea6\u4e3a\u96f6\u610f\u5473\u7740\u6d41\u5165\u5355\u5143\u7684\u8d28\u91cf\u901a\u91cf\u7b49\u4e8e\u6d41\u51fa\u7684\u8d28\u91cf\u901a\u91cf\uff0c\u6ee1\u8db3\u8d28\u91cf\u5b88\u6052\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e604.3</strong> \u8bc1\u660e\u538b\u529b\u6295\u5f71\u6b65\u9aa4\u540e\u7684\u901f\u5ea6\u573a\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u3002\u7ed9\u5b9a $\\mathbf{u}^{n+1} = \\mathbf{u}^* - \\frac{\\Delta t}{\\rho}\\nabla p$\uff0c\u5176\u4e2d $p$ \u6ee1\u8db3 $\\nabla^2 p = \\frac{\\rho}{\\Delta t}\\nabla \\cdot \\mathbf{u}^*$\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u5bf9\u901f\u5ea6\u66f4\u65b0\u516c\u5f0f\u4e24\u8fb9\u53d6\u6563\u5ea6\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5bf9\u901f\u5ea6\u66f4\u65b0\u516c\u5f0f\u53d6\u6563\u5ea6\uff1a\n$$\\nabla \\cdot \\mathbf{u}^{n+1} = \\nabla \\cdot \\mathbf{u}^* - \\frac{\\Delta t}{\\rho}\\nabla \\cdot (\\nabla p)$$\n\u6ce8\u610f\u5230 $\\nabla \\cdot (\\nabla p) = \\nabla^2 p$\uff0c\u4ee3\u5165\u538b\u529b\u6cca\u677e\u65b9\u7a0b\uff1a\n$$\\nabla \\cdot \\mathbf{u}^{n+1} = \\nabla \\cdot \\mathbf{u}^* - \\frac{\\Delta t}{\\rho} \\cdot \\frac{\\rho}{\\Delta t}\\nabla \\cdot \\mathbf{u}^*$$</p>\n<p>$$\\nabla \\cdot \\mathbf{u}^{n+1} = \\nabla \\cdot \\mathbf{u}^* - \\nabla \\cdot \\mathbf{u}^* = 0$$\n\u56e0\u6b64\u6295\u5f71\u540e\u7684\u901f\u5ea6\u573a\u81ea\u52a8\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u3002</p>\n</details>\n<h3 id=\"_4\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e604.4</strong> \u5206\u6790\u534a\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7684\u6570\u503c\u8017\u6563\u3002\u8003\u8651\u4e00\u7ef4\u7ebf\u6027\u5bf9\u6d41\u65b9\u7a0b $\\frac{\\partial u}{\\partial t} + c\\frac{\\partial u}{\\partial x} = 0$\uff0c\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\uff0c\u8bc1\u660e\u6570\u503c\u89e3\u5f15\u5165\u4e86\u4eba\u5de5\u6269\u6563\u9879\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u5c06\u63d2\u503c\u8bef\u5dee\u7528Taylor\u7ea7\u6570\u5c55\u5f00\uff0c\u5206\u6790\u622a\u65ad\u8bef\u5dee\u7684\u4e3b\u5bfc\u9879\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u8bbe\u7f51\u683c\u95f4\u8ddd\u4e3a $h$\uff0c\u65f6\u95f4\u6b65\u957f\u4e3a $\\Delta t$\uff0cCFL\u6570 $\\nu = c\\Delta t/h$\u3002</p>\n<p>\u534a\u62c9\u683c\u6717\u65e5\u66f4\u65b0\uff1a$u_i^{n+1} = (1-\\alpha)u_{i-1}^n + \\alpha u_i^n$\uff0c\u5176\u4e2d $\\alpha = 1 - \\nu$ \u662f\u63d2\u503c\u7cfb\u6570\u3002</p>\n<p>\u4f7f\u7528Taylor\u5c55\u5f00\uff1a\n$$u_{i-1}^n = u_i^n - h\\frac{\\partial u}{\\partial x} + \\frac{h^2}{2}\\frac{\\partial^2 u}{\\partial x^2} + O(h^3)$$\n\u4ee3\u5165\u66f4\u65b0\u516c\u5f0f\uff1a\n$$u_i^{n+1} = u_i^n - \\nu h\\frac{\\partial u}{\\partial x} + \\frac{\\nu h^2}{2}\\frac{\\partial^2 u}{\\partial x^2} + O(h^3)$$\n\u4e0e\u7cbe\u786e\u89e3 $u_i^{n+1} = u_i^n - c\\Delta t\\frac{\\partial u}{\\partial x}$ \u6bd4\u8f83\uff0c\u5f97\u5230\u4fee\u6b63\u65b9\u7a0b\uff1a\n$$\\frac{\\partial u}{\\partial t} + c\\frac{\\partial u}{\\partial x} = \\frac{ch}{2}\\nu(1-\\nu)\\frac{\\partial^2 u}{\\partial x^2}$$\n\u53f3\u7aef\u9879\u662f\u6570\u503c\u6269\u6563\uff0c\u6269\u6563\u7cfb\u6570 $D_{num} = \\frac{ch}{2}\\nu(1-\\nu)$ \u603b\u662f\u6b63\u7684\uff0c\u5bfc\u81f4\u89e3\u7684\u8017\u6563\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e604.5</strong> \u8bbe\u8ba1\u4e00\u4e2a\u6d4b\u8bd5\u6848\u4f8b\u9a8c\u8bc1\u4f60\u7684\u6d41\u4f53\u6c42\u89e3\u5668\u7684\u6536\u655b\u9636\u3002\u8003\u8651Taylor-Green\u6da1\u65cb\uff1a\n$$u(x,y,t) = -\\cos(x)\\sin(y)e^{-2\\nu t}$$\n$$v(x,y,t) = \\sin(x)\\cos(y)e^{-2\\nu t}$$\n$$p(x,y,t) = -\\frac{1}{4}[\\cos(2x) + \\cos(2y)]e^{-4\\nu t}$$</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8fd9\u662fNavier-Stokes\u65b9\u7a0b\u7684\u7cbe\u786e\u89e3\uff0c\u53ef\u4ee5\u8ba1\u7b97\u4e0d\u540c\u7f51\u683c\u5206\u8fa8\u7387\u4e0b\u7684L2\u8bef\u5dee\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<ol>\n<li>\u9a8c\u8bc1\u6b64\u89e3\u6ee1\u8db3Navier-Stokes\u65b9\u7a0b\uff08\u4ee3\u5165\u53ef\u9a8c\u8bc1\uff09</li>\n<li>\u5728 $[0, 2\\pi]^2$ \u57df\u4e0a\u4f7f\u7528\u5468\u671f\u8fb9\u754c\u6761\u4ef6</li>\n<li>\u8ba1\u7b97L2\u8bef\u5dee\uff1a$e_h = \\sqrt{\\frac{1}{N}\\sum_{i,j}(u_{computed} - u_{exact})^2}$</li>\n<li>\u5bf9\u4e0d\u540c\u7f51\u683c\u5c3a\u5bf8 $h = 2\\pi/N$\uff0c\u8ba1\u7b97\u8bef\u5dee</li>\n<li>\u6536\u655b\u9636\uff1a$p = \\log(e_h/e_{h/2})/\\log(2)$</li>\n<li>\u9884\u671f\uff1a\u7a7a\u95f4\u4e8c\u9636\u7cbe\u5ea6 $e_h = O(h^2)$</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e604.6</strong> \u5b9e\u73b0\u4e00\u4e2a\u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f\u7b56\u7565\uff0c\u57fa\u4e8eCFL\u6761\u4ef6\u548c\u7c98\u6027\u7a33\u5b9a\u6027\u6761\u4ef6\u81ea\u52a8\u9009\u62e9\u6700\u5927\u5141\u8bb8\u65f6\u95f4\u6b65\u957f\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u9700\u8981\u540c\u65f6\u8003\u8651\u5bf9\u6d41CFL\u548c\u6269\u6563\u7a33\u5b9a\u6027\u6761\u4ef6\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">compute_max_dt</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n    <span class=\"c1\"># \u5bf9\u6d41CFL\u6761\u4ef6</span>\n    <span class=\"n\">max_vel</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">u</span><span class=\"p\">:</span>\n        <span class=\"n\">max_vel</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">max_vel</span><span class=\"p\">,</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]))</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n        <span class=\"n\">max_vel</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">max_vel</span><span class=\"p\">,</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]))</span>\n\n    <span class=\"n\">dt_cfl</span> <span class=\"o\">=</span> <span class=\"n\">CFL</span> <span class=\"o\">*</span> <span class=\"n\">dx</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">max_vel</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u7c98\u6027\u7a33\u5b9a\u6027\u6761\u4ef6\uff08\u5982\u679c\u4f7f\u7528\u663e\u5f0f\u7c98\u6027\uff09</span>\n    <span class=\"n\">dt_visc</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span> <span class=\"o\">*</span> <span class=\"n\">dx</span> <span class=\"o\">*</span> <span class=\"n\">dx</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">nu</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u8868\u9762\u5f20\u529b\u7a33\u5b9a\u6027\u6761\u4ef6\uff08\u5982\u679c\u6709\uff09</span>\n    <span class=\"n\">dt_tension</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">rho</span> <span class=\"o\">*</span> <span class=\"n\">dx</span><span class=\"o\">**</span><span class=\"mi\">3</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">sigma</span> <span class=\"o\">+</span> <span class=\"mf\">1e-8</span><span class=\"p\">))</span>\n\n    <span class=\"k\">return</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">dt_cfl</span><span class=\"p\">,</span> <span class=\"n\">dt_visc</span><span class=\"p\">,</span> <span class=\"n\">dt_tension</span><span class=\"p\">)</span>\n</code></pre></div>\n\n</details>\n<p><strong>\u7ec3\u4e604.7</strong> \u63a8\u5bfc\u5e76\u5b9e\u73b0\u6da1\u91cf-\u6d41\u51fd\u6570\u5f62\u5f0f\u7684\u4e0d\u53ef\u538b\u7f29\u6d41\u52a8\u3002\u8fd9\u79cd\u5f62\u5f0f\u81ea\u52a8\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\uff0c\u907f\u514d\u4e86\u538b\u529b\u6295\u5f71\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u6da1\u91cf $\\omega = \\nabla \\times \\mathbf{u}$\uff0c\u6d41\u51fd\u6570 $\\psi$ \u6ee1\u8db3 $u = \\frac{\\partial \\psi}{\\partial y}$\uff0c$v = -\\frac{\\partial \\psi}{\\partial x}$\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u4e8c\u7ef4\u6da1\u91cf\u8f93\u9001\u65b9\u7a0b\uff1a\n$$\\frac{\\partial \\omega}{\\partial t} + \\mathbf{u} \\cdot \\nabla \\omega = \\nu \\nabla^2 \\omega$$\n\u6d41\u51fd\u6570\u6cca\u677e\u65b9\u7a0b\uff1a\n$$\\nabla^2 \\psi = -\\omega$$</p>\n<p>\u8fb9\u754c\u6761\u4ef6\uff1a</p>\n<ul>\n<li>\u65e0\u6ed1\u79fb\uff1a$\\psi = const$\uff0c$\\frac{\\partial \\psi}{\\partial n} = 0$</li>\n<li>\u81ea\u7531\u6ed1\u79fb\uff1a$\\psi = const$\uff0c$\\omega = 0$</li>\n</ul>\n<p>\u7b97\u6cd5\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\u8f93\u9001\u6da1\u91cf\uff08\u4f7f\u7528\u534a\u62c9\u683c\u6717\u65e5\u6216\u9ad8\u9636\u65b9\u6cd5\uff09</li>\n<li>\u6c42\u89e3\u6d41\u51fd\u6570\u6cca\u677e\u65b9\u7a0b</li>\n<li>\u4ece\u6d41\u51fd\u6570\u8ba1\u7b97\u901f\u5ea6\u573a</li>\n<li>\u91cd\u590d</li>\n</ol>\n<p>\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u70b9\u662f\u81ea\u52a8\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6027\uff0c\u7f3a\u70b9\u662f\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u8f83\u590d\u6742\uff0c\u4e14\u96be\u4ee5\u63a8\u5e7f\u5230\u4e09\u7ef4\u3002</p>\n</details>\n<h2 id=\"_5\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<ol>\n<li>\n<p><strong>\u538b\u529b\u6c42\u89e3\u5668\u4e0d\u6536\u655b</strong>\n   - \u68c0\u67e5\u8fb9\u754c\u6761\u4ef6\u662f\u5426\u6b63\u786e\u8bbe\u7f6e\n   - \u5bf9\u4e8e\u5168Neumann\u8fb9\u754c\uff0c\u9700\u8981\u56fa\u5b9a\u4e00\u4e2a\u53c2\u8003\u538b\u529b\u70b9\n   - \u786e\u4fdd\u79bb\u6563\u7b97\u5b50\u7684\u5bf9\u79f0\u6027</p>\n</li>\n<li>\n<p><strong>\u901f\u5ea6\u573a\u53d1\u6563</strong>\n   - CFL\u6761\u4ef6\u53ef\u80fd\u592a\u5bbd\u677e\n   - \u68c0\u67e5\u8fb9\u754c\u6761\u4ef6\u5b9e\u73b0\n   - \u538b\u529b\u6295\u5f71\u53ef\u80fd\u4e0d\u5145\u5206\uff08\u8fed\u4ee3\u6b21\u6570\u4e0d\u591f\uff09</p>\n</li>\n<li>\n<p><strong>MAC\u7f51\u683c\u7d22\u5f15\u6df7\u6dc6</strong>\n   - \u8bb0\u4f4f\u901f\u5ea6\u5206\u91cf\u5b58\u50a8\u5728\u4e0d\u540c\u4f4d\u7f6e\n   - \u63d2\u503c\u65f6\u8981\u4f7f\u7528\u6b63\u786e\u7684\u7f51\u683c\u70b9\n   - \u7ed8\u56fe\u65f6\u9700\u8981\u5c06\u901f\u5ea6\u63d2\u503c\u5230\u5355\u5143\u4e2d\u5fc3</p>\n</li>\n<li>\n<p><strong>\u6570\u503c\u8017\u6563\u8fc7\u5927</strong>\n   - \u4f7f\u7528\u9ad8\u9636\u8f93\u9001\u65b9\u6cd5\uff08MacCormack\u3001BFECC\uff09\n   - \u51cf\u5c0f\u65f6\u95f4\u6b65\u957f\n   - \u8003\u8651\u4f7f\u7528\u6da1\u91cf\u7ea6\u675f</p>\n</li>\n<li>\n<p><strong>\u81ea\u7531\u8868\u9762\u4e0d\u7a33\u5b9a</strong>\n   - \u8868\u9762\u5f20\u529b\u7684\u663e\u5f0f\u5904\u7406\u53ef\u80fd\u5bfc\u81f4\u4e0d\u7a33\u5b9a\n   - \u4f7f\u7528\u9690\u5f0f\u6216\u534a\u9690\u5f0f\u8868\u9762\u5f20\u529b\n   - \u9650\u5236\u754c\u9762\u9644\u8fd1\u7684\u65f6\u95f4\u6b65\u957f</p>\n</li>\n</ol>\n<h2 id=\"_6\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<ul>\n<li>[ ] \u4f7f\u7528MAC\u7f51\u683c\u907f\u514d\u538b\u529b\u632f\u8361</li>\n<li>[ ] \u5b9e\u73b0\u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f\u786e\u4fdd\u7a33\u5b9a\u6027</li>\n<li>[ ] \u5bf9\u5bf9\u6d41\u9879\u4f7f\u7528\u81f3\u5c11\u4e8c\u9636\u7cbe\u5ea6\u65b9\u6cd5</li>\n<li>[ ] \u538b\u529b\u6c42\u89e3\u5668\u4f7f\u7528\u9884\u6761\u4ef6\u5171\u8f6d\u68af\u5ea6\u6cd5</li>\n<li>[ ] \u5b9e\u73b0\u8d28\u91cf\u5b88\u6052\u68c0\u67e5</li>\n<li>[ ] \u8fb9\u754c\u6761\u4ef6\u5904\u7406\u8981\u4fdd\u6301\u79bb\u6563\u7b97\u5b50\u7684\u5bf9\u79f0\u6027</li>\n<li>[ ] \u4f7f\u7528\u9ad8\u9636\u63d2\u503c\u51cf\u5c11\u6570\u503c\u8017\u6563</li>\n<li>[ ] \u5b9a\u671f\u9a8c\u8bc1\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6\u7684\u6ee1\u8db3\u7a0b\u5ea6</li>\n<li>[ ] \u5b9e\u73b0\u80fd\u91cf\u6216\u6da1\u91cf\u76d1\u63a7\u4ee5\u68c0\u6d4b\u6570\u503c\u8017\u6563</li>\n<li>[ ] \u5bf9\u590d\u6742\u8fb9\u754c\u4f7f\u7528\u6d78\u5165\u8fb9\u754c\u6cd5\u6216\u5207\u5272\u5355\u5143\u6cd5</li>\n</ul>"
  },
  "../chapter9.md": {
    "hash": "e29213f925b144818fd6bbf73243ab3a",
    "content": "<h1 id=\"_1\">\u7b2c\u4e5d\u7ae0\uff1a\u9ad8\u6027\u80fd\u8ba1\u7b97</h1>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u7269\u7406\u5f15\u64ce\u7684\u6027\u80fd\u4f18\u5316\u6280\u672f\uff0c\u4ece\u5e95\u5c42\u786c\u4ef6\u67b6\u6784\u5230\u9ad8\u5c42\u7b97\u6cd5\u4f18\u5316\u3002\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5145\u5206\u5229\u7528\u73b0\u4ee3\u5904\u7406\u5668\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\uff0c\u8bbe\u8ba1\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u53ca\u5b9e\u73b0\u53ef\u6269\u5c55\u7684\u5e76\u884c\u7b97\u6cd5\u3002\u901a\u8fc7\u672c\u7ae0\u7684\u5b66\u4e60\uff0c\u8bfb\u8005\u5c06\u638c\u63e1\u6784\u5efa\u9ad8\u6027\u80fd\u7269\u7406\u4eff\u771f\u7cfb\u7edf\u6240\u9700\u7684\u6838\u5fc3\u6280\u672f\u3002</p>\n<h2 id=\"91\">9.1 \u5904\u7406\u5668\u5fae\u67b6\u6784</h2>\n<h3 id=\"911-cpu\">9.1.1 CPU\u6d41\u6c34\u7ebf\u4e0e\u8d85\u6807\u91cf</h3>\n<p>\u73b0\u4ee3CPU\u91c7\u7528\u6d41\u6c34\u7ebf\u6280\u672f\u5c06\u6307\u4ee4\u6267\u884c\u5206\u89e3\u4e3a\u591a\u4e2a\u9636\u6bb5\uff0c\u5178\u578b\u7684\u4e94\u7ea7\u6d41\u6c34\u7ebf\u5305\u62ec\uff1a</p>\n<ol>\n<li><strong>\u53d6\u6307(Fetch)</strong>\uff1a\u4ece\u5185\u5b58\u8bfb\u53d6\u6307\u4ee4</li>\n<li><strong>\u8bd1\u7801(Decode)</strong>\uff1a\u89e3\u6790\u6307\u4ee4\u64cd\u4f5c\u7801\u548c\u64cd\u4f5c\u6570</li>\n<li><strong>\u6267\u884c(Execute)</strong>\uff1a\u5728ALU\u4e2d\u6267\u884c\u8fd0\u7b97</li>\n<li><strong>\u8bbf\u5b58(Memory)</strong>\uff1a\u8bfb\u5199\u5185\u5b58\uff08\u5982\u9700\u8981\uff09</li>\n<li><strong>\u56de\u5199(Write Back)</strong>\uff1a\u5c06\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668</li>\n</ol>\n<p>\u8d85\u6807\u91cf\u5904\u7406\u5668\u80fd\u591f\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u53d1\u5c04\u591a\u6761\u6307\u4ee4\uff0c\u73b0\u4ee3CPU\u901a\u5e38\u5177\u67094-6\u4e2a\u53d1\u5c04\u7aef\u53e3\u3002\u6307\u4ee4\u7ea7\u5e76\u884c(ILP)\u7684\u5173\u952e\u5728\u4e8e\uff1a</p>\n<ul>\n<li><strong>\u6570\u636e\u4f9d\u8d56\u6027</strong>\uff1a\u540e\u7eed\u6307\u4ee4\u4f9d\u8d56\u524d\u9762\u6307\u4ee4\u7684\u7ed3\u679c</li>\n<li><strong>\u63a7\u5236\u4f9d\u8d56\u6027</strong>\uff1a\u5206\u652f\u6307\u4ee4\u5f71\u54cd\u7a0b\u5e8f\u6d41</li>\n<li><strong>\u7ed3\u6784\u51b2\u7a81</strong>\uff1a\u591a\u6761\u6307\u4ee4\u7ade\u4e89\u76f8\u540c\u7684\u6267\u884c\u5355\u5143</li>\n</ul>\n<p>\u4e3a\u4e86\u63d0\u9ad8ILP\uff0c\u7f16\u8bd1\u5668\u548c\u7a0b\u5e8f\u5458\u9700\u8981\uff1a</p>\n<ul>\n<li>\u5c55\u5f00\u5faa\u73af\u51cf\u5c11\u5206\u652f</li>\n<li>\u91cd\u6392\u6307\u4ee4\u51cf\u5c11\u6570\u636e\u4f9d\u8d56</li>\n<li>\u4f7f\u7528SIMD\u6307\u4ee4\u589e\u52a0\u541e\u5410\u91cf</li>\n</ul>\n<h3 id=\"912-simd\">9.1.2 SIMD\u6307\u4ee4\u96c6</h3>\n<p>\u5355\u6307\u4ee4\u591a\u6570\u636e(SIMD)\u662f\u63d0\u5347\u6570\u503c\u8ba1\u7b97\u6027\u80fd\u7684\u5173\u952e\u6280\u672f\u3002\u4e3b\u8981\u7684SIMD\u6269\u5c55\u5305\u62ec\uff1a</p>\n<p><strong>SSE/AVX\u7cfb\u5217</strong>\uff1a</p>\n<ul>\n<li>SSE\uff1a128\u4f4d\u5bc4\u5b58\u5668\uff0c4\u4e2afloat\u62162\u4e2adouble</li>\n<li>AVX\uff1a256\u4f4d\u5bc4\u5b58\u5668\uff0c8\u4e2afloat\u62164\u4e2adouble  </li>\n<li>AVX-512\uff1a512\u4f4d\u5bc4\u5b58\u5668\uff0c16\u4e2afloat\u62168\u4e2adouble</li>\n</ul>\n<p><strong>\u5e38\u7528SIMD\u64cd\u4f5c</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u52a0\u6cd5\uff1ac = a + b</span>\n<span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_add_ps</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// \u4e58\u52a0\uff1ad = a * b + c</span>\n<span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_fmadd_ps</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// \u5e7f\u64ad\uff1a\u5c06\u6807\u91cf\u590d\u5236\u5230\u5411\u91cf\u6240\u6709\u4f4d\u7f6e</span>\n<span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">vec</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_set1_ps</span><span class=\"p\">(</span><span class=\"n\">scalar</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p><strong>\u5411\u91cf\u5316\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>\u6570\u636e\u5bf9\u9f50\uff1a\u4f7f\u7528<code>_mm_malloc</code>\u786e\u4fdd32\u5b57\u8282\u5bf9\u9f50</li>\n<li>\u907f\u514d\u5206\u652f\uff1a\u4f7f\u7528blend\u6307\u4ee4\u4ee3\u66ffif-else</li>\n<li>\u51cf\u5c11gather/scatter\uff1a\u8fde\u7eed\u5185\u5b58\u8bbf\u95ee\u6548\u7387\u6700\u9ad8</li>\n</ul>\n<h3 id=\"913\">9.1.3 \u5206\u652f\u9884\u6d4b\u4e0e\u6295\u673a\u6267\u884c</h3>\n<p>\u73b0\u4ee3CPU\u4f7f\u7528\u5206\u652f\u9884\u6d4b\u5668\u731c\u6d4b\u6761\u4ef6\u8df3\u8f6c\u7684\u65b9\u5411\uff0c\u5178\u578b\u9884\u6d4b\u51c6\u786e\u7387\u8fbe95%\u4ee5\u4e0a\u3002\u5206\u652f\u9884\u6d4b\u5931\u8d25\u4f1a\u5bfc\u81f4\u6d41\u6c34\u7ebf\u6e05\u7a7a\uff0c\u635f\u593110-20\u4e2a\u65f6\u949f\u5468\u671f\u3002</p>\n<p><strong>\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u51cf\u5c11\u5206\u652f</strong>\uff1a\u4f7f\u7528\u6761\u4ef6\u79fb\u52a8\u6307\u4ee4\u6216\u4f4d\u8fd0\u7b97</li>\n<li><strong>\u5206\u652f\u63d0\u793a</strong>\uff1a\u4f7f\u7528<code>__builtin_expect</code>\u63d0\u4f9b\u9884\u6d4b\u4fe1\u606f</li>\n<li><strong>\u5faa\u73af\u5c55\u5f00</strong>\uff1a\u51cf\u5c11\u5faa\u73af\u8fb9\u754c\u68c0\u67e5</li>\n<li><strong>\u6a21\u677f\u5316</strong>\uff1a\u5c06\u8fd0\u884c\u65f6\u5206\u652f\u8f6c\u4e3a\u7f16\u8bd1\u65f6\u51b3\u7b56</li>\n</ol>\n<p><strong>\u6295\u673a\u6267\u884c\u98ce\u9669</strong>\uff1a</p>\n<ul>\n<li>Spectre/Meltdown\u7b49\u5b89\u5168\u6f0f\u6d1e</li>\n<li>\u9700\u8981\u8003\u8651\u4fa7\u4fe1\u9053\u653b\u51fb\u9632\u62a4</li>\n</ul>\n<h3 id=\"914\">9.1.4 \u4e71\u5e8f\u6267\u884c</h3>\n<p>\u4e71\u5e8f\u6267\u884c\u5141\u8bb8CPU\u91cd\u6392\u6307\u4ee4\u987a\u5e8f\u4ee5\u9690\u85cf\u5ef6\u8fdf\uff1a</p>\n<p><strong>Tomasulo\u7b97\u6cd5\u6838\u5fc3\u7ec4\u4ef6</strong>\uff1a</p>\n<ul>\n<li><strong>\u4fdd\u7559\u7ad9</strong>\uff1a\u7f13\u5b58\u7b49\u5f85\u6267\u884c\u7684\u6307\u4ee4</li>\n<li><strong>\u91cd\u6392\u7f13\u51b2\u533a(ROB)</strong>\uff1a\u7ef4\u62a4\u7a0b\u5e8f\u987a\u5e8f</li>\n<li><strong>\u5bc4\u5b58\u5668\u91cd\u547d\u540d</strong>\uff1a\u6d88\u9664\u4f2a\u4f9d\u8d56</li>\n</ul>\n<p><strong>\u6027\u80fd\u5f71\u54cd\u56e0\u7d20</strong>\uff1a</p>\n<ul>\n<li>\u6307\u4ee4\u7a97\u53e3\u5927\u5c0f\uff08\u5178\u578b200-300\u6761\uff09</li>\n<li>\u6267\u884c\u7aef\u53e3\u6570\u91cf\u548c\u7c7b\u578b</li>\n<li>\u5185\u5b58\u6d88\u6b67(memory disambiguation)\u80fd\u529b</li>\n</ul>\n<p><strong>\u7f16\u7a0b\u5efa\u8bae</strong>\uff1a</p>\n<ul>\n<li>\u589e\u52a0\u6307\u4ee4\u95f4\u8ddd\u79bb\uff0c\u7ed9CPU\u66f4\u591a\u91cd\u6392\u7a7a\u95f4</li>\n<li>\u4f7f\u7528restrict\u5173\u952e\u5b57\u5e2e\u52a9\u7f16\u8bd1\u5668\u4f18\u5316</li>\n<li>\u907f\u514d\u957f\u4f9d\u8d56\u94fe</li>\n</ul>\n<h2 id=\"92\">9.2 \u5185\u5b58\u5c42\u7ea7</h2>\n<h3 id=\"921\">9.2.1 \u7f13\u5b58\u7ed3\u6784\u4e0e\u5927\u5c0f</h3>\n<p>\u73b0\u4ee3CPU\u7684\u7f13\u5b58\u5c42\u6b21\u7ed3\u6784\uff1a</p>\n<p>| \u7ea7\u522b | \u5927\u5c0f | \u5ef6\u8fdf | \u5e26\u5bbd |</p>\n<table>\n<thead>\n<tr>\n<th>\u7ea7\u522b</th>\n<th>\u5927\u5c0f</th>\n<th>\u5ef6\u8fdf</th>\n<th>\u5e26\u5bbd</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>L1-D</td>\n<td>32KB</td>\n<td>4-5 cycles</td>\n<td>~100 GB/s</td>\n</tr>\n<tr>\n<td>L1-I</td>\n<td>32KB</td>\n<td>4-5 cycles</td>\n<td>~100 GB/s</td>\n</tr>\n<tr>\n<td>L2</td>\n<td>256KB-1MB</td>\n<td>12-15 cycles</td>\n<td>~50 GB/s</td>\n</tr>\n<tr>\n<td>L3</td>\n<td>8MB-32MB</td>\n<td>30-40 cycles</td>\n<td>~30 GB/s</td>\n</tr>\n<tr>\n<td>DRAM</td>\n<td>16GB+</td>\n<td>100-300 cycles</td>\n<td>~20 GB/s</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u7f13\u5b58\u7ec4\u7ec7</strong>\uff1a</p>\n<ul>\n<li><strong>\u7ec4\u76f8\u8054</strong>\uff1aL1\u901a\u5e388\u8def\uff0cL2/L3\u53ef\u8fbe16-20\u8def</li>\n<li><strong>\u7f13\u5b58\u884c</strong>\uff1a64\u5b57\u8282\uff0c\u662f\u7f13\u5b58\u4f20\u8f93\u7684\u57fa\u672c\u5355\u4f4d</li>\n<li><strong>\u5305\u542b\u6027</strong>\uff1aL3\u901a\u5e38\u5305\u542bL1/L2\u7684\u5185\u5bb9</li>\n</ul>\n<p><strong>\u7f13\u5b58\u4f18\u5316\u539f\u5219</strong>\uff1a</p>\n<ol>\n<li><strong>\u7a7a\u95f4\u5c40\u90e8\u6027</strong>\uff1a\u8fde\u7eed\u8bbf\u95ee\u76f8\u90bb\u6570\u636e</li>\n<li><strong>\u65f6\u95f4\u5c40\u90e8\u6027</strong>\uff1a\u91cd\u590d\u8bbf\u95ee\u76f8\u540c\u6570\u636e</li>\n<li><strong>\u5de5\u4f5c\u96c6\u5927\u5c0f</strong>\uff1a\u4fdd\u6301\u70ed\u6570\u636e\u5728\u7f13\u5b58\u5185</li>\n</ol>\n<h3 id=\"922\">9.2.2 \u7f13\u5b58\u884c\u4e0e\u4f2a\u5171\u4eab</h3>\n<p>\u4f2a\u5171\u4eab(False Sharing)\u662f\u591a\u6838\u7f16\u7a0b\u7684\u5e38\u89c1\u6027\u80fd\u9677\u9631\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">BadLayout</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">thread1_data</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u7ebf\u7a0b1\u5199</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">thread2_data</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u7ebf\u7a0b2\u5199\uff0c\u4f46\u5728\u540c\u4e00\u7f13\u5b58\u884c\uff01</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">GoodLayout</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">alignas</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">thread1_data</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u72ec\u5360\u7f13\u5b58\u884c</span>\n<span class=\"w\">    </span><span class=\"k\">alignas</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">thread2_data</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u72ec\u5360\u7f13\u5b58\u884c</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u68c0\u6d4b\u65b9\u6cd5</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528perf\u76d1\u63a7\u7f13\u5b58\u5931\u6548\u7387</li>\n<li>Intel VTune\u7684False Sharing\u68c0\u6d4b\u5668</li>\n<li>\u624b\u52a8padding\u6216\u4f7f\u7528<code>alignas</code></li>\n</ul>\n<p><strong>\u7f13\u5b58\u884c\u4f18\u5316\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u5c06\u53ea\u8bfb\u6570\u636e\u5206\u79bb\u5230\u72ec\u7acb\u7f13\u5b58\u884c</li>\n<li>\u4f7f\u7528\u672c\u5730\u53d8\u91cf\u7d2f\u79ef\uff0c\u6700\u540e\u5199\u56de</li>\n<li>\u8003\u8651\u6570\u636e\u5e03\u5c40\u7684\u7f13\u5b58\u53cb\u597d\u6027</li>\n</ul>\n<h3 id=\"923-tlb\">9.2.3 TLB\u4e0e\u9875\u8868</h3>\n<p>\u8f6c\u6362\u67e5\u627e\u7f13\u51b2\u5668(TLB)\u7f13\u5b58\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\uff1a</p>\n<p><strong>TLB\u5c42\u6b21</strong>\uff1a</p>\n<ul>\n<li>L1 DTLB\uff1a64-128\u9879\uff0c4KB\u9875</li>\n<li>L1 ITLB\uff1a64-128\u9879\uff0c\u6307\u4ee4\u9875</li>\n<li>L2 TLB\uff1a512-1536\u9879\uff0c\u7edf\u4e00</li>\n<li>\u5927\u9875\u652f\u6301\uff1a2MB/1GB\u9875\u51cf\u5c11TLB\u538b\u529b</li>\n</ul>\n<p><strong>TLB\u4f18\u5316</strong>\uff1a</p>\n<ol>\n<li><strong>\u4f7f\u7528\u5927\u9875</strong>\uff1a<code>madvise(MADV_HUGEPAGE)</code></li>\n<li><strong>\u51cf\u5c11\u5de5\u4f5c\u96c6</strong>\uff1a\u907f\u514d\u7a00\u758f\u8bbf\u95ee\u6a21\u5f0f</li>\n<li><strong>\u9875\u9762\u7740\u8272</strong>\uff1a\u63a7\u5236\u7269\u7406\u9875\u5206\u914d\u51cf\u5c11\u51b2\u7a81</li>\n</ol>\n<p><strong>\u9875\u8868\u904d\u5386\u5f00\u9500</strong>\uff1a</p>\n<ul>\n<li>4\u7ea7\u9875\u8868\u9700\u89814\u6b21\u5185\u5b58\u8bbf\u95ee</li>\n<li>\u4f7f\u7528\u5927\u9875\u51cf\u5c11\u9875\u8868\u7ea7\u6570</li>\n<li>\u8003\u8651NUMA\u4e0b\u7684\u9875\u9762\u653e\u7f6e</li>\n</ul>\n<h3 id=\"924-numa\">9.2.4 NUMA\u67b6\u6784</h3>\n<p>\u975e\u7edf\u4e00\u5185\u5b58\u8bbf\u95ee(NUMA)\u662f\u591a\u63d2\u69fd\u7cfb\u7edf\u7684\u6807\u51c6\u67b6\u6784\uff1a</p>\n<p><strong>NUMA\u7279\u5f81</strong>\uff1a</p>\n<ul>\n<li>\u6bcf\u4e2aCPU\u6709\u672c\u5730\u5185\u5b58\u63a7\u5236\u5668</li>\n<li>\u8bbf\u95ee\u8fdc\u7a0b\u5185\u5b58\u5ef6\u8fdf\u9ad850-100%</li>\n<li>QPI/UPI\u4e92\u8fde\u5e26\u5bbd\u6709\u9650</li>\n</ul>\n<p><strong>NUMA\u611f\u77e5\u7f16\u7a0b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u7ed1\u5b9a\u7ebf\u7a0b\u5230NUMA\u8282\u70b9</span>\n<span class=\"n\">numa_run_on_node</span><span class=\"p\">(</span><span class=\"n\">node_id</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// \u5728\u6307\u5b9a\u8282\u70b9\u5206\u914d\u5185\u5b58</span>\n<span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">numa_alloc_onnode</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">node_id</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// \u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u4f18\u5316</span>\n<span class=\"cp\">#pragma omp parallel for schedule(static)</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// \u786e\u4fdd\u7ebf\u7a0b\u8bbf\u95ee\u672c\u5730\u6570\u636e</span>\n<span class=\"w\">    </span><span class=\"n\">process_local_data</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>NUMA\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li>First-touch\u7b56\u7565\uff1a\u9996\u6b21\u8bbf\u95ee\u7684\u7ebf\u7a0b\u6240\u5728\u8282\u70b9\u5206\u914d\u9875\u9762</li>\n<li>\u663e\u5f0f\u5185\u5b58\u7ed1\u5b9a\uff1a\u4f7f\u7528<code>numactl</code>\u6216API</li>\n<li>\u907f\u514d\u8fdc\u7a0b\u8bbf\u95ee\uff1a\u6570\u636e\u5206\u533a\u5bf9\u9f50NUMA\u62d3\u6251</li>\n</ul>\n<h2 id=\"93\">9.3 \u6027\u80fd\u5206\u6790\u4e0e\u4f18\u5316</h2>\n<h3 id=\"931-roofline\">9.3.1 Roofline\u6a21\u578b</h3>\n<p>Roofline\u6a21\u578b\u5c06\u7a0b\u5e8f\u6027\u80fd\u4e0a\u9650\u53ef\u89c6\u5316\u4e3a\u8ba1\u7b97\u80fd\u529b\u548c\u5185\u5b58\u5e26\u5bbd\u7684\u51fd\u6570\uff1a</p>\n<p><strong>\u6027\u80fd\u4e0a\u9650\u8ba1\u7b97</strong>\uff1a\n$$\\text{Performance} = \\min(\\text{Peak FLOPS}, \\text{Arithmetic Intensity} \\times \\text{Bandwidth})$$\n\u5176\u4e2d\u7b97\u672f\u5f3a\u5ea6(Arithmetic Intensity) = FLOPs / Bytes</p>\n<p><strong>\u5178\u578b\u7b97\u672f\u5f3a\u5ea6</strong>\uff1a</p>\n<ul>\n<li>DAXPY (y = ax + y): 2 FLOPs / 24 Bytes = 0.083</li>\n<li>\u77e9\u9635\u4e58\u6cd5: O(n\u00b3) FLOPs / O(n\u00b2) Bytes = O(n)</li>\n<li>\u6a21\u677f\u8ba1\u7b97: \u53d6\u51b3\u4e8e\u6a21\u677f\u5927\u5c0f\u548c\u91cd\u7528</li>\n</ul>\n<p><strong>\u4f18\u5316\u65b9\u5411\u5224\u65ad</strong>\uff1a</p>\n<ul>\n<li>AI &lt; \u673a\u5668\u5e73\u8861\u70b9\uff1a\u5185\u5b58\u5e26\u5bbd\u53d7\u9650\uff0c\u9700\u8981\u6570\u636e\u91cd\u7528</li>\n<li>AI &gt; \u673a\u5668\u5e73\u8861\u70b9\uff1a\u8ba1\u7b97\u53d7\u9650\uff0c\u9700\u8981\u5411\u91cf\u5316/\u5e76\u884c\u5316</li>\n</ul>\n<h3 id=\"932-vs\">9.3.2 \u5e26\u5bbdvs\u8ba1\u7b97\u74f6\u9888</h3>\n<p>\u8bc6\u522b\u6027\u80fd\u74f6\u9888\u7684\u5173\u952e\u6307\u6807\uff1a</p>\n<p><strong>\u5185\u5b58\u5e26\u5bbd\u53d7\u9650\u7279\u5f81</strong>\uff1a</p>\n<ul>\n<li>CPU\u5229\u7528\u7387\u4f4e\uff08\u7b49\u5f85\u5185\u5b58\uff09</li>\n<li>L3\u7f13\u5b58\u672a\u547d\u4e2d\u7387\u9ad8</li>\n<li>\u5185\u5b58\u63a7\u5236\u5668\u63a5\u8fd1\u9971\u548c</li>\n</ul>\n<p><strong>\u8ba1\u7b97\u53d7\u9650\u7279\u5f81</strong>\uff1a</p>\n<ul>\n<li>CPU\u5229\u7528\u7387\u63a5\u8fd1100%</li>\n<li>\u6307\u4ee4\u541e\u5410\u91cf\u63a5\u8fd1\u5cf0\u503c</li>\n<li>\u7f13\u5b58\u547d\u4e2d\u7387\u9ad8</li>\n</ul>\n<p><strong>\u5e73\u8861\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u63d0\u9ad8\u7b97\u672f\u5f3a\u5ea6</strong>\uff1a\u5faa\u73af\u963b\u585e\u3001\u6570\u636e\u91cd\u7528</li>\n<li><strong>\u51cf\u5c11\u5185\u5b58\u6d41\u91cf</strong>\uff1a\u538b\u7f29\u6570\u636e\u7ed3\u6784\u3001\u7cbe\u5ea6\u6743\u8861</li>\n<li><strong>\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf</strong>\uff1a\u9884\u53d6\u3001\u8f6f\u4ef6\u6d41\u6c34\u7ebf</li>\n</ol>\n<h3 id=\"933\">9.3.3 \u6027\u80fd\u8ba1\u6570\u5668</h3>\n<p>\u786c\u4ef6\u6027\u80fd\u8ba1\u6570\u5668\u63d0\u4f9b\u8be6\u7ec6\u7684\u6267\u884c\u4fe1\u606f\uff1a</p>\n<p><strong>\u5173\u952e\u6027\u80fd\u4e8b\u4ef6</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u4f7f\u7528perf\u7edf\u8ba1\u7f13\u5b58\u5931\u6548</span>\nperf<span class=\"w\"> </span>stat<span class=\"w\"> </span>-e<span class=\"w\"> </span>cache-misses,cache-references<span class=\"w\"> </span>./program\n\n<span class=\"c1\"># \u76d1\u63a7\u5206\u652f\u9884\u6d4b</span>\nperf<span class=\"w\"> </span>stat<span class=\"w\"> </span>-e<span class=\"w\"> </span>branch-misses,branch-instructions<span class=\"w\"> </span>./program\n\n<span class=\"c1\"># \u5185\u5b58\u5e26\u5bbd\u6d4b\u91cf</span>\nperf<span class=\"w\"> </span>stat<span class=\"w\"> </span>-e<span class=\"w\"> </span>uncore_imc/data_reads/,uncore_imc/data_writes/<span class=\"w\"> </span>./program\n</code></pre></div>\n\n<p><strong>\u5e38\u7528\u8ba1\u6570\u5668</strong>\uff1a</p>\n<ul>\n<li>Instructions Per Cycle (IPC)</li>\n<li>Cache hit/miss rates</li>\n<li>TLB miss rates</li>\n<li>Branch misprediction rate</li>\n<li>Memory bandwidth utilization</li>\n</ul>\n<p><strong>\u5206\u6790\u5de5\u5177\u94fe</strong>\uff1a</p>\n<ul>\n<li>Linux perf\uff1a\u8f7b\u91cf\u7ea7\uff0c\u5185\u7f6e\u5185\u6838</li>\n<li>Intel VTune\uff1a\u8be6\u7ec6\u7684\u5fae\u67b6\u6784\u5206\u6790</li>\n<li>AMD uProf\uff1aAMD\u5e73\u53f0\u4f18\u5316</li>\n<li>NVIDIA Nsight\uff1aGPU\u6027\u80fd\u5206\u6790</li>\n</ul>\n<h3 id=\"934-profile\">9.3.4 Profile\u5de5\u5177\u4f7f\u7528</h3>\n<p><strong>\u91c7\u6837\u5206\u6790(Sampling Profiler)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u8bb0\u5f55\u6027\u80fd\u6570\u636e</span>\nperf<span class=\"w\"> </span>record<span class=\"w\"> </span>-g<span class=\"w\"> </span>./simulation\n\n<span class=\"c1\"># \u751f\u6210\u706b\u7130\u56fe</span>\nperf<span class=\"w\"> </span>script<span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>flamegraph.pl<span class=\"w\"> </span>&gt;<span class=\"w\"> </span>flame.svg\n\n<span class=\"c1\"># \u67e5\u770b\u70ed\u70b9\u51fd\u6570</span>\nperf<span class=\"w\"> </span>report<span class=\"w\"> </span>--stdio\n</code></pre></div>\n\n<p><strong>\u8ffd\u8e2a\u5206\u6790(Tracing Profiler)</strong>\uff1a</p>\n<ul>\n<li>\u7cbe\u786e\u7684\u51fd\u6570\u8c03\u7528\u65f6\u5e8f</li>\n<li>\u66f4\u9ad8\u7684\u5f00\u9500</li>\n<li>\u9002\u5408\u5206\u6790\u590d\u6742\u4ea4\u4e92</li>\n</ul>\n<p><strong>\u4f18\u5316\u5de5\u4f5c\u6d41</strong>\uff1a</p>\n<ol>\n<li><strong>\u8bc6\u522b\u70ed\u70b9</strong>\uff1a\u627e\u5230\u5360\u7528\u65f6\u95f4\u6700\u591a\u7684\u51fd\u6570</li>\n<li><strong>\u5206\u6790\u74f6\u9888</strong>\uff1a\u786e\u5b9a\u662f\u8ba1\u7b97\u3001\u5185\u5b58\u8fd8\u662f\u540c\u6b65</li>\n<li><strong>\u9488\u5bf9\u4f18\u5316</strong>\uff1a\u5e94\u7528\u76f8\u5e94\u7684\u4f18\u5316\u6280\u672f</li>\n<li><strong>\u9a8c\u8bc1\u6548\u679c</strong>\uff1a\u5bf9\u6bd4\u4f18\u5316\u524d\u540e\u6027\u80fd</li>\n</ol>\n<h2 id=\"94\">9.4 \u5e76\u884c\u7f16\u7a0b\u6a21\u578b</h2>\n<h3 id=\"941-openmp\">9.4.1 \u5171\u4eab\u5185\u5b58\u5e76\u884c(OpenMP)</h3>\n<p>OpenMP\u662f\u5171\u4eab\u5185\u5b58\u5e76\u884c\u7f16\u7a0b\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u901a\u8fc7\u7f16\u8bd1\u5668\u6307\u4ee4\u5b9e\u73b0\u5e76\u884c\u5316\uff1a</p>\n<p><strong>\u57fa\u672c\u5e76\u884c\u7ed3\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#pragma omp parallel for</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span><span class=\"w\">  </span><span class=\"c1\">// \u81ea\u52a8\u5206\u914d\u7ed9\u591a\u4e2a\u7ebf\u7a0b</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u9ad8\u7ea7OpenMP\u7279\u6027</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u8c03\u5ea6\u7b56\u7565</strong>\uff1a\n   - <code>static</code>\uff1a\u56fa\u5b9a\u5927\u5c0f\u5757\u5206\u914d\uff0c\u5f00\u9500\u6700\u5c0f\n   - <code>dynamic</code>\uff1a\u52a8\u6001\u5206\u914d\uff0c\u9002\u5408\u8d1f\u8f7d\u4e0d\u5747\n   - <code>guided</code>\uff1a\u9012\u51cf\u5757\u5927\u5c0f\uff0c\u5e73\u8861\u8d1f\u8f7d\u548c\u5f00\u9500\n   - <code>runtime</code>\uff1a\u8fd0\u884c\u65f6\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u51b3\u5b9a</p>\n</li>\n<li>\n<p><strong>\u5f52\u7ea6\u64cd\u4f5c</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"p\">;</span>\n<span class=\"cp\">#pragma omp parallel for reduction(+:sum)</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u540c\u6b65\u539f\u8bed</strong>\uff1a\n   - <code>#pragma omp critical</code>\uff1a\u4e34\u754c\u533a\n   - <code>#pragma omp atomic</code>\uff1a\u539f\u5b50\u64cd\u4f5c\n   - <code>#pragma omp barrier</code>\uff1a\u6805\u680f\u540c\u6b65</li>\n</ol>\n<p><strong>OpenMP\u4f18\u5316\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u907f\u514dfalse sharing\uff1a\u4f7f\u7528<code>firstprivate</code></li>\n<li>\u51cf\u5c11\u540c\u6b65\u5f00\u9500\uff1a\u6279\u91cf\u5904\u7406\u51cf\u5c11critical\u533a\u57df</li>\n<li>NUMA\u611f\u77e5\uff1a\u4f7f\u7528<code>proc_bind</code>\u548c<code>places</code>\u5b50\u53e5</li>\n</ul>\n<h3 id=\"942-mpi\">9.4.2 \u5206\u5e03\u5f0f\u5185\u5b58(MPI)</h3>\n<p>\u6d88\u606f\u4f20\u9012\u63a5\u53e3(MPI)\u662f\u5206\u5e03\u5f0f\u5185\u5b58\u5e76\u884c\u7684\u6807\u51c6\uff1a</p>\n<p><strong>\u57fa\u672c\u901a\u4fe1\u6a21\u5f0f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u70b9\u5bf9\u70b9\u901a\u4fe1</span>\n<span class=\"n\">MPI_Send</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_DOUBLE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">);</span>\n<span class=\"n\">MPI_Recv</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_DOUBLE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">status</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// \u96c6\u5408\u901a\u4fe1</span>\n<span class=\"n\">MPI_Bcast</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_DOUBLE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">);</span>\n<span class=\"n\">MPI_Allreduce</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">local</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">global</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_DOUBLE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_SUM</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p><strong>\u975e\u963b\u585e\u901a\u4fe1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">MPI_Request</span><span class=\"w\"> </span><span class=\"n\">request</span><span class=\"p\">;</span>\n<span class=\"n\">MPI_Isend</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_DOUBLE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tag</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">request</span><span class=\"p\">);</span>\n<span class=\"c1\">// \u8ba1\u7b97\u4e0e\u901a\u4fe1\u91cd\u53e0</span>\n<span class=\"n\">do_computation</span><span class=\"p\">();</span>\n<span class=\"n\">MPI_Wait</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">request</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">status</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p><strong>MPI\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u6d88\u606f\u805a\u5408</strong>\uff1a\u51cf\u5c11\u5c0f\u6d88\u606f\u7684\u5f00\u9500</li>\n<li><strong>\u901a\u4fe1-\u8ba1\u7b97\u91cd\u53e0</strong>\uff1a\u4f7f\u7528\u975e\u963b\u585e\u901a\u4fe1</li>\n<li><strong>\u62d3\u6251\u611f\u77e5</strong>\uff1a\u5339\u914d\u901a\u4fe1\u6a21\u5f0f\u4e0e\u7f51\u7edc\u62d3\u6251</li>\n<li><strong>\u8d1f\u8f7d\u5747\u8861</strong>\uff1a\u52a8\u6001\u4efb\u52a1\u5206\u914d</li>\n</ol>\n<h3 id=\"943-vs\">9.4.3 \u4efb\u52a1\u5e76\u884cvs\u6570\u636e\u5e76\u884c</h3>\n<p><strong>\u6570\u636e\u5e76\u884c</strong>\uff1a</p>\n<ul>\n<li>\u76f8\u540c\u64cd\u4f5c\u5e94\u7528\u4e8e\u4e0d\u540c\u6570\u636e</li>\n<li>SIMD\u3001GPU\u5929\u7136\u9002\u5408</li>\n<li>\u6613\u4e8e\u8d1f\u8f7d\u5747\u8861</li>\n<li>\u4f8b\uff1a\u77e9\u9635\u8fd0\u7b97\u3001\u56fe\u50cf\u5904\u7406</li>\n</ul>\n<p><strong>\u4efb\u52a1\u5e76\u884c</strong>\uff1a</p>\n<ul>\n<li>\u4e0d\u540c\u4efb\u52a1\u540c\u65f6\u6267\u884c</li>\n<li>\u4f9d\u8d56\u5173\u7cfb\u590d\u6742</li>\n<li>\u8d1f\u8f7d\u5747\u8861\u56f0\u96be</li>\n<li>\u4f8b\uff1a\u6d41\u6c34\u7ebf\u3001DAG\u8c03\u5ea6</li>\n</ul>\n<p><strong>\u6df7\u5408\u5e76\u884c\u6a21\u5f0f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#pragma omp parallel sections</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"cp\">#pragma omp section</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">compute_forces</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\">     </span><span class=\"c1\">// \u4efb\u52a11</span>\n\n<span class=\"w\">    </span><span class=\"cp\">#pragma omp section  </span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">update_positions</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\">   </span><span class=\"c1\">// \u4efb\u52a12</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#pragma omp parallel for     </span><span class=\"c1\">// \u6570\u636e\u5e76\u884c</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">apply_constraints</span><span class=\"p\">(</span><span class=\"n\">particles</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"944\">9.4.4 \u8d1f\u8f7d\u5747\u8861\u7b56\u7565</h3>\n<p><strong>\u9759\u6001\u8d1f\u8f7d\u5747\u8861</strong>\uff1a</p>\n<ul>\n<li>\u7f16\u8bd1\u65f6\u6216\u542f\u52a8\u65f6\u5206\u914d</li>\n<li>\u5f00\u9500\u5c0f\u4f46\u7075\u6d3b\u6027\u5dee</li>\n<li>\u9002\u5408\u89c4\u5219\u8ba1\u7b97</li>\n</ul>\n<p><strong>\u52a8\u6001\u8d1f\u8f7d\u5747\u8861</strong>\uff1a</p>\n<ol>\n<li><strong>\u5de5\u4f5c\u6c60\u6a21\u5f0f</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_next_task</span><span class=\"p\">();</span><span class=\"w\">  </span><span class=\"c1\">// \u539f\u5b50\u83b7\u53d6</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">task</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">process_task</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u5de5\u4f5c\u7a83\u53d6(Work Stealing)</strong>\uff1a\n- \u6bcf\u4e2a\u7ebf\u7a0b\u7ef4\u62a4\u672c\u5730\u961f\u5217\n- \u7a7a\u95f2\u7ebf\u7a0b\u4ece\u5fd9\u788c\u7ebf\u7a0b\u7a83\u53d6\u4efb\u52a1\n- Intel TBB\u3001Cilk Plus\u5b9e\u73b0</p>\n</li>\n<li>\n<p><strong>\u5c42\u6b21\u5206\u89e3</strong>\uff1a\n- \u9012\u5f52\u5212\u5206\u95ee\u9898\n- \u9002\u5408\u6811\u5f62\u7ed3\u6784\n- \u81ea\u7136\u8d1f\u8f7d\u5747\u8861</p>\n</li>\n</ol>\n<p><strong>\u8d1f\u8f7d\u5747\u8861\u5ea6\u91cf</strong>\uff1a\n$$\\text{Efficiency} = \\frac{\\text{Average Load}}{\\text{Maximum Load}}$$</p>\n<p>\u76ee\u6807\u662f\u4f7f\u6548\u7387\u63a5\u8fd11.0</p>\n<h2 id=\"95-gpu\">9.5 GPU\u7f16\u7a0b</h2>\n<h3 id=\"951-gpu\">9.5.1 GPU\u67b6\u6784\u6982\u8ff0</h3>\n<p>GPU\u91c7\u7528SIMT(Single Instruction Multiple Thread)\u67b6\u6784\uff0c\u4e0eCPU\u7684\u5173\u952e\u533a\u522b\uff1a</p>\n<p><strong>\u67b6\u6784\u7279\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u6570\u5343\u4e2a\u7b80\u5355\u6838\u5fc3 vs \u51e0\u5341\u4e2a\u590d\u6742\u6838\u5fc3</li>\n<li>\u6df1\u5ea6\u591a\u7ebf\u7a0b\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf</li>\n<li>\u9ad8\u5185\u5b58\u5e26\u5bbd\uff08~1TB/s vs ~100GB/s\uff09</li>\n<li>\u6709\u9650\u7684\u5206\u652f\u80fd\u529b</li>\n</ul>\n<p><strong>GPU\u5185\u5b58\u5c42\u6b21</strong>\uff1a\n| \u5185\u5b58\u7c7b\u578b | \u5927\u5c0f | \u5ef6\u8fdf | \u5e26\u5bbd | \u4f5c\u7528\u57df |</p>\n<table>\n<thead>\n<tr>\n<th>\u5185\u5b58\u7c7b\u578b</th>\n<th>\u5927\u5c0f</th>\n<th>\u5ef6\u8fdf</th>\n<th>\u5e26\u5bbd</th>\n<th>\u4f5c\u7528\u57df</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u5bc4\u5b58\u5668</td>\n<td>64KB/SM</td>\n<td>1 cycle</td>\n<td>\u6781\u9ad8</td>\n<td>\u7ebf\u7a0b\u79c1\u6709</td>\n</tr>\n<tr>\n<td>\u5171\u4eab\u5185\u5b58</td>\n<td>48-96KB/SM</td>\n<td>~30 cycles</td>\n<td>~2TB/s</td>\n<td>Block\u5171\u4eab</td>\n</tr>\n<tr>\n<td>L1\u7f13\u5b58</td>\n<td>24-48KB/SM</td>\n<td>~30 cycles</td>\n<td>~1TB/s</td>\n<td>\u81ea\u52a8\u7ba1\u7406</td>\n</tr>\n<tr>\n<td>L2\u7f13\u5b58</td>\n<td>4-6MB</td>\n<td>~200 cycles</td>\n<td>~2TB/s</td>\n<td>\u5168\u5c40\u5171\u4eab</td>\n</tr>\n<tr>\n<td>\u5168\u5c40\u5185\u5b58</td>\n<td>8-80GB</td>\n<td>~400 cycles</td>\n<td>~1TB/s</td>\n<td>\u5168\u5c40\u53ef\u89c1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"952\">9.5.2 \u7ebf\u7a0b\u7ec4\u7ec7</h3>\n<p>CUDA/OpenCL\u7684\u4e09\u7ea7\u7ebf\u7a0b\u5c42\u6b21\uff1a</p>\n<p><strong>Grid \u2192 Block \u2192 Thread</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// Kernel\u542f\u52a8\u914d\u7f6e</span>\n<span class=\"kt\">dim3</span><span class=\"w\"> </span><span class=\"nf\">blockDim</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">);</span><span class=\"w\">  </span><span class=\"c1\">// \u6bcf\u4e2ablock 256\u7ebf\u7a0b</span>\n<span class=\"kt\">dim3</span><span class=\"w\"> </span><span class=\"nb\">gridDim</span><span class=\"p\">((</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">255</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"mi\">256</span><span class=\"p\">);</span><span class=\"w\">  </span><span class=\"c1\">// \u8db3\u591f\u7684blocks</span>\n<span class=\"n\">kernel</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"nb\">gridDim</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p><strong>Warp\u6267\u884c\u6a21\u578b</strong>\uff1a</p>\n<ul>\n<li>32\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u4e00\u4e2awarp</li>\n<li>Warp\u5185\u7ebf\u7a0b\u9501\u6b65\u6267\u884c</li>\n<li>\u5206\u652f\u5bfc\u81f4\u7ebf\u7a0b\u53d1\u6563(divergence)</li>\n<li>\u5408\u5e76\u5185\u5b58\u8bbf\u95ee\u63d0\u9ad8\u5e26\u5bbd\u5229\u7528</li>\n</ul>\n<p><strong>\u7ebf\u7a0b\u540c\u6b65</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nf\">__syncthreads</span><span class=\"p\">();</span><span class=\"w\">  </span><span class=\"c1\">// Block\u5185\u540c\u6b65</span>\n<span class=\"n\">__syncwarp</span><span class=\"p\">();</span><span class=\"w\">     </span><span class=\"c1\">// Warp\u5185\u540c\u6b65\uff08\u9690\u5f0f\uff09</span>\n<span class=\"c1\">// Grid\u7ea7\u540c\u6b65\u9700\u8981kernel\u8fb9\u754c</span>\n</code></pre></div>\n\n<h3 id=\"953\">9.5.3 \u5185\u5b58\u5408\u5e76\u8bbf\u95ee</h3>\n<p>\u5185\u5b58\u5408\u5e76\u662fGPU\u6027\u80fd\u7684\u5173\u952e\uff1a</p>\n<p><strong>\u5408\u5e76\u6761\u4ef6</strong>\uff1a</p>\n<ol>\n<li>\u8fde\u7eed\u7684\u7ebf\u7a0b\u8bbf\u95ee\u8fde\u7eed\u7684\u5730\u5740</li>\n<li>\u8d77\u59cb\u5730\u5740\u5bf9\u9f50\u5230128\u5b57\u8282</li>\n<li>\u8bbf\u95ee\u5927\u5c0f\u4e3a4\u30018\u621616\u5b57\u8282</li>\n</ol>\n<p><strong>\u5408\u5e76\u8bbf\u95ee\u6a21\u5f0f</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// Good: \u5408\u5e76\u8bbf\u95ee</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// Bad: \u8de8\u6b65\u8bbf\u95ee</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">stride</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// Bad: \u968f\u673a\u8bbf\u95ee  </span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">[</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">]]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">;</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u8f6c\u7f6e\u6570\u636e</li>\n<li>Structure of Arrays (SoA)\u5e03\u5c40</li>\n<li>\u7eb9\u7406\u5185\u5b58\u5904\u7406\u975e\u89c4\u5219\u8bbf\u95ee</li>\n</ul>\n<h3 id=\"954\">9.5.4 \u5360\u7528\u7387\u4f18\u5316</h3>\n<p>\u5360\u7528\u7387(Occupancy)\u8868\u793a\u6d3b\u8dc3warp\u6570\u4e0e\u6700\u5927warp\u6570\u7684\u6bd4\u4f8b\uff1a</p>\n<p><strong>\u5f71\u54cd\u56e0\u7d20</strong>\uff1a</p>\n<ol>\n<li><strong>\u5bc4\u5b58\u5668\u4f7f\u7528</strong>\uff1a\u6bcf\u7ebf\u7a0b\u5bc4\u5b58\u5668\u6570\u00d7\u7ebf\u7a0b\u6570 \u2264 \u603b\u5bc4\u5b58\u5668\u6570</li>\n<li><strong>\u5171\u4eab\u5185\u5b58</strong>\uff1a\u6bcfblock\u5171\u4eab\u5185\u5b58 \u2264 \u603b\u5171\u4eab\u5185\u5b58</li>\n<li><strong>Block\u5927\u5c0f</strong>\uff1a\u5fc5\u987b\u662fwarp\u5927\u5c0f\u7684\u500d\u6570</li>\n</ol>\n<p><strong>\u4f18\u5316\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u4f7f\u7528launch bounds\u9650\u5236\u5bc4\u5b58\u5668</span>\n<span class=\"kr\">__global__</span><span class=\"w\"> </span><span class=\"nf\">__launch_bounds__</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">kernel</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// \u7f16\u8bd1\u5668\u5c06\u4f18\u5316\u5230\u6307\u5b9a\u7684\u5360\u7528\u7387</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u52a8\u6001\u5e76\u884c</strong>\uff1a</p>\n<ul>\n<li>\u4ecekernel\u5185\u542f\u52a8\u65b0kernel</li>\n<li>\u9002\u5408\u4e0d\u89c4\u5219\u5e76\u884c</li>\n<li>\u6ce8\u610f\u542f\u52a8\u5f00\u9500</li>\n</ul>\n<p><strong>\u5360\u7528\u7387\u8ba1\u7b97</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">calc_occupancy</span><span class=\"p\">(</span><span class=\"n\">regs_per_thread</span><span class=\"p\">,</span> <span class=\"n\">shared_per_block</span><span class=\"p\">,</span> <span class=\"n\">threads_per_block</span><span class=\"p\">):</span>\n    <span class=\"n\">max_warps_per_sm</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>  <span class=\"c1\"># \u67b6\u6784\u76f8\u5173</span>\n    <span class=\"n\">max_regs_per_sm</span> <span class=\"o\">=</span> <span class=\"mi\">65536</span>\n    <span class=\"n\">max_shared_per_sm</span> <span class=\"o\">=</span> <span class=\"mi\">49152</span>\n\n    <span class=\"n\">warps_limited_by_regs</span> <span class=\"o\">=</span> <span class=\"n\">max_regs_per_sm</span> <span class=\"o\">//</span> <span class=\"p\">(</span><span class=\"n\">regs_per_thread</span> <span class=\"o\">*</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n    <span class=\"n\">blocks_limited_by_shared</span> <span class=\"o\">=</span> <span class=\"n\">max_shared_per_sm</span> <span class=\"o\">//</span> <span class=\"n\">shared_per_block</span>\n    <span class=\"n\">warps_limited_by_shared</span> <span class=\"o\">=</span> <span class=\"n\">blocks_limited_by_shared</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">threads_per_block</span> <span class=\"o\">//</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n\n    <span class=\"n\">active_warps</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">warps_limited_by_regs</span><span class=\"p\">,</span> <span class=\"n\">warps_limited_by_shared</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">active_warps</span> <span class=\"o\">/</span> <span class=\"n\">max_warps_per_sm</span>\n</code></pre></div>\n\n<h2 id=\"96\">9.6 \u7a00\u758f\u6570\u636e\u7ed3\u6784</h2>\n<h3 id=\"961-spgridopenvdb\">9.6.1 SPGrid\u4e0eOpenVDB</h3>\n<p><strong>SPGrid\u7279\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u5229\u7528\u865a\u62df\u5185\u5b58\u7684\u7a00\u758f\u6027</li>\n<li>\u9875\u9762\u7ea7\u522b\u7684\u5b58\u5728\u6027\u8ddf\u8e2a</li>\n<li>\u9002\u5408\u5747\u5300\u7a00\u758f\u7684\u6570\u636e</li>\n</ul>\n<p><strong>\u5b9e\u73b0\u539f\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">template</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">dim</span><span class=\"o\">&gt;</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">SPGrid</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">constexpr</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">page_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4096</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"k\">constexpr</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">block_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">uint64_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">page_table</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u9875\u8868\u8ddf\u8e2a</span>\n<span class=\"w\">    </span><span class=\"n\">T</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">;</span><span class=\"w\">               </span><span class=\"c1\">// \u865a\u62df\u5185\u5b58\u6c60</span>\n\n<span class=\"w\">    </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"nf\">offset</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">dim</span><span class=\"o\">&gt;&amp;</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// Morton\u7f16\u7801\u4fdd\u6301\u7a7a\u95f4\u5c40\u90e8\u6027</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">morton_encode</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>OpenVDB\u7279\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u5c42\u6b21\u5316B+\u6811\u7ed3\u6784</li>\n<li>\u652f\u6301\u6781\u5ea6\u7a00\u758f\u6570\u636e</li>\n<li>\u5de5\u4e1a\u6807\u51c6\uff08\u7535\u5f71\u7279\u6548\uff09</li>\n</ul>\n<p><strong>\u6811\u7ed3\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>Root (dynamic hash map)\n  \u2514\u2500\u2500 Internal Node (32\u00b3 or 16\u00b3)\n       \u2514\u2500\u2500 Internal Node (16\u00b3 or 8\u00b3)  \n            \u2514\u2500\u2500 Leaf Node (8\u00b3)\n</code></pre></div>\n\n<h3 id=\"962\">9.6.2 \u5206\u5c42\u7a00\u758f\u7f51\u683c</h3>\n<p>\u591a\u5206\u8fa8\u7387\u8868\u793a\u7684\u4f18\u52bf\uff1a</p>\n<p><strong>\u81ea\u9002\u5e94\u7ec6\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">HierarchicalGrid</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Node</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">union</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">Node</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">children</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// \u5185\u90e8\u8282\u70b9</span>\n<span class=\"w\">            </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"o\">*</span><span class=\"mi\">8</span><span class=\"o\">*</span><span class=\"mi\">8</span><span class=\"p\">];</span><span class=\"w\">      </span><span class=\"c1\">// \u53f6\u5b50\u8282\u70b9</span>\n<span class=\"w\">        </span><span class=\"p\">};</span>\n<span class=\"w\">        </span><span class=\"kt\">uint8_t</span><span class=\"w\"> </span><span class=\"n\">mask</span><span class=\"p\">;</span><span class=\"w\">           </span><span class=\"c1\">// \u5b50\u8282\u70b9\u5b58\u5728\u6027</span>\n\n<span class=\"w\">        </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">is_leaf</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">mask</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"mh\">0x80</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">refine</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">node</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">Vec3</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">need_refinement</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">split_node</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u5185\u5b58\u6c60\u7ba1\u7406</strong>\uff1a</p>\n<ul>\n<li>\u9884\u5206\u914d\u5927\u5757\u5185\u5b58</li>\n<li>\u81ea\u5b9a\u4e49\u5206\u914d\u5668\u51cf\u5c11\u788e\u7247</li>\n<li>\u5ef6\u8fdf\u91ca\u653e\u63d0\u9ad8\u91cd\u7528\u7387</li>\n</ul>\n<h3 id=\"963\">9.6.3 \u4f4d\u63a9\u7801\u4e0e\u6307\u9488\u7ed3\u6784</h3>\n<p><strong>\u4f4d\u63a9\u7801\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">SparseMask</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">uint64_t</span><span class=\"w\"> </span><span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"n\">BLOCKS</span><span class=\"o\">/</span><span class=\"mi\">64</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// \u6bcfbit\u8868\u793a\u4e00\u4e2ablock</span>\n\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">is_active</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">/</span><span class=\"mi\">64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">1ULL</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">%</span><span class=\"mi\">64</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">activate</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">mask</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"o\">/</span><span class=\"mi\">64</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">|=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">1ULL</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">%</span><span class=\"mi\">64</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">popcount</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">  </span><span class=\"c1\">// \u6d3b\u8dc3block\u6570</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mask</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">count</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">__builtin_popcountll</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">count</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u6307\u9488\u538b\u7f29</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u76f8\u5bf9\u504f\u79fb\u4ee3\u66ff\u7edd\u5bf9\u5730\u5740</li>\n<li>32\u4f4d\u7d22\u5f15\u5904\u7406\u5927\u90e8\u5206\u60c5\u51b5</li>\n<li>\u6307\u9488\u6253\u5305\u63d0\u9ad8\u7f13\u5b58\u6548\u7387</li>\n</ul>\n<h3 id=\"964\">9.6.4 \u52a8\u6001\u62d3\u6251\u66f4\u65b0</h3>\n<p><strong>\u589e\u91cf\u66f4\u65b0\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li><strong>\u5ef6\u8fdf\u5206\u914d</strong>\uff1a\u9996\u6b21\u5199\u5165\u65f6\u5206\u914d</li>\n<li><strong>\u6279\u91cf\u66f4\u65b0</strong>\uff1a\u7d2f\u79ef\u4fee\u6539\u51cf\u5c11\u5f00\u9500</li>\n<li><strong>\u5783\u573e\u56de\u6536</strong>\uff1a\u5b9a\u671f\u6e05\u7406\u7a7a\u5757</li>\n</ol>\n<p><strong>\u5e76\u53d1\u66f4\u65b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">ConcurrentSparseGrid</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">atomic</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">BLOCK_SIZE</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">Vec3</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">Block</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_or_create_block</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kt\">uint32_t</span><span class=\"w\"> </span><span class=\"n\">ver</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"o\">-&gt;</span><span class=\"n\">version</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u4e50\u89c2\u5e76\u53d1\u63a7\u5236</span>\n<span class=\"w\">        </span><span class=\"n\">block</span><span class=\"o\">-&gt;</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">local_idx</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">block</span><span class=\"o\">-&gt;</span><span class=\"n\">version</span><span class=\"p\">.</span><span class=\"n\">compare_exchange_weak</span><span class=\"p\">(</span><span class=\"n\">ver</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ver</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">// \u91cd\u8bd5\u6216\u4f7f\u7528\u5176\u4ed6\u7b56\u7565</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<h2 id=\"97\">9.7 \u7b97\u6cd5\u4f18\u5316\u6280\u672f</h2>\n<h3 id=\"971\">9.7.1 \u5faa\u73af\u4f18\u5316</h3>\n<p>\u5faa\u73af\u662f\u6570\u503c\u8ba1\u7b97\u7684\u6838\u5fc3\uff0c\u4f18\u5316\u5faa\u73af\u5bf9\u6027\u80fd\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u5faa\u73af\u5c55\u5f00(Loop Unrolling)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u539f\u59cb\u5faa\u73af</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// 4\u500d\u5c55\u5f00</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"mi\">-3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span>\n<span class=\"w\">           </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n<span class=\"c1\">// \u5904\u7406\u5269\u4f59\u5143\u7d20</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u5faa\u73af\u963b\u585e(Loop Blocking/Tiling)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u77e9\u9635\u4e58\u6cd5\u7684\u7f13\u5b58\u4f18\u5316\u7248\u672c</span>\n<span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">TILE</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">64</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u9009\u62e9\u9002\u5408L1\u7f13\u5b58\u7684\u5757\u5927\u5c0f</span>\n\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ii</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">ii</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">ii</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">TILE</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">jj</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">jj</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">jj</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">TILE</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">kk</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">kk</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">kk</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">TILE</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"c1\">// \u5904\u7406\u4e00\u4e2aTILE\u00d7TILE\u7684\u5757</span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ii</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">ii</span><span class=\"o\">+</span><span class=\"n\">TILE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jj</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">jj</span><span class=\"o\">+</span><span class=\"n\">TILE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"kt\">double</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">];</span>\n<span class=\"w\">                    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">kk</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">kk</span><span class=\"o\">+</span><span class=\"n\">TILE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">k</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">];</span>\n<span class=\"w\">                    </span><span class=\"p\">}</span>\n<span class=\"w\">                    </span><span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u5faa\u73af\u878d\u5408(Loop Fusion)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u5206\u79bb\u7684\u5faa\u73af</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// \u878d\u5408\u540e\uff1a\u51cf\u5c11\u5185\u5b58\u6d41\u91cf</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// a[i]\u8fd8\u5728\u7f13\u5b58\u4e2d</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u5faa\u73af\u4ea4\u6362(Loop Interchange)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u539f\u59cb\uff1a\u5217\u4f18\u5148\u8bbf\u95ee\uff08\u7f13\u5b58\u4e0d\u53cb\u597d\uff09</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// \u4ea4\u6362\u540e\uff1a\u884c\u4f18\u5148\u8bbf\u95ee\uff08\u7f13\u5b58\u53cb\u597d\uff09</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"972\">9.7.2 \u6570\u636e\u91cd\u6392\u4e0e\u9884\u53d6</h3>\n<p><strong>AoS\u5230SoA\u8f6c\u6362</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// Array of Structures (AoS) - \u7f13\u5b58\u4e0d\u53cb\u597d</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Particle_AoS</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">vx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vz</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"n\">Particle_AoS</span><span class=\"w\"> </span><span class=\"n\">particles</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">];</span>\n\n<span class=\"c1\">// Structure of Arrays (SoA) - SIMD\u53cb\u597d</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Particles_SoA</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">vx</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">vy</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">vz</span><span class=\"p\">[</span><span class=\"n\">N</span><span class=\"p\">];</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u8f6f\u4ef6\u9884\u53d6</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">process_with_prefetch</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">PREFETCH_DISTANCE</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u9884\u53d6\u672a\u6765\u7684\u6570\u636e</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">PREFETCH_DISTANCE</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">__builtin_prefetch</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">PREFETCH_DISTANCE</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5904\u7406\u5f53\u524d\u6570\u636e</span>\n<span class=\"w\">        </span><span class=\"n\">expensive_computation</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u6570\u636e\u6253\u5305\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u538b\u7f29\u5b58\u50a8\u51cf\u5c11\u5185\u5b58\u5e26\u5bbd</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">CompressedParticle</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// \u4f4d\u7f6e\u4f7f\u7528\u76f8\u5bf9\u5750\u6807\uff0816\u4f4d\u6574\u6570\uff09</span>\n<span class=\"w\">    </span><span class=\"kt\">int16_t</span><span class=\"w\"> </span><span class=\"n\">dx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dz</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">// \u901f\u5ea6\u4f7f\u7528\u534a\u7cbe\u5ea6\u6d6e\u70b9</span>\n<span class=\"w\">    </span><span class=\"n\">half</span><span class=\"w\"> </span><span class=\"n\">vx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vz</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">// \u89e3\u538b\u65f6\u8f6c\u6362\u56de\u5168\u7cbe\u5ea6</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">decompress</span><span class=\"p\">(</span><span class=\"n\">CompressedParticle</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">cp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Particle</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Vec3</span><span class=\"w\"> </span><span class=\"n\">base</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">base</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">cp</span><span class=\"p\">.</span><span class=\"n\">dx</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">SCALE</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">base</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">cp</span><span class=\"p\">.</span><span class=\"n\">dy</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">SCALE</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">base</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">cp</span><span class=\"p\">.</span><span class=\"n\">dz</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">SCALE</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">vx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"p\">.</span><span class=\"n\">vx</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">vy</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"p\">.</span><span class=\"n\">vy</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">vz</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">(</span><span class=\"n\">cp</span><span class=\"p\">.</span><span class=\"n\">vz</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"973\">9.7.3 \u5411\u91cf\u5316\u6280\u5de7</h3>\n<p><strong>\u624b\u52a8\u5411\u91cf\u5316with Intrinsics</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u6807\u91cf\u7248\u672c</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">add_scalar</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// AVX\u5411\u91cf\u5316\u7248\u672c</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">add_avx</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">// \u4e3b\u5faa\u73af\uff1a8\u4e2a\u5143\u7d20\u4e00\u7ec4</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">va</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_load_ps</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">        </span><span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">vb</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_load_ps</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">        </span><span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">vc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_add_ps</span><span class=\"p\">(</span><span class=\"n\">va</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vb</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">_mm256_store_ps</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">vc</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">// \u5904\u7406\u5269\u4f59\u5143\u7d20</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u6570\u636e\u5bf9\u9f50</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u786e\u4fdd32\u5b57\u8282\u5bf9\u9f50\uff08AVX\u9700\u8981\uff09</span>\n<span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">aligned_alloc_float</span><span class=\"p\">(</span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">nullptr</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">posix_memalign</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">nullptr</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">static_cast</span><span class=\"o\">&lt;</span><span class=\"kt\">float</span><span class=\"o\">*&gt;</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// \u4f7f\u7528aligned\u5c5e\u6027</span>\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">alignas</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">AlignedData</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">];</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u907f\u514dGather/Scatter</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// Bad: gather\u64cd\u4f5c\u6027\u80fd\u5dee</span>\n<span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"nf\">gather_bad</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">indices</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">_mm256_i32gather_ps</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_mm256_load_si256</span><span class=\"p\">((</span><span class=\"n\">__m256i</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">indices</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Good: \u91cd\u7ec4\u6570\u636e\u907f\u514dgather</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">transpose_block_8x8</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">stride</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">row0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_load_ps</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"n\">stride</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">__m256</span><span class=\"w\"> </span><span class=\"n\">row1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_mm256_load_ps</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"n\">stride</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// ... \u52a0\u8f7d\u6240\u6709\u884c</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u4f7f\u7528shuffle\u548cblend\u8fdb\u884c\u8f6c\u7f6e</span>\n<span class=\"w\">    </span><span class=\"c1\">// ... \u8f6c\u7f6e\u64cd\u4f5c</span>\n\n<span class=\"w\">    </span><span class=\"n\">_mm256_store_ps</span><span class=\"p\">(</span><span class=\"n\">dst</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"o\">*</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">col0</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">_mm256_store_ps</span><span class=\"p\">(</span><span class=\"n\">dst</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">*</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">col1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// ... \u5b58\u50a8\u6240\u6709\u5217</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"974\">9.7.4 \u901a\u4fe1\u9690\u85cf</h3>\n<p><strong>\u8ba1\u7b97\u4e0e\u901a\u4fe1\u91cd\u53e0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// MPI\u975e\u963b\u585e\u901a\u4fe1\u793a\u4f8b</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">overlap_compute_comm</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">local_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">halo_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">MPI_Request</span><span class=\"w\"> </span><span class=\"n\">requests</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u542f\u52a8\u975e\u963b\u585e\u63a5\u6536</span>\n<span class=\"w\">    </span><span class=\"n\">MPI_Irecv</span><span class=\"p\">(</span><span class=\"n\">halo_left</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_FLOAT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">left_rank</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">              </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">requests</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"n\">MPI_Irecv</span><span class=\"p\">(</span><span class=\"n\">halo_right</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_FLOAT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right_rank</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">              </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">requests</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u542f\u52a8\u975e\u963b\u585e\u53d1\u9001</span>\n<span class=\"w\">    </span><span class=\"n\">MPI_Isend</span><span class=\"p\">(</span><span class=\"n\">send_left</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_FLOAT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">left_rank</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">              </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">requests</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"n\">MPI_Isend</span><span class=\"p\">(</span><span class=\"n\">send_right</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_FLOAT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right_rank</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">              </span><span class=\"n\">MPI_COMM_WORLD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">requests</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u8ba1\u7b97\u5185\u90e8\u533a\u57df\uff08\u4e0d\u4f9d\u8d56halo\uff09</span>\n<span class=\"w\">    </span><span class=\"n\">compute_interior</span><span class=\"p\">(</span><span class=\"n\">local_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u7b49\u5f85\u901a\u4fe1\u5b8c\u6210</span>\n<span class=\"w\">    </span><span class=\"n\">MPI_Waitall</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">requests</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">MPI_STATUSES_IGNORE</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u8ba1\u7b97\u8fb9\u754c\u533a\u57df\uff08\u4f7f\u7528halo\u6570\u636e\uff09</span>\n<span class=\"w\">    </span><span class=\"n\">compute_boundary</span><span class=\"p\">(</span><span class=\"n\">local_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">halo_left</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">halo_right</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u53cc\u7f13\u51b2Pipeline</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">template</span><span class=\"o\">&lt;</span><span class=\"k\">typename</span><span class=\"w\"> </span><span class=\"nc\">T</span><span class=\"o\">&gt;</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">DoubleBuffer</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">T</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">buffers</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">swap</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">T</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">read_buffer</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">buffers</span><span class=\"p\">[</span><span class=\"n\">current</span><span class=\"p\">];</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">T</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">write_buffer</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">buffers</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"p\">];</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">pipeline_processing</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">DoubleBuffer</span><span class=\"o\">&lt;</span><span class=\"n\">Data</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u542f\u52a8\u7b2c\u4e00\u6b21\u8bfb\u53d6</span>\n<span class=\"w\">    </span><span class=\"n\">async_read</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">write_buffer</span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">iterations</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">swap</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5e76\u884c\uff1a\u5904\u7406\u5f53\u524d\u6570\u636e + \u8bfb\u53d6\u4e0b\u4e00\u6279</span>\n<span class=\"w\">        </span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">async</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">launch</span><span class=\"o\">::</span><span class=\"n\">async</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">&amp;</span><span class=\"p\">]()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">async_read</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">write_buffer</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"p\">});</span>\n\n<span class=\"w\">        </span><span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">read_buffer</span><span class=\"p\">());</span>\n\n<span class=\"w\">        </span><span class=\"n\">future</span><span class=\"p\">.</span><span class=\"n\">wait</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>GPU\u5f02\u6b65\u4f20\u8f93</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">multi_stream_processing</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">h_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">d_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">chunks</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">chunk_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">chunks</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">cudaStream_t</span><span class=\"w\"> </span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">chunks</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u521b\u5efa\u6d41</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">chunks</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamCreate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u5f02\u6b65\u5904\u7406</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">chunks</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">chunk_size</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5f02\u6b65\u62f7\u8d1d\u5230GPU</span>\n<span class=\"w\">        </span><span class=\"n\">cudaMemcpyAsync</span><span class=\"p\">(</span><span class=\"n\">d_data</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">h_data</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                       </span><span class=\"n\">chunk_size</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"p\">),</span><span class=\"w\"> </span>\n<span class=\"w\">                       </span><span class=\"n\">cudaMemcpyHostToDevice</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5728\u6d41\u4e2d\u542f\u52a8kernel</span>\n<span class=\"w\">        </span><span class=\"n\">process_kernel</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"n\">blocks</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">threads</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"w\">                      </span><span class=\"p\">(</span><span class=\"n\">d_data</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">chunk_size</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5f02\u6b65\u62f7\u8d1d\u56deCPU</span>\n<span class=\"w\">        </span><span class=\"n\">cudaMemcpyAsync</span><span class=\"p\">(</span><span class=\"n\">h_data</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">d_data</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                       </span><span class=\"n\">chunk_size</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"p\">),</span><span class=\"w\"> </span>\n<span class=\"w\">                       </span><span class=\"n\">cudaMemcpyDeviceToHost</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u540c\u6b65\u6240\u6709\u6d41</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">chunks</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamSynchronize</span><span class=\"p\">(</span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamDestroy</span><span class=\"p\">(</span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h2 id=\"98-gpu\">9.8 \u591aGPU\u5e76\u884c</h2>\n<h3 id=\"981\">9.8.1 \u57df\u5206\u89e3\u7b56\u7565</h3>\n<p><strong>1D\u5206\u89e3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Domain1D</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">global_size</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">local_size</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">global_size</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">local_start</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">local_end</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">local_start</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">global_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>2D/3D\u5206\u89e3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Domain3D</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">global_size</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">;</span><span class=\"w\">    </span><span class=\"c1\">// GPU\u76843D\u6392\u5217</span>\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">gpu_coords</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// \u5f53\u524dGPU\u7684\u5750\u6807</span>\n\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"nf\">local_size</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">make_int3</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">global_size</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">global_size</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"n\">global_size</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">gpu_grid</span><span class=\"p\">.</span><span class=\"n\">z</span>\n<span class=\"w\">        </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u8ba1\u7b97\u8868\u9762\u79ef/\u4f53\u79ef\u6bd4</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"nf\">surface_volume_ratio</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">ls</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">surface</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"o\">*</span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"o\">*</span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">volume</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">ls</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"p\">(</span><span class=\"n\">surface</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">volume</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u6700\u4f18\u5206\u89e3\u9009\u62e9</strong>\uff1a</p>\n<ul>\n<li>\u6700\u5c0f\u5316\u901a\u4fe1\u91cf\uff1a\u51cf\u5c0f\u8868\u9762\u79ef/\u4f53\u79ef\u6bd4</li>\n<li>\u8003\u8651\u95ee\u9898\u7684\u5404\u5411\u5f02\u6027</li>\n<li>\u5339\u914d\u786c\u4ef6\u62d3\u6251\uff08\u5982NVLink\u8fde\u63a5\uff09</li>\n</ul>\n<h3 id=\"982-halo\">9.8.2 Halo\u533a\u57df\u4ea4\u6362</h3>\n<p><strong>Ghost Cell\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">HaloExchange</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">halo_width</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int3</span><span class=\"w\"> </span><span class=\"n\">total_size</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"c1\">// local + 2*halo</span>\n\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// 6\u4e2a\u65b9\u5411\u7684\u90bb\u5c45GPU</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">neighbors</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// -x, +x, -y, +y, -z, +z</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">exchange_halos</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// X\u65b9\u5411\u4ea4\u6362</span>\n<span class=\"w\">        </span><span class=\"n\">exchange_x_direction</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// Y\u65b9\u5411\u4ea4\u6362\uff08\u5305\u542bX\u65b9\u5411\u7684halo\uff09</span>\n<span class=\"w\">        </span><span class=\"n\">exchange_y_direction</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// Z\u65b9\u5411\u4ea4\u6362\uff08\u5305\u542bX,Y\u65b9\u5411\u7684halo\uff09</span>\n<span class=\"w\">        </span><span class=\"n\">exchange_z_direction</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">exchange_x_direction</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">yz_slice_size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">halo_width</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u51c6\u5907\u53d1\u9001\u7f13\u51b2\u533a</span>\n<span class=\"w\">        </span><span class=\"n\">pack_x_minus</span><span class=\"p\">(</span><span class=\"n\">send_buffer_xm</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">pack_x_plus</span><span class=\"p\">(</span><span class=\"n\">send_buffer_xp</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u975e\u963b\u585eP2P\u4f20\u8f93</span>\n<span class=\"w\">        </span><span class=\"n\">cudaMemcpyPeerAsync</span><span class=\"p\">(</span><span class=\"n\">recv_xm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_xm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">send_xp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                           </span><span class=\"n\">yz_slice_size</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">stream_xm</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">cudaMemcpyPeerAsync</span><span class=\"p\">(</span><span class=\"n\">recv_xp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_xp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">send_xm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                           </span><span class=\"n\">yz_slice_size</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">stream_xp</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u540c\u6b65</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamSynchronize</span><span class=\"p\">(</span><span class=\"n\">stream_xm</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamSynchronize</span><span class=\"p\">(</span><span class=\"n\">stream_xp</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u89e3\u5305\u5230halo\u533a\u57df</span>\n<span class=\"w\">        </span><span class=\"n\">unpack_x_minus</span><span class=\"p\">(</span><span class=\"n\">recv_buffer_xm</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">unpack_x_plus</span><span class=\"p\">(</span><span class=\"n\">recv_buffer_xp</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>GPUDirect P2P\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">enable_peer_access</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">can_access</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">cudaDeviceCanAccessPeer</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">can_access</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">can_access</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">cudaDeviceEnablePeerAccess</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u91cd\u53e0\u8ba1\u7b97\u548c\u901a\u4fe1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">timestep_with_overlap</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// 1. \u542f\u52a8halo\u4ea4\u6362\uff08\u975e\u963b\u585e\uff09</span>\n<span class=\"w\">    </span><span class=\"n\">start_halo_exchange</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// 2. \u8ba1\u7b97\u5185\u90e8\u533a\u57df\uff08\u4e0d\u9700\u8981halo\uff09</span>\n<span class=\"w\">    </span><span class=\"n\">dim3</span><span class=\"w\"> </span><span class=\"n\">interior_blocks</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"n\">local_size</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">halo_width</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">255</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"mi\">256</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">local_size</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">halo_width</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">local_size</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">halo_width</span><span class=\"p\">.</span><span class=\"n\">z</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">compute_interior</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"n\">interior_blocks</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">256</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">compute_stream</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">local_size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">halo_width</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// 3. \u7b49\u5f85halo\u4ea4\u6362\u5b8c\u6210</span>\n<span class=\"w\">    </span><span class=\"n\">finish_halo_exchange</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// 4. \u8ba1\u7b97\u8fb9\u754c\u533a\u57df</span>\n<span class=\"w\">    </span><span class=\"n\">compute_boundary_x</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"p\">...</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">compute_boundary_y</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"p\">...</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">compute_boundary_z</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"p\">...</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// 5. \u540c\u6b65\u6240\u6709\u8ba1\u7b97</span>\n<span class=\"w\">    </span><span class=\"n\">cudaDeviceSynchronize</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h3 id=\"983\">9.8.3 \u5f02\u6b65\u4f20\u8f93\u4e0e\u8ba1\u7b97\u91cd\u53e0</h3>\n<p><strong>CUDA\u6d41\u7ba1\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">MultiGPUManager</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">GPUContext</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">device_id</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStream_t</span><span class=\"w\"> </span><span class=\"n\">compute_stream</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStream_t</span><span class=\"w\"> </span><span class=\"n\">transfer_stream</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// \u53cc\u7f13\u51b2\u4f20\u8f93</span>\n\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">d_data</span><span class=\"p\">;</span><span class=\"w\">      </span><span class=\"c1\">// \u8bbe\u5907\u5185\u5b58</span>\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">h_buffer</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span><span class=\"w\"> </span><span class=\"c1\">// \u9489\u624e\u5185\u5b58\u7f13\u51b2\u533a</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">GPUContext</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">contexts</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">process_multi_gpu</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u4e3a\u6bcf\u4e2aGPU\u521b\u5efa\u4e0a\u4e0b\u6587</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">contexts</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">compute_stream</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">create_stream</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">contexts</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">transfer_stream</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">create_stream</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">contexts</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">transfer_stream</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">create_stream</span><span class=\"p\">();</span>\n\n<span class=\"w\">            </span><span class=\"c1\">// \u5206\u914d\u9489\u624e\u5185\u5b58\u52a0\u901f\u4f20\u8f93</span>\n<span class=\"w\">            </span><span class=\"n\">cudaHostAlloc</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">contexts</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">h_buffer</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">buffer_size</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                         </span><span class=\"n\">cudaHostAllocPortable</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">cudaHostAlloc</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">contexts</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">h_buffer</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">buffer_size</span><span class=\"p\">,</span><span class=\"w\"> </span>\n<span class=\"w\">                         </span><span class=\"n\">cudaHostAllocPortable</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// Pipeline\u5904\u7406</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_iterations</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"k\">auto</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">contexts</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">];</span>\n\n<span class=\"w\">                </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">buf_idx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span>\n\n<span class=\"w\">                </span><span class=\"c1\">// \u5f02\u6b65\u4f20\u8f93\u4e0b\u4e00\u6279\u6570\u636e</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_iterations</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">prepare_next_data</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">h_buffer</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">buf_idx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">                    </span><span class=\"n\">cudaMemcpyAsync</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">d_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">h_buffer</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">buf_idx</span><span class=\"p\">],</span>\n<span class=\"w\">                                   </span><span class=\"n\">data_size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cudaMemcpyHostToDevice</span><span class=\"p\">,</span>\n<span class=\"w\">                                   </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">transfer_stream</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">buf_idx</span><span class=\"p\">]);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n\n<span class=\"w\">                </span><span class=\"c1\">// \u5728\u5f53\u524d\u6570\u636e\u4e0a\u8ba1\u7b97</span>\n<span class=\"w\">                </span><span class=\"n\">compute_kernel</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"n\">grid</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">compute_stream</span><span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"w\">                              </span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">d_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">);</span>\n\n<span class=\"w\">                </span><span class=\"c1\">// \u7b49\u5f85\u4e0a\u4e00\u6b21\u4f20\u8f93\u5b8c\u6210</span>\n<span class=\"w\">                </span><span class=\"n\">cudaStreamSynchronize</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">transfer_stream</span><span class=\"p\">[</span><span class=\"n\">buf_idx</span><span class=\"p\">]);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u4e8b\u4ef6\u540c\u6b65</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">EventSync</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">cudaEvent_t</span><span class=\"w\"> </span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"n\">MAX_GPUS</span><span class=\"p\">][</span><span class=\"n\">MAX_EVENTS</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">cross_gpu_dependency</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// GPU 0\u5b8c\u6210\u8ba1\u7b97</span>\n<span class=\"w\">        </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">kernel_gpu0</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"p\">...</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">cudaEventRecord</span><span class=\"p\">(</span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// GPU 1\u7b49\u5f85GPU 0</span>\n<span class=\"w\">        </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamWaitEvent</span><span class=\"p\">(</span><span class=\"n\">stream_gpu1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">events</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n<span class=\"w\">        </span><span class=\"n\">kernel_gpu1</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"p\">...,</span><span class=\"w\"> </span><span class=\"n\">stream_gpu1</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u53ef\u4ee5\u5f62\u6210\u590d\u6742\u7684\u4f9d\u8d56DAG</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<h3 id=\"984\">9.8.4 \u8d1f\u8f7d\u52a8\u6001\u8fc1\u79fb</h3>\n<p><strong>\u5de5\u4f5c\u7a83\u53d6\u5b9e\u73b0</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">WorkStealingScheduler</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">WorkQueue</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">atomic</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">atomic</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">QUEUE_SIZE</span><span class=\"p\">];</span>\n\n<span class=\"w\">        </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">try_push</span><span class=\"p\">(</span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_acquire</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_relaxed</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"n\">QUEUE_SIZE</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">false</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">QUEUE_SIZE</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_release</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">try_pop</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_relaxed</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_acquire</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">nullptr</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">QUEUE_SIZE</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"n\">head</span><span class=\"p\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_release</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">try_steal</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">head</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_acquire</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">memory_order_acquire</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">nullptr</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tasks</span><span class=\"p\">[</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">QUEUE_SIZE</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">.</span><span class=\"n\">compare_exchange_strong</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"k\">nullptr</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"n\">WorkQueue</span><span class=\"w\"> </span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"n\">MAX_GPUS</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">gpu_worker</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"n\">gpu_id</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">WorkQueue</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">my_queue</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"n\">gpu_id</span><span class=\"p\">];</span>\n\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">done</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">Task</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">task</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">my_queue</span><span class=\"p\">.</span><span class=\"n\">try_pop</span><span class=\"p\">();</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">task</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"c1\">// \u5c1d\u8bd5\u4ece\u5176\u4ed6GPU\u7a83\u53d6</span>\n<span class=\"w\">                </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">victim</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">victim</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">victim</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">victim</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"n\">task</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">queues</span><span class=\"p\">[</span><span class=\"n\">victim</span><span class=\"p\">].</span><span class=\"n\">try_steal</span><span class=\"p\">();</span>\n<span class=\"w\">                        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">                    </span><span class=\"p\">}</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">execute_task</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">yield</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>\u52a8\u6001\u8d1f\u8f7d\u76d1\u63a7</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">LoadMonitor</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">GPULoad</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">atomic</span><span class=\"o\">&lt;</span><span class=\"kt\">float</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">utilization</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">atomic</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">task_count</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">atomic</span><span class=\"o\">&lt;</span><span class=\"kt\">int64_t</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">total_time</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"n\">GPULoad</span><span class=\"w\"> </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">MAX_GPUS</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">update_load</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">util</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int64_t</span><span class=\"w\"> </span><span class=\"n\">task_time</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">gpu_id</span><span class=\"p\">].</span><span class=\"n\">utilization</span><span class=\"p\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">util</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">gpu_id</span><span class=\"p\">].</span><span class=\"n\">task_count</span><span class=\"p\">.</span><span class=\"n\">fetch_add</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">gpu_id</span><span class=\"p\">].</span><span class=\"n\">total_time</span><span class=\"p\">.</span><span class=\"n\">fetch_add</span><span class=\"p\">(</span><span class=\"n\">task_time</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">find_least_loaded_gpu</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">min_load</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">1.0f</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">best_gpu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">utilization</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">min_load</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">min_load</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">best_gpu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">best_gpu</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">rebalance_work</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u8ba1\u7b97\u5e73\u5747\u8d1f\u8f7d</span>\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">avg_load</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.0f</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">avg_load</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">utilization</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"n\">avg_load</span><span class=\"w\"> </span><span class=\"o\">/=</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u8bc6\u522b\u8fc7\u8f7d\u548c\u7a7a\u95f2GPU</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">overloaded</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">underloaded</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">loads</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">utilization</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">avg_load</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mf\">1.2f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">overloaded</span><span class=\"p\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">avg_load</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mf\">0.8f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">underloaded</span><span class=\"p\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u8fc1\u79fb\u4efb\u52a1</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">overloaded</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">dst</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">underloaded</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">migrate_tasks</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dst</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n<p><strong>NCCL\u96c6\u5408\u901a\u4fe1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">nccl_allreduce_example</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ncclComm_t</span><span class=\"w\"> </span><span class=\"n\">comms</span><span class=\"p\">[</span><span class=\"n\">num_gpus</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u521d\u59cb\u5316NCCL</span>\n<span class=\"w\">    </span><span class=\"n\">ncclCommInitAll</span><span class=\"p\">(</span><span class=\"n\">comms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">device_ids</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u6bcf\u4e2aGPU\u6267\u884callreduce</span>\n<span class=\"w\">    </span><span class=\"cp\">#pragma omp parallel num_threads(num_gpus)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">omp_get_thread_num</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">cudaSetDevice</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5c40\u90e8\u8ba1\u7b97</span>\n<span class=\"w\">        </span><span class=\"n\">compute_local</span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"p\">...</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">(</span><span class=\"n\">d_data</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">]);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5168\u5c40\u5f52\u7ea6</span>\n<span class=\"w\">        </span><span class=\"n\">ncclAllReduce</span><span class=\"p\">(</span><span class=\"n\">d_data</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">d_data</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">data_size</span><span class=\"p\">,</span>\n<span class=\"w\">                     </span><span class=\"n\">ncclFloat</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ncclSum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">comms</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">],</span><span class=\"w\"> </span>\n<span class=\"w\">                     </span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">]);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u7b49\u5f85\u5b8c\u6210</span>\n<span class=\"w\">        </span><span class=\"n\">cudaStreamSynchronize</span><span class=\"p\">(</span><span class=\"n\">streams</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u6e05\u7406</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">ncclCommDestroy</span><span class=\"p\">(</span><span class=\"n\">comms</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u4e86\u9ad8\u6027\u80fd\u8ba1\u7b97\u5728\u7269\u7406\u5f15\u64ce\u4e2d\u7684\u5e94\u7528\uff0c\u4ece\u5e95\u5c42\u786c\u4ef6\u67b6\u6784\u5230\u9ad8\u5c42\u7b97\u6cd5\u4f18\u5316\uff1a</p>\n<ol>\n<li>\n<p><strong>\u5904\u7406\u5668\u5fae\u67b6\u6784</strong>\uff1a\u7406\u89e3CPU\u6d41\u6c34\u7ebf\u3001SIMD\u6307\u4ee4\u96c6\u3001\u5206\u652f\u9884\u6d4b\u548c\u4e71\u5e8f\u6267\u884c\u5bf9\u4e8e\u7f16\u5199\u9ad8\u6548\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002</p>\n</li>\n<li>\n<p><strong>\u5185\u5b58\u5c42\u7ea7</strong>\uff1a\u7f13\u5b58\u4f18\u5316\u3001NUMA\u611f\u77e5\u7f16\u7a0b\u548cTLB\u4f18\u5316\u80fd\u591f\u663e\u8457\u63d0\u5347\u5185\u5b58\u5bc6\u96c6\u578b\u5e94\u7528\u7684\u6027\u80fd\u3002</p>\n</li>\n<li>\n<p><strong>\u6027\u80fd\u5206\u6790</strong>\uff1aRoofline\u6a21\u578b\u5e2e\u52a9\u8bc6\u522b\u6027\u80fd\u74f6\u9888\uff0c\u6027\u80fd\u8ba1\u6570\u5668\u548c\u5206\u6790\u5de5\u5177\u6307\u5bfc\u4f18\u5316\u65b9\u5411\u3002</p>\n</li>\n<li>\n<p><strong>\u5e76\u884c\u7f16\u7a0b\u6a21\u578b</strong>\uff1aOpenMP\u7b80\u5316\u5171\u4eab\u5185\u5b58\u5e76\u884c\uff0cMPI\u652f\u6301\u5206\u5e03\u5f0f\u8ba1\u7b97\uff0c\u5408\u7406\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u786e\u4fdd\u9ad8\u6548\u7387\u3002</p>\n</li>\n<li>\n<p><strong>GPU\u7f16\u7a0b</strong>\uff1a\u7406\u89e3GPU\u67b6\u6784\u7279\u70b9\uff0c\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u548c\u5360\u7528\u7387\uff0c\u5145\u5206\u5229\u7528GPU\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u3002</p>\n</li>\n<li>\n<p><strong>\u7a00\u758f\u6570\u636e\u7ed3\u6784</strong>\uff1aSPGrid\u548cOpenVDB\u7b49\u6280\u672f\u5904\u7406\u5927\u89c4\u6a21\u7a00\u758f\u6570\u636e\uff0c\u52a8\u6001\u62d3\u6251\u66f4\u65b0\u652f\u6301\u81ea\u9002\u5e94\u4eff\u771f\u3002</p>\n</li>\n<li>\n<p><strong>\u7b97\u6cd5\u4f18\u5316</strong>\uff1a\u5faa\u73af\u4f18\u5316\u3001\u5411\u91cf\u5316\u3001\u901a\u4fe1\u9690\u85cf\u7b49\u6280\u672f\u5728\u5404\u4e2a\u5c42\u9762\u63d0\u5347\u6027\u80fd\u3002</p>\n</li>\n<li>\n<p><strong>\u591aGPU\u5e76\u884c</strong>\uff1a\u57df\u5206\u89e3\u3001halo\u4ea4\u6362\u3001\u5f02\u6b65\u4f20\u8f93\u548c\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\u5b9e\u73b0\u53ef\u6269\u5c55\u7684\u591aGPU\u8ba1\u7b97\u3002</p>\n</li>\n</ol>\n<h2 id=\"_3\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_4\">\u57fa\u7840\u9898</h3>\n<ol>\n<li><strong>\u7f13\u5b58\u884c\u5206\u6790</strong>\n   \u7ed9\u5b9a\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5206\u6790\u5176\u7f13\u5b58\u884c\u4e3a\u5e76\u4f18\u5316\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Particle</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">vx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vy</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">vz</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">mass</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">update_positions</span><span class=\"p\">(</span><span class=\"n\">Particle</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">vx</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">vy</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">vz</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651AoS vs SoA\u5e03\u5c40\uff0c\u4ee5\u53ca\u7f13\u5b58\u884c\u7684\u5229\u7528\u7387\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   \u539f\u59cb\u4ee3\u7801\u95ee\u9898\uff1a\n\n   - Particle\u7ed3\u6784\u4f53\u5927\u5c0f32\u5b57\u8282\uff0c\u4e00\u4e2a\u7f13\u5b58\u884c(64\u5b57\u8282)\u53ea\u80fd\u5bb9\u7eb32\u4e2a\u7c92\u5b50\n   - \u66f4\u65b0\u4f4d\u7f6e\u65f6\u53ea\u4f7f\u7528\u4e866/8\u7684\u6570\u636e\uff0c\u7f13\u5b58\u5229\u7528\u738775%\n\n   \u4f18\u5316\u65b9\u68481 - SoA\u5e03\u5c40\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">ParticlesSoA</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"w\">  </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">vx</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">vy</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">vz</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">mass</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">update_positions_soa</span><span class=\"p\">(</span><span class=\"n\">ParticlesSoA</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">vx</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">vy</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">vz</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n\n   \u4f18\u5316\u65b9\u68482 - \u6570\u636e\u5206\u79bb\uff1a\n   ```cpp\n   struct Position { float x, y, z; };\n   struct Velocity { float vx, vy, vz; };\n\n   void update_positions_split(Position* pos, Velocity* vel, int n, float dt) {\n       for (int i = 0; i &lt; n; i++) {\n           pos[i].x += vel[i].vx * dt;\n           pos[i].y += vel[i].vy * dt;\n           pos[i].z += vel[i].vz * dt;\n       }\n   }\n   ```\n   </details>\n<ol start=\"2\">\n<li><strong>Roofline\u6a21\u578b\u5e94\u7528</strong>\n   \u67d0\u77e9\u9635\u4e58\u6cd5\u6838\u5fc3\u5faa\u73af\u6267\u884c2n\u00b3\u6b21\u6d6e\u70b9\u8fd0\u7b97\uff0c\u8bfb\u53d62n\u00b2\u4e2a\u6d6e\u70b9\u6570\u3002\u673a\u5668\u5cf0\u503c\u6027\u80fd1 TFLOPS\uff0c\u5185\u5b58\u5e26\u5bbd100 GB/s\u3002\u95ee\uff1a</li>\n</ol>\n<ul>\n<li>a) \u8ba1\u7b97\u7b97\u672f\u5f3a\u5ea6</li>\n<li>b) n\u81f3\u5c11\u4e3a\u591a\u5c11\u65f6\u624d\u80fd\u8fbe\u5230\u8ba1\u7b97\u53d7\u9650\uff1f</li>\n<li>c) \u5982\u4f55\u901a\u8fc7\u5206\u5757\u63d0\u9ad8\u6027\u80fd\uff1f</li>\n</ul>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u7b97\u672f\u5f3a\u5ea6 = FLOPs / Bytes\uff0c\u673a\u5668\u5e73\u8861\u70b9 = Peak FLOPS / Bandwidth\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   a) \u7b97\u672f\u5f3a\u5ea6\u8ba1\u7b97\uff1a\n\n   - FLOPs = 2n\u00b3\n   - Bytes = 2n\u00b2 \u00d7 4 = 8n\u00b2\uff08\u5047\u8bbefloat\uff09\n   - AI = 2n\u00b3 / 8n\u00b2 = n/4\n\n   b) \u673a\u5668\u5e73\u8861\u70b9\uff1a\n\n   - Balance = 1000 GFLOPS / 100 GB/s = 10 FLOP/Byte\n   - \u9700\u8981 n/4 \u2265 10\uff0c\u5373 n \u2265 40\n\n   c) \u5206\u5757\u4f18\u5316\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u539f\u59cb\uff1aAI = n/4</span>\n<span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">k</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">];</span>\n\n<span class=\"c1\">// \u5206\u5757\u540e\uff1aAI = TILE/4\uff08\u6bcf\u4e2a\u5757\u5185\uff09</span>\n<span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">ii</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">jj</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">kk</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"c1\">// \u5757\u7ea7\u5faa\u73af</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"c1\">// \u5757\u5185\u5faa\u73af</span>\n<span class=\"w\">        </span><span class=\"n\">C</span><span class=\"p\">[</span><span class=\"n\">ii</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">jj</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">ii</span><span class=\"o\">+</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">kk</span><span class=\"o\">+</span><span class=\"n\">k</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">B</span><span class=\"p\">[</span><span class=\"n\">kk</span><span class=\"o\">+</span><span class=\"n\">k</span><span class=\"p\">][</span><span class=\"n\">jj</span><span class=\"o\">+</span><span class=\"n\">j</span><span class=\"p\">];</span>\n</code></pre></div>\n\n\n   \u9009\u62e9TILE=64\u53ef\u4ee5\u5145\u5206\u5229\u7528L1\u7f13\u5b58\uff0c\u63d0\u9ad8\u6570\u636e\u91cd\u7528\u3002\n   </details>\n<ol start=\"3\">\n<li><strong>GPU\u5185\u5b58\u5408\u5e76\u8bbf\u95ee</strong>\n   \u5206\u6790\u4ee5\u4e0bGPU kernel\u7684\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">__global__</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651warp\u5185\u7ebf\u7a0b\u7684\u8bbf\u95ee\u6a21\u5f0f\uff0c\u8bfb\u548c\u5199\u7684\u5408\u5e76\u60c5\u51b5\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   \u95ee\u9898\u5206\u6790\uff1a\n\n   - \u8bfb\u53d6\uff1a\u76f8\u90bb\u7ebf\u7a0b\u8bfb\u53d6\u8de8\u6b65\u4e3an\u7684\u5143\u7d20\uff0c\u975e\u5408\u5e76\u8bbf\u95ee\n   - \u5199\u5165\uff1a\u76f8\u90bb\u7ebf\u7a0b\u5199\u5165\u8fde\u7eed\u5730\u5740\uff0c\u5408\u5e76\u8bbf\u95ee\n\n   \u4f18\u5316\u65b9\u6848 - \u4f7f\u7528\u5171\u4eab\u5185\u5b58\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">__global__</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">transpose_optimized</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">__shared__</span><span class=\"w\"> </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"mi\">32</span><span class=\"p\">][</span><span class=\"mi\">33</span><span class=\"p\">];</span><span class=\"w\">  </span><span class=\"c1\">// +1\u907f\u514dbank\u51b2\u7a81</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u5408\u5e76\u8bfb\u53d6\u5230\u5171\u4eab\u5185\u5b58</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">][</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"nf\">__syncthreads</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u8f6c\u7f6e\u540e\u7684\u5750\u6807</span>\n<span class=\"w\">    </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u5408\u5e76\u5199\u5165</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tile</span><span class=\"p\">[</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n   </details>\n<ol start=\"4\">\n<li><strong>OpenMP\u8d1f\u8f7d\u5747\u8861</strong>\n   \u6709\u4e00\u4e2a\u7c92\u5b50\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u7c92\u5b50\u7684\u8ba1\u7b97\u6210\u672c\u4e0e\u5176\u90bb\u5c45\u6570\u6210\u6b63\u6bd4\u3002\u5982\u4f55\u7528OpenMP\u5b9e\u73b0\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\uff1f</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u6bd4\u8f83static\u3001dynamic\u3001guided\u8c03\u5ea6\u7b56\u7565\u7684\u7279\u70b9\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   ```cpp\n   // \u65b9\u68481\uff1a\u52a8\u6001\u8c03\u5ea6\n   #pragma omp parallel for schedule(dynamic, 16)\n   for (int i = 0; i &lt; n_particles; i++) {\n       int neighbors = count_neighbors(i);\n       // \u8ba1\u7b97\u6210\u672c \u221d neighbors\n       compute_forces(i, neighbors);\n   }\n\n   // \u65b9\u68482\uff1a\u9884\u6392\u5e8f+\u9759\u6001\u8c03\u5ea6\n   // \u5148\u7edf\u8ba1\u6bcf\u4e2a\u7c92\u5b50\u7684\u90bb\u5c45\u6570\n   std::vector&lt;std::pair&lt;int, int&gt;&gt; workload;\n   for (int i = 0; i &lt; n_particles; i++) {\n       workload.push_back({count_neighbors(i), i});\n   }\n\n   // \u6309\u5de5\u4f5c\u91cf\u6392\u5e8f\uff0c\u4ea4\u9519\u5206\u914d\n   std::sort(workload.begin(), workload.end());\n\n   #pragma omp parallel\n   {\n       int tid = omp_get_thread_num();\n       int nthreads = omp_get_num_threads();\n\n       // \u5faa\u73af\u5206\u914d\u786e\u4fdd\u8d1f\u8f7d\u5747\u8861\n       for (int i = tid; i &lt; n_particles; i += nthreads) {\n           int particle_id = workload[i].second;\n           compute_forces(particle_id, workload[i].first);\n       }\n   }\n\n   // \u65b9\u68483\uff1a\u4efb\u52a1\u5e76\u884c\n   #pragma omp parallel\n   #pragma omp single\n   {\n       for (int i = 0; i &lt; n_particles; i++) {\n           #pragma omp task\n           {\n               int neighbors = count_neighbors(i);\n               compute_forces(i, neighbors);\n           }\n       }\n   }\n   ```\n   </details>\n<h3 id=\"_5\">\u6311\u6218\u9898</h3>\n<ol start=\"5\">\n<li><strong>\u591aGPU\u57df\u5206\u89e3\u4f18\u5316</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a3D\u6d41\u4f53\u4eff\u771f\u7684\u591aGPU\u57df\u5206\u89e3\u65b9\u6848\uff0c\u8003\u8651\uff1a</li>\n</ol>\n<ul>\n<li>\u6700\u5c0f\u5316\u901a\u4fe1\u91cf</li>\n<li>\u652f\u6301\u975e\u5747\u5300\u7f51\u683c</li>\n<li>\u52a8\u6001\u8d1f\u8f7d\u5747\u8861</li>\n<li>\u5bb9\u9519\u6027</li>\n</ul>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf\u3001\u9012\u5f52\u4e8c\u5206\u3001\u56fe\u5206\u5272\u7b49\u65b9\u6cd5\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   \u7efc\u5408\u65b9\u6848\u8bbe\u8ba1\uff1a\n\n   1. **\u521d\u59cb\u5206\u89e3** - \u4f7f\u7528\u9012\u5f52\u5750\u6807\u4e8c\u5206(RCB)\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Domain</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">float3</span><span class=\"w\"> </span><span class=\"n\">min</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">workload</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_id</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">recursive_bisection</span><span class=\"p\">(</span><span class=\"n\">Domain</span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">domain</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_start</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_count</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">gpu_count</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">domain</span><span class=\"p\">.</span><span class=\"n\">gpu_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gpu_start</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u9009\u62e9\u6700\u957f\u7ef4\u5ea6\u5207\u5206</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">dim</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">longest_dimension</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u6309\u5de5\u4f5c\u91cf\u5e73\u8861\u627e\u5207\u5206\u70b9</span>\n<span class=\"w\">    </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">split</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">find_median_workload</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dim</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u9012\u5f52\u5206\u89e3\u5b50\u57df</span>\n<span class=\"w\">    </span><span class=\"n\">Domain</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">split_domain</span><span class=\"p\">(</span><span class=\"n\">domain</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dim</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">split</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">left_gpus</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gpu_count</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">recursive_bisection</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_start</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">left_gpus</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">recursive_bisection</span><span class=\"p\">(</span><span class=\"n\">right</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_start</span><span class=\"o\">+</span><span class=\"n\">left_gpus</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_count</span><span class=\"o\">-</span><span class=\"n\">left_gpus</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n\n   2. **\u52a8\u6001\u8d1f\u8f7d\u5747\u8861** - \u57fa\u4e8e\u6269\u6563\u7684\u65b9\u6cd5\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">LoadBalancer</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">GPUMetrics</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">computation_time</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">communication_time</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">particle_count</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">rebalance</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u6536\u96c6\u6240\u6709GPU\u7684\u8d1f\u8f7d\u4fe1\u606f</span>\n<span class=\"w\">        </span><span class=\"n\">GPUMetrics</span><span class=\"w\"> </span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"n\">num_gpus</span><span class=\"p\">];</span>\n<span class=\"w\">        </span><span class=\"n\">gather_metrics</span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u8ba1\u7b97\u5e73\u5747\u8d1f\u8f7d</span>\n<span class=\"w\">        </span><span class=\"kt\">float</span><span class=\"w\"> </span><span class=\"n\">avg_time</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">compute_average_time</span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u6269\u6563\u7b97\u6cd5\uff1a\u90bb\u5c45\u95f4\u8fc1\u79fb\u7c92\u5b50</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">max_iterations</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">iter</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">converged</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">true</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">metrics</span><span class=\"p\">[</span><span class=\"n\">gpu</span><span class=\"p\">].</span><span class=\"n\">computation_time</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">avg_time</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mf\">1.1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"c1\">// \u627e\u5230\u6700\u7a7a\u95f2\u7684\u90bb\u5c45</span>\n<span class=\"w\">                    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">find_least_loaded_neighbor</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">);</span>\n\n<span class=\"w\">                    </span><span class=\"c1\">// \u8ba1\u7b97\u8fc1\u79fb\u91cf</span>\n<span class=\"w\">                    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">migrate_count</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">estimate_migration</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">metrics</span><span class=\"p\">);</span>\n\n<span class=\"w\">                    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">migrate_count</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"n\">migrate_particles</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">migrate_count</span><span class=\"p\">);</span>\n<span class=\"w\">                        </span><span class=\"n\">converged</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">false</span><span class=\"p\">;</span>\n<span class=\"w\">                    </span><span class=\"p\">}</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">converged</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n\n\n   3. **\u975e\u5747\u5300\u7f51\u683c\u652f\u6301** - \u4f7f\u7528\u516b\u53c9\u6811\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">AdaptiveGrid</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">OctreeNode</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">float3</span><span class=\"w\"> </span><span class=\"n\">center</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">half_size</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">OctreeNode</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">children</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">];</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">particle_count</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu_owner</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"nf\">should_refine</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">particle_count</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">threshold</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">is_leaf</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">assign_to_gpu</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">gpu_loads</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">is_leaf</span><span class=\"p\">())</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"c1\">// \u5206\u914d\u7ed9\u8d1f\u8f7d\u6700\u5c0f\u7684GPU</span>\n<span class=\"w\">                </span><span class=\"n\">gpu_owner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">min_element</span><span class=\"p\">(</span><span class=\"n\">gpu_loads</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">gpu_loads</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">num_gpus</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">gpu_loads</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">gpu_loads</span><span class=\"p\">[</span><span class=\"n\">gpu_owner</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">particle_count</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">child</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">children</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">child</span><span class=\"o\">-&gt;</span><span class=\"n\">assign_to_gpu</span><span class=\"p\">(</span><span class=\"n\">gpu_loads</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n\n\n   4. **\u5bb9\u9519\u6027** - \u68c0\u67e5\u70b9\u548c\u5197\u4f59\uff1a\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">FaultTolerantDomain</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">checkpoint</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u6bcf\u4e2aGPU\u4fdd\u5b58\u90bb\u5c45\u7684ghost\u6570\u636e</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">neighbor</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">neighbors</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">backup_ghost_data</span><span class=\"p\">[</span><span class=\"n\">neighbor</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_ghost_data</span><span class=\"p\">(</span><span class=\"n\">neighbor</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u5f02\u6b65\u5199\u5165\u6301\u4e45\u5b58\u50a8</span>\n<span class=\"w\">        </span><span class=\"n\">async_write_checkpoint</span><span class=\"p\">(</span><span class=\"n\">local_data</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">backup_ghost_data</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">recover_from_failure</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">failed_gpu</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u90bb\u5c45GPU\u63a5\u7ba1\u5931\u8d25GPU\u7684\u533a\u57df</span>\n<span class=\"w\">        </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">neighbors</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_neighbors</span><span class=\"p\">(</span><span class=\"n\">failed_gpu</span><span class=\"p\">);</span>\n\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">neighbors</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">gpu</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">neighbors</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n<span class=\"w\">            </span><span class=\"c1\">// \u4ece\u5907\u4efd\u6062\u590dghost\u533a\u57df\u7684\u6570\u636e</span>\n<span class=\"w\">            </span><span class=\"n\">restore_from_backup</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">failed_gpu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">);</span>\n\n<span class=\"w\">            </span><span class=\"c1\">// \u6269\u5c55\u8ba1\u7b97\u57df</span>\n<span class=\"w\">            </span><span class=\"n\">extend_domain</span><span class=\"p\">(</span><span class=\"n\">gpu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">failed_gpu</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">neighbors</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"c1\">// \u91cd\u65b0\u5e73\u8861\u8d1f\u8f7d</span>\n<span class=\"w\">        </span><span class=\"n\">rebalance_after_failure</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre></div>\n\n\n   </details>\n<ol start=\"6\">\n<li><strong>\u6df7\u5408\u7cbe\u5ea6\u4f18\u5316</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u6df7\u5408\u7cbe\u5ea6\u7269\u7406\u4eff\u771f\u6846\u67b6\uff0c\u5728\u4fdd\u8bc1\u7cbe\u5ea6\u7684\u540c\u65f6\u6700\u5927\u5316\u6027\u80fd\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u8bef\u5dee\u4f20\u64ad\u3001\u6570\u503c\u7a33\u5b9a\u6027\u3001\u786c\u4ef6\u652f\u6301\uff08Tensor Cores\uff09\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   ```cpp\n   template&lt;typename HighPrec = double, typename LowPrec = float&gt;\n   class MixedPrecisionSolver {\n       // \u8bef\u5dee\u4f30\u8ba1\u5668\n       class ErrorEstimator {\n           HighPrec reference_solution;\n           LowPrec approximate_solution;\n\n           float estimate_error() {\n               return norm(reference_solution - HighPrec(approximate_solution)) \n                      / norm(reference_solution);\n           }\n\n           bool needs_refinement(float threshold = 1e-4) {\n               return estimate_error() &gt; threshold;\n           }\n       };\n\n       // \u81ea\u9002\u5e94\u7cbe\u5ea6\u9009\u62e9\n       class PrecisionSelector {\n           struct RegionInfo {\n               float3 min, max;\n               float error_estimate;\n               bool use_high_precision;\n           };\n\n           std::vector&lt;RegionInfo&gt; regions;\n\n           void analyze_regions() {\n               for (auto&amp; region : regions) {\n                   // \u57fa\u4e8e\u7269\u7406\u91cf\u68af\u5ea6\u5224\u65ad\n                   float gradient = compute_gradient(region);\n\n                   // \u57fa\u4e8e\u6761\u4ef6\u6570\u5224\u65ad\n                   float condition = estimate_condition_number(region);\n\n                   // \u51b3\u7b56\n                   region.use_high_precision = \n                       gradient &gt; gradient_threshold ||\n                       condition &gt; condition_threshold ||\n                       region.error_estimate &gt; error_threshold;\n               }\n           }\n       };\n\n       // \u6df7\u5408\u7cbe\u5ea6\u77e9\u9635\u8fd0\u7b97\uff08\u5229\u7528Tensor Cores\uff09\n       void mixed_precision_gemm(float* C, const half* A, const half* B, \n                                int M, int N, int K) {\n           // \u4f7f\u7528Tensor Cores\u8fdb\u884c\u534a\u7cbe\u5ea6\u8ba1\u7b97\n           cublasGemmEx(handle,\n               CUBLAS_OP_N, CUBLAS_OP_N,\n               M, N, K,\n               &amp;alpha,\n               A, CUDA_R_16F, M,\n               B, CUDA_R_16F, K,\n               &amp;beta,\n               C, CUDA_R_32F, M,\n               CUDA_R_32F,\n               CUBLAS_GEMM_DEFAULT_TENSOR_OP);\n       }\n\n       // \u8fed\u4ee3\u7ec6\u5316\u6c42\u89e3\u5668\n       void iterative_refinement_solve(Matrix&lt;HighPrec&gt;&amp; A, \n                                     Vector&lt;HighPrec&gt;&amp; b,\n                                     Vector&lt;HighPrec&gt;&amp; x) {\n           // \u8f6c\u6362\u4e3a\u4f4e\u7cbe\u5ea6\n           Matrix&lt;LowPrec&gt; A_low = convert&lt;LowPrec&gt;(A);\n           Vector&lt;LowPrec&gt; b_low = convert&lt;LowPrec&gt;(b);\n           Vector&lt;LowPrec&gt; x_low = convert&lt;LowPrec&gt;(x);\n\n           // \u4f4e\u7cbe\u5ea6LU\u5206\u89e3\n           LU&lt;LowPrec&gt; lu(A_low);\n\n           for (int iter = 0; iter &lt; max_iterations; iter++) {\n               // \u8ba1\u7b97\u6b8b\u5dee\uff08\u9ad8\u7cbe\u5ea6\uff09\n               Vector&lt;HighPrec&gt; r = b - A * x;\n\n               // \u68c0\u67e5\u6536\u655b\n               if (norm(r) &lt; tolerance) break;\n\n               // \u4f4e\u7cbe\u5ea6\u6c42\u89e3\u4fee\u6b63\u91cf\n               Vector&lt;LowPrec&gt; r_low = convert&lt;LowPrec&gt;(r);\n               Vector&lt;LowPrec&gt; dx_low = lu.solve(r_low);\n\n               // \u9ad8\u7cbe\u5ea6\u66f4\u65b0\n               x += convert&lt;HighPrec&gt;(dx_low);\n           }\n       }\n\n       // \u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957fwith\u6df7\u5408\u7cbe\u5ea6\n       void adaptive_timestep() {\n           float dt_high = dt;\n           float dt_low = dt;\n\n           // \u7528\u4e24\u79cd\u7cbe\u5ea6\u5404\u8d70\u4e00\u6b65\n           State&lt;HighPrec&gt; state_high = advance&lt;HighPrec&gt;(state, dt_high);\n           State&lt;LowPrec&gt; state_low = advance&lt;LowPrec&gt;(state, dt_low);\n\n           // \u4f30\u8ba1\u8bef\u5dee\n           float error = estimate_error(state_high, state_low);\n\n           if (error &gt; tolerance) {\n               // \u9700\u8981\u66f4\u9ad8\u7cbe\u5ea6\u6216\u66f4\u5c0f\u6b65\u957f\n               dt *= 0.5;\n               use_high_precision = true;\n           } else if (error &lt; 0.1 * tolerance) {\n               // \u53ef\u4ee5\u7528\u66f4\u4f4e\u7cbe\u5ea6\u6216\u66f4\u5927\u6b65\u957f\n               dt *= 1.5;\n               use_high_precision = false;\n           }\n       }\n   };\n   ```\n   </details>\n<ol start=\"7\">\n<li><strong>SIMD\u4f18\u5316\u7684SPH\u5b9e\u73b0</strong>\n   \u5b9e\u73b0\u4e00\u4e2a\u9ad8\u5ea6\u4f18\u5316\u7684SPH\u90bb\u5c45\u641c\u7d22\u548c\u529b\u8ba1\u7b97\uff0c\u5145\u5206\u5229\u7528AVX-512\u6307\u4ee4\u96c6\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651\u6570\u636e\u5e03\u5c40\u3001\u63a9\u7801\u64cd\u4f5c\u3001\u5411\u91cf\u5316\u7684\u8ddd\u79bb\u8ba1\u7b97\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   ```cpp\n   class SimdSPH {\n       // 16\u8defSIMD\u7684\u7c92\u5b50\u6570\u636e\uff08AVX-512\uff09\n       struct ParticleBlock {\n           __m512 x[BLOCK_SIZE/16];\n           __m512 y[BLOCK_SIZE/16];\n           __m512 z[BLOCK_SIZE/16];\n           __m512 vx[BLOCK_SIZE/16];\n           __m512 vy[BLOCK_SIZE/16];\n           __m512 vz[BLOCK_SIZE/16];\n           __m512 density[BLOCK_SIZE/16];\n           __m512 pressure[BLOCK_SIZE/16];\n       };\n\n       // \u5411\u91cf\u5316\u7684\u90bb\u5c45\u641c\u7d22\n       void find_neighbors_simd(int particle_id, std::vector&lt;int&gt;&amp; neighbors) {\n           __m512 px = _mm512_set1_ps(particles.x[particle_id]);\n           __m512 py = _mm512_set1_ps(particles.y[particle_id]);\n           __m512 pz = _mm512_set1_ps(particles.z[particle_id]);\n           __m512 h2 = _mm512_set1_ps(h * h);\n\n           // \u83b7\u53d6\u7c92\u5b50\u6240\u5728\u7684\u7f51\u683c\u5355\u5143\n           int3 cell = get_cell(particle_id);\n\n           // \u904d\u538627\u4e2a\u90bb\u5c45\u5355\u5143\n           for (int dz = -1; dz &lt;= 1; dz++) {\n               for (int dy = -1; dy &lt;= 1; dy++) {\n                   for (int dx = -1; dx &lt;= 1; dx++) {\n                       int3 ncell = cell + make_int3(dx, dy, dz);\n                       int start = cell_start[ncell];\n                       int end = cell_end[ncell];\n\n                       // SIMD\u5904\u740616\u4e2a\u7c92\u5b50\n                       for (int i = start; i &lt; end; i += 16) {\n                           // \u52a0\u8f7d16\u4e2a\u7c92\u5b50\u4f4d\u7f6e\n                           __m512 qx = _mm512_load_ps(&amp;particles.x[i]);\n                           __m512 qy = _mm512_load_ps(&amp;particles.y[i]);\n                           __m512 qz = _mm512_load_ps(&amp;particles.z[i]);\n\n                           // \u8ba1\u7b97\u8ddd\u79bb\u5e73\u65b9\n                           __m512 dx = _mm512_sub_ps(px, qx);\n                           __m512 dy = _mm512_sub_ps(py, qy);\n                           __m512 dz = _mm512_sub_ps(pz, qz);\n\n                           __m512 r2 = _mm512_fmadd_ps(dx, dx,\n                                       _mm512_fmadd_ps(dy, dy,\n                                       _mm512_mul_ps(dz, dz)));\n\n                           // \u751f\u6210\u63a9\u7801\uff1ar2 &lt; h2\n                           __mmask16 mask = _mm512_cmp_ps_mask(r2, h2, _CMP_LT_OQ);\n\n                           // \u538b\u7f29\u5b58\u50a8\u90bb\u5c45\u7d22\u5f15\n                           if (mask != 0) {\n                               int indices[16];\n                               for (int j = 0; j &lt; 16; j++) {\n                                   indices[j] = i + j;\n                               }\n\n                               // \u4f7f\u7528compress\u5b58\u50a8\u6709\u6548\u90bb\u5c45\n                               __m512i idx = _mm512_load_epi32(indices);\n                               __m512i compressed = _mm512_maskz_compress_epi32(mask, idx);\n\n                               // \u5b58\u50a8\u5230\u90bb\u5c45\u5217\u8868\n                               int count = _mm_popcnt_u32(mask);\n                               _mm512_storeu_epi32(&amp;neighbors[neighbors.size()], compressed);\n                               neighbors.resize(neighbors.size() + count);\n                           }\n                       }\n                   }\n               }\n           }\n       }\n\n       // \u5411\u91cf\u5316\u7684\u5bc6\u5ea6\u8ba1\u7b97\n       void compute_density_simd() {\n           const __m512 factor = _mm512_set1_ps(mass * poly6_constant);\n\n           #pragma omp parallel for\n           for (int i = 0; i &lt; particle_count; i += 16) {\n               __m512 density_sum = _mm512_setzero_ps();\n\n               // \u5bf9\u6bcf\u4e2a\u7c92\u5b50\u7684\u90bb\u5c45\u8fdb\u884c\u5411\u91cf\u5316\u5904\u7406\n               for (int j = 0; j &lt; 16; j++) {\n                   int pid = i + j;\n                   if (pid &gt;= particle_count) break;\n\n                   __m512 px = _mm512_set1_ps(particles.x[pid]);\n                   __m512 py = _mm512_set1_ps(particles.y[pid]);\n                   __m512 pz = _mm512_set1_ps(particles.z[pid]);\n\n                   // \u5904\u7406\u90bb\u5c45\uff08\u5df2\u5bf9\u9f50\u523016\u7684\u500d\u6570\uff09\n                   int neighbor_count = neighbor_lists[pid].size();\n                   for (int k = 0; k &lt; neighbor_count; k += 16) {\n                       // \u52a0\u8f7d16\u4e2a\u90bb\u5c45\n                       __m512i indices = _mm512_load_epi32(&amp;neighbor_lists[pid][k]);\n\n                       // Gather\u90bb\u5c45\u4f4d\u7f6e\n                       __m512 qx = _mm512_i32gather_ps(indices, particles.x, 4);\n                       __m512 qy = _mm512_i32gather_ps(indices, particles.y, 4);\n                       __m512 qz = _mm512_i32gather_ps(indices, particles.z, 4);\n\n                       // \u8ba1\u7b97\u6838\u51fd\u6570\u503c\n                       __m512 dx = _mm512_sub_ps(px, qx);\n                       __m512 dy = _mm512_sub_ps(py, qy);\n                       __m512 dz = _mm512_sub_ps(pz, qz);\n\n                       __m512 r2 = _mm512_fmadd_ps(dx, dx,\n                                   _mm512_fmadd_ps(dy, dy,\n                                   _mm512_mul_ps(dz, dz)));\n\n                       // W = (h\u00b2 - r\u00b2)\u00b3\uff08\u7b80\u5316\u7684poly6\u6838\uff09\n                       __m512 h2 = _mm512_set1_ps(h * h);\n                       __m512 diff = _mm512_sub_ps(h2, r2);\n                       __m512 diff2 = _mm512_mul_ps(diff, diff);\n                       __m512 w = _mm512_mul_ps(diff2, diff);\n\n                       // \u7d2f\u52a0\u5bc6\u5ea6\u8d21\u732e\n                       density_sum = _mm512_fmadd_ps(factor, w, density_sum);\n                   }\n               }\n\n               // \u6c34\u5e73\u5f52\u7ea6\u5e76\u5b58\u50a8\n               _mm512_store_ps(&amp;particles.density[i], density_sum);\n           }\n       }\n\n       // \u5411\u91cf\u5316\u7684\u538b\u529b\u8ba1\u7b97\n       void compute_forces_simd() {\n           #pragma omp parallel for schedule(dynamic, 16)\n           for (int i = 0; i &lt; particle_count; i++) {\n               __m512 fx = _mm512_setzero_ps();\n               __m512 fy = _mm512_setzero_ps(); \n               __m512 fz = _mm512_setzero_ps();\n\n               __m512 pi = _mm512_set1_ps(particles.pressure[i]);\n               __m512 di = _mm512_set1_ps(particles.density[i]);\n\n               // \u5904\u7406\u6240\u6709\u90bb\u5c45\n               process_neighbors_forces_simd(i, fx, fy, fz, pi, di);\n\n               // \u5f52\u7ea6\u529b\u5230\u6807\u91cf\n               particles.fx[i] = _mm512_reduce_add_ps(fx);\n               particles.fy[i] = _mm512_reduce_add_ps(fy);\n               particles.fz[i] = _mm512_reduce_add_ps(fz);\n           }\n       }\n   };\n   ```\n   </details>\n<ol start=\"8\">\n<li><strong>\u80fd\u8017\u611f\u77e5\u7684\u6027\u80fd\u4f18\u5316</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u80fd\u591f\u5728\u6027\u80fd\u548c\u80fd\u8017\u4e4b\u95f4\u81ea\u52a8\u5e73\u8861\u7684\u7269\u7406\u5f15\u64ce\u8c03\u5ea6\u5668\u3002</li>\n</ol>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u63d0\u793a</summary>\n   \u8003\u8651DVFS\u3001\u4efb\u52a1\u8c03\u5ea6\u3001\u7cbe\u5ea6\u8c03\u6574\u3001\u786c\u4ef6\u7279\u6027\u3002\n   </details>\n<details markdown=\"block\">\n   <summary markdown=\"off\">\u7b54\u6848</summary>\n\n   ```cpp\n   class EnergyAwareScheduler {\n       // \u80fd\u8017\u6a21\u578b\n       struct PowerModel {\n           // \u52a8\u6001\u529f\u8017\uff1aP = C \u00d7 V\u00b2 \u00d7 f\n           float capacitance;\n           float voltage;\n           float frequency;\n\n           // \u9759\u6001\u529f\u8017\n           float static_power;\n\n           float compute_power() {\n               return capacitance * voltage * voltage * frequency + static_power;\n           }\n\n           // \u80fd\u6548\uff1aPerformance per Watt\n           float efficiency(float performance) {\n               return performance / compute_power();\n           }\n       };\n\n       // DVFS\u63a7\u5236\u5668\n       class DVFSController {\n           struct FrequencyLevel {\n               float frequency;\n               float voltage;\n               float performance_scale;\n           };\n\n           std::vector&lt;FrequencyLevel&gt; levels;\n           int current_level;\n\n           void adjust_frequency(float target_fps, float current_fps, float power_budget) {\n               // PID\u63a7\u5236\u5668\n               float error = target_fps - current_fps;\n               float power = measure_power();\n\n               if (power &gt; power_budget) {\n                   // \u8d85\u8fc7\u529f\u8017\u9884\u7b97\uff0c\u964d\u9891\n                   decrease_frequency();\n               } else if (error &gt; 0 &amp;&amp; power &lt; 0.9 * power_budget) {\n                   // \u6027\u80fd\u4e0d\u8db3\u4e14\u6709\u529f\u8017\u4f59\u91cf\uff0c\u5347\u9891\n                   increase_frequency();\n               }\n\n               // \u8003\u8651\u6e29\u5ea6\u9650\u5236\n               float temp = read_temperature();\n               if (temp &gt; THERMAL_LIMIT) {\n                   current_level = std::min(current_level, get_safe_level(temp));\n               }\n           }\n       };\n\n       // \u4efb\u52a1\u80fd\u6548\u8c03\u5ea6\n       class TaskScheduler {\n           struct Task {\n               std::function&lt;void()&gt; work;\n               float expected_time;\n               float expected_energy;\n               int preferred_core;  // \u5927\u6838/\u5c0f\u6838\u504f\u597d\n           };\n\n           // \u5927\u5c0f\u6838\u8c03\u5ea6\n           void schedule_heterogeneous(std::vector&lt;Task&gt;&amp; tasks) {\n               // \u6309\u80fd\u6548\u6bd4\u6392\u5e8f\n               std::sort(tasks.begin(), tasks.end(), \n                   [](const Task&amp; a, const Task&amp; b) {\n                       return a.expected_time / a.expected_energy &gt; \n                              b.expected_time / b.expected_energy;\n                   });\n\n               // \u80fd\u6548\u9ad8\u7684\u4efb\u52a1\u5206\u914d\u5230\u5c0f\u6838\n               for (auto&amp; task : tasks) {\n                   if (task.expected_energy &lt; ENERGY_THRESHOLD) {\n                       task.preferred_core = LITTLE_CORE;\n                   } else {\n                       task.preferred_core = BIG_CORE;\n                   }\n               }\n\n               // \u52a8\u6001\u8fc1\u79fb\n               monitor_and_migrate(tasks);\n           }\n\n           void monitor_and_migrate(std::vector&lt;Task&gt;&amp; tasks) {\n               for (auto&amp; task : tasks) {\n                   float actual_energy = measure_task_energy(task);\n\n                   // \u5982\u679c\u5b9e\u9645\u80fd\u8017\u4e0e\u9884\u671f\u5dee\u5f02\u5927\uff0c\u8fc1\u79fb\u5230\u5408\u9002\u7684\u6838\n                   if (std::abs(actual_energy - task.expected_energy) &gt; THRESHOLD) {\n                       migrate_task(task);\n                   }\n               }\n           }\n       };\n\n       // \u81ea\u9002\u5e94\u7cbe\u5ea6\u63a7\u5236\n       class AdaptivePrecision {\n           enum PrecisionLevel {\n               FP64,     // \u6700\u9ad8\u7cbe\u5ea6\uff0c\u6700\u9ad8\u80fd\u8017\n               FP32,     // \u6807\u51c6\u7cbe\u5ea6\n               FP16,     // \u534a\u7cbe\u5ea6\n               INT8      // \u91cf\u5316\uff0c\u6700\u4f4e\u80fd\u8017\n           };\n\n           PrecisionLevel select_precision(float error_tolerance, float power_budget) {\n               struct Config {\n                   PrecisionLevel level;\n                   float relative_power;\n                   float max_error;\n               };\n\n               Config configs[] = {\n                   {FP64, 1.0,   1e-15},\n                   {FP32, 0.5,   1e-7},\n                   {FP16, 0.25,  1e-3},\n                   {INT8, 0.1,   1e-2}\n               };\n\n               // \u9009\u62e9\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u6700\u4f4e\u80fd\u8017\u914d\u7f6e\n               for (auto&amp; config : configs) {\n                   if (config.max_error &lt;= error_tolerance &amp;&amp;\n                       config.relative_power &lt;= power_budget) {\n                       return config.level;\n                   }\n               }\n\n               return FP32;  // \u9ed8\u8ba4\n           }\n       };\n\n       // \u80fd\u8017\u611f\u77e5\u7684\u8d1f\u8f7d\u5747\u8861\n       class PowerAwareLoadBalancer {\n           void balance_with_power_constraint(float total_power_budget) {\n               int num_gpus = get_gpu_count();\n               std::vector&lt;float&gt; gpu_powers(num_gpus);\n               std::vector&lt;float&gt; gpu_performances(num_gpus);\n\n               // \u6d4b\u91cf\u6bcf\u4e2aGPU\u7684\u529f\u8017\u548c\u6027\u80fd\n               for (int i = 0; i &lt; num_gpus; i++) {\n                   gpu_powers[i] = measure_gpu_power(i);\n                   gpu_performances[i] = measure_gpu_performance(i);\n               }\n\n               // \u4f18\u5316\u95ee\u9898\uff1a\u6700\u5927\u5316\u603b\u6027\u80fd\uff0c\u7ea6\u675f\u603b\u529f\u8017\n               // maximize: \u03a3 performance[i] \u00d7 active[i]\n               // subject to: \u03a3 power[i] \u00d7 active[i] \u2264 power_budget\n\n               // \u8d2a\u5fc3\u7b97\u6cd5\uff1a\u6309\u6027\u80fd\u529f\u8017\u6bd4\u6392\u5e8f\n               std::vector&lt;int&gt; indices(num_gpus);\n               std::iota(indices.begin(), indices.end(), 0);\n\n               std::sort(indices.begin(), indices.end(),\n                   [&amp;](int a, int b) {\n                       return gpu_performances[a] / gpu_powers[a] &gt;\n                              gpu_performances[b] / gpu_powers[b];\n                   });\n\n               // \u9009\u62e9GPU\u76f4\u5230\u8fbe\u5230\u529f\u8017\u9884\u7b97\n               float used_power = 0;\n               std::vector&lt;bool&gt; active(num_gpus, false);\n\n               for (int idx : indices) {\n                   if (used_power + gpu_powers[idx] &lt;= total_power_budget) {\n                       active[idx] = true;\n                       used_power += gpu_powers[idx];\n                   }\n               }\n\n               // \u91cd\u65b0\u5206\u914d\u5de5\u4f5c\u8d1f\u8f7d\n               redistribute_work(active);\n           }\n       };\n\n       // \u4e3b\u8c03\u5ea6\u5faa\u73af\n       void energy_aware_schedule() {\n           while (running) {\n               // \u8bfb\u53d6\u7cfb\u7edf\u72b6\u6001\n               SystemState state = read_system_state();\n\n               // \u9884\u6d4b\u4e0b\u4e00\u5e27\u7684\u8ba1\u7b97\u9700\u6c42\n               WorkloadPrediction prediction = predict_workload();\n\n               // \u4f18\u5316\u80fd\u6548\n               OptimalConfig config = optimize_energy_efficiency(\n                   state, prediction, constraints);\n\n               // \u5e94\u7528\u914d\u7f6e\n               apply_configuration(config);\n\n               // \u6267\u884c\u4eff\u771f\u6b65\n               execute_simulation_step();\n\n               // \u8bb0\u5f55\u80fd\u8017\u6570\u636e\u7528\u4e8efuture\u4f18\u5316\n               record_energy_metrics();\n           }\n       }\n   };\n   ```\n   </details>\n<h2 id=\"_6\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<ol>\n<li>\n<p><strong>\u4f2a\u5171\u4eab</strong>\uff1a\u591a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u7f13\u5b58\u884c\u7684\u4e0d\u540c\u6570\u636e\u5bfc\u81f4\u6027\u80fd\u4e25\u91cd\u4e0b\u964d\u3002\u4f7f\u7528padding\u6216__cacheline_aligned\u907f\u514d\u3002</p>\n</li>\n<li>\n<p><strong>\u5185\u5b58\u5e26\u5bbd\u9971\u548c</strong>\uff1a\u76f2\u76ee\u589e\u52a0\u7ebf\u7a0b\u6570\u4e0d\u4e00\u5b9a\u63d0\u5347\u6027\u80fd\uff0c\u8981\u8003\u8651\u5185\u5b58\u5e26\u5bbd\u9650\u5236\u3002</p>\n</li>\n<li>\n<p><strong>GPU\u5360\u7528\u7387\u9677\u9631</strong>\uff1a100%\u5360\u7528\u7387\u4e0d\u7b49\u4e8e\u6700\u4f73\u6027\u80fd\uff0c\u8981\u5e73\u8861\u5360\u7528\u7387\u548c\u5bc4\u5b58\u5668\u4f7f\u7528\u3002</p>\n</li>\n<li>\n<p><strong>\u5206\u652f\u53d1\u6563</strong>\uff1aGPU\u4e2d\u7684\u6761\u4ef6\u5206\u652f\u4f1a\u5bfc\u81f4warp\u5185\u7ebf\u7a0b\u6267\u884c\u4e0d\u540c\u8def\u5f84\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002</p>\n</li>\n<li>\n<p><strong>\u539f\u5b50\u64cd\u4f5c\u7ade\u4e89</strong>\uff1a\u5927\u91cf\u7ebf\u7a0b\u7ade\u4e89\u540c\u4e00\u539f\u5b50\u53d8\u91cf\u4f1a\u9020\u6210\u4e32\u884c\u5316\uff0c\u8003\u8651\u4f7f\u7528\u5f52\u7ea6\u6811\u3002</p>\n</li>\n<li>\n<p><strong>NUMA\u8fdc\u7a0b\u8bbf\u95ee</strong>\uff1a\u672a\u8003\u8651NUMA\u62d3\u6251\u7684\u5185\u5b58\u5206\u914d\u4f1a\u5bfc\u81f4\u8fdc\u7a0b\u8bbf\u95ee\uff0c\u6027\u80fd\u4e0b\u964d50%\u4ee5\u4e0a\u3002</p>\n</li>\n<li>\n<p><strong>\u8fc7\u5ea6\u4f18\u5316</strong>\uff1a\u4e0d\u8981\u4f18\u5316\u975e\u70ed\u70b9\u4ee3\u7801\uff0c\u5148profile\u518d\u4f18\u5316\u3002</p>\n</li>\n<li>\n<p><strong>\u7f13\u5b58\u6296\u52a8</strong>\uff1a\u5de5\u4f5c\u96c6\u7565\u5927\u4e8e\u7f13\u5b58\u5bb9\u91cf\u65f6\u6027\u80fd\u65ad\u5d16\u5f0f\u4e0b\u8dcc\uff0c\u8003\u8651\u5206\u5757\u6216\u6d41\u5f0f\u5904\u7406\u3002</p>\n</li>\n</ol>\n<h2 id=\"_7\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_8\">\u8bbe\u8ba1\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u8bc6\u522b\u8ba1\u7b97\u5bc6\u96c6vs\u5185\u5b58\u5bc6\u96c6\u7684\u90e8\u5206</li>\n<li>[ ] \u9009\u62e9\u5408\u9002\u7684\u5e76\u884c\u7c92\u5ea6</li>\n<li>[ ] \u8bbe\u8ba1\u7f13\u5b58\u53cb\u597d\u7684\u6570\u636e\u7ed3\u6784</li>\n<li>[ ] \u8003\u8651NUMA\u548cGPU\u5185\u5b58\u5c42\u6b21</li>\n<li>[ ] \u9884\u4f30\u901a\u4fe1\u5f00\u9500</li>\n</ul>\n<h3 id=\"_9\">\u5b9e\u73b0\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u6570\u636e\u5bf9\u9f50\u5230\u7f13\u5b58\u884c\u8fb9\u754c</li>\n<li>[ ] \u4f7f\u7528SoA\u5e03\u5c40\u63d0\u9ad8\u5411\u91cf\u5316\u6548\u7387</li>\n<li>[ ] \u907f\u514dfalse sharing</li>\n<li>[ ] \u6700\u5c0f\u5316\u540c\u6b65\u70b9</li>\n<li>[ ] \u5408\u5e76\u5185\u5b58\u8bbf\u95ee\uff08GPU\uff09</li>\n</ul>\n<h3 id=\"_10\">\u4f18\u5316\u9636\u6bb5</h3>\n<ul>\n<li>[ ] Profile\u8bc6\u522b\u771f\u6b63\u7684\u74f6\u9888</li>\n<li>[ ] \u6d4b\u91cf\u5e76\u4f18\u5316\u7f13\u5b58\u547d\u4e2d\u7387</li>\n<li>[ ] \u68c0\u67e5\u5411\u91cf\u5316\u6548\u7387</li>\n<li>[ ] \u9a8c\u8bc1\u8d1f\u8f7d\u5747\u8861</li>\n<li>[ ] \u76d1\u63a7\u529f\u8017\u548c\u6e29\u5ea6</li>\n</ul>\n<h3 id=\"_11\">\u8c03\u8bd5\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u4f7f\u7528\u5185\u5b58\u68c0\u67e5\u5de5\u5177\uff08valgrind\u3001cuda-memcheck\uff09</li>\n<li>[ ] \u68c0\u67e5\u6570\u636e\u7ade\u4e89\uff08ThreadSanitizer\uff09</li>\n<li>[ ] \u9a8c\u8bc1\u6570\u503c\u7cbe\u5ea6</li>\n<li>[ ] \u6d4b\u8bd5\u6781\u7aef\u60c5\u51b5\uff08\u7a7a\u6570\u636e\u3001\u8d85\u5927\u89c4\u6a21\uff09</li>\n<li>[ ] \u68c0\u67e5\u5185\u5b58\u6cc4\u6f0f</li>\n</ul>\n<h3 id=\"_12\">\u90e8\u7f72\u9636\u6bb5</h3>\n<ul>\n<li>[ ] \u9488\u5bf9\u76ee\u6807\u786c\u4ef6\u8c03\u4f18</li>\n<li>[ ] \u8bbe\u7f6e\u5408\u7406\u7684\u9ed8\u8ba4\u53c2\u6570</li>\n<li>[ ] \u63d0\u4f9b\u6027\u80fd\u8c03\u8282\u9009\u9879</li>\n<li>[ ] \u8bb0\u5f55\u6027\u80fd\u7279\u5f81</li>\n<li>[ ] \u76d1\u63a7\u751f\u4ea7\u73af\u5883\u8868\u73b0</li>\n</ul>"
  },
  "../old.md": {
    "hash": "e6343f81b9182726fc312c302ceb9c01",
    "content": "<p>\u3010\u7b2c\u4e00\u8bb2\uff0c6\u67081\u65e5\u3011</p>\n<p>\u5bfc\u8bba</p>\n<p>\u2013 \u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b\u7b80\u4ecb</p>\n<p>\u2013 Taichi\uff08\u592a\u6781\uff09\u7f16\u7a0b\u8bed\u8a00\u7b80\u4ecb</p>\n<p>\u2013 Taichi\u7684\u81ea\u52a8\u5e76\u884c\u5316</p>\n<p>\u2013 Taichi\u7a0b\u5e8f\u7684\u8c03\u8bd5\u6280\u5de7</p>\n<p>\u2013 Taichi\u4e2d\u9762\u5411\u6570\u636e\u7684\u7f16\u7a0b\uff08Data-oriented programming, DOP\uff09</p>\n<p>\u2013 Taichi\u4e2d\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\uff08Object-oriented programming, OOP\uff09</p>\n<p>\u2013 Taichi\u4e2d\u7684\u5143\u7f16\u7a0b\uff08Metaprogramming, MP\uff09</p>\n<p>\u2013 \u8bfe\u7a0b\u4e0e\u4f5c\u4e1a\u5b89\u6392</p>\n<p>\uff08\u5f00\u653e\u4f5c\u4e1a0\uff1a\u7f16\u5199\u4f60\u81ea\u5df1\u7684\u4efb\u610fTaichi\u7a0b\u5e8f\uff09</p>\n<p>\u3010\u7b2c\u4e8c\u8bb2\uff0c6\u67088\u65e5\u3011</p>\n<p>\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09</p>\n<p>\u2013 \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\uff08Mass-spring systems\uff09\uff1a\u4f60\u7684\u7b2c\u4e00\u4e2a\u7269\u7406\u6a21\u62df\u5668</p>\n<p>\u2013 \u5e03\u6599\u6a21\u62df</p>\n<p>\u2013 \u663e\u5f0f\u4e0e\u9690\u5f0f\u65f6\u95f4\u79ef\u5206\u5668\uff08Explicit/implicit time integrators\uff09</p>\n<p>\u2013 \u5149\u6ed1\u7c92\u5b50\u6d41\u4f53\u52a8\u529b\u5b66\uff08Smoothed particle hydrodynamics\uff09\u4e0e\u57fa\u4e8e\u4f4d\u7f6e\u7684\u6d41\u4f53\uff08Position-based fluids\uff09</p>\n<p>\u2013 \u4f53\u7d20\u5316\uff08Voxelization\uff09: \u4ece\u4e09\u89d2\u7f51\u683c\u751f\u6210\u7c92\u5b50</p>\n<p>\u2013 \u5feb\u901f\u90bb\u5c45\u641c\u7d22\uff08Neighborhood search\uff09</p>\n<p>\u2013 \u521a\u4f53\u6a21\u62df\u7b80\u4ecb</p>\n<p>\u3010\u7b2c\u4e09\u8bb2\uff0c6\u670815\u65e5\u3011</p>\n<p>\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09</p>\n<p>\u2013 \u5f31\u5f62\u5f0fweak form\uff09\u4e0e\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143\u6a21\u62df\u5165\u95e8</p>\n<p>\u2013 \u57fa\u4e8e\u516d\u9762\u4f53\u7f51\u683c\uff08hexahedron grid\uff09\u7684\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143\u6a21\u62df</p>\n<p>\u2013 \u57fa\u4e8e\u56db\u9762\u4f53\u7f51\u683c\uff08tetrahedra mesh\uff09\u7684\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143\u6a21\u62df</p>\n<p>\u2013 \u8fb9\u754c\u6761\u4ef6\u5904\u7406</p>\n<p>\u2013 \u53ef\u9006\uff08invertible\uff09\u6709\u9650\u5143\u6cd5</p>\n<p>\u2013 \u9690\u5f0f\u6709\u9650\u5143\u6c42\u89e3\u5668\uff08Implicit FEM solvers\uff09</p>\n<p>\u2013 \u62d3\u6251\u4f18\u5316\uff08Topology optimization\uff09</p>\n<p>\u3010\u7b2c\u56db\u8bb2\uff0c6\u670822\u65e5\u3011</p>\n<p>\u6b27\u62c9\u89c6\u89d2\uff081\uff09</p>\n<p>\u2013 \u7a33\u5b9a\u6d41\u4f53\u4e0e\u534a\u62c9\u683c\u6717\u65e5\u8f93\u9001\uff08Stable fluids and Semi-Lagrangian advection\uff09</p>\n<p>\u2013 Chorin\u5f0f\u538b\u529b\u6295\u5f71\uff08Chorin-Style projection\uff09</p>\n<p>\u2013 Staggered\u7f51\u683c\u4e0e\u96f6\u7a7a\u95f4\uff08nullspaces\uff09</p>\n<p>\u2013 Krylov\u5b50\u7a7a\u95f4\u6c42\u89e3\u5668\uff08Krylov-subspace solvers\uff09</p>\n<p>\u2013 \u7528\u65e0\u77e9\u9635\uff08Matrix-free\uff09Krylov\u5b50\u7a7a\u95f4\u65b9\u6cd5\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\uff08Poisson equations\uff09</p>\n<p>\u2013 \u9884\u6761\u4ef6\uff08Preconditioning\uff09</p>\n<p>\u2013 \u51e0\u4f55\u4e0e\u4ee3\u6570\u591a\u91cd\u7f51\u683c\u65b9\u6cd5\uff08multigrid methods\uff09</p>\n<p>\u3010\u7b2c\u4e94\u8bb2\uff0c6\u670829\u65e5\u3011</p>\n<p>\u6b27\u62c9\u89c6\u89d2\uff082\uff09\u4e0e\u5927\u89c4\u6a21\u7269\u7406\u6548\u679c\u6e32\u67d3</p>\n<p>\u2013 \u9ad8\u7ea7\u8f93\u9001\u683c\u5f0f\uff08Advanced advection schemes\uff09</p>\n<p>\u2013 \u6709\u7b26\u53f7\u8ddd\u79bb\u573a\u4e0e\u7b49\u52bf\u9762\uff08Signed-distance fields, level sets\uff09</p>\n<p>\u2013 \u7528\u7b49\u52bf\u9762\u65b9\u6cd5\u5b9e\u73b0\u81ea\u7531\u8868\u9762\uff08Free-surface\uff09\u8ffd\u8e2a\uff08tracking\uff09</p>\n<p>\u2013 \u81ea\u7531\u8868\u9762\u4e0e\u9ad8\u9636\u8fb9\u754c\u6761\u4ef6\u5904\u7406</p>\n<p>\u2013 \u8def\u5f84\u8ffd\u8e2a\uff08Path tracing\uff09\u4e0e\u7403\u9762\u8ffd\u8e2a\uff08Sphere tracing\uff09</p>\n<p>\u2013 \u8fd0\u52a8\u6a21\u7cca\uff08Motion blur\uff09</p>\n<p>\u2013 \u884c\u519b\u7acb\u65b9\u4f53\uff08Marching cubes\uff09\u8868\u9762\u91cd\u5efa</p>\n<p>\u2013 \u6570\u5b57\u5fae\u5206\u5206\u6790\u5668\uff08Digital differential analyzer\uff0cDDA\uff09</p>\n<p>\u2013 \u7528\u6570\u5b57\u5fae\u5206\u5206\u6790\u5668\u8fdb\u884c\u5149\u7ebf-\u7c92\u5b50\u6c42\u4ea4\uff08DDA ray-particle intersection\uff09</p>\n<p>\u2013 \u4f53\u7d20\u6e32\u67d3\uff08Voxel rendering\uff09</p>\n<p>\u2013 \u4f53\u79ef\u6e32\u67d3\uff08Volumetric rendering\uff09</p>\n<p>\uff08\u5f00\u653e\u4f5c\u4e1a1\uff1a\u6e32\u67d3\u4f60\u7684\u6a21\u62df\u7ed3\u679c\uff09</p>\n<p>7\u67086\u65e5\uff0c\u7a7a\u4e00\u5468\uff0c\u5b9e\u73b0\u5f00\u653e\u4f5c\u4e1a1</p>\n<p>7\u670811\u65e5\uff0c\u5f00\u653e\u4f5c\u4e1a1\u622a\u6b62\uff0c\u70b9\u8bc4</p>\n<p>\u3010\u7b2c\u516d\u8bb2\uff0c7\u670813\u65e5\u3011</p>\n<p>\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09</p>\n<p>\u2013 \u5f00\u653e\u4f5c\u4e1a1\u70b9\u8bc4\uff0c\u516c\u5e03\u4f18\u79c0\u4ee3\u7801</p>\n<p>\u2013 \u7c92\u5b50-\u7f51\u683c\u4f20\u8f93\uff08Particle-grid transfers\uff09</p>\n<p>\u2013 \u7c92\u5b50\u5143\u80de\u6cd5\uff08Particle-in-Cell, PIC\uff09</p>\n<p>\u2013 \u6d41\u4f53\u9690\u7c92\u5b50\uff08Fluid Implicit Particles, FLIP\uff09</p>\n<p>\u2013 \u4eff\u5c04\u7c92\u5b50\u5143\u80de\u6cd5Affine Particle-in-Cell, APIC\uff09</p>\n<p>\u2013 \u7528FLIP\u4e0eAPIC\u8fdb\u884c\u6d41\u4f53\u6a21\u62df</p>\n<p>\uff08\u5f00\u653e\u4f5c\u4e1a2\u5f00\u59cb\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f00\u653e\u4f5c\u4e1a1\u7684\u4ee3\u7801\uff0c\u81ea\u7531\u5b9e\u73b0\u4e00\u4e2a\u7269\u7406\u5f15\u64ce\uff0c\u5e76\u5b8c\u6210\u6e32\u67d3\uff09</p>\n<p>\u3010\u7b2c\u4e03\u8bb2\uff0c7\u670820\u65e5\u3011</p>\n<p>\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09</p>\n<p>\u2013 \u7269\u8d28\u70b9\u6cd5\uff08Material Point Method, MPM\uff09\u57fa\u7840</p>\n<p>\u2013 \u672c\u6784\u6a21\u578b\uff08Constitutive models\uff09</p>\n<p>\u2013 \u79fb\u52a8\u6700\u5c0f\u4e8c\u4e58\u7269\u8d28\u70b9\u6cd5\uff08Moving Least Squares MPM, MLS-MPM\uff09</p>\n<p>\u2013 \u7269\u8d28\u70b9\u6cd5\u4e2d\u7684\u62c9\u683c\u6717\u65e5\u529b\uff08Lagrangian forces in MPM\uff09</p>\n<p>\u2013 MPM\u4e2d\u7684\u6570\u503c\u65ad\u88c2\uff08numeric fracture\uff09\u4e0e\u8fde\u7eed\u4ecb\u8d28\u4f24\u5bb3\u529b\u5b66\uff08Continuum Damage Mechanics, CDM\uff09</p>\n<p>\u3010\u7b2c\u516b\u8bb2\uff0c7\u670827\u65e5\u3011</p>\n<p>\u9ad8\u6027\u80fd\u8ba1\u7b97\u4e0e\u7269\u7406\u5f15\u64ce</p>\n<p>\u2013 \u73b0\u4ee3\u5904\u7406\u5668\u5fae\u7ed3\u6784\uff08processor microarchitectures\uff09</p>\n<p>\u2013 \u5185\u5b58\u5c42\u7ea7\uff08memory hierarchy\uff09</p>\n<p>\u2013 \u5355\u7ebf\u7a0b\u6027\u80fd\u8c03\u4f18</p>\n<p>\u2013 \u5e76\u884c\u7f16\u7a0b\u4e0e\u6027\u80fd\u8c03\u4f18</p>\n<p>\u2013 \u9ad8\u6027\u80fdGPU\u7f16\u7a0b</p>\n<p>\u2013 MPM\u7684\u6027\u80fd\u4f18\u5316</p>\n<p>\u3010\u7b2c\u4e5d\u8bb2\uff0c8\u67083\u65e5\u3011</p>\n<p>\u7269\u7406\u5f15\u64ce\u4e2d\u7684\u7a00\u758f\u6570\u636e\u7ed3\u6784\u4e0e\u53ef\u5fae\u7f16\u7a0b</p>\n<p>\u2013 \u7a00\u758f\u6570\u636e\u7ed3\u6784\u7b80\u4ecb</p>\n<p>\u2013 \u4f20\u7edf\u7a00\u758f\u6570\u636e\u6784\uff1aOpenVDB</p>\n<p>\u2013 \u7528\u7a00\u758f\u6570\u636e\u7ed3\u6784\u52a0\u901f\u7269\u8d28\u70b9\u6cd5\u7684\u6a21\u62df</p>\n<p>\u2013 \u7a00\u758f\u6570\u636e\u7ed3\u6784\u7684\u8c03\u4f18</p>\n<p>\u2013 \u53ef\u5fae\u7f16\u7a0b\u4e0e\u53ef\u5fae\u7269\u7406\u5f15\u64ce</p>\n<p>\u2013 \u5229\u7528\u53ef\u5fae\u7f16\u7a0b\u4ece\u52bf\u80fd\u8ba1\u7b97\u53d7\u529b</p>\n<p>\u2013 \u5229\u7528Checkpointing\u6280\u5de7\u8282\u7ea6\u5185\u5b58</p>\n<p>\u2013 \u5b9e\u4f8b\uff1a\u4f18\u5316\u8f6f\u4f53\u673a\u5668\u4eba\u63a7\u5236\u5668</p>\n<p>8\u670810\u65e5\u7a7a\u4e00\u6b21\uff0c\u5927\u5bb6\u5b8c\u5584\u81ea\u5df1\u7684\u7269\u7406\u5f15\u64ce\uff08\u5f00\u653e\u4f5c\u4e1a2\uff09\u3002</p>\n<p>8\u670815\u65e5\u5f00\u653e\u4f5c\u4e1a2 deadline\u3002</p>\n<p>\u3010\u7b2c\u5341\u8bb2\uff0c8\u670817\u65e5\u3011</p>\n<p>\u603b\u7ed3</p>\n<p>\u2013 \u8bfe\u7a0b\u56de\u987e</p>\n<p>\u2013 \u5f15\u64ce\u9879\u76ee\u6700\u7ec8\u70b9\u8bc4\u3001\u8bc4\u5956</p>\n<p>\u2013 \u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b\u4e2d\u7684\u672a\u89e3\u96be\u9898</p>"
  },
  "../index.md": {
    "hash": "4254ee2f4c34c6763e3061ab9c9883b8",
    "content": "<h1 id=\"_1\">\u9ad8\u7ea7\u7269\u7406\u5f15\u64ce\u5b9e\u6218\u6559\u7a0b</h1>\n<h2 id=\"_2\">\u8bfe\u7a0b\u7b80\u4ecb</h2>\n<p>\u672c\u6559\u7a0b\u65e8\u5728\u5e2e\u52a9\u8bfb\u8005\u6df1\u5165\u7406\u89e3\u73b0\u4ee3\u7269\u7406\u5f15\u64ce\u7684\u6838\u5fc3\u7b97\u6cd5\u4e0e\u5b9e\u73b0\u6280\u672f\u3002\u5185\u5bb9\u6db5\u76d6\u4ece\u57fa\u7840\u7684\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u5230\u524d\u6cbf\u7684\u7269\u8d28\u70b9\u6cd5(MPM)\uff0c\u4ece\u7406\u8bba\u63a8\u5bfc\u5230\u6027\u80fd\u4f18\u5316\uff0c\u4e3a\u8bfb\u8005\u63d0\u4f9b\u5b8c\u6574\u7684\u7269\u7406\u4eff\u771f\u77e5\u8bc6\u4f53\u7cfb\u3002</p>\n<h3 id=\"_3\">\u9884\u5907\u77e5\u8bc6</h3>\n<ul>\n<li>\u9ad8\u7b49\u6570\u5b66\uff08\u5fae\u79ef\u5206\u3001\u7ebf\u6027\u4ee3\u6570\uff09</li>\n<li>\u57fa\u7840\u7269\u7406\u5b66\uff08\u725b\u987f\u529b\u5b66\u3001\u8fde\u7eed\u4ecb\u8d28\u529b\u5b66\uff09</li>\n<li>\u7f16\u7a0b\u57fa\u7840\uff08Python\u6216\u4efb\u4e00\u7f16\u7a0b\u8bed\u8a00\uff09</li>\n</ul>\n<h3 id=\"_4\">\u5b66\u4e60\u76ee\u6807</h3>\n<ul>\n<li>\u638c\u63e1\u62c9\u683c\u6717\u65e5\u4e0e\u6b27\u62c9\u89c6\u89d2\u7684\u4eff\u771f\u65b9\u6cd5</li>\n<li>\u7406\u89e3\u6709\u9650\u5143\u3001\u6709\u9650\u5dee\u5206\u7b49\u6570\u503c\u65b9\u6cd5</li>\n<li>\u719f\u7ec3\u8fd0\u7528Taichi\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u7269\u7406\u4eff\u771f</li>\n<li>\u5177\u5907\u8bbe\u8ba1\u548c\u4f18\u5316\u7269\u7406\u5f15\u64ce\u7684\u80fd\u529b</li>\n</ul>\n<hr />\n<h2 id=\"_5\">\u7b2c\u4e00\u7ae0\uff1a\u5bfc\u8bba</h2>\n<h3 id=\"11\">1.1 \u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b\u7b80\u4ecb</h3>\n<ul>\n<li>1.1.1 <strong>\u7269\u7406\u5f15\u64ce\u7684\u5b9a\u4e49\u4e0e\u5e94\u7528\u9886\u57df</strong>\uff1a\u8ba1\u7b97\u673a\u8f6f\u4ef6\u63d0\u4f9b\u7269\u7406\u7cfb\u7edf\u8fd1\u4f3c\u4eff\u771f\uff0c\u5305\u62ec\u521a\u4f53\u52a8\u529b\u5b66\u3001\u8f6f\u4f53\u52a8\u529b\u5b66\u548c\u6d41\u4f53\u52a8\u529b\u5b66</li>\n<li>1.1.2 <strong>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u7684\u7269\u7406\u4eff\u771f</strong>\uff1a\u4ece\u5f71\u89c6\u7279\u6548(\u5982\u8fea\u58eb\u5c3c\u52a8\u753b)\u5230\u6e38\u620f\u5f15\u64ce(Angry Birds, Besieged)\u7684\u6f14\u8fdb\u5386\u7a0b</li>\n<li>1.1.3 <strong>\u5de5\u7a0bCAE\u4e0e\u6e38\u620f\u7269\u7406\u7684\u5dee\u5f02</strong>\uff1a\u7cbe\u5ea6\u8981\u6c42\u3001\u5b9e\u65f6\u6027\u7ea6\u675f\u3001\u7a33\u5b9a\u6027\u4e0e\u827a\u672f\u6548\u679c\u7684\u5e73\u8861</li>\n<li>1.1.4 <strong>\u5b9e\u65f6\u6027\u4e0e\u7cbe\u786e\u6027\u7684\u6743\u8861</strong>\uff1a\u65f6\u95f4\u6b65\u957f\u9009\u62e9\u3001\u7b80\u5316\u6a21\u578b\u3001LOD\u6280\u672f</li>\n</ul>\n<h3 id=\"12-taichi\">1.2 Taichi\u7f16\u7a0b\u8bed\u8a00\u7b80\u4ecb</h3>\n<ul>\n<li>1.2.1 <strong>\u5b89\u88c5\u4e0e\u73af\u5883\u914d\u7f6e</strong>\uff1a<code>pip install taichi</code>\uff0c\u652f\u6301Windows/Linux/OSX\uff0cCPU/GPU\u540e\u7aef\u9009\u62e9</li>\n<li>1.2.2 <strong>\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0e\u5f20\u91cf\u64cd\u4f5c</strong>\uff1ati.i32/f32/f64\uff0cti.var/Vector/Matrix\uff0cshape\u53c2\u6570\u5b9a\u4e49\u7ef4\u5ea6</li>\n<li>1.2.3 <strong>\u6838\u51fd\u6570(kernel)\u4e0e\u51fd\u6570(func)</strong>\uff1a@ti.kernel\u88c5\u9970\u5668\uff0c\u7c7b\u578b\u63d0\u793a\uff0c\u5f3a\u5236\u5185\u8054\uff0c\u7f16\u8bd1\u65f6\u4f18\u5316</li>\n<li>1.2.4 <strong>\u5e76\u884cfor\u5faa\u73af\u4e0e\u539f\u5b50\u64cd\u4f5c</strong>\uff1a\u81ea\u52a8\u5e76\u884c\u5316\uff0cti.atomic_add\uff0c\u907f\u514d\u7ade\u6001\u6761\u4ef6</li>\n</ul>\n<h3 id=\"13-taichi\">1.3 Taichi\u7684\u81ea\u52a8\u5e76\u884c\u5316</h3>\n<ul>\n<li>1.3.1 <strong>\u5e76\u884c\u8ba1\u7b97\u57fa\u7840\u6982\u5ff5</strong>\uff1a\u6570\u636e\u5e76\u884cvs\u4efb\u52a1\u5e76\u884c\uff0cSIMD/SIMT\u6267\u884c\u6a21\u578b</li>\n<li>1.3.2 <strong>Range-for\u4e0eStruct-for\u5faa\u73af</strong>\uff1ati.ndrange\u591a\u7ef4\u8fed\u4ee3\uff0c\u7a00\u758f\u5f20\u91cf\u904d\u5386\uff0c\u6700\u5916\u5c42\u4f5c\u7528\u57df\u81ea\u52a8\u5e76\u884c</li>\n<li>1.3.3 <strong>\u7ebf\u7a0b\u5b89\u5168\u4e0e\u7ade\u6001\u6761\u4ef6</strong>\uff1a\u539f\u5b50\u64cd\u4f5c\u4fdd\u8bc1\uff0c\u589e\u5f3a\u8d4b\u503c\u81ea\u52a8\u539f\u5b50\u5316(x[i] += 1)</li>\n<li>1.3.4 <strong>\u6027\u80fd\u5206\u6790\u4e0e\u8c03\u4f18\u57fa\u7840</strong>\uff1ati.profiler\uff0ckernel\u65f6\u95f4\u6d4b\u91cf\uff0c\u5185\u5b58\u5e26\u5bbd\u5206\u6790</li>\n</ul>\n<h3 id=\"14-taichi\">1.4 Taichi\u7a0b\u5e8f\u7684\u8c03\u8bd5\u6280\u5de7</h3>\n<ul>\n<li>1.4.1 <strong>\u8c03\u8bd5\u6a21\u5f0f\u4e0e\u8fb9\u754c\u68c0\u67e5</strong>\uff1ati.init(debug=True, arch=ti.cpu)\u542f\u7528\u8fb9\u754c\u68c0\u67e5\u5668</li>\n<li>1.4.2 <strong>\u6253\u5370\u8c03\u8bd5\u4e0e\u65ad\u8a00</strong>\uff1akernel\u5185print\u652f\u6301\uff0cassert\u8bed\u53e5\uff0c\u8fd0\u884c\u65f6\u9519\u8bef\u6355\u83b7</li>\n<li>1.4.3 <strong>\u5e38\u89c1\u9519\u8bef\u4e0e\u89e3\u51b3\u65b9\u6848</strong>\uff1a\u8d8a\u754c\u8bbf\u95ee\u3001\u7c7b\u578b\u4e0d\u5339\u914d\u3001\u672a\u521d\u59cb\u5316\u53d8\u91cf</li>\n<li>1.4.4 <strong>\u6027\u80fd\u74f6\u9888\u8bc6\u522b</strong>\uff1a\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u5206\u6790\u3001\u6838\u51fd\u6570\u7c92\u5ea6\u8c03\u6574</li>\n</ul>\n<h3 id=\"15-dop\">1.5 \u9762\u5411\u6570\u636e\u7684\u7f16\u7a0b(DOP)</h3>\n<ul>\n<li>1.5.1 <strong>AoS vs SoA\u5e03\u5c40</strong>\uff1a\u7ed3\u6784\u6570\u7ec4vs\u6570\u7ec4\u7ed3\u6784\uff0c\u7f13\u5b58\u5c40\u90e8\u6027\u5f71\u54cd</li>\n<li>1.5.2 <strong>\u7f13\u5b58\u53cb\u597d\u7684\u6570\u636e\u7ec4\u7ec7</strong>\uff1a\u8fde\u7eed\u5185\u5b58\u8bbf\u95ee\uff0c\u907f\u514d\u8de8\u6b65\u8bbf\u95ee</li>\n<li>1.5.3 <strong>\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u4f18\u5316</strong>\uff1a\u5408\u5e76\u8bbf\u95ee\u3001\u9884\u53d6\u7b56\u7565</li>\n<li>1.5.4 <strong>\u5411\u91cf\u5316\u7f16\u7a0b\u6280\u5de7</strong>\uff1aSIMD\u6307\u4ee4\u5229\u7528\uff0c\u6570\u636e\u5bf9\u9f50</li>\n</ul>\n<h3 id=\"16-oop\">1.6 \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b(OOP)</h3>\n<ul>\n<li>1.6.1 <strong>Taichi\u4e2d\u7684\u7c7b\u4e0e\u88c5\u9970\u5668</strong>\uff1a@ti.data_oriented\u7c7b\u88c5\u9970\u5668\uff0c\u6210\u5458\u51fd\u6570kernel\u5316</li>\n<li>1.6.2 <strong>ODOP\u8bbe\u8ba1\u6a21\u5f0f</strong>\uff1aObjective Data-Oriented Programming\uff0c\u7ed3\u5408OOP\u4e0eDOP\u4f18\u52bf</li>\n<li>1.6.3 <strong>\u592a\u9633\u7cfb\u4eff\u771f\u6848\u4f8b</strong>\uff1a\u884c\u661f\u7c7b\u8bbe\u8ba1\uff0c\u5f15\u529b\u8ba1\u7b97\uff0c\u8f68\u9053\u79ef\u5206</li>\n<li>1.6.4 <strong>\u4ee3\u7801\u590d\u7528\u4e0e\u6a21\u5757\u5316</strong>\uff1a\u7c7b\u7ee7\u627f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u63a5\u53e3\u8bbe\u8ba1</li>\n</ul>\n<h3 id=\"17-mp\">1.7 \u5143\u7f16\u7a0b(MP)</h3>\n<ul>\n<li>1.7.1 <strong>\u6a21\u677f\u6838\u51fd\u6570</strong>\uff1a@ti.template()\u53c2\u6570\u5316kernel\uff0c\u7f16\u8bd1\u65f6\u5b9e\u4f8b\u5316</li>\n<li>1.7.2 <strong>\u7ef4\u5ea6\u65e0\u5173\u7f16\u7a0b</strong>\uff1ati.static(range(dim))\uff0c2D/3D\u4ee3\u7801\u7edf\u4e00</li>\n<li>1.7.3 <strong>\u7f16\u8bd1\u65f6\u5206\u652f\u4e0e\u5faa\u73af\u5c55\u5f00</strong>\uff1ati.static(if/for)\uff0c\u96f6\u5f00\u9500\u62bd\u8c61</li>\n<li>1.7.4 <strong>\u9759\u6001\u7c7b\u578b\u63a8\u5bfc</strong>\uff1a\u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5\uff0c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u89c4\u5219</li>\n</ul>\n<hr />\n<h2 id=\"1\">\u7b2c\u4e8c\u7ae0\uff1a\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09</h2>\n<h3 id=\"21\">2.1 \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf</h3>\n<ul>\n<li>2.1.1 <strong>\u80e1\u514b\u5b9a\u5f8b\u4e0e\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b</strong>\uff1af_ij = -k(||x_i - x_j|| - l_ij)(x_i - x_j)/||x_i - x_j||\uff0cdv_i/dt = f_i/m_i</li>\n<li>2.1.2 <strong>\u5f39\u7c27\u521a\u5ea6\u4e0e\u963b\u5c3c\u7cfb\u6570</strong>\uff1a\u521a\u5ea6k\u51b3\u5b9a\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\uff0c\u963b\u5c3c\u7cfb\u6570\u63a7\u5236\u80fd\u91cf\u8017\u6563\uff0c\u4e34\u754c\u963b\u5c3c\u03b6=1</li>\n<li>2.1.3 <strong>\u7cfb\u7edf\u7684\u80fd\u91cf\u5b88\u6052</strong>\uff1a\u52a8\u80fdT=\u00bdmv\u00b2\uff0c\u52bf\u80fdU=\u00bdkx\u00b2\uff0c\u6570\u503c\u79ef\u5206\u7684\u80fd\u91cf\u6f02\u79fb\u95ee\u9898</li>\n<li>2.1.4 <strong>\u591a\u8d28\u70b9\u7cfb\u7edf\u7684\u77e9\u9635\u8868\u793a</strong>\uff1a\u8d28\u91cf\u77e9\u9635M\uff0c\u521a\u5ea6\u77e9\u9635K\uff0c\u963b\u5c3c\u77e9\u9635C\uff0c\u72b6\u6001\u7a7a\u95f4\u5f62\u5f0f</li>\n</ul>\n<h3 id=\"22\">2.2 \u5e03\u6599\u6a21\u62df</h3>\n<ul>\n<li>2.2.1 <strong>\u7ed3\u6784\u5f39\u7c27\u3001\u526a\u5207\u5f39\u7c27\u4e0e\u5f2f\u66f2\u5f39\u7c27</strong>\uff1a\u7ed3\u6784\u5f39\u7c27\u7ef4\u6301\u57fa\u672c\u5f62\u72b6\uff0c\u526a\u5207\u5f39\u7c27\u62b5\u6297\u526a\u5207\u53d8\u5f62\uff0c\u5f2f\u66f2\u5f39\u7c27\u6a21\u62df\u5f2f\u66f2\u521a\u5ea6</li>\n<li>2.2.2 <strong>\u5916\u529b</strong>\uff1a\u91cd\u529bmg\uff0c\u98ce\u529b\u57fa\u4e8e\u76f8\u5bf9\u901f\u5ea6\u548c\u6cd5\u5411\u91cf\uff0c\u78b0\u649e\u529b\u57fa\u4e8e\u7a7f\u900f\u6df1\u5ea6</li>\n<li>2.2.3 <strong>\u7ea6\u675f\u5904\u7406</strong>\uff1a\u56fa\u5b9a\u70b9\u8bbe\u7f6e\u901f\u5ea6\u4e3a0\uff0c\u6ed1\u52a8\u7ea6\u675f\u6295\u5f71\u901f\u5ea6\u5230\u5207\u5411\u91cf</li>\n<li>2.2.4 <strong>\u81ea\u78b0\u649e\u68c0\u6d4b\u4e0e\u54cd\u5e94</strong>\uff1a\u7a7a\u95f4\u54c8\u5e0c\u52a0\u901f\uff0c\u8fde\u7eed\u78b0\u649e\u68c0\u6d4b(CCD)\uff0c\u51b2\u91cf\u54cd\u5e94</li>\n</ul>\n<h3 id=\"23\">2.3 \u663e\u5f0f\u4e0e\u9690\u5f0f\u65f6\u95f4\u79ef\u5206\u5668</h3>\n<ul>\n<li>2.3.1 <strong>\u524d\u5411\u6b27\u62c9\u6cd5</strong>\uff1av_{t+1} = v_t + \u0394t\u00b7f_t/m\uff0cx_{t+1} = x_t + \u0394t\u00b7v_t\uff0c\u6761\u4ef6\u7a33\u5b9a\u0394t \u2264 c\u221a(m/k)</li>\n<li>2.3.2 <strong>\u8f9b\u6b27\u62c9\u6cd5</strong>\uff1av_{t+1} = v_t + \u0394t\u00b7f_t/m\uff0cx_{t+1} = x_t + \u0394t\u00b7v_{t+1}\uff0c\u4fdd\u6301\u76f8\u7a7a\u95f4\u4f53\u79ef</li>\n<li>2.3.3 <strong>\u540e\u5411\u6b27\u62c9\u6cd5</strong>\uff1av_{t+1} = v_t + \u0394t\u00b7f(x_{t+1})/m\uff0c\u9700\u8981\u6c42\u89e3\u975e\u7ebf\u6027\u7cfb\u7edf\uff0c\u65e0\u6761\u4ef6\u7a33\u5b9a</li>\n<li>2.3.4 <strong>\u4e2d\u70b9\u6cd5\u4e0eRK4</strong>\uff1a\u03b2=0\u663e\u5f0f\uff0c\u03b2=0.5\u4e2d\u70b9\u6cd5\uff0c\u03b2=1\u540e\u5411\u6b27\u62c9\uff0cRK4\u56db\u9636\u7cbe\u5ea6</li>\n</ul>\n<h3 id=\"24\">2.4 \u9690\u5f0f\u79ef\u5206\u7684\u7ebf\u6027\u5316\u4e0e\u6c42\u89e3</h3>\n<ul>\n<li>2.4.1 <strong>\u725b\u987f\u6cd5\u7ebf\u6027\u5316</strong>\uff1af(x_{t+1}) \u2248 f(x_t) + \u2202f/\u2202x\u00b7\u0394x\uff0c\u4e00\u6b65Newton\u8fed\u4ee3</li>\n<li>2.4.2 <strong>\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u6784\u5efa</strong>\uff1a[I - \u0394t\u00b2M\u207b\u00b9\u2202f/\u2202x]v_{t+1} = v_t + \u0394tM\u207b\u00b9f(x_t)</li>\n<li>2.4.3 <strong>Jacobi\u4e0eGauss-Seidel\u8fed\u4ee3</strong>\uff1aJacobi\u5e76\u884c\u53cb\u597d\uff0cG-S\u6536\u655b\u66f4\u5feb\uff0c\u677e\u5f1b\u56e0\u5b50\u03c9\u9009\u62e9</li>\n<li>2.4.4 <strong>\u5171\u8f6d\u68af\u5ea6\u6cd5\u7b80\u4ecb</strong>\uff1aKrylov\u5b50\u7a7a\u95f4\u65b9\u6cd5\uff0c\u9884\u6761\u4ef6\u52a0\u901f\u6536\u655b</li>\n</ul>\n<h3 id=\"25-sph\">2.5 \u5149\u6ed1\u7c92\u5b50\u6d41\u4f53\u52a8\u529b\u5b66(SPH)</h3>\n<ul>\n<li>2.5.1 <strong>\u6838\u51fd\u6570\u4e0e\u7c92\u5b50\u8fd1\u4f3c</strong>\uff1aA(x) = \u03a3_j A_j\u00b7m_j/\u03c1_j\u00b7W(||x-x_j||, h)\uff0cCubic Spline\u6838</li>\n<li>2.5.2 <strong>\u5bc6\u5ea6\u8ba1\u7b97\u4e0e\u72b6\u6001\u65b9\u7a0b</strong>\uff1a\u03c1_i = \u03a3_j m_j\u00b7W(||x_i-x_j||, h)\uff0cp = B((\u03c1/\u03c1_0)^\u03b3 - 1)</li>\n<li>2.5.3 <strong>\u538b\u529b\u68af\u5ea6\u4e0e\u7c98\u6027\u529b</strong>\uff1a\u2207p\u4f7f\u7528\u5bf9\u79f0\u5f62\u5f0f\u4fdd\u8bc1\u52a8\u91cf\u5b88\u6052\uff0c\u4eba\u5de5\u7c98\u6027\u7a33\u5b9a\u6570\u503c\u89e3</li>\n<li>2.5.4 <strong>\u8868\u9762\u5f20\u529b\u6a21\u578b</strong>\uff1a\u57fa\u4e8e\u989c\u8272\u573a\u68af\u5ea6\uff0cCSF\u65b9\u6cd5\uff0c\u8868\u9762\u6cd5\u5411\u91cf\u8ba1\u7b97</li>\n</ul>\n<h3 id=\"26-pbf\">2.6 \u57fa\u4e8e\u4f4d\u7f6e\u7684\u6d41\u4f53(PBF)</h3>\n<ul>\n<li>2.6.1 <strong>\u4f4d\u7f6e\u7ea6\u675f\u4e0e\u62c9\u683c\u6717\u65e5\u4e58\u5b50</strong>\uff1aC(x) = \u03c1/\u03c1_0 - 1 = 0\uff0c\u03bb\u901a\u8fc7Newton\u8fed\u4ee3\u6c42\u89e3</li>\n<li>2.6.2 <strong>\u4e0d\u53ef\u538b\u7f29\u6027\u7ea6\u675f</strong>\uff1a\u5bc6\u5ea6\u7ea6\u675f\u6295\u5f71\uff0c\u4f4d\u7f6e\u4fee\u6b63\u0394x = -\u03bb\u2207C</li>\n<li>2.6.3 <strong>\u4eba\u5de5\u538b\u529b\u4e0e\u6da1\u91cf\u8865\u507f</strong>\uff1as_corr\u9879\u9632\u6b62\u7c92\u5b50\u805a\u96c6\uff0c\u6da1\u91cf\u7ea6\u675f\u6062\u590d\u65cb\u8f6c\u8fd0\u52a8</li>\n<li>2.6.4 <strong>PCISPH\u4e0eDFSPH\u65b9\u6cd5</strong>\uff1a\u9884\u6d4b-\u6821\u6b63\u7b56\u7565\uff0c\u6563\u5ea6\u81ea\u7531\u6761\u4ef6\uff0c\u538b\u529b\u6c42\u89e3\u4f18\u5316</li>\n</ul>\n<h3 id=\"27\">2.7 \u4f53\u7d20\u5316\uff1a\u4ece\u4e09\u89d2\u7f51\u683c\u751f\u6210\u7c92\u5b50</h3>\n<ul>\n<li>2.7.1 <strong>\u70b9\u5728\u591a\u8fb9\u5f62\u5185\u6d4b\u8bd5</strong>\uff1a\u5c04\u7ebf\u6cd5\uff0c\u7ed5\u6570(winding number)\uff0c\u89d2\u5ea6\u548c\u65b9\u6cd5</li>\n<li>2.7.2 <strong>\u5c04\u7ebf-\u4e09\u89d2\u5f62\u76f8\u4ea4</strong>\uff1aM\u00f6ller-Trumbore\u7b97\u6cd5\uff0c\u91cd\u5fc3\u5750\u6807\u5224\u65ad</li>\n<li>2.7.3 <strong>\u6709\u7b26\u53f7\u8ddd\u79bb\u573a(SDF)</strong>\uff1a\u5185\u90e8\u8d1f\u503c\u5916\u90e8\u6b63\u503c\uff0c\u5feb\u901f\u884c\u8fdb\u6cd5(FMM)\u6784\u5efa</li>\n<li>2.7.4 <strong>\u81ea\u9002\u5e94\u91c7\u6837\u7b56\u7565</strong>\uff1a\u57fa\u4e8e\u66f2\u7387\u7684\u91c7\u6837\u5bc6\u5ea6\uff0c\u84dd\u566a\u58f0\u5206\u5e03\uff0cPoisson disk\u91c7\u6837</li>\n</ul>\n<h3 id=\"28\">2.8 \u5feb\u901f\u90bb\u5c45\u641c\u7d22</h3>\n<ul>\n<li>2.8.1 <strong>\u5747\u5300\u7f51\u683c\u6cd5</strong>\uff1aO(1)\u67e5\u8be2\u590d\u6742\u5ea6\uff0c\u7f51\u683c\u5927\u5c0f=\u652f\u6301\u534a\u5f84\uff0c\u591a\u91cd\u7f51\u683c\u5904\u7406\u4e0d\u540c\u5c3a\u5ea6</li>\n<li>2.8.2 <strong>\u7d27\u51d1\u54c8\u5e0c(Compact Hashing)</strong>\uff1aZ-index\u7a7a\u95f4\u54c8\u5e0c\uff0c\u5904\u7406\u7a00\u758f\u5206\u5e03\uff0c\u5185\u5b58\u6548\u7387</li>\n<li>2.8.3 <strong>Z-order\u4e0e\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf</strong>\uff1aMorton\u7f16\u7801\uff0c\u4fdd\u6301\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u7f13\u5b58\u53cb\u597d</li>\n<li>2.8.4 <strong>\u5e76\u884c\u90bb\u5c45\u641c\u7d22\u7b97\u6cd5</strong>\uff1a\u539f\u5b50\u64cd\u4f5c\u6784\u5efa\uff0c\u907f\u514d\u7ade\u6001\uff0cGPU\u5b9e\u73b0\u4f18\u5316</li>\n</ul>\n<h3 id=\"29\">2.9 \u521a\u4f53\u6a21\u62df\u7b80\u4ecb</h3>\n<ul>\n<li>2.9.1 <strong>\u521a\u4f53\u8fd0\u52a8\u5b66</strong>\uff1a\u4f4d\u7f6ex\uff0c\u56db\u5143\u6570\u59ff\u6001q\uff0c\u89d2\u901f\u5ea6\u03c9\uff0c\u901f\u5ea6\u626d\u66f2(twist)\u8868\u793a</li>\n<li>2.9.2 <strong>\u521a\u4f53\u52a8\u529b\u5b66</strong>\uff1a\u529bF=ma\uff0c\u529b\u77e9\u03c4=I\u03b1\uff0c\u60ef\u6027\u5f20\u91cfI\uff0cEuler\u65b9\u7a0b</li>\n<li>2.9.3 <strong>\u78b0\u649e\u68c0\u6d4b</strong>\uff1aGJK\u8ddd\u79bb\u67e5\u8be2\uff0cSAT\u5206\u79bb\u8f74\u5b9a\u7406\uff0c\u5bbd\u76f8\u4f4d\u4e0e\u7a84\u76f8\u4f4d</li>\n<li>2.9.4 <strong>\u78b0\u649e\u54cd\u5e94</strong>\uff1a\u51b2\u91cfJ\u8ba1\u7b97\uff0c\u6062\u590d\u7cfb\u6570e\uff0c\u6469\u64e6\u9525\u7ea6\u675f\uff0cLCP\u6c42\u89e3</li>\n</ul>\n<hr />\n<h2 id=\"2\">\u7b2c\u4e09\u7ae0\uff1a\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09\uff1a\u6709\u9650\u5143\u4eff\u771f</h2>\n<h3 id=\"31\">3.1 \u5f31\u5f62\u5f0f\u4e0e\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143\u5165\u95e8</h3>\n<ul>\n<li>3.1.1 <strong>\u5f3a\u5f62\u5f0fvs\u5f31\u5f62\u5f0f</strong>\uff1a\u2207\u00b7\u2207u = 0 \u27fa \u2200w, \u222b\u222b w(\u2207\u00b7\u2207u)dA = 0\uff0c\u5c06PDE\u8f6c\u6362\u4e3a\u79ef\u5206\u5f62\u5f0f</li>\n<li>3.1.2 <strong>\u5206\u90e8\u79ef\u5206\u4e0e\u6563\u5ea6\u5b9a\u7406</strong>\uff1a\u2207w\u00b7\u2207u + w\u2207\u00b7\u2207u = \u2207\u00b7(w\u2207u)\uff0c\u5229\u7528\u6563\u5ea6\u5b9a\u7406\u222b\u222b \u2207\u00b7(w\u2207u)dA = \u222e w\u2207u\u00b7dn</li>\n<li>3.1.3 <strong>Galerkin\u65b9\u6cd5</strong>\uff1aFEM\u5c5e\u4e8eGalerkin\u65b9\u6cd5\u65cf\uff0c\u4f7f\u7528\u6d4b\u8bd5\u51fd\u6570\u5c06\u8fde\u7eedPDE\u79bb\u6563\u4e3a\u7ebf\u6027\u7cfb\u7edf</li>\n<li>3.1.4 <strong>\u8bd5\u51fd\u6570\u4e0e\u6d4b\u8bd5\u51fd\u6570</strong>\uff1a\u4f7f\u7528\u5206\u7247\u7ebf\u6027\u57fa\u51fd\u6570\u03c6\u1d62(x)\u4f5c\u4e3a\u6d4b\u8bd5\u51fd\u6570\uff0cu(x) = \u03a3 u\u2c7c\u03c6\u2c7c(x)</li>\n</ul>\n<h3 id=\"32\">3.2 \u53d8\u5f62\u4e0e\u5f39\u6027\u57fa\u7840</h3>\n<ul>\n<li>3.2.1 <strong>\u53d8\u5f62\u68af\u5ea6\u5f20\u91cfF</strong>\uff1aF := \u2202x_deformed/\u2202x_rest\uff0c\u63cf\u8ff0\u5c40\u90e8\u53d8\u5f62\uff0c\u5177\u6709\u5e73\u79fb\u4e0d\u53d8\u6027</li>\n<li>3.2.2 <strong>\u683c\u6797\u5e94\u53d8\u4e0e\u67ef\u897f\u5e94\u53d8</strong>\uff1a\u4f53\u79ef\u6bd4J = det(F)\uff0c\u53f3\u67ef\u897f-\u683c\u6797\u5f20\u91cfC = F^T F</li>\n<li>3.2.3 <strong>\u5e94\u529b\u5f20\u91cf</strong>\uff1a\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529bP(F) = \u2202\u03c8/\u2202F\uff0c\u67ef\u897f\u5e94\u529b\u03c3\uff0c\u5173\u7cfb\u5f0f\u03c4 = PF^T\uff0c\u03c3 = J\u2080F^(-T)P</li>\n<li>3.2.4 <strong>\u672c\u6784\u5173\u7cfb\u4e0e\u6750\u6599\u53c2\u6570</strong>\uff1a\u6768\u6c0f\u6a21\u91cfE\uff0c\u6cca\u677e\u6bd4\u03bd\u2208[0, 0.5)\uff0cLam\u00e9\u53c2\u6570\u03bb\u548c\u03bc\uff0c\u8f6c\u6362\u516c\u5f0fK = E/[3(1-2\u03bd)]</li>\n</ul>\n<h3 id=\"33\">3.3 \u8d85\u5f39\u6027\u6750\u6599\u6a21\u578b</h3>\n<ul>\n<li>3.3.1 <strong>\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570</strong>\uff1a\u03c8 = \u03c8(F)\uff0c\u8d85\u5f39\u6027\u6750\u6599\u7684\u5e94\u529b-\u5e94\u53d8\u5173\u7cfb\u7531\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570\u5b9a\u4e49</li>\n<li>3.3.2 <strong>Neo-Hookean\u6a21\u578b</strong>\uff1a\u03c8(F) = \u03bc/2 \u03a3\u1d62[(F^T F)\u1d62\u1d62 - 1] - \u03bclog(J) + \u03bb/2 log\u00b2(J)\uff0cP(F) = \u03bc(F - F^(-T)) + \u03bblog(J)F^(-T)</li>\n<li>3.3.3 <strong>Corotated\u6a21\u578b</strong>\uff1a\u03c8(F) = \u03bc\u03a3\u1d62(\u03c3\u1d62 - 1)\u00b2 + \u03bb/2(J - 1)\u00b2\uff0c\u5176\u4e2d\u03c3\u1d62\u4e3aF\u7684\u5947\u5f02\u503c\uff0cP(F) = 2\u03bc(F - R) + \u03bb(J - 1)JF^(-T)</li>\n<li>3.3.4 <strong>Mooney-Rivlin\u6a21\u578b</strong>\uff1a\u7528\u4e8e\u6a61\u80f6\u7c7b\u6750\u6599\uff0c\u5305\u542b\u4e0d\u53d8\u91cfI\u2081\u548cI\u2082\u7684\u9ad8\u9636\u9879</li>\n</ul>\n<h3 id=\"34\">3.4 \u57fa\u4e8e\u516d\u9762\u4f53\u7f51\u683c\u7684\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143</h3>\n<ul>\n<li>3.4.1 <strong>\u7b49\u53c2\u5355\u5143\u4e0e\u5f62\u51fd\u6570</strong>\uff1ax_deformed = Fx_rest + p\uff0c\u7ebf\u6027\u5355\u5143\u5185F\u4e3a\u5e38\u6570\uff0c\u4f7f\u7528\u4e09\u7ebf\u6027\u5f62\u51fd\u6570</li>\n<li>3.4.2 <strong>\u6570\u503c\u79ef\u5206</strong>\uff1a\u9ad8\u65af\u6c42\u79ef\u8ba1\u7b97K\u1d62\u2c7c = \u222b\u222b \u2207\u03c6\u1d62\u00b7\u2207\u03c6\u2c7c dA\uff0c\u901a\u5e38\u4f7f\u75282\u00d72\u00d72\u9ad8\u65af\u79ef\u5206\u70b9</li>\n<li>3.4.3 <strong>\u5355\u5143\u521a\u5ea6\u77e9\u9635\u7ec4\u88c5</strong>\uff1a8\u00d78\u5355\u5143\u77e9\u9635\uff0c\u6bcf\u8282\u70b92\u4e2a\u81ea\u7531\u5ea6(2D)\u62163\u4e2a\u81ea\u7531\u5ea6(3D)</li>\n<li>3.4.4 <strong>\u8fb9\u754c\u6761\u4ef6\u5904\u7406</strong>\uff1aDirichlet\u8fb9\u754c\u76f4\u63a5\u8bbe\u7f6eu\u1d62 = f(x\u1d62)\uff0cNeumann\u8fb9\u754c\u4fee\u6539\u8f7d\u8377\u5411\u91cff</li>\n</ul>\n<h3 id=\"35\">3.5 \u57fa\u4e8e\u56db\u9762\u4f53\u7f51\u683c\u7684\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143</h3>\n<ul>\n<li>3.5.1 <strong>\u7ebf\u6027\u56db\u9762\u4f53\u5355\u5143</strong>\uff1aF = DB\uff0c\u5176\u4e2dB = [a_rest-c_rest, b_rest-c_rest]^(-1)\uff0cD = [a_deformed-c_deformed, b_deformed-c_deformed]</li>\n<li>3.5.2 <strong>\u5e38\u5e94\u53d8\u5047\u8bbe</strong>\uff1a\u56db\u9762\u4f53\u5185\u5e94\u53d8\u573a\u5747\u5300\uff0c\u9002\u5408\u5927\u53d8\u5f62\u4f46\u53ef\u80fd\u8fc7\u4e8e\u521a\u786c</li>\n<li>3.5.3 <strong>\u4f53\u79ef\u9501\u5b9a\u4e0e\u7f13\u89e3\u7b56\u7565</strong>\uff1a\u4e0d\u53ef\u538b\u7f29\u6750\u6599(\u03bd\u21920.5)\u65f6\u51fa\u73b0\uff0c\u4f7f\u7528\u6df7\u5408\u6709\u9650\u5143\u6216\u964d\u9636\u79ef\u5206\u7f13\u89e3</li>\n<li>3.5.4 <strong>\u7f51\u683c\u751f\u6210\u4e0e\u8d28\u91cf\u63a7\u5236</strong>\uff1aDelaunay\u4e09\u89d2\u5256\u5206\uff0c\u63a7\u5236\u6700\u5c0f\u89d2\u5ea6\u548c\u7eb5\u6a2a\u6bd4</li>\n</ul>\n<h3 id=\"36-invertible\">3.6 \u53ef\u9006(Invertible)\u6709\u9650\u5143</h3>\n<ul>\n<li>3.6.1 <strong>\u5355\u5143\u7ffb\u8f6c\u95ee\u9898</strong>\uff1a\u5f53det(F) \u2264 0\u65f6\u5355\u5143\u53d1\u751f\u7ffb\u8f6c\uff0c\u5bfc\u81f4\u6570\u503c\u4e0d\u7a33\u5b9a\u548c\u975e\u7269\u7406\u7ed3\u679c</li>\n<li>3.6.2 <strong>SVD\u5206\u89e3\u4e0e\u4fee\u590d</strong>\uff1aF = U\u03a3V^T\uff0c\u68c0\u6d4b\u5e76\u4fee\u6b63\u8d1f\u5947\u5f02\u503c\uff0c\u4fdd\u8bc1det(U) = det(V) = 1</li>\n<li>3.6.3 <strong>\u80fd\u91cf\u52bf\u5792\u65b9\u6cd5</strong>\uff1a\u5728\u5e94\u53d8\u80fd\u4e2d\u6dfb\u52a0\u52bf\u5792\u9879\u9632\u6b62\u5355\u5143\u7ffb\u8f6c\uff0c\u786e\u4fddJ &gt; 0</li>\n<li>3.6.4 <strong>\u7a33\u5b9a\u6027\u4fdd\u8bc1</strong>\uff1a\u4f7f\u7528\u6295\u5f71\u65b9\u6cd5\u5c06\u53d8\u5f62\u68af\u5ea6\u7ea6\u675f\u5230\u53ef\u884c\u57df\u5185</li>\n</ul>\n<h3 id=\"37\">3.7 \u62d3\u6251\u4f18\u5316</h3>\n<ul>\n<li>3.7.1 <strong>\u6700\u5c0f\u67d4\u5ea6\u95ee\u9898</strong>\uff1amin L(\u03c1) = u^T K(\u03c1)u\uff0cs.t. K(\u03c1)u = f\uff0c\u03a3\u03c1\u2091 \u2264 cV\uff0c\u03c1\u2091 \u2208 [\u03c1\u2098\u1d62\u2099, 1]</li>\n<li>3.7.2 <strong>SIMP\u65b9\u6cd5</strong>\uff1a\u56fa\u4f53\u5404\u5411\u540c\u6027\u6750\u6599\u60e9\u7f5a(Solid Isotropic Material with Penalization)\uff0cE(\u03c1) = \u03c1^p E\u2080</li>\n<li>3.7.3 <strong>\u654f\u611f\u5ea6\u5206\u6790</strong>\uff1a\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u5bf9\u8bbe\u8ba1\u53d8\u91cf\u7684\u68af\u5ea6\uff0c\u2202L/\u2202\u03c1\u2091 = -u^T \u2202K/\u2202\u03c1\u2091 u</li>\n<li>3.7.4 <strong>\u4f18\u5316\u51c6\u5219\u6cd5(OC)</strong>\uff1a\u57fa\u4e8e\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u7684\u8fed\u4ee3\u66f4\u65b0\uff0c\u03c1\u2091^(new) = max(\u03c1\u2098\u1d62\u2099, min(1, \u03c1\u2091B_e^\u03b7))</li>\n</ul>\n<h3 id=\"38-taichi1\">3.8 \u9ad8\u7ea7Taichi\u7279\u6027\uff081\uff09</h3>\n<ul>\n<li>3.8.1 <strong>\u53ef\u5fae\u7f16\u7a0b\u57fa\u7840</strong>\uff1a@ti.data_oriented\u7c7b\u88c5\u9970\u5668\uff0c\u4f7f\u7528ODOP\u6a21\u5f0f\u7ed3\u5408OOP\u548cDOP</li>\n<li>3.8.2 <strong>\u81ea\u52a8\u5fae\u5206</strong>\uff1a\u524d\u5411\u4e0e\u53cd\u5411\u6a21\u5f0f\uff0cti.template()\u53c2\u6570\u5316kernel\uff0c\u652f\u6301\u7f16\u8bd1\u65f6\u5b9e\u4f8b\u5316</li>\n<li>3.8.3 <strong>\u68af\u5ea6\u8ba1\u7b97\u4e0e\u4f18\u5316</strong>\uff1aneeds_grad=True\u58f0\u660e\u68af\u5ea6\u5f20\u91cf\uff0c\u4f7f\u7528ti.Tape(loss)\u8ba1\u7b97\u68af\u5ea6</li>\n<li>3.8.4 <strong>\u7269\u7406\u8fc7\u7a0b\u7684\u7aef\u5230\u7aef\u4f18\u5316</strong>\uff1aforces F\u1d62 = -\u2202U(x)/\u2202x\u1d62\uff0c\u5229\u7528AutoDiff\u907f\u514d\u624b\u52a8\u6c42\u5bfc</li>\n</ul>\n<hr />\n<h2 id=\"1_1\">\u7b2c\u56db\u7ae0\uff1a\u6b27\u62c9\u89c6\u89d2\uff081\uff09</h2>\n<h3 id=\"41-vs\">4.1 \u6b27\u62c9vs\u62c9\u683c\u6717\u65e5\u63cf\u8ff0</h3>\n<ul>\n<li>4.1.1 <strong>\u7269\u8d28\u5bfc\u6570\u4e0e\u5bf9\u6d41\u9879</strong>\uff1aD/Dt := \u2202/\u2202t + u\u00b7\u2207\uff0c\u6b27\u62c9\u89c6\u89d2\u7684\u7269\u8d28\u5bfc\u6570\u5305\u542b\u5bf9\u6d41\u9879u\u00b7\u2207</li>\n<li>4.1.2 <strong>\u4e0d\u53ef\u538bNavier-Stokes\u65b9\u7a0b</strong>\uff1a\u03c1Du/Dt = -\u2207p + \u03bc\u2207\u00b2u + \u03c1g\uff0c\u2207\u00b7u = 0\uff0cv = \u03bc/\u03c1\u4e3a\u8fd0\u52a8\u7c98\u5ea6</li>\n<li>4.1.3 <strong>\u7b97\u5b50\u5206\u88c2\u65b9\u6cd5</strong>\uff1a\u5c06N-S\u65b9\u7a0b\u5206\u89e3\u4e3a\u5bf9\u6d41\u3001\u5916\u529b\u3001\u6295\u5f71\u4e09\u4e2a\u6b65\u9aa4\u5206\u522b\u6c42\u89e3</li>\n<li>4.1.4 <strong>\u7a33\u5b9a\u6027\u4e0eCFL\u6761\u4ef6</strong>\uff1a\u663e\u5f0f\u65f6\u95f4\u79ef\u5206\u9700\u6ee1\u8db3CFL\u6761\u4ef6\u0394t \u2264 C\u0394x/|u|_max\uff0c\u786e\u4fdd\u6570\u503c\u7a33\u5b9a</li>\n</ul>\n<h3 id=\"42\">4.2 \u7f51\u683c\u7c7b\u578b\u4e0e\u79bb\u6563\u5316</h3>\n<ul>\n<li>4.2.1 <strong>\u540c\u4f4d\u7f51\u683cvs\u4ea4\u9519\u7f51\u683c(Staggered Grid)</strong>\uff1a\u540c\u4f4d\u7f51\u683c\u6240\u6709\u91cf\u5b58\u50a8\u5728\u7f51\u683c\u4e2d\u5fc3\uff0cMAC\u7f51\u683c\u901f\u5ea6\u5206\u91cf\u5b58\u50a8\u5728\u9762\u4e2d\u5fc3</li>\n<li>4.2.2 <strong>MAC\u7f51\u683c\u7684\u4f18\u52bf</strong>\uff1a\u81ea\u7136\u6ee1\u8db3\u6563\u5ea6\u81ea\u7531\u6761\u4ef6\uff0c\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u66f4\u7b80\u5355\uff0c\u907f\u514d\u6570\u503c\u632f\u8361</li>\n<li>4.2.3 <strong>\u53cc\u7ebf\u6027\u63d2\u503c</strong>\uff1a\u56db\u4e2a\u89d2\u70b9\u7684\u52a0\u6743\u5e73\u5747\uff0cf(x,y) = f\u2081\u2081(1-\u03b1)(1-\u03b2) + f\u2082\u2081\u03b1(1-\u03b2) + f\u2081\u2082(1-\u03b1)\u03b2 + f\u2082\u2082\u03b1\u03b2</li>\n<li>4.2.4 <strong>\u6563\u5ea6\u4e0e\u68af\u5ea6\u7b97\u5b50\u79bb\u6563</strong>\uff1a\u4e2d\u5fc3\u5dee\u5206(\u2207\u00b7u)\u1d62,\u2c7c = (u\u1d62\u208a\u2081,\u2c7c - u\u1d62,\u2c7c)/\u0394x + (v\u1d62,\u2c7c\u208a\u2081 - v\u1d62,\u2c7c)/\u0394y</li>\n</ul>\n<h3 id=\"43-semi-lagrangian-advection\">4.3 \u534a\u62c9\u683c\u6717\u65e5\u8f93\u9001(Semi-Lagrangian Advection)</h3>\n<ul>\n<li>4.3.1 <strong>\u53cd\u5411\u7c92\u5b50\u8ffd\u8e2a</strong>\uff1a\u4ece\u7f51\u683c\u70b9\u5411\u540e\u8ffd\u8e2a\u627e\u5230\u4e0a\u4e00\u65f6\u523b\u7684\u4f4d\u7f6e\uff0cx_prev = x - \u0394t\u00b7u(x)</li>\n<li>4.3.2 <strong>\u901f\u5ea6\u63d2\u503c\u7b56\u7565</strong>\uff1a\u4f7f\u7528RK2/RK3\u63d0\u9ad8\u7cbe\u5ea6\uff0cp_mid = p - 0.5\u0394t\u00b7velocity(p)\uff0cp_prev = p - \u0394t\u00b7velocity(p_mid)</li>\n<li>4.3.3 <strong>\u6570\u503c\u8017\u6563\u95ee\u9898</strong>\uff1a\u57fa\u672c\u534a\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u5177\u6709\u8f83\u5927\u7684\u6570\u503c\u7c98\u6027\uff0c\u9700\u8981\u9ad8\u9636\u65b9\u6cd5\u6539\u5584</li>\n<li>4.3.4 <strong>\u5355\u8c03\u6027\u4fdd\u6301</strong>\uff1a\u4f7f\u7528\u9650\u5236\u5668\u9632\u6b62\u975e\u7269\u7406\u7684\u8fc7\u51b2\u548c\u6b20\u51b2\uff0c\u4fdd\u6301\u6570\u503c\u7a33\u5b9a</li>\n</ul>\n<h3 id=\"44\">4.4 \u9ad8\u9636\u8f93\u9001\u683c\u5f0f</h3>\n<ul>\n<li>4.4.1 <strong>MacCormack\u65b9\u6cd5</strong>\uff1ax<em> = SL(x, \u0394t)\uff0cx</em><em> = SL(x</em>, -\u0394t)\uff0cx_final = x<em> + 0.5(x - x</em>*)\uff0c\u4e8c\u9636\u7cbe\u5ea6</li>\n<li>4.4.2 <strong>BFECC\u65b9\u6cd5</strong>\uff1a\u524d\u540e\u8bef\u5dee\u8865\u507f\u6821\u6b63(Back and Forth Error Compensation and Correction)\uff0c\u4f30\u8ba1\u8bef\u5dee\u5e76\u8865\u507f</li>\n<li>4.4.3 <strong>Runge-Kutta\u79ef\u5206</strong>\uff1aRK3: v\u2081=velocity(p)\uff0cv\u2082=velocity(p-0.5\u0394t\u00b7v\u2081)\uff0cv\u2083=velocity(p-0.75\u0394t\u00b7v\u2082)</li>\n<li>4.4.4 <strong>\u9650\u5236\u5668\u4e0e\u5939\u6301(Clamping)</strong>\uff1a\u9632\u6b62\u975e\u7269\u7406\u7684\u8fc7\u51b2\u503c\uff0c\u5bf9BFECC\u7ed3\u679c\u8fdb\u884c\u5939\u6301\u5230\u539f\u59cb\u503c\u8303\u56f4\u5185</li>\n</ul>\n<h3 id=\"45-chorin\">4.5 Chorin\u5f0f\u538b\u529b\u6295\u5f71</h3>\n<ul>\n<li>4.5.1 <strong>Helmholtz-Hodge\u5206\u89e3</strong>\uff1a\u4efb\u610f\u5411\u91cf\u573a\u53ef\u5206\u89e3\u4e3a\u65e0\u6563\u573a\u548c\u65e0\u65cb\u573a\u4e4b\u548c\uff0cu = u_div-free + \u2207\u03c6</li>\n<li>4.5.2 <strong>\u538b\u529b\u6cca\u677e\u65b9\u7a0b\u63a8\u5bfc</strong>\uff1a\u2207\u00b7u^(n+1) = 0 \u21d2 \u2207\u00b7(u<em> - \u0394t/\u03c1 \u2207p) = 0 \u21d2 \u2207\u00b2p = \u03c1/\u0394t \u2207\u00b7u</em></li>\n<li>4.5.3 <strong>\u79bb\u6563\u5316\u4e0e\u8fb9\u754c\u6761\u4ef6</strong>\uff1a5\u70b9Laplace\u6a21\u677f[-4 1; 1 -4 1; 1 -4]\uff0cDirichlet\u548cNeumann\u8fb9\u754c\u6761\u4ef6</li>\n<li>4.5.4 <strong>\u901f\u5ea6\u4fee\u6b63\u6b65</strong>\uff1au^(n+1) = u* - \u0394t/\u03c1 \u2207p\uff0c\u786e\u4fdd\u901f\u5ea6\u573a\u6ee1\u8db3\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6</li>\n</ul>\n<h3 id=\"46\">4.6 \u56fa\u4f53\u8fb9\u754c\u6761\u4ef6</h3>\n<ul>\n<li>4.6.1 <strong>\u65e0\u6ed1\u79fb\u6761\u4ef6</strong>\uff1av\u00b7n = 0\uff0cv\u00b7t = 0\uff0c\u6d41\u4f53\u5728\u58c1\u9762\u901f\u5ea6\u4e3a\u96f6(\u9ecf\u6027)</li>\n<li>4.6.2 <strong>\u81ea\u7531\u6ed1\u79fb\u6761\u4ef6</strong>\uff1av\u00b7n = 0\uff0c\u4ec5\u7ea6\u675f\u6cd5\u5411\u901f\u5ea6\uff0c\u5207\u5411\u53ef\u4ee5\u81ea\u7531\u6ed1\u52a8</li>\n<li>4.6.3 <strong>\u6d78\u5165\u8fb9\u754c\u6cd5</strong>\uff1a\u5728\u6d41\u4f53\u4e2d\u5d4c\u5165\u56fa\u4f53\u8fb9\u754c\uff0c\u4f7f\u7528\u5206\u5e03\u51fd\u6570\u8868\u793a\u8fb9\u754c\u529b</li>\n<li>4.6.4 <strong>\u5207\u5272\u5355\u5143\u6cd5</strong>\uff1a\u5c06\u76f8\u4ea4\u8fb9\u754c\u7684\u7f51\u683c\u5355\u5143\u5207\u5272\uff0c\u7cbe\u786e\u5904\u7406\u590d\u6742\u51e0\u4f55\u8fb9\u754c</li>\n</ul>\n<h3 id=\"47\">4.7 \u81ea\u7531\u8868\u9762\u8fb9\u754c\u6761\u4ef6</h3>\n<ul>\n<li>4.7.1 <strong>\u8fd0\u52a8\u5b66\u6761\u4ef6</strong>\uff1a\u8868\u9762\u4e0a\u7684\u7c92\u5b50\u59cb\u7ec8\u5728\u8868\u9762\u4e0a\uff0cD\u03c6/Dt = 0\uff0c\u5373\u2202\u03c6/\u2202t + u\u00b7\u2207\u03c6 = 0</li>\n<li>4.7.2 <strong>\u52a8\u529b\u5b66\u6761\u4ef6</strong>\uff1a\u8868\u9762\u4e0a\u538b\u529b\u8fde\u7eed\uff0c\u8003\u8651\u8868\u9762\u5f20\u529b\u7684\u5f71\u54cd\u03c3\u00b7n = \u03b3\u03ba n</li>\n<li>4.7.3 <strong>\u8868\u9762\u5f20\u529b\u5904\u7406</strong>\uff1a\u4f7f\u7528CSF\u6a21\u578b(Continuum Surface Force)\u5c06\u8868\u9762\u5f20\u529b\u8f6c\u6362\u4e3a\u4f53\u79ef\u529b</li>\n<li>4.7.4 <strong>Ghost Fluid\u65b9\u6cd5</strong>\uff1a\u5728\u4e0d\u540c\u76f8\u4e2d\u4f7f\u7528\u865a\u62df\u503c\u6765\u5904\u7406\u8fb9\u754c\u6761\u4ef6\uff0c\u4fdd\u6301\u6570\u503c\u7cbe\u5ea6</li>\n</ul>\n<hr />\n<h2 id=\"2_1\">\u7b2c\u4e94\u7ae0\uff1a\u6b27\u62c9\u89c6\u89d2\uff082\uff09\uff1a\u7ebf\u6027\u7cfb\u7edf\u6c42\u89e3\u5668</h2>\n<h3 id=\"51-nullspaces\">5.1 \u7a00\u758f\u77e9\u9635\u4e0e\u96f6\u7a7a\u95f4(Nullspaces)</h3>\n<ul>\n<li>5.1.1 <strong>\u7a00\u758f\u77e9\u9635\u5b58\u50a8\u683c\u5f0f</strong>\uff1aCSR(Compressed Sparse Row)\u3001COO(Coordinate)\u683c\u5f0f\uff0c\u4ec5\u5b58\u50a8\u975e\u96f6\u5143\u7d20</li>\n<li>5.1.2 <strong>\u517c\u5bb9\u6027\u6761\u4ef6</strong>\uff1a\u6cca\u677e\u65b9\u7a0b\u6709\u89e3\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u53f3\u7aef\u9879\u5fc5\u987b\u5782\u76f4\u4e8e\u96f6\u7a7a\u95f4</li>\n<li>5.1.3 <strong>\u96f6\u7a7a\u95f4\u6295\u5f71</strong>\uff1a\u5bf9\u4e8e\u5947\u5f02\u7cfb\u7edf\uff0c\u9700\u8981\u5c06\u89e3\u6295\u5f71\u5230\u96f6\u7a7a\u95f4\u7684\u6b63\u4ea4\u8865\u7a7a\u95f4</li>\n<li>5.1.4 <strong>\u5947\u5f02\u7cfb\u7edf\u7684\u5904\u7406</strong>\uff1a\u6dfb\u52a0\u7ea6\u675f\u6761\u4ef6\u6216\u4f7f\u7528\u5e7f\u4e49\u9006\u77e9\u9635(Moore-Penrose pseudoinverse)</li>\n</ul>\n<h3 id=\"52-krylov\">5.2 Krylov\u5b50\u7a7a\u95f4\u6c42\u89e3\u5668</h3>\n<ul>\n<li>5.2.1 <strong>Krylov\u5b50\u7a7a\u95f4\u7406\u8bba</strong>\uff1aK_m(A,r\u2080) = span{r\u2080, Ar\u2080, A\u00b2r\u2080, ..., A^(m-1)r\u2080}\uff0c\u5728\u5b50\u7a7a\u95f4\u4e2d\u5bfb\u627e\u6700\u4f18\u89e3</li>\n<li>5.2.2 <strong>\u5171\u8f6d\u68af\u5ea6\u6cd5(CG)</strong>\uff1a\u9002\u7528\u4e8e\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635(SPD)\uff0c\u03b1_k = r_k^T r_k / (p_k^T A p_k)\uff0c\u03b2_k = r_{k+1}^T r_{k+1} / (r_k^T r_k)</li>\n<li>5.2.3 <strong>BiCGSTAB\u65b9\u6cd5</strong>\uff1a\u9002\u7528\u4e8e\u4e0d\u5bf9\u79f0\u77e9\u9635\uff0c\u53cc\u5171\u8f6d\u68af\u5ea6\u7a33\u5b9a\u5316\u65b9\u6cd5\uff0c\u6536\u655b\u6027\u66f4\u7a33\u5b9a</li>\n<li>5.2.4 <strong>\u6536\u655b\u6027\u5206\u6790</strong>\uff1a\u6536\u655b\u901f\u5ea6\u4e0e\u6761\u4ef6\u6570\u03ba(A) = \u03bb_max/\u03bb_min\u76f8\u5173\uff0c\u6761\u4ef6\u6570\u8d8a\u5c0f\u6536\u655b\u8d8a\u5feb</li>\n</ul>\n<h3 id=\"53-preconditioning\">5.3 \u9884\u6761\u4ef6(Preconditioning)</h3>\n<ul>\n<li>5.3.1 <strong>\u9884\u6761\u4ef6\u7684\u4f5c\u7528</strong>\uff1a\u627e\u5230\u63a5\u8fd1A\u4f46\u66f4\u6613\u6c42\u9006\u7684\u77e9\u9635M\uff0c\u4f7fM^(-1)A\u6709\u66f4\u5c0f\u7684\u6761\u4ef6\u6570</li>\n<li>5.3.2 <strong>Jacobi\u9884\u6761\u4ef6</strong>\uff1aM = diag(A)\uff0c\u6700\u7b80\u5355\u7684\u5bf9\u89d2\u9884\u6761\u4ef6\uff0c\u5e76\u884c\u53cb\u597d\u4f46\u6548\u679c\u6709\u9650</li>\n<li>5.3.3 <strong>\u4e0d\u5b8c\u5168Cholesky\u5206\u89e3</strong>\uff1aA \u2248 LL^T\uff0c\u4f46\u53ea\u4fdd\u6301A\u7684\u7a00\u758f\u6a21\u5f0f\uff0c\u51cf\u5c11\u5b58\u50a8\u548c\u8ba1\u7b97\u91cf</li>\n<li>5.3.4 <strong>\u4fee\u6b63\u4e0d\u5b8c\u5168Cholesky(MIC)</strong>\uff1a\u4fdd\u6301\u884c\u548c\u4e0d\u53d8\u7684MIC(0)\uff0c\u6539\u5584\u6570\u503c\u7a33\u5b9a\u6027</li>\n</ul>\n<h3 id=\"54\">5.4 \u591a\u91cd\u7f51\u683c\u65b9\u6cd5</h3>\n<ul>\n<li>5.4.1 <strong>\u8bef\u5dee\u7684\u9891\u7387\u5206\u6790</strong>\uff1a\u9ad8\u9891\u8bef\u5dee\u7531Jacobi/Gauss-Seidel\u5feb\u901f\u6d88\u9664\uff0c\u4f4e\u9891\u8bef\u5dee\u9700\u8981\u7c97\u7f51\u683c\u5904\u7406</li>\n<li>5.4.2 <strong>\u9650\u5236\u4e0e\u5ef6\u62d3\u7b97\u5b50</strong>\uff1a\u9650\u5236(Restriction)I_{2h}^h\u5c06\u7ec6\u7f51\u683c\u6620\u5c04\u5230\u7c97\u7f51\u683c\uff0c\u5ef6\u62d3(Prolongation)I_h^{2h}\u5c06\u7c97\u7f51\u683c\u6620\u5c04\u5230\u7ec6\u7f51\u683c</li>\n<li>5.4.3 <strong>V-cycle\u4e0eW-cycle</strong>\uff1aV-cycle\u5355\u6b21\u9012\u5f52\uff0cW-cycle\u53cc\u6b21\u9012\u5f52\uff0cF-cycle\u53ef\u53d8\u9012\u5f52\uff0c\u6bcf\u79cdcycle\u6709\u4e0d\u540c\u7684\u6548\u7387\u548c\u6210\u672c</li>\n<li>5.4.4 <strong>\u7c97\u7f51\u683c\u4fee\u6b63</strong>\uff1a\u5728\u7c97\u7f51\u683c\u4e0a\u6c42\u89e3\u6b8b\u5dee\u65b9\u7a0b\uff0c\u7136\u540e\u5ef6\u62d3\u5230\u7ec6\u7f51\u683c\u4f5c\u4e3a\u6821\u6b63</li>\n</ul>\n<h3 id=\"55\">5.5 \u51e0\u4f55\u591a\u91cd\u7f51\u683c</h3>\n<ul>\n<li>5.5.1 <strong>\u7f51\u683c\u5c42\u6b21\u6784\u5efa</strong>\uff1a\u901a\u8fc7\u7c97\u5316\u51e0\u4f55\u7f51\u683c\u751f\u6210\u5c42\u6b21\u7ed3\u6784\uff0c\u901a\u5e38\u6bcf\u4e2a\u7ef4\u5ea6\u7c97\u53161/2</li>\n<li>5.5.2 <strong>Galerkin\u7c97\u5316</strong>\uff1aA_{2h} = I_{2h}^h A_h I_h^{2h}\uff0c\u4fdd\u8bc1\u7c97\u7f51\u683c\u7b97\u5b50\u7684\u6570\u5b66\u6027\u8d28</li>\n<li>5.5.3 <strong>\u5149\u6ed1\u5668\u9009\u62e9</strong>\uff1aJacobi\u3001Gauss-Seidel\u3001Red-Black Gauss-Seidel\uff0c\u9009\u62e9\u4e0d\u540c\u5149\u6ed1\u5668\u5f71\u54cd\u6536\u655b\u6027</li>\n<li>5.5.4 <strong>\u5e76\u884c\u591a\u91cd\u7f51\u683c</strong>\uff1a\u5728\u591a\u6838/GPU\u4e0a\u5e76\u884c\u5316\u5b9e\u73b0\uff0c\u9700\u8981\u5904\u7406\u8d1f\u8f7d\u5747\u8861\u548c\u901a\u4fe1\u4f18\u5316</li>\n</ul>\n<h3 id=\"56-amg\">5.6 \u4ee3\u6570\u591a\u91cd\u7f51\u683c(AMG)</h3>\n<ul>\n<li>5.6.1 <strong>\u5f3a\u8fde\u63a5\u4e0e\u7c97\u7f51\u683c\u9009\u62e9</strong>\uff1a\u57fa\u4e8e\u77e9\u9635\u7cfb\u6570\u5927\u5c0f\u5224\u65ad\u5f3a\u8fde\u63a5|a_{ij}| \u2265 \u03b8 max_k |a_{ik}|\uff0c\u9009\u62e9\u7c97\u7f51\u683c\u70b9</li>\n<li>5.6.2 <strong>\u63d2\u503c\u7b97\u5b50\u6784\u9020</strong>\uff1a\u6784\u9020\u5ef6\u62d3\u7b97\u5b50I_h^{2h}\uff0c\u4f7f\u7f51\u683c\u95f4\u4f20\u9012\u4fe1\u606f\u6700\u5c11\u5931\u771f</li>\n<li>5.6.3 <strong>\u7ecf\u5178AMG\u4e0e\u5e73\u6ed1\u805a\u5408</strong>\uff1a\u7ecf\u5178AMG\u4f7f\u7528C/F\u5206\u88c2\uff0c\u5e73\u6ed1\u805a\u5408(Smoothed Aggregation)\u4f7f\u7528\u805a\u5408\u65b9\u6cd5</li>\n<li>5.6.4 <strong>\u81ea\u9002\u5e94AMG</strong>\uff1a\u6839\u636e\u77e9\u9635\u6027\u8d28\u81ea\u52a8\u9009\u62e9\u7c97\u5316\u7b56\u7565\u548c\u63d2\u503c\u7b97\u5b50</li>\n</ul>\n<h3 id=\"57-matrix-free\">5.7 \u65e0\u77e9\u9635(Matrix-free)\u65b9\u6cd5</h3>\n<ul>\n<li>5.7.1 <strong>\u77e9\u9635-\u5411\u91cf\u4e58\u79ef\u7684\u9690\u5f0f\u8ba1\u7b97</strong>\uff1a\u4e0d\u5b58\u50a8\u77e9\u9635A\uff0c\u76f4\u63a5\u8ba1\u7b97Av\uff0c\u5229\u7528\u7a7a\u95f4\u5c40\u90e8\u6027\u6e05\u9664\u7f13\u5b58</li>\n<li>5.7.2 <strong>\u5185\u5b58\u5e26\u5bbd\u4f18\u5316</strong>\uff1a\u73b0\u4ee3\u67b6\u6784\u4e2dFLOPs\u514d\u8d39\u4f46\u5185\u5b58\u5e26\u5bbd\u6602\u8d35\uff0c\u91cd\u65b0\u8ba1\u7b97\u6bd4\u8bfb\u53d6\u66f4\u5feb</li>\n<li>5.7.3 <strong>\u7b97\u5b50\u878d\u5408\u6280\u672f</strong>\uff1a\u5c06\u591a\u4e2a\u7b97\u5b50\u64cd\u4f5c\u878d\u5408\u5728\u4e00\u4e2akernel\u4e2d\uff0c\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u6b21\u6570</li>\n<li>5.7.4 <strong>GPU\u5b9e\u73b0\u7b56\u7565</strong>\uff1a\u5145\u5206\u5229\u7528GPU\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u548c\u5185\u5b58\u5c42\u6b21\uff0c\u4f18\u5316\u7ebf\u7a0b\u5360\u7528\u7387</li>\n</ul>\n<h3 id=\"58\">5.8 \u6cca\u677e\u65b9\u7a0b\u7684\u5feb\u901f\u89e3\u6cd5</h3>\n<ul>\n<li>5.8.1 <strong>\u683c\u6797\u51fd\u6570\u4e0e\u57fa\u672c\u89e3</strong>\uff1a\u03c6(x) = -1/(4\u03c0||x-y||) \u222b\u03c1(y)dy\uff0c\u6cca\u677e\u65b9\u7a0b\u7684\u57fa\u672c\u89e3</li>\n<li>5.8.2 <strong>\u5feb\u901f\u591a\u6781\u5b50\u65b9\u6cd5(FMM)</strong>\uff1aO(N)algirithm\uff0c\u4f7f\u7528\u591a\u6781\u5b50\u5c55\u5f00\u548c\u5c40\u90e8\u5c55\u5f00(M2M, M2L, L2L)</li>\n<li>5.8.3 <strong>PPPM\u65b9\u6cd5</strong>\uff1a\u7c92\u5b50-\u7c92\u5b50\u7c92\u5b50-\u7f51\u683c(Particle-Particle Particle-Mesh)\uff0c\u8fd1\u8fdc\u573a\u5206\u89e3</li>\n<li>5.8.4 <strong>FFT\u65b9\u6cd5(\u5468\u671f\u8fb9\u754c)</strong>\uff1a\u5229\u7528\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u89e3\u5468\u671f\u8fb9\u754c\u6761\u4ef6\u4e0b\u7684\u6cca\u677e\u65b9\u7a0b\uff0cO(N log N)</li>\n</ul>\n<hr />\n<h2 id=\"_6\">\u7b2c\u516d\u7ae0\uff1a\u9ad8\u7ea7\u8f93\u9001\u683c\u5f0f\u4e0e\u7b49\u52bf\u9762\u65b9\u6cd5</h2>\n<h3 id=\"61\">6.1 \u9ad8\u9636\u8f93\u9001\u683c\u5f0f\u6df1\u5165</h3>\n<ul>\n<li>6.1.1 <strong>WENO\u683c\u5f0f</strong>\uff1a5\u9636WENO\u4f7f\u75283\u4e2a\u5b50\u6a21\u677f\uff0c\u6743\u91cd\u57fa\u4e8e\u5149\u6ed1\u5ea6\u6307\u6807\u03b2_k\uff0c\u907f\u514d\u8de8\u8d8a\u4e0d\u8fde\u7eed\u5904</li>\n<li>6.1.2 <strong>TVD\u9650\u5236\u5668</strong>\uff1aTotal Variation Diminishing\u6761\u4ef6TV(u^{n+1}) \u2264 TV(u^n)\uff0c\u4fdd\u8bc1\u65e0\u65b0\u7684\u6781\u503c\u4ea7\u751f</li>\n<li>6.1.3 <strong>\u901a\u91cf\u9650\u5236\u5668</strong>\uff1aminmod\u3001superbee\u3001van Leer\u9650\u5236\u5668\uff0c\u03c6(r)\u6ee1\u8db3TVD\u6761\u4ef60\u2264\u03c6\u22642</li>\n<li>6.1.4 <strong>\u7279\u5f81\u7ebf\u65b9\u6cd5</strong>\uff1a\u6cbf\u7279\u5f81\u7ebfdx/dt=u\u6c42\u89e3\uff0c\u62c9\u683c\u6717\u65e5\u89c2\u70b9\u5728\u6b27\u62c9\u7f51\u683c\u4e0a\u7684\u5e94\u7528</li>\n</ul>\n<h3 id=\"62-sdf\">6.2 \u6709\u7b26\u53f7\u8ddd\u79bb\u573a(SDF)</h3>\n<ul>\n<li>6.2.1 <strong>\u8ddd\u79bb\u573a\u7684\u5b9a\u4e49\u4e0e\u6027\u8d28</strong>\uff1a\u03c6(x)=\u00b1min||x-x_surface||\uff0c\u5185\u90e8\u8d1f\u5916\u90e8\u6b63\uff0c|\u2207\u03c6|=1</li>\n<li>6.2.2 <strong>\u5feb\u901f\u884c\u8fdb\u6cd5(FMM)</strong>\uff1a\u89e3Eikonal\u65b9\u7a0b|\u2207T|=1/F\uff0c\u4f7f\u7528\u5806\u7ed3\u6784O(N log N)\u590d\u6742\u5ea6</li>\n<li>6.2.3 <strong>\u5feb\u901f\u626b\u63cf\u6cd5(FSM)</strong>\uff1aGauss-Seidel\u8fed\u4ee38\u4e2a\u626b\u63cf\u65b9\u5411\uff0cO(N)\u590d\u6742\u5ea6\u4f46\u5e38\u6570\u5927</li>\n<li>6.2.4 <strong>\u91cd\u65b0\u521d\u59cb\u5316</strong>\uff1a\u2202\u03c6/\u2202\u03c4 + sign(\u03c6\u2080)(|\u2207\u03c6|-1)=0\uff0c\u4fdd\u6301\u96f6\u7b49\u52bf\u9762\u4f4d\u7f6e\u4e0d\u53d8</li>\n</ul>\n<h3 id=\"63-level-set\">6.3 \u7b49\u52bf\u9762(Level Set)\u65b9\u6cd5</h3>\n<ul>\n<li>6.3.1 <strong>\u754c\u9762\u6f14\u5316\u65b9\u7a0b</strong>\uff1a\u2202\u03c6/\u2202t + u\u00b7\u2207\u03c6 = 0\uff0cHamilton-Jacobi\u578b\u65b9\u7a0b\uff0c\u4f7f\u7528HJ-WENO\u683c\u5f0f</li>\n<li>6.3.2 <strong>\u901f\u5ea6\u5ef6\u62d3</strong>\uff1a\u2202u_ext/\u2202\u03c4 + sign(\u03c6)n\u00b7\u2207u_ext = 0\uff0c\u5c06\u754c\u9762\u901f\u5ea6\u5ef6\u62d3\u5230\u6574\u4e2a\u57df</li>\n<li>6.3.3 <strong>\u8d28\u91cf\u5b88\u6052\u95ee\u9898</strong>\uff1aLevel Set\u65b9\u6cd5\u4e0d\u5b88\u6052\uff0c\u9700\u8981\u7c92\u5b50\u6821\u6b63\u6216VOF\u8026\u5408</li>\n<li>6.3.4 <strong>\u7c92\u5b50\u7b49\u52bf\u9762(PLS)</strong>\uff1a\u5728\u754c\u9762\u9644\u8fd1\u6492\u7c92\u5b50\uff0c\u6839\u636e\u7c92\u5b50\u4f4d\u7f6e\u4fee\u6b63level set</li>\n</ul>\n<h3 id=\"64\">6.4 \u81ea\u7531\u8868\u9762\u8ffd\u8e2a</h3>\n<ul>\n<li>6.4.1 <strong>VOF\u65b9\u6cd5\u5bf9\u6bd4</strong>\uff1aVolume of Fluid\u4fdd\u8bc1\u8d28\u91cf\u5b88\u6052\uff0c\u4f46\u754c\u9762\u91cd\u6784\u590d\u6742\uff0c\u96be\u4ee5\u8ba1\u7b97\u66f2\u7387</li>\n<li>6.4.2 <strong>\u754c\u9762\u91cd\u6784\u6280\u672f</strong>\uff1aSLIC(Simple Line Interface Calculation)\uff0cPLIC(Piecewise Linear)</li>\n<li>6.4.3 <strong>\u8868\u9762\u5f20\u529b\u8ba1\u7b97</strong>\uff1a\u03ba=\u2207\u00b7n=\u2207\u00b7(\u2207\u03c6/|\u2207\u03c6|)\uff0cCSF\u6a21\u578bF_st=\u03c3\u03ba\u03b4(\u03c6)\u2207\u03c6</li>\n<li>6.4.4 <strong>\u62d3\u6251\u53d8\u5316\u5904\u7406</strong>\uff1aLevel Set\u81ea\u7136\u5904\u7406\u5408\u5e76\u5206\u79bb\uff0cVOF\u9700\u8981\u7279\u6b8a\u5904\u7406</li>\n</ul>\n<h3 id=\"65\">6.5 \u6e32\u67d3\u6280\u672f</h3>\n<ul>\n<li>6.5.1 <strong>\u8def\u5f84\u8ffd\u8e2a(Path Tracing)</strong>\uff1a\u8499\u7279\u5361\u6d1b\u5149\u7ebf\u8ffd\u8e2a\uff0c\u6e32\u67d3\u65b9\u7a0bL_o=L_e+\u222bf_r\u00b7L_i\u00b7cos\u03b8d\u03c9</li>\n<li>6.5.2 <strong>\u7403\u9762\u8ffd\u8e2a(Sphere Tracing)</strong>\uff1a\u4f7f\u7528SDF\u52a0\u901f\u5149\u7ebf\u884c\u8fdb\uff0c\u6b65\u957f=\u5230\u6700\u8fd1\u8868\u9762\u8ddd\u79bb</li>\n<li>6.5.3 <strong>\u884c\u519b\u7acb\u65b9\u4f53(Marching Cubes)</strong>\uff1a256\u79cd\u7acb\u65b9\u4f53\u914d\u7f6e\uff0c\u901a\u8fc7\u67e5\u8868\u751f\u6210\u4e09\u89d2\u7f51\u683c</li>\n<li>6.5.4 <strong>\u8fd0\u52a8\u6a21\u7cca\u4e0e\u666f\u6df1</strong>\uff1a\u65f6\u95f4\u79ef\u5206\u8fd0\u52a8\u8f68\u8ff9\uff0c\u5149\u5708\u6a21\u62df\u5b9e\u73b0\u666f\u6df1\u6548\u679c</li>\n</ul>\n<h3 id=\"66\">6.6 \u4f53\u7d20\u6e32\u67d3</h3>\n<ul>\n<li>6.6.1 <strong>\u6570\u5b57\u5fae\u5206\u5206\u6790\u5668(DDA)</strong>\uff1a3D Bresenham\u7b97\u6cd5\uff0c\u9ad8\u6548\u904d\u5386\u5149\u7ebf\u7ecf\u8fc7\u7684\u4f53\u7d20</li>\n<li>6.6.2 <strong>\u5149\u7ebf\u884c\u8fdb\u7b97\u6cd5</strong>\uff1aRay marching with adaptive\u6b65\u957f\uff0cearly termination\u4f18\u5316</li>\n<li>6.6.3 <strong>\u4f53\u79ef\u6e32\u67d3\u65b9\u7a0b</strong>\uff1aL(s)=\u222b\u03c4(s,t)\u00b7\u03c3_a(t)\u00b7L_e(t)dt\uff0c\u03c4=exp(-\u222b\u03c3_t dt)\u900f\u5c04\u7387</li>\n<li>6.6.4 <strong>\u5b9e\u65f6\u4f53\u6e32\u67d3\u4f18\u5316</strong>\uff1a\u7a7a\u95f4\u8df3\u8dc3(empty space skipping)\uff0c\u9884\u79ef\u5206\u4f20\u8f93\u51fd\u6570\uff0cGPU\u52a0\u901f</li>\n</ul>\n<hr />\n<h2 id=\"-1\">\u7b2c\u4e03\u7ae0\uff1a\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09</h2>\n<h3 id=\"71\">7.1 \u6df7\u5408\u65b9\u6cd5\u6982\u8ff0</h3>\n<ul>\n<li>7.1.1 <strong>\u62c9\u683c\u6717\u65e5\u4e0e\u6b27\u62c9\u7684\u4f18\u7f3a\u70b9</strong>\uff1a\u62c9\u683c\u6717\u65e5\u5584\u4e8e\u5bf9\u6d41\u4f46\u6295\u5f71\u56f0\u96be\uff0c\u6b27\u62c9\u5584\u4e8e\u6295\u5f71\u4f46\u5bf9\u6d41\u6709\u8017\u6563</li>\n<li>7.1.2 <strong>\u7269\u7406\u91cf\u5b88\u6052\u95ee\u9898</strong>\uff1a\u52a8\u91cf\u3001\u89d2\u52a8\u91cf\u3001\u4f53\u79ef(\u4e0d\u53ef\u538b\u7f29\u6027)\u3001\u80fd\u91cf(\u4f4e\u8017\u6563)\u7684\u5b88\u6052</li>\n<li>7.1.3 <strong>\u6570\u503c\u8017\u6563\u4e0e\u566a\u58f0</strong>\uff1a\u6b27\u62c9\u65b9\u6cd5\u7684\u8017\u6563vs\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7684\u566a\u58f0\uff0c\u9700\u8981\u5e73\u8861\u6743\u8861</li>\n<li>7.1.4 <strong>\u6df7\u5408\u7b56\u7565\u8bbe\u8ba1</strong>\uff1a\u4f7f\u7528\u7c92\u5b50\u8ffd\u8e2a\u6750\u6599\u4fe1\u606f\uff0c\u4f7f\u7528\u7f51\u683c\u8ba1\u7b97\u529b\u573a(\u6295\u5f71)</li>\n</ul>\n<h3 id=\"72-pic\">7.2 \u7c92\u5b50\u5143\u80de\u6cd5(PIC)</h3>\n<ul>\n<li>7.2.1 <strong>P2G\u4e0eG2P\u4f20\u8f93</strong>\uff1aP2G: grid_v[i] += weight * v[p]\uff0cG2P: new_v += weight * grid_v[i]\uff0c\u4f7f\u7528B\u6837\u6761\u6838\u51fd\u6570</li>\n<li>7.2.2 <strong>\u6838\u51fd\u6570\u9009\u62e9</strong>\uff1a\u7ebf\u6027\u3001\u4e8c\u6b21\u3001\u4e09\u6b21B\u6837\u6761\uff0c\u9ad8\u9636\u51fd\u6570\u66f4\u5e73\u6ed1\u4f46\u6210\u672c\u66f4\u9ad8</li>\n<li>7.2.3 <strong>\u4fe1\u606f\u635f\u5931\u5206\u6790</strong>\uff1a18\u4e2a\u7f51\u683c\u81ea\u7531\u5ea6vs 2\u4e2a\u7c92\u5b50\u81ea\u7531\u5ea6\uff0c\u4fe1\u606f\u4e0d\u5339\u914d\u5bfc\u81f4\u8017\u6563</li>\n<li>7.2.4 <strong>\u52a8\u91cf\u5b88\u6052\u6027</strong>\uff1a\u4f7f\u7528\u52a0\u6743\u901f\u5ea6\u4f20\u8f93v_i = \u03a3_p m_p v_p W_{ip} / m_i\u4fdd\u8bc1\u52a8\u91cf\u5b88\u6052</li>\n</ul>\n<h3 id=\"73-flip\">7.3 \u6d41\u4f53\u9690\u7c92\u5b50(FLIP)</h3>\n<ul>\n<li>7.3.1 <strong>\u589e\u91cf\u5f0f\u901f\u5ea6\u66f4\u65b0</strong>\uff1av_p^{n+1} = v_p^n + gather(v^{n+1} - v^n)\uff0c\u4f20\u8f93\u7684\u662f\u901f\u5ea6\u53d8\u5316\u91cf\u800c\u975e\u7edd\u5bf9\u503c</li>\n<li>7.3.2 <strong>\u566a\u58f0vs\u8017\u6563\u6743\u8861</strong>\uff1aPIC\u8fc7\u5ea6\u8017\u6563\u4f46\u7a33\u5b9a\uff0cFLIP\u4fdd\u6301\u80fd\u91cf\u4f46\u566a\u58f0\u5927\uff0c\u9700\u8981\u6743\u8861</li>\n<li>7.3.3 <strong>PIC/FLIP\u6df7\u5408</strong>\uff1av_p^{n+1} = (1-\u03b1) * PIC + \u03b1 * FLIP\uff0c\u901a\u5e38\u03b1=0.95-0.99</li>\n<li>7.3.4 <strong>\u81ea\u9002\u5e94\u6df7\u5408\u6bd4\u4f8b</strong>\uff1a\u6839\u636e\u5c40\u90e8\u6d41\u52a8\u7279\u5f81\u52a8\u6001\u8c03\u6574\u6df7\u5408\u7cfb\u6570\u03b1</li>\n</ul>\n<h3 id=\"74-apic\">7.4 \u4eff\u5c04\u7c92\u5b50\u5143\u80de\u6cd5(APIC)</h3>\n<ul>\n<li>7.4.1 <strong>\u4eff\u5c04\u901f\u5ea6\u573a</strong>\uff1av(x) = v_p + C_p(x - x_p)\uff0c\u7c92\u5b50\u5468\u56f4\u4fdd\u6301\u7ebf\u6027\u901f\u5ea6\u5206\u5e03</li>\n<li>7.4.2 <strong>\u89d2\u52a8\u91cf\u5b88\u6052</strong>\uff1aAPIC\u5728P2G\u548cG2P\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u89d2\u52a8\u91cf\u5b88\u6052\uff0c\u5df2\u6709\u6570\u5b66\u8bc1\u660e</li>\n<li>7.4.3 <strong>C\u77e9\u9635\u7684\u7269\u7406\u610f\u4e49</strong>\uff1aC_p\u8868\u793a\u7c92\u5b50\u5468\u56f4\u901f\u5ea6\u68af\u5ea6\uff0c\u7c7b\u4f3c\u4e8e\u53d8\u5f62\u68af\u5ea6\u4f46\u7528\u4e8e\u901f\u5ea6\u573a</li>\n<li>7.4.4 <strong>APIC\u7684\u7a33\u5b9a\u6027</strong>\uff1a\u76f8\u6bd4PIC/FLIP\u66f4\u7a33\u5b9a\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u901f\u5ea6\u5b58\u50a8\uff0c\u662f\u73b0\u4ee3MPM\u7684\u57fa\u7840</li>\n</ul>\n<h3 id=\"75-polypic\">7.5 PolyPIC\u65b9\u6cd5</h3>\n<ul>\n<li>7.5.1 <strong>\u9ad8\u9636\u591a\u9879\u5f0f\u8868\u793a</strong>\uff1a18\u6a21\u5f0f=9\u7f51\u683c\u70b9\u00d72\u81ea\u7531\u5ea6\uff0c\u5b9e\u73b0\u65e0\u635f\u4f20\u8f93\uff0c\u5305\u542b\u4e8c\u6b21\u9879</li>\n<li>7.5.2 <strong>Taylor\u5c55\u5f00\u4f20\u8f93</strong>\uff1a\u4f7f\u7528\u9ad8\u9636Taylor\u5c55\u5f00\u8868\u793a\u7c92\u5b50\u5468\u56f4\u7684\u901f\u5ea6\u573a\uff0c\u6700\u5927\u5316\u4fe1\u606f\u4fdd\u7559</li>\n<li>7.5.3 <strong>\u7cbe\u5ea6\u4e0e\u6548\u7387\u5206\u6790</strong>\uff1a\u9ad8\u7cbe\u5ea6\u4f46\u8ba1\u7b97\u6210\u672c\u9ad8\uff0c\u5185\u5b58\u5f00\u9500\u5927\uff0c\u9002\u5408\u5bf9\u7cbe\u5ea6\u8981\u6c42\u6781\u9ad8\u7684\u5e94\u7528</li>\n<li>7.5.4 <strong>\u5b9e\u73b0\u7ec6\u8282</strong>\uff1a\u9700\u8981\u5904\u7406\u5927\u91cf\u7684\u591a\u9879\u5f0f\u7cfb\u6570\u548c\u590d\u6742\u7684\u4f20\u8f93\u8ba1\u7b97\uff0c\u5b9e\u73b0\u590d\u6742\u5ea6\u8f83\u9ad8</li>\n</ul>\n<h3 id=\"76-\">7.6 \u7c92\u5b50-\u7f51\u683c\u4f20\u8f93\u7ec6\u8282</h3>\n<ul>\n<li>7.6.1 <strong>B\u6837\u6761\u6838\u51fd\u6570</strong>\uff1a\u7ebf\u6027N(x)=1-|x|\uff0c\u4e8c\u6b21N(x)=3/4-(x-1)\u00b2\uff0c\u4e09\u6b21N(x)=(2-|x|)\u00b3/6</li>\n<li>7.6.2 <strong>\u4e8c\u6b21vs\u4e09\u6b21\u63d2\u503c</strong>\uff1a\u4e8c\u6b21\u66f4\u5e73\u6ed1\u4f46\u8ba1\u7b97\u91cf\u5927\uff0c\u4e09\u6b21\u7cbe\u5ea6\u66f4\u9ad8\u4f46\u652f\u6301\u57df\u66f4\u5927</li>\n<li>7.6.3 <strong>\u6838\u51fd\u6570\u7684\u7d27\u652f\u6027</strong>\uff1a\u63d2\u503c\u6838\u5728\u6709\u9650\u652f\u6301\u57df\u5185\u975e\u96f6\uff0c\u5f71\u54cd\u8ba1\u7b97\u6548\u7387\u548c\u6570\u503c\u7cbe\u5ea6</li>\n<li>7.6.4 <strong>\u5e76\u884c\u4f20\u8f93\u7b97\u6cd5</strong>\uff1a\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u907f\u514d\u7ade\u6001\u6761\u4ef6\uff0cGPU\u5b9e\u73b0\u9700\u8981\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f</li>\n</ul>\n<hr />\n<h2 id=\"-2\">\u7b2c\u516b\u7ae0\uff1a\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09\uff1a\u7269\u8d28\u70b9\u6cd5</h2>\n<h3 id=\"81-mpm\">8.1 \u7269\u8d28\u70b9\u6cd5(MPM)\u57fa\u7840</h3>\n<ul>\n<li>8.1.1 <strong>MPM\u7684\u5386\u53f2\u4e0e\u53d1\u5c55</strong>\uff1aSulsky &amp; Schreyer 1996\u53d1\u660e\uff0c2013\u5e74Stomakhin\u7b49\u5f15\u5165\u56fe\u5f62\u5b66</li>\n<li>8.1.2 <strong>\u4e0eFEM\u7684\u5173\u7cfb</strong>\uff1aMPM\u5c5e\u4e8e\u65e0\u5355\u5143Galerkin(EFG)\uff0c\u7c92\u5b50\u5bf9\u5e94FEM\u79ef\u5206\u70b9</li>\n<li>8.1.3 <strong>\u5f31\u5f62\u5f0f\u63a8\u5bfc</strong>\uff1a\u4f7f\u7528\u5f31\u5f62\u5f0f\u63a8\u5bfc\u65b9\u7a0b\uff0c\u901a\u5e38\u4f7f\u7528\u5355\u70b9\u79ef\u5206\u89c4\u5219</li>\n<li>8.1.4 <strong>\u7a7a\u95f4\u79bb\u6563\u5316</strong>\uff1a\u7c92\u5b50\u643a\u5e26\u6750\u6599\u4fe1\u606f\uff0c\u7f51\u683c\u7528\u4e8e\u78b0\u649e\u5904\u7406\u548c\u52a8\u91cf\u66f4\u65b0</li>\n</ul>\n<h3 id=\"82-mpm\">8.2 \u7ecf\u5178MPM\u7b97\u6cd5</h3>\n<ul>\n<li>8.2.1 <strong>\u5e94\u529b\u66f4\u65b0(USL vs USF)</strong>\uff1aUpdate Stress Last vs Update Stress First\uff0c\u5f71\u54cd\u6570\u503c\u7cbe\u5ea6\u548c\u7a33\u5b9a\u6027</li>\n<li>8.2.2 <strong>\u5f62\u51fd\u6570\u9009\u62e9</strong>\uff1a\u4f7f\u7528B\u6837\u6761\u57fa\u51fd\u6570\uff0c\u901a\u5e38\u4e09\u6b21\u6216\u4e8c\u6b21\uff0c\u5f71\u54cd\u5149\u6ed1\u6027\u548c\u8ba1\u7b97\u6548\u7387</li>\n<li>8.2.3 <strong>\u79ef\u5206\u70b9\u4e0e\u80cc\u666f\u7f51\u683c</strong>\uff1a\u7c92\u5b50\u4f5c\u4e3a\u79ef\u5206\u70b9\uff0c\u80cc\u666f\u7f51\u683c\u4e3a\u8ba1\u7b97\u7f51\u683c\uff0c\u53ef\u4ee5\u662fSPGrid\u6216OpenVDB</li>\n<li>8.2.4 <strong>\u8fb9\u754c\u6761\u4ef6\u5904\u7406</strong>\uff1a\u7c98\u6027\u8fb9\u754c(sticky)\u3001\u6ed1\u52a8\u8fb9\u754c(slip)\u3001\u5206\u79bb\u8fb9\u754c(separate)</li>\n</ul>\n<h3 id=\"83-mpmmls-mpm\">8.3 \u79fb\u52a8\u6700\u5c0f\u4e8c\u4e58MPM(MLS-MPM)</h3>\n<ul>\n<li>8.3.1 <strong>MLS\u63d2\u503c\u7406\u8bba</strong>\uff1a\u4f7f\u7528MLS\u5f62\u51fd\u6570\u66ff\u4ee3B\u6837\u6761\uff0c\u76f4\u63a5\u590d\u7528APIC\u4f20\u8f93\u65b9\u6848</li>\n<li>8.3.2 <strong>88\u884c\u5b9e\u73b0\u89e3\u6790</strong>\uff1aF^{n+1} = (I+\u0394tC^n)F^n\uff0c\u53d8\u5f62\u66f4\u65b0\u5728P2G\u9636\u6bb5\uff0cJ[p] *= 1 + dt * new_C.trace()</li>\n<li>8.3.3 <strong>\u6027\u80fd\u4f18\u52bf\u5206\u6790</strong>\uff1aFLOPs\u51cf\u534a\u56e0\u4e3a\u76f4\u63a5\u4f7f\u7528C_p\u4f5c\u4e3a\u2207v\u7684\u8fd1\u4f3c\uff0c\u4e0d\u9700\u8ba1\u7b97\u2207W_{ip}</li>\n<li>8.3.4 <strong>\u4e0eAPIC\u7684\u5173\u7cfb</strong>\uff1aMLS-MPM\u57fa\u4e8eAPIC\uff0c\u5728\u5f39\u6027\u529b\u8ba1\u7b97\u4e2d\u878d\u5408\u4e86APIC\u52a8\u91cf\u4f20\u8f93</li>\n</ul>\n<h3 id=\"84-mpm\">8.4 MPM\u4e2d\u7684\u672c\u6784\u6a21\u578b</h3>\n<ul>\n<li>8.4.1 <strong>\u5f39\u6027\u56fa\u4f53(Neo-Hookean, Corotated)</strong>\uff1a\u4f7f\u7528\u8d85\u5f39\u6027\u6750\u6599\u6a21\u578b\uff0cP(F) = 2\u03bc(F-R) + \u03bb(J-1)JF^{-T}</li>\n<li>8.4.2 <strong>\u5f31\u53ef\u538b\u7f29\u6d41\u4f53</strong>\uff1a\u72b6\u6001\u65b9\u7a0b p = K(1-J)\uff0c\u76f4\u63a5\u7ef4\u62a4J\u800c\u975e\u5b8c\u6574\u7684F\u77e9\u9635\u907f\u514d\u6570\u503c\u4e0d\u7a33\u5b9a</li>\n<li>8.4.3 <strong>\u5f39\u5851\u6027\u6750\u6599</strong>\uff1aF_p = F_{p,elastic} \u00d7 F_{p,plastic}\uff0c\u5f39\u6027\u90e8\u5206\u8d21\u732e\u52bf\u80fd</li>\n<li>8.4.4 <strong>\u5c48\u670d\u51c6\u5219\u4e0e\u5851\u6027\u6d41\u52a8</strong>\uff1aBox\u5c48\u670d\u51c6\u5219\u3001Drucker-Prager\u51c6\u5219\u3001Cam-clay\u6a21\u578b\uff0c\u7528\u4e8eSVD\u5939\u6301</li>\n</ul>\n<h3 id=\"85-mpm\">8.5 MPM\u4e2d\u7684\u62c9\u683c\u6717\u65e5\u529b</h3>\n<ul>\n<li>8.5.1 <strong>\u5f39\u7c27\u4e0e\u963b\u5c3c\u5668</strong>\uff1a\u5c06MPM\u7c92\u5b50\u89c6\u4e3aFEM\u9876\u70b9\uff0c\u4f7f\u7528FEM\u52bf\u80fd\u6a21\u578b\uff0c\u9700\u8981\u4e09\u89d2\u7f51\u683c\u8fde\u63a5</li>\n<li>8.5.2 <strong>\u8584\u58f3\u4e0e\u8584\u819c</strong>\uff1a\u5904\u7406\u4f4e\u7ef4\u7ed3\u6784\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u53d8\u5f62\uff0c\u9700\u8981\u7279\u6b8a\u7684\u6295\u5f71\u548c\u79ef\u5206\u65b9\u6cd5</li>\n<li>8.5.3 <strong>\u521a\u4f53\u7ea6\u675f</strong>\uff1a\u901a\u8fc7\u7ea6\u675f\u6b8b\u5dee\u5b9e\u73b0\u521a\u4f53\u8fde\u63a5\uff0c\u9700\u8981\u6c42\u89e3\u7ea6\u675f\u4f18\u5316\u95ee\u9898</li>\n<li>8.5.4 <strong>\u63a5\u89e6\u529b\u6a21\u578b</strong>\uff1a\u5904\u7406\u7c92\u5b50\u95f4\u6216\u7c92\u5b50-\u8fb9\u754c\u95f4\u7684\u63a5\u89e6\uff0c\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u78b0\u649e\u68c0\u6d4b</li>\n</ul>\n<h3 id=\"86\">8.6 \u6570\u503c\u65ad\u88c2</h3>\n<ul>\n<li>8.6.1 <strong>\u8fde\u7eed\u635f\u4f24\u529b\u5b66(CDM)</strong>\uff1a\u901a\u8fc7\u635f\u4f24\u53d8\u91cf\u63cf\u8ff0\u6750\u6599\u9000\u5316\uff0c\u5728\u672c\u6784\u6a21\u578b\u4e2d\u5f15\u5165\u635f\u4f24\u9879</li>\n<li>8.6.2 <strong>\u76f8\u573a\u65ad\u88c2\u6a21\u578b</strong>\uff1a\u4f7f\u7528\u76f8\u573a\u53d8\u91cf\u63cf\u8ff0\u88c2\u7eb9\u7684\u6f14\u5316\uff0c\u9700\u8981\u89e3\u989d\u5916\u7684\u76f8\u573a\u65b9\u7a0b</li>\n<li>8.6.3 <strong>CPIC\u65b9\u6cd5</strong>\uff1aCompatible PIC\uff0c\u4fdd\u6301\u7f51\u683c\u8fde\u63a5\u6027\u540c\u65f6\u5141\u8bb8\u65ad\u88c2</li>\n<li>8.6.4 <strong>\u65ad\u88c2\u51c6\u5219</strong>\uff1a\u57fa\u4e8e\u5e94\u529b\u3001\u5e94\u53d8\u6216\u80fd\u91cf\u7684\u65ad\u88c2\u5224\u65ad\u6761\u4ef6\uff0c\u5982\u6700\u5927\u4e3b\u5e94\u529b\u51c6\u5219</li>\n</ul>\n<h3 id=\"87-mpm\">8.7 \u9690\u5f0fMPM</h3>\n<ul>\n<li>8.7.1 <strong>\u9690\u5f0f\u65f6\u95f4\u79ef\u5206</strong>\uff1a\u5904\u7406\u521a\u6027\u6750\u6599\u65f6\u9700\u8981\u9690\u5f0f\u65b9\u6cd5\u4fdd\u8bc1\u7a33\u5b9a\u6027\uff0c\u89e3\u975e\u7ebf\u6027\u7cfb\u7edf</li>\n<li>8.7.2 <strong>\u5207\u7ebf\u521a\u5ea6\u77e9\u9635</strong>\uff1a\u8ba1\u7b97Hessian\u77e9\u9635\u2202\u00b2U/\u2202x\u1d62\u2202x\u2c7c\uff0c\u9700\u8981\u8003\u8651\u51e0\u4f55\u975e\u7ebf\u6027</li>\n<li>8.7.3 <strong>Newton-Raphson\u8fed\u4ee3</strong>\uff1ax^{k+1} = x^k - J^{-1}F(x^k)\uff0c\u9700\u8981\u7ebf\u641c\u7d22\u4fdd\u8bc1\u6536\u655b</li>\n<li>8.7.4 <strong>\u5927\u53d8\u5f62\u5904\u7406</strong>\uff1a\u5904\u7406\u51e0\u4f55\u975e\u7ebf\u6027\u548c\u6750\u6599\u975e\u7ebf\u6027\uff0c\u53ef\u80fd\u9700\u8981\u66f4\u65b0\u53c2\u8003\u914d\u7f6e</li>\n</ul>\n<h3 id=\"88-taichi2\">8.8 \u9ad8\u7ea7Taichi\u7279\u6027\uff082\uff09</h3>\n<ul>\n<li>8.8.1 <strong>\u7a00\u758f\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1</strong>\uff1aSPGrid\u548cOpenVDB\u7c7b\u578b\u7684\u5c42\u6b21\u7a00\u758f\u7f51\u683c\uff0c\u4f18\u5316\u5b58\u50a8\u548c\u8bbf\u95ee\u6548\u7387</li>\n<li>8.8.2 <strong>\u52a8\u6001\u5185\u5b58\u5206\u914d</strong>\uff1ati.field\u66ff\u4ee3ti.var\uff0c\u652f\u6301\u52a8\u6001shape\u8c03\u6574\u548c\u5185\u5b58\u7ba1\u7406</li>\n<li>8.8.3 <strong>\u5c42\u6b21\u5316\u7f51\u683c</strong>\uff1a\u591a\u5c42\u7ea7\u7a00\u758f\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u81ea\u9002\u5e94\u7cbe\u5316\u548c\u7c97\u5316</li>\n<li>8.8.4 <strong>\u81ea\u5b9a\u4e49\u6570\u636e\u5e03\u5c40</strong>\uff1aAoS vs SoA\u5e03\u5c40\u9009\u62e9\uff0c\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u548c\u7f13\u5b58\u5c40\u90e8\u6027</li>\n</ul>\n<hr />\n<h2 id=\"_7\">\u7b2c\u4e5d\u7ae0\uff1a\u9ad8\u6027\u80fd\u8ba1\u7b97</h2>\n<h3 id=\"91\">9.1 \u5904\u7406\u5668\u5fae\u67b6\u6784</h3>\n<ul>\n<li>9.1.1 <strong>CPU\u6d41\u6c34\u7ebf\u4e0e\u8d85\u6807\u91cf</strong>\uff1a\u53d6\u6307\u3001\u8bd1\u7801\u3001\u6267\u884c\u3001\u56de\u5199\u56db\u9636\u6bb5\uff0c\u8d85\u6807\u91cf\u5141\u8bb8\u591a\u53d1\u5c04</li>\n<li>9.1.2 <strong>SIMD\u6307\u4ee4\u96c6</strong>\uff1aSSE/AVX/AVX-512\uff0c\u5355\u6307\u4ee4\u591a\u6570\u636e\uff0c\u5411\u91cf\u5316\u52a0\u901f\u6570\u503c\u8ba1\u7b97</li>\n<li>9.1.3 <strong>\u5206\u652f\u9884\u6d4b\u4e0e\u6295\u673a\u6267\u884c</strong>\uff1a\u73b0\u4ee3CPU\u9884\u6d4b\u5206\u652f\u8d70\u5411\u51cf\u5c11\u6d41\u6c34\u7ebf\u505c\u6ede</li>\n<li>9.1.4 <strong>\u4e71\u5e8f\u6267\u884c</strong>\uff1aCPU\u53ef\u4ee5\u6253\u4e71\u6307\u4ee4\u987a\u5e8f\u6267\u884c\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u4fdd\u8bc1\u7a0b\u5e8f\u8bed\u4e49</li>\n</ul>\n<h3 id=\"92\">9.2 \u5185\u5b58\u5c42\u7ea7</h3>\n<ul>\n<li>9.2.1 <strong>\u7f13\u5b58\u7ed3\u6784\u4e0e\u5927\u5c0f</strong>\uff1aL1(32KB)\u3001L2(256KB)\u3001L3(8MB)\u4e09\u7ea7\u7f13\u5b58\uff0c\u8bbf\u95ee\u65f6\u95f4\u9010\u7ea7\u589e\u52a0</li>\n<li>9.2.2 <strong>\u7f13\u5b58\u884c\u4e0e\u4f2a\u5171\u4eab</strong>\uff1a\u7f13\u5b58\u884c64\u5b57\u8282\uff0c\u4f2a\u5171\u4eab\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u9700\u8981\u6570\u636e\u5bf9\u9f50</li>\n<li>9.2.3 <strong>TLB\u4e0e\u9875\u8868</strong>\uff1a\u8f6c\u6362\u67e5\u627e\u7f13\u51b2\u5668\u52a0\u901f\u865a\u62df\u5730\u5740\u7ffb\u8bd1\uff0c\u51cf\u5c11\u9875\u8868\u8bbf\u95ee</li>\n<li>9.2.4 <strong>NUMA\u67b6\u6784</strong>\uff1a\u975e\u7edf\u4e00\u5185\u5b58\u8bbf\u95ee\uff0c\u672c\u5730\u5185\u5b58vs\u8fdc\u7a0b\u5185\u5b58\u8bbf\u95ee\u5ef6\u8fdf\u4e0d\u540c</li>\n</ul>\n<h3 id=\"93\">9.3 \u6027\u80fd\u5206\u6790\u4e0e\u4f18\u5316</h3>\n<ul>\n<li>9.3.1 <strong>Roofline\u6a21\u578b</strong>\uff1a\u6027\u80fd\u4e0a\u9650 = min(\u5cf0\u503c\u8ba1\u7b97\u80fd\u529b, \u8fd0\u7b97\u5f3a\u5ea6 \u00d7 \u5e26\u5bbd)\uff0c\u6307\u5bfc\u4f18\u5316\u65b9\u5411</li>\n<li>9.3.2 <strong>\u5e26\u5bbdvs\u8ba1\u7b97\u74f6\u9888</strong>\uff1a\u8bc6\u522b\u74f6\u9888\u662f\u5185\u5b58\u5e26\u5bbd\u9650\u5236\u8fd8\u662f\u8ba1\u7b97\u80fd\u529b\u9650\u5236</li>\n<li>9.3.3 <strong>\u6027\u80fd\u8ba1\u6570\u5668</strong>\uff1aPMU(Performance Monitoring Unit)\u76d1\u63a7\u6307\u4ee4\u3001\u7f13\u5b58\u3001\u5185\u5b58\u4e8b\u4ef6</li>\n<li>9.3.4 <strong>Profile\u5de5\u5177\u4f7f\u7528</strong>\uff1aVTune\u3001perf\u3001Instruments\u7b49\u5de5\u5177\u5206\u6790\u6027\u80fd\u74f6\u9888</li>\n</ul>\n<h3 id=\"94\">9.4 \u5e76\u884c\u7f16\u7a0b\u6a21\u578b</h3>\n<ul>\n<li>9.4.1 <strong>\u5171\u4eab\u5185\u5b58\u5e76\u884c(OpenMP)</strong>\uff1a#pragma omp parallel for\u7b80\u5316\u591a\u7ebf\u7a0b\u7f16\u7a0b\uff0c\u652f\u6301\u5faa\u73af\u5e76\u884c\u5316</li>\n<li>9.4.2 <strong>\u5206\u5e03\u5f0f\u5185\u5b58(MPI)</strong>\uff1a\u6d88\u606f\u4f20\u9012\u63a5\u53e3\uff0cMPI_Send/MPI_Recv\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1</li>\n<li>9.4.3 <strong>\u4efb\u52a1\u5e76\u884cvs\u6570\u636e\u5e76\u884c</strong>\uff1a\u4efb\u52a1\u5e76\u884c\u9002\u7528\u4e8e\u5f02\u6784\u4efb\u52a1\uff0c\u6570\u636e\u5e76\u884c\u9002\u7528\u4e8e\u76f8\u540c\u64cd\u4f5c</li>\n<li>9.4.4 <strong>\u8d1f\u8f7d\u5747\u8861\u7b56\u7565</strong>\uff1a\u9759\u6001\u5206\u914d\u3001\u52a8\u6001\u5206\u914d\u3001\u5de5\u4f5c\u7a83\u53d6(work stealing)\u7b49\u7b56\u7565</li>\n</ul>\n<h3 id=\"95-gpu\">9.5 GPU\u7f16\u7a0b</h3>\n<ul>\n<li>9.5.1 <strong>GPU\u67b6\u6784\u6982\u8ff0</strong>\uff1a\u4e0e\u591a\u6838\u5e76\u884c\u7684\u4f17\u6838\u5e76\u884c\uff0cSIMT(Single Instruction Multiple Thread)\u67b6\u6784</li>\n<li>9.5.2 <strong>\u7ebf\u7a0b\u7ec4\u7ec7</strong>\uff1aGrid, Block, Warp\uff1aGrid\u5305\u542bBlock\u6570\u7ec4\uff0cBlock\u5305\u542b\u7ebf\u7a0bWarp(32\u7ebf\u7a0b)</li>\n<li>9.5.3 <strong>\u5185\u5b58\u5408\u5e76\u8bbf\u95ee</strong>\uff1a\u76f8\u90bb\u7ebf\u7a0b\u8bbf\u95ee\u76f8\u90bb\u5730\u5740\u53ef\u5408\u5e76\u4e3a\u4e00\u6b21128\u5b57\u8282\u4e8b\u52a1</li>\n<li>9.5.4 <strong>\u5360\u7528\u7387\u4f18\u5316</strong>\uff1a\u6700\u5927\u5316\u6d3b\u8dc3warp\u6570\u91cf\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\uff0c\u8003\u8651\u5bc4\u5b58\u5668\u548c\u5171\u4eab\u5185\u5b58\u9650\u5236</li>\n</ul>\n<h3 id=\"96\">9.6 \u7a00\u758f\u6570\u636e\u7ed3\u6784</h3>\n<ul>\n<li>9.6.1 <strong>SPGrid\u4e0eOpenVDB</strong>\uff1aSPGrid\u4f7f\u7528\u865a\u62df\u5185\u5b58\u7ba1\u7406\uff0cOpenVDB\u4f7f\u7528B+\u6811\u5c42\u6b21\u7ed3\u6784</li>\n<li>9.6.2 <strong>\u5206\u5c42\u7a00\u758f\u7f51\u683c</strong>\uff1a\u591a\u5c42\u7ea7\u7ed3\u6784\u5e73\u8861\u5b58\u50a8\u548c\u8bbf\u95ee\u6548\u7387\uff0c\u652f\u6301\u81ea\u9002\u5e94\u7cbe\u5316</li>\n<li>9.6.3 <strong>\u4f4d\u63a9\u7801\u4e0e\u6307\u9488\u7ed3\u6784</strong>\uff1a\u4f4d\u63a9\u7801\u6807\u8bb0\u6709\u6548\u533a\u57df\uff0c\u6307\u9488\u7ed3\u6784\u5b9e\u73b0\u5feb\u901f\u8bbf\u95ee</li>\n<li>9.6.4 <strong>\u52a8\u6001\u62d3\u6251\u66f4\u65b0</strong>\uff1a\u8ffd\u8e2a\u6d3b\u8dc3\u533a\u57df\u53d8\u5316\uff0c\u52a8\u6001\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u5757</li>\n</ul>\n<h3 id=\"97\">9.7 \u7b97\u6cd5\u4f18\u5316\u6280\u672f</h3>\n<ul>\n<li>9.7.1 <strong>\u5faa\u73af\u4f18\u5316</strong>\uff1a\u5faa\u73af\u5c55\u5f00\u51cf\u5c11\u5206\u652f\u5f00\u9500(unroll factor 4-8)\uff0c\u5faa\u73af\u963b\u585e\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387(tile size=\u221acache)\uff0c\u5faa\u73af\u878d\u5408\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee</li>\n<li>9.7.2 <strong>\u6570\u636e\u91cd\u6392\u4e0e\u9884\u53d6</strong>\uff1aAoS\u8f6cSoA\u63d0\u9ad8SIMD\u6548\u7387\uff0c\u8f6f\u4ef6\u9884\u53d6__builtin_prefetch\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf\uff0c\u6570\u636e\u6253\u5305\u51cf\u5c11\u4f20\u8f93</li>\n<li>9.7.3 <strong>\u5411\u91cf\u5316\u6280\u5de7</strong>\uff1a\u4f7f\u7528intrinsics(_mm256_add_ps)\uff0c\u6570\u636e\u5bf9\u9f50(<strong>attribute</strong>((aligned(32))))\uff0c\u907f\u514dgather/scatter\u64cd\u4f5c</li>\n<li>9.7.4 <strong>\u901a\u4fe1\u9690\u85cf</strong>\uff1a\u8ba1\u7b97\u4e0e\u901a\u4fe1\u91cd\u53e0\uff0c\u4f7f\u7528\u975e\u963b\u585eMPI(MPI_Isend/Irecv)\uff0c\u53cc\u7f13\u51b2\u6280\u672fpipeline\u5e76\u884c</li>\n</ul>\n<h3 id=\"98-gpu\">9.8 \u591aGPU\u5e76\u884c</h3>\n<ul>\n<li>9.8.1 <strong>\u57df\u5206\u89e3\u7b56\u7565</strong>\uff1a1D/2D/3D\u5206\u89e3\u9009\u62e9\uff0c\u6700\u5c0f\u5316\u8868\u9762\u79ef/\u4f53\u79ef\u6bd4\uff0c\u8003\u8651\u8d1f\u8f7d\u5747\u8861\u548c\u901a\u4fe1\u5f00\u9500</li>\n<li>9.8.2 <strong>Halo\u533a\u57df\u4ea4\u6362</strong>\uff1aGhost cell\u540c\u6b65\uff0c\u4f7f\u7528GPUDirect P2P\u4f20\u8f93\uff0c\u91cd\u53e0\u8ba1\u7b97\u548c\u901a\u4fe1\u51cf\u5c11\u7b49\u5f85</li>\n<li>9.8.3 <strong>\u5f02\u6b65\u4f20\u8f93\u4e0e\u8ba1\u7b97\u91cd\u53e0</strong>\uff1aCUDA\u6d41(streams)\u7ba1\u7406\uff0c\u4f7f\u7528cudaMemcpyAsync\uff0c\u5185\u6838\u6267\u884c\u4e0e\u6570\u636e\u4f20\u8f93\u5e76\u884c</li>\n<li>9.8.4 <strong>\u8d1f\u8f7d\u52a8\u6001\u8fc1\u79fb</strong>\uff1a\u5de5\u4f5c\u7a83\u53d6\u7b97\u6cd5\uff0c\u57fa\u4e8e\u6027\u80fd\u76d1\u63a7\u7684\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\uff0c\u8003\u8651\u8fc1\u79fb\u5f00\u9500vs\u6536\u76ca</li>\n</ul>\n<hr />\n<h2 id=\"_8\">\u7b2c\u5341\u7ae0\uff1a\u53ef\u5fae\u7f16\u7a0b\u4e0e\u673a\u5668\u5b66\u4e60</h2>\n<h3 id=\"101\">10.1 \u53ef\u5fae\u4eff\u771f\u57fa\u7840</h3>\n<ul>\n<li>10.1.1 <strong>\u7aef\u5230\u7aef\u4f18\u5316</strong>\uff1a\u4ece\u8f93\u5165\u53c2\u6570\u5230\u6700\u7ec8\u635f\u5931\u51fd\u6570\u7684\u5b8c\u6574\u6c42\u5bfc\u94fe\uff0c\u652f\u6301\u590d\u6742\u7269\u7406\u7cfb\u7edf\u4f18\u5316</li>\n<li>10.1.2 <strong>\u53c2\u6570\u654f\u611f\u5ea6\u5206\u6790</strong>\uff1a\u8ba1\u7b97\u2202L/\u2202\u03b8\u5206\u6790\u53c2\u6570\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\uff0c\u6307\u5bfc\u53c2\u6570\u8c03\u4f18</li>\n<li>10.1.3 <strong>\u4f34\u968f\u65b9\u6cd5</strong>\uff1a\u89e3\u4f34\u968f\u65b9\u7a0b\u8ba1\u7b97\u68af\u5ea6\uff0c\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u4f18\u5316\u95ee\u9898</li>\n<li>10.1.4 <strong>Checkpointing\u6280\u672f</strong>\uff1a\u5728\u524d\u5411\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u5173\u952e\u72b6\u6001\uff0c\u51cf\u5c11\u53cd\u5411\u4f20\u64ad\u7684\u5185\u5b58\u9700\u6c42</li>\n</ul>\n<h3 id=\"102\">10.2 \u81ea\u52a8\u5fae\u5206\u5b9e\u73b0</h3>\n<ul>\n<li>10.2.1 <strong>\u8ba1\u7b97\u56fe\u6784\u5efa</strong>\uff1a\u6784\u5efa\u8ba1\u7b97\u56fe\u8bb0\u5f55\u524d\u5411\u4f20\u64ad\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u652f\u6301\u590d\u6742\u63a7\u5236\u6d41</li>\n<li>10.2.2 <strong>\u524d\u5411vs\u53cd\u5411\u4f20\u64ad</strong>\uff1a\u524d\u5411\u6a21\u5f0f\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u53cd\u5411\u6a21\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e</li>\n<li>10.2.3 <strong>\u9ad8\u9636\u5bfc\u6570</strong>\uff1a\u9012\u5f52\u5e94\u7528\u5fae\u5206\u89c4\u5219\u8ba1\u7b97Hessian\u77e9\u9635\uff0c\u652f\u6301\u4efb\u610f\u9636\u5bfc\u6570</li>\n<li>10.2.4 <strong>\u6df7\u5408\u6a21\u5f0fAD</strong>\uff1a\u7ed3\u5408\u524d\u5411\u548c\u53cd\u5411\u6a21\u5f0f\u7684\u4f18\u52bf\uff0c\u9488\u5bf9\u4e0d\u540c\u95ee\u9898\u9009\u62e9\u6700\u4f18\u7b56\u7565</li>\n</ul>\n<h3 id=\"103\">10.3 \u4f18\u5316\u7b97\u6cd5</h3>\n<ul>\n<li>10.3.1 <strong>\u68af\u5ea6\u4e0b\u964d\u53d8\u79cd</strong>\uff1aAdam\u3001RMSprop\u3001AdaGrad\u7b49\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7b97\u6cd5</li>\n<li>10.3.2 <strong>\u62df\u725b\u987f\u65b9\u6cd5</strong>\uff1aBFGS\u3001L-BFGS\u4f30\u8ba1Hessian\u9006\u77e9\u9635\uff0c\u4e8c\u9636\u6536\u655b\u6027</li>\n<li>10.3.3 <strong>\u7ea6\u675f\u4f18\u5316</strong>\uff1a\u6d3b\u8dc3\u96c6\u65b9\u6cd5\u3001\u5185\u70b9\u6cd5\u3001\u7f5a\u51fd\u6570\u65b9\u6cd5\u5904\u7406\u7ea6\u675f</li>\n<li>10.3.4 <strong>\u968f\u673a\u4f18\u5316</strong>\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d(SGD)\u3001\u9057\u4f20\u7b97\u6cd5\u3001\u6a21\u62df\u9000\u706b\u7b49\u53c2\u6570\u4f30\u8ba1</li>\n</ul>\n<h3 id=\"104\">10.4 \u9006\u95ee\u9898\u6c42\u89e3</h3>\n<ul>\n<li>10.4.1 <strong>\u53c2\u6570\u8bc6\u522b</strong>\uff1a\u4ece\u89c2\u6d4b\u6570\u636e\u63a8\u65ad\u6750\u6599\u53c2\u6570\u3001\u8fb9\u754c\u6761\u4ef6\u7b49\u7269\u7406\u91cf</li>\n<li>10.4.2 <strong>\u521d\u59cb\u6761\u4ef6\u4f18\u5316</strong>\uff1a\u4f18\u5316\u521d\u59cb\u901f\u5ea6\u3001\u4f4d\u7f6e\u5206\u5e03\u4ee5\u5339\u914d\u76ee\u6807\u8f68\u8ff9</li>\n<li>10.4.3 <strong>\u63a7\u5236\u95ee\u9898</strong>\uff1a\u8bbe\u8ba1\u63a7\u5236\u4fe1\u53f7\u4f7f\u7cfb\u7edf\u8fbe\u5230\u671f\u671b\u72b6\u6001\uff0c\u5982\u673a\u5668\u4eba\u8fd0\u52a8\u63a7\u5236</li>\n<li>10.4.4 <strong>\u6b63\u5219\u5316\u6280\u672f</strong>\uff1aL1/L2\u6b63\u5219\u5316\u9632\u6b62\u8fc7\u62df\u5408\uff0c\u63d0\u9ad8\u53cd\u6f14\u95ee\u9898\u7684\u7a33\u5b9a\u6027</li>\n</ul>\n<h3 id=\"105\">10.5 \u795e\u7ecf\u7f51\u7edc\u4e0e\u7269\u7406\u4eff\u771f</h3>\n<ul>\n<li>10.5.1 <strong>Physics-Informed Neural Networks</strong>\uff1a\u635f\u5931\u51fd\u6570L=L_data+\u03bbL_physics\uff0cL_physics=||\u2202u/\u2202t+N[u]||\u00b2\u5f3a\u5236\u6ee1\u8db3PDE</li>\n<li>10.5.2 <strong>\u56fe\u795e\u7ecf\u7f51\u7edc(GNN)</strong>\uff1a\u8282\u70b9\u8868\u793a\u7c92\u5b50\uff0c\u8fb9\u8868\u793a\u76f8\u4e92\u4f5c\u7528\uff0c\u6d88\u606f\u4f20\u9012\u66f4\u65b0\u72b6\u6001h_i^{t+1}=\u03c3(W\u00b7aggregate(h_j^t))</li>\n<li>10.5.3 <strong>\u795e\u7ecf\u5e38\u5fae\u5206\u65b9\u7a0b</strong>\uff1ady/dt=f_\u03b8(y,t)\uff0c\u4f7f\u7528\u4f34\u968f\u65b9\u6cd5\u53cd\u5411\u4f20\u64ad\uff0c\u8fde\u7eed\u65f6\u95f4\u52a8\u529b\u5b66\u5efa\u6a21</li>\n<li>10.5.4 <strong>\u6df7\u5408\u65b9\u6cd5</strong>\uff1a\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u6b8b\u5dee/\u4fee\u6b63\u9879\uff0c\u7269\u7406\u6c42\u89e3\u5668\u63d0\u4f9b\u57fa\u7840\u89e3\uff0c\u7ed3\u5408\u4e24\u8005\u4f18\u52bf</li>\n</ul>\n<h3 id=\"106\">10.6 \u5f3a\u5316\u5b66\u4e60\u5e94\u7528</h3>\n<ul>\n<li>10.6.1 <strong>\u73af\u5883\u5efa\u6a21</strong>\uff1a\u4f7f\u7528Taichi\u6784\u5efa\u53ef\u5fae\u7269\u7406\u73af\u5883\uff0c\u72b6\u6001\u7a7a\u95f4=\u7c92\u5b50\u4f4d\u7f6e\u901f\u5ea6\uff0c\u52a8\u4f5c\u7a7a\u95f4=\u5916\u529b/\u63a7\u5236\u53c2\u6570</li>\n<li>10.6.2 <strong>\u5956\u52b1\u8bbe\u8ba1</strong>\uff1a\u4efb\u52a1\u5956\u52b1+\u6b63\u5219\u5316\u9879\uff0c\u907f\u514dreward hacking\uff0ccurriculum learning\u9010\u6b65\u589e\u52a0\u96be\u5ea6</li>\n<li>10.6.3 <strong>\u7b56\u7565\u68af\u5ea6\u65b9\u6cd5</strong>\uff1aPPO/TRPO\u7a33\u5b9a\u8bad\u7ec3\uff0c\u5229\u7528\u7269\u7406\u68af\u5ea6\u2202r/\u2202a\u52a0\u901f\u6536\u655b\uff0cactor-critic\u67b6\u6784</li>\n<li>10.6.4 <strong>\u4eff\u771f\u5230\u73b0\u5b9e\u8fc1\u79fb</strong>\uff1a\u57df\u968f\u673a\u5316(domain randomization)\uff0c\u7cfb\u7edf\u8fa8\u8bc6\u6821\u51c6\u53c2\u6570\uff0c\u6dfb\u52a0\u566a\u58f0\u63d0\u9ad8\u9c81\u68d2\u6027</li>\n</ul>\n<h3 id=\"107\">10.7 \u6848\u4f8b\u7814\u7a76</h3>\n<ul>\n<li>10.7.1 <strong>\u8f6f\u4f53\u673a\u5668\u4eba\u63a7\u5236</strong>\uff1a\u4f18\u5316\u9a71\u52a8\u5668\u4f4d\u7f6e\u548c\u63a7\u5236\u5e8f\u5217\uff0c\u76ee\u6807\u51fd\u6570=\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\uff0c\u4f7f\u7528CMA-ES\u6216\u68af\u5ea6\u65b9\u6cd5</li>\n<li>10.7.2 <strong>\u6d41\u4f53\u5f62\u72b6\u4f18\u5316</strong>\uff1a\u4f18\u5316\u969c\u788d\u7269\u5f62\u72b6\u51cf\u5c0f\u963b\u529b\uff0c\u4f34\u968f\u65b9\u6cd5\u8ba1\u7b97\u5f62\u72b6\u5bfc\u6570\uff0clevel set\u8868\u793a\u5f62\u72b6</li>\n<li>10.7.3 <strong>\u6750\u6599\u8bbe\u8ba1</strong>\uff1a\u62d3\u6251\u4f18\u5316\u6700\u5927\u5316\u521a\u5ea6/\u91cd\u91cf\u6bd4\uff0cSIMP\u65b9\u6cd5\u03c1^p\u63d2\u503c\uff0c\u654f\u611f\u5ea6\u6ee4\u6ce2\u907f\u514d\u68cb\u76d8\u683c</li>\n<li>10.7.4 <strong>\u52a8\u753b\u751f\u6210</strong>\uff1a\u4f18\u5316\u521d\u59cb\u901f\u5ea6\u573a\u751f\u6210\u76ee\u6807\u5f62\u72b6\uff0c\u65f6\u95f4\u53cd\u5411\u79ef\u5206\uff0c\u827a\u672f\u98ce\u683c\u63a7\u5236</li>\n</ul>\n<h3 id=\"108\">10.8 \u672a\u6765\u5c55\u671b</h3>\n<ul>\n<li>10.8.1 <strong>\u53ef\u5fae\u6e32\u67d3</strong>\uff1a\u7ed3\u5408\u7269\u7406\u4eff\u771f\u548c\u6e32\u67d3\uff0c\u7aef\u5230\u7aef\u4f18\u5316\u4ece\u53c2\u6570\u5230\u50cf\u7d20\uff0c\u9006\u5411\u56fe\u5f62\u5b66\u5e94\u7528</li>\n<li>10.8.2 <strong>\u91cf\u5b50\u8ba1\u7b97\u5e94\u7528</strong>\uff1a\u91cf\u5b50\u7b97\u6cd5\u52a0\u901f\u7ebf\u6027\u7cfb\u7edf\u6c42\u89e3(HHL\u7b97\u6cd5)\uff0c\u91cf\u5b50\u9000\u706b\u4f18\u5316\u95ee\u9898</li>\n<li>10.8.3 <strong>\u795e\u7ecf\u9690\u5f0f\u8868\u793a</strong>\uff1aNeRF/DeepSDF\u8868\u793a\u51e0\u4f55\u548c\u7269\u7406\u573a\uff0c\u8fde\u7eed\u53ef\u5fae\u8868\u793a\uff0c\u5185\u5b58\u6548\u7387\u9ad8</li>\n<li>10.8.4 <strong>\u5927\u89c4\u6a21\u4f18\u5316</strong>\uff1a\u5206\u5e03\u5f0f\u81ea\u52a8\u5fae\u5206\uff0c\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\uff0c\u7a00\u758f\u68af\u5ea6\u5904\u7406\uff0c\u5343\u4e07\u81ea\u7531\u5ea6\u4f18\u5316</li>\n</ul>\n<hr />\n<h2 id=\"_9\">\u9644\u5f55</h2>\n<h3 id=\"a\">A. \u6570\u5b66\u57fa\u7840\u56de\u987e</h3>\n<ul>\n<li>\u5411\u91cf\u4e0e\u77e9\u9635\u8fd0\u7b97</li>\n<li>\u5f20\u91cf\u8bb0\u53f7\u4e0e\u7231\u56e0\u65af\u5766\u6c42\u548c</li>\n<li>\u5fae\u5206\u51e0\u4f55\u57fa\u7840</li>\n<li>\u53d8\u5206\u6cd5\u4e0e\u6cdb\u51fd\u5206\u6790</li>\n</ul>\n<h3 id=\"b-taichi-api\">B. Taichi API\u53c2\u8003</h3>\n<ul>\n<li>\u5e38\u7528\u51fd\u6570\u901f\u67e5</li>\n<li>\u6570\u636e\u7ed3\u6784\u6a21\u677f</li>\n<li>\u6027\u80fd\u8c03\u4f18\u53c2\u6570</li>\n<li>\u8c03\u8bd5\u5de5\u5177\u96c6</li>\n</ul>\n<h3 id=\"c\">C. \u4ee3\u7801\u6a21\u677f\u5e93</h3>\n<ul>\n<li>\u57fa\u7840\u7269\u7406\u7cfb\u7edf\u5b9e\u73b0</li>\n<li>\u6c42\u89e3\u5668\u6a21\u677f</li>\n<li>\u53ef\u89c6\u5316\u5de5\u5177</li>\n<li>\u6d4b\u8bd5\u6846\u67b6</li>\n</ul>\n<h3 id=\"d\">D. \u6269\u5c55\u9605\u8bfb</h3>\n<ul>\n<li>\u7ecf\u5178\u6559\u6750\u63a8\u8350</li>\n<li>\u91cd\u8981\u8bba\u6587\u5217\u8868</li>\n<li>\u5f00\u6e90\u9879\u76ee\u8d44\u6e90</li>\n<li>\u5728\u7ebf\u8bfe\u7a0b\u94fe\u63a5</li>\n</ul>\n<hr />\n<h2 id=\"_10\">\u672f\u8bed\u8868</h2>\n<p>[\u6309\u7167CLAUDE.md\u4e2d\u7684\u4e2d\u82f1\u5bf9\u7167\u8868\u6574\u7406]</p>\n<h2 id=\"_11\">\u53c2\u8003\u6587\u732e</h2>\n<p>[\u6839\u636e\u5404\u7ae0\u5185\u5bb9\u6574\u7406\u76f8\u5173\u6587\u732e]</p>"
  },
  "../chapter8.md": {
    "hash": "80f3a0a579abd8ff5c7fddcee8ed4539",
    "content": "<h1 id=\"-2\">\u7b2c\u516b\u7ae0\uff1a\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09\uff1a\u7269\u8d28\u70b9\u6cd5</h1>\n<p>\u7269\u8d28\u70b9\u6cd5\uff08Material Point Method, MPM\uff09\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u6570\u503c\u65b9\u6cd5\uff0c\u7ed3\u5408\u4e86\u62c9\u683c\u6717\u65e5\u7c92\u5b50\u548c\u6b27\u62c9\u7f51\u683c\u7684\u4f18\u52bf\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8MPM\u7684\u7406\u8bba\u57fa\u7840\u3001\u7ecf\u5178\u7b97\u6cd5\u3001\u73b0\u4ee3\u6539\u8fdb\u4ee5\u53ca\u5728\u5404\u79cd\u6750\u6599\u6a21\u62df\u4e2d\u7684\u5e94\u7528\u3002\u6211\u4eec\u5c06\u4ece\u57fa\u7840\u7684MPM\u7b97\u6cd5\u5f00\u59cb\uff0c\u9010\u6b65\u6df1\u5165\u5230MLS-MPM\u3001\u672c\u6784\u6a21\u578b\u3001\u65ad\u88c2\u6a21\u62df\u7b49\u9ad8\u7ea7\u4e3b\u9898\uff0c\u5e76\u4ecb\u7ecdTaichi\u4e2d\u5b9e\u73b0MPM\u7684\u9ad8\u7ea7\u7279\u6027\u3002</p>\n<h2 id=\"81-mpm\">8.1 \u7269\u8d28\u70b9\u6cd5(MPM)\u57fa\u7840</h2>\n<h3 id=\"811-mpm\">8.1.1 MPM\u7684\u5386\u53f2\u4e0e\u53d1\u5c55</h3>\n<p>\u7269\u8d28\u70b9\u6cd5\u6700\u521d\u7531Sulsky\u548cSchreyer\u57281996\u5e74\u63d0\u51fa\uff0c\u4f5c\u4e3a\u6709\u9650\u5143\u65b9\u6cd5(FEM)\u7684\u6269\u5c55\u6765\u5904\u7406\u5927\u53d8\u5f62\u95ee\u9898\u3002\u4f20\u7edfFEM\u5728\u5904\u7406\u6781\u5927\u53d8\u5f62\u65f6\u4f1a\u9047\u5230\u7f51\u683c\u626d\u66f2\u95ee\u9898\uff0c\u800cMPM\u901a\u8fc7\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u7c92\u5b50\uff08\u7269\u8d28\u70b9\uff09\u643a\u5e26\u6750\u6599\u4fe1\u606f\uff0c\u6b27\u62c9\u80cc\u666f\u7f51\u683c\u8fdb\u884c\u52a8\u91cf\u65b9\u7a0b\u6c42\u89e3\uff0c\u5de7\u5999\u5730\u907f\u514d\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p>\n<p>MPM\u7684\u53d1\u5c55\u5386\u7a0b\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u91cd\u8981\u9636\u6bb5\uff1a</p>\n<p><strong>\u65e9\u671f\u53d1\u5c55\uff081994-2000\uff09</strong>\uff1a</p>\n<ul>\n<li>1994\u5e74\uff1aSulsky, Chen\u548cSchreyer\u63d0\u51faMPM\u7684\u539f\u59cb\u5f62\u5f0f\uff0c\u7528\u4e8e\u56fa\u4f53\u529b\u5b66\u4e2d\u7684\u51b2\u51fb\u548c\u7a7f\u900f\u95ee\u9898</li>\n<li>1995\u5e74\uff1a\u5f15\u5165GIMP\uff08Generalized Interpolation Material Point\uff09\u65b9\u6cd5\uff0c\u6539\u5584\u4e86\u6570\u503c\u7a33\u5b9a\u6027</li>\n<li>1999\u5e74\uff1aBardenhagen\u7b49\u4eba\u6539\u8fdb\u4e86MPM\u7684\u52a8\u91cf\u5b88\u6052\u6027\u8d28</li>\n</ul>\n<p><strong>\u7406\u8bba\u5b8c\u5584\uff082000-2010\uff09</strong>\uff1a</p>\n<ul>\n<li>2004\u5e74\uff1aSteffen\u7b49\u4eba\u63d0\u51fa\u4e86CPDI\uff08Convected Particle Domain Interpolation\uff09\uff0c\u51cf\u5c11\u4e86\u683c\u5b50\u566a\u58f0</li>\n<li>2008\u5e74\uff1aSadeghirad\u7b49\u4eba\u53d1\u5c55\u4e86CPDI2\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u5927\u53d8\u5f62\u4e0b\u7684\u7cbe\u5ea6</li>\n<li>2010\u5e74\uff1a\u5f15\u5165\u4e86\u53cc\u7f51\u683cMPM\uff0c\u5206\u79bb\u4e86\u52a8\u91cf\u548c\u5e94\u529b\u7684\u8ba1\u7b97</li>\n</ul>\n<p><strong>\u56fe\u5f62\u5b66\u5e94\u7528\uff082013\u81f3\u4eca\uff09</strong>\uff1a\n2013\u5e74\uff0cStomakhin\u7b49\u4eba\u5c06MPM\u5f15\u5165\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u9886\u57df\uff0c\u9996\u6b21\u5b9e\u73b0\u4e86\u96ea\u7684\u771f\u5b9e\u611f\u6a21\u62df\uff0c\u5728\u8fea\u58eb\u5c3c\u52a8\u753b\u300a\u51b0\u96ea\u5947\u7f18\u300b\u4e2d\u5f97\u5230\u5e94\u7528\u3002\u8fd9\u9879\u5de5\u4f5c\u5c55\u793a\u4e86MPM\u5728\u5904\u7406\u76f8\u53d8\u3001\u65ad\u88c2\u7b49\u590d\u6742\u7269\u7406\u73b0\u8c61\u4e0a\u7684\u72ec\u7279\u4f18\u52bf\u3002</p>\n<p>\u5173\u952e\u7a81\u7834\u5305\u62ec\uff1a</p>\n<ul>\n<li>2014\u5e74\uff1aJiang\u7b49\u4eba\u63d0\u51fa\u4e86APIC\u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e86\u89d2\u52a8\u91cf\u5b88\u6052</li>\n<li>2016\u5e74\uff1aKl\u00e1r\u7b49\u4eba\u7528MPM\u6a21\u62df\u6c99\u5b50\uff0c\u5f15\u5165\u4e86Drucker-Prager\u5851\u6027\u6a21\u578b</li>\n<li>2016\u5e74\uff1aDaviet\u548cBertails-Descoubes\u63d0\u51fa\u4e86implicit MPM</li>\n<li>2017\u5e74\uff1aGao\u7b49\u4eba\u53d1\u5c55\u4e86adaptive MPM\uff0c\u652f\u6301\u81ea\u9002\u5e94\u7f51\u683c\u7ec6\u5316</li>\n<li>2018\u5e74\uff1aHu\u7b49\u4eba\u63d0\u51faMLS-MPM\uff0c\u5c06\u5b9e\u73b0\u7b80\u5316\u523088\u884c\u4ee3\u7801</li>\n<li>2019\u5e74\uff1a\u5f15\u5165\u4e86\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u672c\u6784\u6a21\u578b</li>\n<li>2020\u5e74\uff1a\u53d1\u5c55\u4e86GPU\u4f18\u5316\u7684MPM\uff0c\u5b9e\u73b0\u4e86\u5b9e\u65f6\u6a21\u62df</li>\n</ul>\n<p>MPM\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u8fde\u7eed\u4ecb\u8d28\u79bb\u6563\u4e3a\u4e00\u7cfb\u5217\u643a\u5e26\u8d28\u91cf\u3001\u52a8\u91cf\u3001\u5e94\u529b\u7b49\u7269\u7406\u91cf\u7684\u7c92\u5b50\uff0c\u800c\u80cc\u666f\u7f51\u683c\u4ec5\u7528\u4e8e\u8ba1\u7b97\u5185\u529b\u548c\u66f4\u65b0\u52a8\u91cf\u3002\u8fd9\u79cd\u53cc\u91cd\u8868\u793a\u65b9\u5f0f\u4f7f\u5f97MPM\u65e2\u4fdd\u7559\u4e86\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u8ffd\u8e2a\u6750\u6599\u5386\u53f2\u7684\u80fd\u529b\uff0c\u53c8\u5177\u5907\u4e86\u6b27\u62c9\u65b9\u6cd5\u5904\u7406\u78b0\u649e\u548c\u81ea\u78b0\u649e\u7684\u4fbf\u5229\u6027\u3002</p>\n<p><strong>\u5e94\u7528\u9886\u57df\u6269\u5c55</strong>\uff1a</p>\n<ul>\n<li>\u5730\u8d28\u5de5\u7a0b\uff1a\u6ed1\u5761\u3001\u571f\u58e4\u6db2\u5316\u3001\u57fa\u7840\u6c89\u964d</li>\n<li>\u751f\u7269\u529b\u5b66\uff1a\u8f6f\u7ec4\u7ec7\u53d8\u5f62\u3001\u624b\u672f\u6a21\u62df</li>\n<li>\u5236\u9020\u4e1a\uff1a3D\u6253\u5370\u3001\u7c89\u672b\u51b6\u91d1\u3001\u589e\u6750\u5236\u9020</li>\n<li>\u5f71\u89c6\u7279\u6548\uff1a\u96ea\u5d29\u3001\u6c99\u5c18\u66b4\u3001\u6ce5\u77f3\u6d41\u3001\u7206\u70b8\u6548\u679c</li>\n<li>\u6e38\u620f\u5f15\u64ce\uff1a\u53ef\u7834\u574f\u73af\u5883\u3001\u6d41\u4f53-\u56fa\u4f53\u4ea4\u4e92</li>\n</ul>\n<h3 id=\"812-fem\">8.1.2 \u4e0eFEM\u7684\u5173\u7cfb</h3>\n<p>MPM\u53ef\u4ee5\u89c6\u4e3a\u65e0\u7f51\u683cGalerkin\u65b9\u6cd5\u7684\u4e00\u79cd\uff0c\u7279\u522b\u662f\u5c5e\u4e8e\u65e0\u5355\u5143Galerkin\uff08Element-Free Galerkin, EFG\uff09\u65b9\u6cd5\u5bb6\u65cf\u3002\u4ece\u6570\u5b66\u89d2\u5ea6\u770b\uff0cMPM\u548cFEM\u90fd\u57fa\u4e8e\u8fde\u7eed\u4ecb\u8d28\u529b\u5b66\u7684\u5f31\u5f62\u5f0f\uff1a</p>\n<p>$$\\int_\\Omega \\rho \\mathbf{a} \\cdot \\mathbf{w} \\, dV = -\\int_\\Omega \\boldsymbol{\\sigma} : \\nabla \\mathbf{w} \\, dV + \\int_\\Omega \\rho \\mathbf{b} \\cdot \\mathbf{w} \\, dV + \\int_{\\partial\\Omega_t} \\mathbf{t} \\cdot \\mathbf{w} \\, dA$$\n\u5176\u4e2d$\\mathbf{w}$\u662f\u6d4b\u8bd5\u51fd\u6570\uff0c$\\mathbf{a}$\u662f\u52a0\u901f\u5ea6\uff0c$\\boldsymbol{\\sigma}$\u662f\u67ef\u897f\u5e94\u529b\u5f20\u91cf\uff0c$\\mathbf{b}$\u662f\u4f53\u529b\uff0c$\\mathbf{t}$\u662f\u8868\u9762\u529b\u3002</p>\n<p><strong>\u79ef\u5206\u65b9\u5f0f\u7684\u672c\u8d28\u533a\u522b</strong>\uff1a</p>\n<p>MPM\u4e0eFEM\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u79ef\u5206\u65b9\u5f0f\u548c\u6750\u6599\u70b9\u7684\u5904\u7406\uff1a</p>\n<p>| \u7279\u6027 | FEM | MPM |</p>\n<table>\n<thead>\n<tr>\n<th>\u7279\u6027</th>\n<th>FEM</th>\n<th>MPM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u79ef\u5206\u70b9</td>\n<td>\u9ad8\u65af\u70b9\uff0c\u4f4d\u7f6e\u56fa\u5b9a\u5728\u5355\u5143\u5185</td>\n<td>\u7269\u8d28\u70b9\uff0c\u53ef\u81ea\u7531\u79fb\u52a8</td>\n</tr>\n<tr>\n<td>\u7f51\u683c\u4f5c\u7528</td>\n<td>\u627f\u8f7d\u6240\u6709\u4fe1\u606f</td>\n<td>\u4ec5\u7528\u4e8e\u52a8\u91cf\u66f4\u65b0</td>\n</tr>\n<tr>\n<td>\u62d3\u6251\u53d8\u5316</td>\n<td>\u9700\u8981\u91cd\u65b0\u7f51\u683c\u5316</td>\n<td>\u81ea\u7136\u5904\u7406</td>\n</tr>\n<tr>\n<td>\u5386\u53f2\u53d8\u91cf</td>\n<td>\u5b58\u50a8\u5728\u9ad8\u65af\u70b9</td>\n<td>\u5b58\u50a8\u5728\u7c92\u5b50\u4e0a</td>\n</tr>\n<tr>\n<td>\u5927\u53d8\u5f62</td>\n<td>\u7f51\u683c\u626d\u66f2\u95ee\u9898</td>\n<td>\u65e0\u7f51\u683c\u626d\u66f2</td>\n</tr>\n<tr>\n<td>\u63a5\u89e6\u5904\u7406</td>\n<td>\u9700\u8981\u663e\u5f0f\u63a5\u89e6\u7b97\u6cd5</td>\n<td>\u81ea\u52a8\u5904\u7406</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u6570\u5b66\u7b49\u4ef7\u6027</strong>\uff1a</p>\n<p>\u5728\u5c0f\u53d8\u5f62\u60c5\u51b5\u4e0b\uff0cMPM\u53ef\u4ee5\u5b8c\u5168\u7b49\u4ef7\u4e8eFEM\u3002\u8003\u8651\u4e00\u4e2a\u5355\u5143\u5185\u6709$n_g$\u4e2a\u9ad8\u65af\u70b9\u7684FEM\u548c\u6709$n_p$\u4e2a\u7c92\u5b50\u7684MPM\uff1a</p>\n<p>FEM\u7684\u79ef\u5206\uff1a\n$$\\int_{\\Omega_e} f(\\mathbf{x}) \\, dV \\approx \\sum_{g=1}^{n_g} w_g J_g f(\\mathbf{x}_g)$$\nMPM\u7684\u79ef\u5206\uff1a\n$$\\int_{\\Omega_e} f(\\mathbf{x}) \\, dV \\approx \\sum_{p=1}^{n_p} V_p f(\\mathbf{x}_p)$$\n\u5f53\u7c92\u5b50\u521d\u59cb\u4f4d\u7f6e\u4e0e\u9ad8\u65af\u70b9\u91cd\u5408\uff0c\u4e14$V_p = w_g J_g$\u65f6\uff0c\u4e24\u8005\u5b8c\u5168\u7b49\u4ef7\u3002</p>\n<p><strong>MPM\u4f5c\u4e3aFEM\u7684\u63a8\u5e7f</strong>\uff1a</p>\n<p>MPM\u53ef\u4ee5\u7406\u89e3\u4e3a\u4f7f\u7528\u7279\u6b8a\u79ef\u5206\u89c4\u5219\u7684FEM\uff1a</p>\n<ol>\n<li><strong>\u52a8\u6001\u79ef\u5206\u70b9</strong>\uff1a\u79ef\u5206\u70b9\uff08\u7c92\u5b50\uff09\u968f\u6750\u6599\u79fb\u52a8\uff0c\u81ea\u52a8\u8ffd\u8e2a\u6750\u6599\u5386\u53f2</li>\n<li><strong>\u5355\u70b9\u79ef\u5206</strong>\uff1a\u6bcf\u4e2a\u7c92\u5b50\u4f7f\u7528\u5355\u70b9\u79ef\u5206\uff0c$V_p$\u662f\u79ef\u5206\u6743\u91cd</li>\n<li><strong>\u65e0\u5355\u5143\u7ed3\u6784</strong>\uff1a\u4e0d\u9700\u8981\u7ef4\u62a4\u5355\u5143\u8fde\u63a5\u5173\u7cfb\uff0c\u7c92\u5b50\u901a\u8fc7\u80cc\u666f\u7f51\u683c\u4ea4\u4e92</li>\n</ol>\n<p><strong>\u7406\u8bba\u57fa\u7840\u7684\u7ee7\u627f</strong>\uff1a</p>\n<p>MPM\u7ee7\u627f\u4e86FEM\u7684\u8bb8\u591a\u7406\u8bba\u7ed3\u679c\uff1a</p>\n<ul>\n<li><strong>\u6536\u655b\u6027</strong>\uff1a\u5728\u7f51\u683c\u52a0\u5bc6\u548c\u7c92\u5b50\u52a0\u5bc6\u65f6\uff0cMPM\u6536\u655b\u5230\u8fde\u7eed\u89e3</li>\n<li><strong>\u8bef\u5dee\u4f30\u8ba1</strong>\uff1a$||u - u_h|| \\leq Ch^k$\uff0c\u5176\u4e2d$k$\u53d6\u51b3\u4e8e\u5f62\u51fd\u6570\u9636\u6570</li>\n<li><strong>\u7a33\u5b9a\u6027\u6761\u4ef6</strong>\uff1aCFL\u6761\u4ef6\u7c7b\u4f3c\uff0c$\\Delta t \\leq C\\frac{h}{c}$\uff0c$c = \\sqrt{E/\\rho}$</li>\n<li><strong>\u5b88\u6052\u6027\u8d28</strong>\uff1a\u8d28\u91cf\u3001\u52a8\u91cf\u81ea\u52a8\u5b88\u6052\uff0cAPIC/MLS-MPM\u8fd8\u4fdd\u8bc1\u89d2\u52a8\u91cf\u5b88\u6052</li>\n</ul>\n<p><strong>\u4f18\u52bf\u4e0e\u5c40\u9650</strong>\uff1a</p>\n<p>MPM\u76f8\u5bf9\u4e8eFEM\u7684\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u5904\u7406\u8d85\u5927\u53d8\u5f62\u65e0\u9700\u91cd\u7f51\u683c\u5316</li>\n<li>\u81ea\u52a8\u5904\u7406\u62d3\u6251\u53d8\u5316\uff08\u65ad\u88c2\u3001\u5408\u5e76\uff09</li>\n<li>\u6750\u6599\u754c\u9762\u8ffd\u8e2a\u7cbe\u786e</li>\n<li>\u5386\u53f2\u76f8\u5173\u672c\u6784\u6a21\u578b\u5b9e\u73b0\u7b80\u5355</li>\n</ul>\n<p>MPM\u7684\u5c40\u9650\u6027\uff1a</p>\n<ul>\n<li>\u8ba1\u7b97\u6210\u672c\u901a\u5e38\u9ad8\u4e8eFEM\uff08\u9700\u8981\u66f4\u591a\u7c92\u5b50\uff09</li>\n<li>\u8fb9\u754c\u6761\u4ef6\u65bd\u52a0\u4e0d\u5982FEM\u7cbe\u786e</li>\n<li>\u5bf9\u4e8e\u5c0f\u53d8\u5f62\u95ee\u9898\uff0cFEM\u66f4\u9ad8\u6548</li>\n<li>\u53ef\u80fd\u51fa\u73b0\u7c92\u5b50\u805a\u96c6\u6216\u7a7a\u6d1e</li>\n</ul>\n<p>\u8fd9\u79cd\u5173\u7cfb\u610f\u5473\u7740MPM\u7ee7\u627f\u4e86FEM\u7684\u575a\u5b9e\u7406\u8bba\u57fa\u7840\uff0c\u540c\u65f6\u53c8\u5177\u6709\u5904\u7406\u5927\u53d8\u5f62\u7684\u7075\u6d3b\u6027\uff0c\u4f7f\u5176\u6210\u4e3a\u6781\u7aef\u53d8\u5f62\u95ee\u9898\u7684\u7406\u60f3\u9009\u62e9\u3002</p>\n<h3 id=\"813\">8.1.3 \u5f31\u5f62\u5f0f\u63a8\u5bfc</h3>\n<p>\u4ece\u52a8\u91cf\u5b88\u6052\u65b9\u7a0b\u51fa\u53d1\uff1a\n$$\\rho \\frac{D\\mathbf{v}}{Dt} = \\nabla \\cdot \\boldsymbol{\\sigma} + \\rho \\mathbf{b}$$\n\u4e58\u4ee5\u6d4b\u8bd5\u51fd\u6570$\\mathbf{w}$\u5e76\u5728\u57df$\\Omega$\u4e0a\u79ef\u5206\uff1a\n$$\\int_\\Omega \\rho \\frac{D\\mathbf{v}}{Dt} \\cdot \\mathbf{w} \\, dV = \\int_\\Omega (\\nabla \\cdot \\boldsymbol{\\sigma}) \\cdot \\mathbf{w} \\, dV + \\int_\\Omega \\rho \\mathbf{b} \\cdot \\mathbf{w} \\, dV$$\n\u5bf9\u5e94\u529b\u9879\u4f7f\u7528\u5206\u90e8\u79ef\u5206\uff1a\n$$\\int_\\Omega (\\nabla \\cdot \\boldsymbol{\\sigma}) \\cdot \\mathbf{w} \\, dV = -\\int_\\Omega \\boldsymbol{\\sigma} : \\nabla \\mathbf{w} \\, dV + \\int_{\\partial\\Omega} (\\boldsymbol{\\sigma} \\cdot \\mathbf{n}) \\cdot \\mathbf{w} \\, dA$$\n\u5728MPM\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7c92\u5b50\u8fd1\u4f3c\u79ef\u5206\uff1a\n$$\\int_\\Omega f(\\mathbf{x}) \\, dV \\approx \\sum_p V_p f(\\mathbf{x}_p)$$\n\u5176\u4e2d$V_p$\u662f\u7c92\u5b50$p$\u7684\u4f53\u79ef\uff0c$\\mathbf{x}_p$\u662f\u7c92\u5b50\u4f4d\u7f6e\u3002</p>\n<h3 id=\"814\">8.1.4 \u7a7a\u95f4\u79bb\u6563\u5316</h3>\n<p>MPM\u7684\u7a7a\u95f4\u79bb\u6563\u5316\u91c7\u7528\u6df7\u5408\u65b9\u6cd5\uff0c\u7ed3\u5408\u4e86\u62c9\u683c\u6717\u65e5\u7c92\u5b50\u548c\u6b27\u62c9\u7f51\u683c\u7684\u4f18\u52bf\uff1a</p>\n<ol>\n<li><strong>\u7c92\u5b50\u8868\u793a\uff08\u62c9\u683c\u6717\u65e5\u90e8\u5206\uff09</strong></li>\n</ol>\n<p>\u6750\u6599\u88ab\u79bb\u6563\u4e3a$N_p$\u4e2a\u7c92\u5b50\uff0c\u6bcf\u4e2a\u7c92\u5b50$p$\u643a\u5e26\u5b8c\u6574\u7684\u6750\u6599\u72b6\u6001\uff1a</p>\n<p>| \u53d8\u91cf | \u7b26\u53f7 | \u7269\u7406\u610f\u4e49 | \u7ef4\u5ea6 |</p>\n<table>\n<thead>\n<tr>\n<th>\u53d8\u91cf</th>\n<th>\u7b26\u53f7</th>\n<th>\u7269\u7406\u610f\u4e49</th>\n<th>\u7ef4\u5ea6</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u4f4d\u7f6e</td>\n<td>$\\mathbf{x}_p$</td>\n<td>\u5f53\u524d\u6784\u578b\u4e2d\u7684\u4f4d\u7f6e</td>\n<td>$\\mathbb{R}^d$</td>\n</tr>\n<tr>\n<td>\u901f\u5ea6</td>\n<td>$\\mathbf{v}_p$</td>\n<td>\u6750\u6599\u70b9\u901f\u5ea6</td>\n<td>$\\mathbb{R}^d$</td>\n</tr>\n<tr>\n<td>\u8d28\u91cf</td>\n<td>$m_p$</td>\n<td>\u7c92\u5b50\u8d28\u91cf\uff08\u5b88\u6052\uff09</td>\n<td>$\\mathbb{R}$</td>\n</tr>\n<tr>\n<td>\u4f53\u79ef</td>\n<td>$V_p$</td>\n<td>\u5f53\u524d\u4f53\u79ef</td>\n<td>$\\mathbb{R}$</td>\n</tr>\n<tr>\n<td>\u521d\u59cb\u4f53\u79ef</td>\n<td>$V_p^0$</td>\n<td>\u53c2\u8003\u6784\u578b\u4f53\u79ef</td>\n<td>$\\mathbb{R}$</td>\n</tr>\n<tr>\n<td>\u53d8\u5f62\u68af\u5ea6</td>\n<td>$\\mathbf{F}_p$</td>\n<td>\u53d8\u5f62\u68af\u5ea6\u5f20\u91cf</td>\n<td>$\\mathbb{R}^{d\\times d}$</td>\n</tr>\n<tr>\n<td>\u5e94\u529b</td>\n<td>$\\boldsymbol{\\sigma}_p$</td>\n<td>\u67ef\u897f\u5e94\u529b\u5f20\u91cf</td>\n<td>$\\mathbb{R}^{d\\times d}$</td>\n</tr>\n<tr>\n<td>\u4eff\u5c04\u901f\u5ea6</td>\n<td>$\\mathbf{C}_p$</td>\n<td>APIC/MLS-MPM\u901f\u5ea6\u68af\u5ea6</td>\n<td>$\\mathbb{R}^{d\\times d}$</td>\n</tr>\n<tr>\n<td>\u5851\u6027\u53d8\u5f62</td>\n<td>$\\mathbf{F}_p^p$</td>\n<td>\u5851\u6027\u53d8\u5f62\u90e8\u5206</td>\n<td>$\\mathbb{R}^{d\\times d}$</td>\n</tr>\n<tr>\n<td>\u5185\u90e8\u53d8\u91cf</td>\n<td>$\\boldsymbol{\\alpha}_p$</td>\n<td>\u786c\u5316\u53c2\u6570\u7b49</td>\n<td>\u95ee\u9898\u76f8\u5173</td>\n</tr>\n</tbody>\n</table>\n<p>\u7c92\u5b50\u5bc6\u5ea6\u7684\u9009\u62e9\u539f\u5219\uff1a</p>\n<ul>\n<li>2D\uff1a\u6bcf\u4e2a\u7f51\u683c\u5355\u51434-9\u4e2a\u7c92\u5b50</li>\n<li>3D\uff1a\u6bcf\u4e2a\u7f51\u683c\u5355\u51438-27\u4e2a\u7c92\u5b50</li>\n<li>\u81ea\u9002\u5e94\uff1a\u57fa\u4e8e\u53d8\u5f62\u7a0b\u5ea6\u52a8\u6001\u8c03\u6574</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u80cc\u666f\u7f51\u683c\uff08\u6b27\u62c9\u90e8\u5206\uff09</strong></li>\n</ol>\n<p>\u4f7f\u7528\u89c4\u5219\u7684\u80cc\u666f\u7f51\u683c\u8fdb\u884c\u52a8\u91cf\u66f4\u65b0\uff0c\u7f51\u683c\u8282\u70b9$i$\u5b58\u50a8\uff1a</p>\n<p>| \u53d8\u91cf | \u7b26\u53f7 | \u4f5c\u7528 | \u751f\u547d\u5468\u671f |</p>\n<table>\n<thead>\n<tr>\n<th>\u53d8\u91cf</th>\n<th>\u7b26\u53f7</th>\n<th>\u4f5c\u7528</th>\n<th>\u751f\u547d\u5468\u671f</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u4f4d\u7f6e</td>\n<td>$\\mathbf{x}_i$</td>\n<td>\u8282\u70b9\u5750\u6807\uff08\u56fa\u5b9a\uff09</td>\n<td>\u6c38\u4e45</td>\n</tr>\n<tr>\n<td>\u901f\u5ea6</td>\n<td>$\\mathbf{v}_i$</td>\n<td>\u8282\u70b9\u901f\u5ea6</td>\n<td>\u5355\u4e2a\u65f6\u95f4\u6b65</td>\n</tr>\n<tr>\n<td>\u8d28\u91cf</td>\n<td>$m_i$</td>\n<td>\u8282\u70b9\u8d28\u91cf</td>\n<td>\u5355\u4e2a\u65f6\u95f4\u6b65</td>\n</tr>\n<tr>\n<td>\u52a8\u91cf</td>\n<td>$\\mathbf{p}_i$</td>\n<td>$= m_i \\mathbf{v}_i$</td>\n<td>\u5355\u4e2a\u65f6\u95f4\u6b65</td>\n</tr>\n<tr>\n<td>\u529b</td>\n<td>$\\mathbf{f}_i$</td>\n<td>\u8282\u70b9\u53d7\u529b</td>\n<td>\u5355\u4e2a\u65f6\u95f4\u6b65</td>\n</tr>\n</tbody>\n</table>\n<p>\u7f51\u683c\u7c7b\u578b\u9009\u62e9\uff1a</p>\n<ul>\n<li><strong>\u5747\u5300\u7b1b\u5361\u5c14\u7f51\u683c</strong>\uff1a\u5b9e\u73b0\u7b80\u5355\uff0cGPU\u53cb\u597d</li>\n<li><strong>MAC\u7f51\u683c</strong>\uff1a\u4ea4\u9519\u7f51\u683c\uff0c\u7528\u4e8e\u6d41\u4f53</li>\n<li><strong>\u81ea\u9002\u5e94\u7f51\u683c</strong>\uff1aAMR\u6216\u516b\u53c9\u6811\u7ed3\u6784</li>\n</ul>\n<ol start=\"3\">\n<li><strong>\u5f62\u51fd\u6570\uff08\u63d2\u503c\u6838\uff09</strong></li>\n</ol>\n<p>\u5f62\u51fd\u6570$N_i(\\mathbf{x})$\u5b9a\u4e49\u4e86\u7c92\u5b50\u548c\u7f51\u683c\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002\u5e38\u7528B\u6837\u6761\u57fa\u51fd\u6570\uff1a</p>\n<p><strong>\u7ebf\u6027B\u6837\u6761\uff08tent\u51fd\u6570\uff09</strong>\uff1a\n$$N^1(x) = \\begin{cases}\n1 - |x| &amp; |x| \\leq 1 \\\\\n0 &amp; |x| &gt; 1\n\\end{cases}$$\n\u5bfc\u6570\uff1a\n$$\\frac{dN^1}{dx} = \\begin{cases}\n-\\text{sign}(x) &amp; |x| &lt; 1 \\\\\n0 &amp; |x| \\geq 1\n\\end{cases}$$\n<strong>\u4e8c\u6b21B\u6837\u6761</strong>\uff1a\n$$N^2(x) = \\begin{cases}\n\\frac{3}{4} - x^2 &amp; |x| \\leq \\frac{1}{2} \\\\\n\\frac{1}{2}(\\frac{3}{2} - |x|)^2 &amp; \\frac{1}{2} &lt; |x| \\leq \\frac{3}{2} \\\\\n0 &amp; |x| &gt; \\frac{3}{2}\n\\end{cases}$$\n\u5bfc\u6570\uff1a\n$$\\frac{dN^2}{dx} = \\begin{cases}\n-2x &amp; |x| \\leq \\frac{1}{2} \\\\\n-(\\frac{3}{2} - |x|)\\text{sign}(x) &amp; \\frac{1}{2} &lt; |x| \\leq \\frac{3}{2} \\\\\n0 &amp; |x| &gt; \\frac{3}{2}\n\\end{cases}$$\n<strong>\u4e09\u6b21B\u6837\u6761</strong>\uff1a\n$$N^3(x) = \\begin{cases}\n\\frac{1}{2}|x|^3 - x^2 + \\frac{2}{3} &amp; |x| \\leq 1 \\\\\n-\\frac{1}{6}|x|^3 + x^2 - 2|x| + \\frac{4}{3} &amp; 1 &lt; |x| \\leq 2 \\\\\n0 &amp; |x| &gt; 2\n\\end{cases}$$\n<strong>\u591a\u7ef4\u5f62\u51fd\u6570</strong>\uff1a</p>\n<p>\u4f7f\u7528\u5f20\u91cf\u79ef\u6784\u9020\uff1a\n$$N_i(\\mathbf{x}_p) = \\prod_{d=1}^{\\text{dim}} N^{1D}\\left(\\frac{x_p^d - x_i^d}{\\Delta x}\\right)$$</p>\n<ol start=\"4\">\n<li><strong>\u79bb\u6563\u5316\u8bef\u5dee\u5206\u6790</strong></li>\n</ol>\n<p>\u7a7a\u95f4\u79bb\u6563\u5316\u5f15\u5165\u7684\u8bef\u5dee\u4e3b\u8981\u6765\u6e90\u4e8e\uff1a</p>\n<ol>\n<li><strong>\u79ef\u5206\u8bef\u5dee</strong>\uff1a$O(h^{k+1})$\uff0c\u5176\u4e2d$k$\u662f\u5f62\u51fd\u6570\u9636\u6570</li>\n<li><strong>\u63d2\u503c\u8bef\u5dee</strong>\uff1a$O(h^{k})$\uff0c\u5f71\u54cdP2G/G2P\u4f20\u8f93</li>\n<li>\n<p><strong>\u683c\u5b50\u566a\u58f0</strong>\uff1a\u7c92\u5b50\u7a7f\u8d8a\u7f51\u683c\u5355\u5143\u8fb9\u754c\u65f6\u7684\u8bef\u5dee</p>\n</li>\n<li>\n<p><strong>\u7c92\u5b50-\u7f51\u683c\u6620\u5c04\u5173\u7cfb</strong></p>\n</li>\n</ol>\n<p>\u5b9a\u4e49\u6743\u91cd\u51fd\u6570\uff1a\n$$w_{ip} = N_i(\\mathbf{x}_p)$$\n\u68af\u5ea6\u6743\u91cd\uff1a\n$$\\nabla w_{ip} = \\nabla N_i(\\mathbf{x}_p)$$\n\u8fd9\u4e9b\u6743\u91cd\u6ee1\u8db3\uff1a</p>\n<ul>\n<li>\u5206\u5272\u7edf\u4e00\u6027\uff1a$\\sum_i w_{ip} = 1$</li>\n<li>\u7d27\u652f\u6027\uff1a\u53ea\u6709\u6709\u9650\u4e2a$w_{ip} \\neq 0$</li>\n<li>\u5149\u6ed1\u6027\uff1a$C^{k-1}$\u8fde\u7eed\uff0c\u5176\u4e2d$k$\u662fB\u6837\u6761\u9636\u6570</li>\n</ul>\n<p>\u7a7a\u95f4\u79bb\u6563\u5316\u7684\u5173\u952e\u662f\u7c92\u5b50-\u7f51\u683c\u4f20\u8f93\uff08P2G\uff09\u548c\u7f51\u683c-\u7c92\u5b50\u4f20\u8f93\uff08G2P\uff09\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u4f20\u8f93\u4fdd\u8bc1\u4e86\u52a8\u91cf\u5b88\u6052\u548c\u6570\u503c\u7a33\u5b9a\u6027\u3002</p>\n<h2 id=\"82-mpm\">8.2 \u7ecf\u5178MPM\u7b97\u6cd5</h2>\n<h3 id=\"821-usl-vs-usf\">8.2.1 \u5e94\u529b\u66f4\u65b0(USL vs USF)</h3>\n<p>MPM\u7b97\u6cd5\u7684\u4e00\u4e2a\u5173\u952e\u9009\u62e9\u662f\u5e94\u529b\u66f4\u65b0\u7684\u65f6\u673a\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u7b56\u7565\uff1a</p>\n<p><strong>Update Stress Last (USL)</strong>\uff1a</p>\n<ol>\n<li>\u7c92\u5b50\u5230\u7f51\u683c\u4f20\u8f93\uff08P2G\uff09</li>\n<li>\u7f51\u683c\u52a8\u91cf\u66f4\u65b0</li>\n<li>\u7f51\u683c\u5230\u7c92\u5b50\u4f20\u8f93\uff08G2P\uff09</li>\n<li>\u5728\u7c92\u5b50\u4e0a\u66f4\u65b0\u5e94\u529b</li>\n</ol>\n<p>USL\u7b97\u6cd5\u6d41\u7a0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"ow\">in</span><span class=\"w\"> </span><span class=\"n\">particles</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"n\">F_p</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">dt</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"err\">\u2207</span><span class=\"n\">v</span><span class=\"o\">^</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">F_p</span><span class=\"o\">^</span><span class=\"n\">n</span>\n<span class=\"w\">    </span><span class=\"err\">\u03c3</span><span class=\"n\">_p</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">constitutive_model</span><span class=\"p\">(</span><span class=\"n\">F_p</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">})</span>\n</code></pre></div>\n\n<p><strong>Update Stress First (USF)</strong>\uff1a</p>\n<ol>\n<li>\u5728\u7c92\u5b50\u4e0a\u66f4\u65b0\u5e94\u529b</li>\n<li>\u7c92\u5b50\u5230\u7f51\u683c\u4f20\u8f93\uff08P2G\uff09</li>\n<li>\u7f51\u683c\u52a8\u91cf\u66f4\u65b0</li>\n<li>\u7f51\u683c\u5230\u7c92\u5b50\u4f20\u8f93\uff08G2P\uff09</li>\n</ol>\n<p>USF\u7b97\u6cd5\u6d41\u7a0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"ow\">in</span><span class=\"w\"> </span><span class=\"n\">particles</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"err\">\u03c3</span><span class=\"n\">_p</span><span class=\"o\">^</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">constitutive_model</span><span class=\"p\">(</span><span class=\"n\">F_p</span><span class=\"o\">^</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"c1\"># \u7136\u540e\u8fdb\u884cP2G\u4f20\u8f93</span>\n</code></pre></div>\n\n<p>USF\u901a\u5e38\u5177\u6709\u66f4\u597d\u7684\u80fd\u91cf\u5b88\u6052\u6027\u8d28\uff0c\u4f46USL\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6570\u503c\u7a33\u5b9a\u6027\u66f4\u597d\u3002\u9009\u62e9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\u548c\u6750\u6599\u6a21\u578b\u3002</p>\n<h3 id=\"822\">8.2.2 \u5f62\u51fd\u6570\u9009\u62e9</h3>\n<p>\u5f62\u51fd\u6570\u7684\u9009\u62e9\u5bf9MPM\u7684\u7cbe\u5ea6\u548c\u7a33\u5b9a\u6027\u6709\u91cd\u8981\u5f71\u54cd\uff0c\u9700\u8981\u5728\u8ba1\u7b97\u6548\u7387\u3001\u6570\u503c\u7cbe\u5ea6\u548c\u7a33\u5b9a\u6027\u4e4b\u95f4\u6743\u8861\uff1a</p>\n<p><strong>\u5f62\u51fd\u6570\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u7279\u6027 | \u7ebf\u6027B\u6837\u6761 | \u4e8c\u6b21B\u6837\u6761 | \u4e09\u6b21B\u6837\u6761 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7279\u6027</th>\n<th>\u7ebf\u6027B\u6837\u6761</th>\n<th>\u4e8c\u6b21B\u6837\u6761</th>\n<th>\u4e09\u6b21B\u6837\u6761</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u652f\u6301\u57df</td>\n<td>$[-1, 1]$</td>\n<td>$[-1.5, 1.5]$</td>\n<td>$[-2, 2]$</td>\n</tr>\n<tr>\n<td>\u5f71\u54cd\u8282\u70b9(2D)</td>\n<td>4</td>\n<td>9</td>\n<td>16</td>\n</tr>\n<tr>\n<td>\u5f71\u54cd\u8282\u70b9(3D)</td>\n<td>8</td>\n<td>27</td>\n<td>64</td>\n</tr>\n<tr>\n<td>\u8fde\u7eed\u6027</td>\n<td>$C^0$</td>\n<td>$C^1$</td>\n<td>$C^2$</td>\n</tr>\n<tr>\n<td>\u8ba1\u7b97\u590d\u6742\u5ea6</td>\n<td>\u4f4e</td>\n<td>\u4e2d</td>\n<td>\u9ad8</td>\n</tr>\n<tr>\n<td>\u683c\u5b50\u566a\u58f0</td>\n<td>\u4e25\u91cd</td>\n<td>\u8f7b\u5fae</td>\n<td>\u51e0\u4e4e\u65e0</td>\n</tr>\n<tr>\n<td>\u5185\u5b58\u5360\u7528</td>\n<td>\u5c0f</td>\n<td>\u4e2d</td>\n<td>\u5927</td>\n</tr>\n</tbody>\n</table>\n<p><strong>\u7ebf\u6027B\u6837\u6761\uff08tent\u51fd\u6570\uff09</strong>\uff1a</p>\n<ul>\n<li>\u4f18\u70b9\uff1a\u8ba1\u7b97\u6548\u7387\u9ad8\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u5185\u5b58\u5360\u7528\u5c0f</li>\n<li>\u7f3a\u70b9\uff1a\u4e25\u91cd\u7684\u683c\u5b50\u566a\u58f0\uff08grid crossing error\uff09\uff0c\u68af\u5ea6\u4e0d\u8fde\u7eed</li>\n<li>\u5e94\u7528\uff1a\u5feb\u901f\u539f\u578b\u5f00\u53d1\uff0c\u5b9e\u65f6\u5e94\u7528\uff0cGPU\u5b9e\u73b0</li>\n<li>\u6570\u5b66\u8868\u8fbe\uff1a$N^1(x) = \\max(0, 1 - |x|)$</li>\n</ul>\n<p><strong>\u4e8c\u6b21B\u6837\u6761</strong>\uff1a</p>\n<ul>\n<li>\u4f18\u70b9\uff1a$C^1$\u8fde\u7eed\uff0c\u683c\u5b50\u566a\u58f0\u8f83\u5c0f\uff0c\u7cbe\u5ea6-\u6548\u7387\u5e73\u8861\u597d</li>\n<li>\u7f3a\u70b9\uff1a\u8ba1\u7b97\u91cf\u662f\u7ebf\u6027\u76843\u500d\u5de6\u53f3</li>\n<li>\u5e94\u7528\uff1a\u5927\u591a\u6570\u751f\u4ea7\u7ea7MPM\u5b9e\u73b0\u7684\u9ed8\u8ba4\u9009\u62e9</li>\n<li>\u7279\u6b8a\u6027\u8d28\uff1a\u6ee1\u8db3\u518d\u751f\u6761\u4ef6\uff0c\u53ef\u7cbe\u786e\u518d\u751f\u7ebf\u6027\u573a</li>\n</ul>\n<p><strong>\u4e09\u6b21B\u6837\u6761</strong>\uff1a</p>\n<ul>\n<li>\u4f18\u70b9\uff1a$C^2$\u8fde\u7eed\uff0c\u51e0\u4e4e\u65e0\u683c\u5b50\u566a\u58f0\uff0c\u9ad8\u7cbe\u5ea6</li>\n<li>\u7f3a\u70b9\uff1a\u8ba1\u7b97\u6210\u672c\u9ad8\uff0c\u5185\u5b58\u5360\u7528\u5927\uff0c\u5b9e\u73b0\u590d\u6742</li>\n<li>\u5e94\u7528\uff1a\u9ad8\u7cbe\u5ea6\u79d1\u5b66\u8ba1\u7b97\uff0c\u5c0f\u89c4\u6a21\u7cbe\u786e\u6a21\u62df</li>\n<li>\u7279\u6b8a\u6027\u8d28\uff1a\u53ef\u7cbe\u786e\u518d\u751f\u4e8c\u6b21\u591a\u9879\u5f0f\u573a</li>\n</ul>\n<p><strong>\u683c\u5b50\u566a\u58f0\uff08Grid Crossing Error\uff09\u5206\u6790</strong>\uff1a</p>\n<p>\u5f53\u7c92\u5b50\u7a7f\u8d8a\u7f51\u683c\u5355\u5143\u8fb9\u754c\u65f6\uff0c\u6743\u91cd\u51fd\u6570\u7684\u4e0d\u8fde\u7eed\u53d8\u5316\u5bfc\u81f4\u7684\u6570\u503c\u566a\u58f0\uff1a\n$$\\text{Error} \\propto \\frac{\\partial^{k+1} N}{\\partial x^{k+1}}$$\n\u5176\u4e2d$k$\u662fB\u6837\u6761\u7684\u9636\u6570\u3002\u9ad8\u9636B\u6837\u6761\u5177\u6709\u66f4\u9ad8\u9636\u7684\u8fde\u7eed\u6027\uff0c\u56e0\u6b64\u683c\u5b50\u566a\u58f0\u66f4\u5c0f\u3002</p>\n<p><strong>\u5f62\u51fd\u6570\u8ba1\u7b97\u4f18\u5316</strong>\uff1a</p>\n<p>\u591a\u7ef4\u5f62\u51fd\u6570\u4f7f\u7528\u5f20\u91cf\u79ef\uff1a\n$$N_i(\\mathbf{x}_p) = \\prod_{d=1}^{\\text{dim}} N^{1D}\\left(\\frac{x_p^d - x_i^d}{\\Delta x}\\right)$$\n\u68af\u5ea6\u8ba1\u7b97\uff08\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\uff09\uff1a\n$$\\nabla N_i(\\mathbf{x}_p) = \\begin{bmatrix}\n\\frac{\\partial N^{1D}_x}{\\partial x} N^{1D}_y N^{1D}_z \\\\\nN^{1D}_x \\frac{\\partial N^{1D}_y}{\\partial y} N^{1D}_z \\\\\nN^{1D}_x N^{1D}_y \\frac{\\partial N^{1D}_z}{\\partial z}\n\\end{bmatrix}$$\n<strong>\u5b9e\u73b0\u6280\u5de7</strong>\uff1a</p>\n<ol>\n<li>\u9884\u8ba1\u7b97\u6743\u91cd\u8868\uff1a\u5bf9\u4e8e\u56fa\u5b9a\u7f51\u683c\uff0c\u9884\u8ba1\u7b97\u5e76\u5b58\u50a8\u6743\u91cd</li>\n<li>SIMD\u4f18\u5316\uff1a\u5229\u7528\u5411\u91cf\u6307\u4ee4\u5e76\u884c\u8ba1\u7b97\u591a\u4e2a\u6743\u91cd</li>\n<li>\u7a00\u758f\u6027\u5229\u7528\uff1a\u53ea\u8ba1\u7b97\u975e\u96f6\u6743\u91cd\uff08\u5229\u7528\u7d27\u652f\u6027\uff09</li>\n<li>\u7f13\u5b58\u4f18\u5316\uff1a\u6309\u7c92\u5b50\u7a7a\u95f4\u4f4d\u7f6e\u6392\u5e8f\uff0c\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387</li>\n</ol>\n<h3 id=\"823\">8.2.3 \u79ef\u5206\u70b9\u4e0e\u80cc\u666f\u7f51\u683c</h3>\n<p>MPM\u4e2d\u7684\u6570\u503c\u79ef\u5206\u4f7f\u7528\u5355\u70b9\u79ef\u5206\u89c4\u5219\uff0c\u6bcf\u4e2a\u7c92\u5b50\u4f5c\u4e3a\u4e00\u4e2a\u79ef\u5206\u70b9\uff0c\u8fd9\u662fMPM\u533a\u522b\u4e8e\u4f20\u7edfFEM\u7684\u5173\u952e\u7279\u5f81\uff1a</p>\n<p><strong>\u79ef\u5206\u8fd1\u4f3c</strong>\uff1a\n$$\\int_\\Omega f(\\mathbf{x}) \\, dV \\approx \\sum_p V_p^0 f(\\mathbf{x}_p)$$\n\u5176\u4e2d$V_p^0$\u662f\u7c92\u5b50\u7684\u521d\u59cb\uff08\u53c2\u8003\uff09\u4f53\u79ef\uff0c\u6ee1\u8db3\uff1a\n$$\\sum_p V_p^0 = V_{\\text{total}}$$\n<strong>\u7c92\u5b50\u4f5c\u4e3a\u79ef\u5206\u70b9\u7684\u7279\u6027</strong>\uff1a</p>\n<ol>\n<li><strong>\u5355\u70b9\u79ef\u5206</strong>\uff1a\u6bcf\u4e2a\u7c92\u5b50\u4f7f\u7528\u5355\u70b9\u6c42\u79ef\u89c4\u5219\uff0c\u53ef\u80fd\u5f15\u5165\u96f6\u80fd\u6a21\u5f0f</li>\n<li><strong>\u6743\u91cd\u66f4\u65b0</strong>\uff1a$V_p = J_p V_p^0$\uff0c\u5176\u4e2d$J_p = \\det(\\mathbf{F}_p)$</li>\n<li><strong>\u5b88\u6052\u6027</strong>\uff1a\u8d28\u91cf\u5b88\u6052\u81ea\u52a8\u6ee1\u8db3\uff0c$m_p = \\rho_0 V_p^0$\u4fdd\u6301\u4e0d\u53d8</li>\n<li><strong>\u7cbe\u5ea6\u5206\u6790</strong>\uff1a\u79ef\u5206\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u7c92\u5b50\u5bc6\u5ea6\u548c\u5206\u5e03\u5747\u5300\u6027</li>\n</ol>\n<p><strong>\u80cc\u666f\u7f51\u683c\u7c7b\u578b\u8be6\u89e3</strong>\uff1a</p>\n<p><strong>1. \u5747\u5300\u7b1b\u5361\u5c14\u7f51\u683c</strong>\uff1a\n- \u7ed3\u6784\uff1a\u89c4\u5219\u7684\u7acb\u65b9\u4f53\u5355\u5143\uff0c\u95f4\u8ddd$\\Delta x$\n- \u7d22\u5f15\uff1a\u76f4\u63a5\u6620\u5c04$(i,j,k) \\rightarrow i + j \\cdot N_x + k \\cdot N_x \\cdot N_y$\n- \u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u7f13\u5b58\u53cb\u597d\uff0cGPU\u9ad8\u6548\n- \u7f3a\u70b9\uff1a\u5185\u5b58\u6d6a\u8d39\uff08\u7a7a\u533a\u57df\u4e5f\u5206\u914d\uff09\n- \u9002\u7528\uff1a\u4e2d\u5c0f\u89c4\u6a21\u3001\u5bc6\u96c6\u578b\u6a21\u62df</p>\n<p><strong>2. SPGrid\uff08Sparse Paged Grid\uff09</strong>\uff1a\n- \u7ed3\u6784\uff1a\u865a\u62df\u5185\u5b58\u9875\uff08\u901a\u5e38512\u00b3\u62161024\u00b3\uff09\n- \u539f\u7406\uff1a\u5229\u7528OS\u7684\u865a\u62df\u5185\u5b58\u7ba1\u7406\uff0c\u672a\u4f7f\u7528\u9875\u4e0d\u5360\u7269\u7406\u5185\u5b58\n- \u4f18\u70b9\uff1a\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u652f\u6301\u8d85\u5927\u57df\n- \u5b9e\u73b0\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6982\u5ff5\u6027\u5b9e\u73b0</span>\n<span class=\"n\">page_mask</span> <span class=\"o\">=</span> <span class=\"mh\">0xFFFFF000</span>  <span class=\"c1\"># 4KB\u9875</span>\n<span class=\"n\">offset_mask</span> <span class=\"o\">=</span> <span class=\"mh\">0x00000FFF</span>\n<span class=\"n\">page_table</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>  <span class=\"c1\"># \u7a00\u758f\u9875\u8868</span>\n</code></pre></div>\n\n<ul>\n<li>\u9002\u7528\uff1a\u5927\u89c4\u6a21\u7a00\u758f\u6a21\u62df\uff08\u5982\u70df\u96fe\uff09</li>\n</ul>\n<p><strong>3. OpenVDB\u98ce\u683c\u5c42\u6b21\u7f51\u683c</strong>\uff1a\n- \u7ed3\u6784\uff1aB+\u6811\uff0c\u5178\u578b\u914d\u7f6e5-4-3\uff08\u6839-\u5185\u90e8-\u53f6\u5b50\uff09\n- \u5206\u8fa8\u7387\uff1a\u652f\u6301$2^{30}$\u7ea7\u522b\u7684\u865a\u62df\u5206\u8fa8\u7387\n- \u4f18\u70b9\uff1a\u6781\u5ea6\u7a00\u758f\u65f6\u5185\u5b58\u6548\u7387\u6700\u9ad8\uff0c\u652f\u6301\u81ea\u9002\u5e94\n- \u7f3a\u70b9\uff1a\u968f\u673a\u8bbf\u95ee\u5f00\u9500\u5927\uff0c\u5b9e\u73b0\u590d\u6742\n- \u9002\u7528\uff1a\u7535\u5f71\u7ea7\u7279\u6548\uff0c\u6781\u5927\u89c4\u6a21\u6a21\u62df</p>\n<p><strong>4. \u81ea\u9002\u5e94\u7f51\u683c\uff08AMR\uff09</strong>\uff1a\n- \u7ed3\u6784\uff1a\u516b\u53c9\u6811\uff083D\uff09\u6216\u56db\u53c9\u6811\uff082D\uff09\n- \u7ec6\u5316\u51c6\u5219\uff1a\u57fa\u4e8e\u7c92\u5b50\u5bc6\u5ea6\u3001\u53d8\u5f62\u68af\u5ea6\u6216\u8bef\u5dee\u4f30\u8ba1\n- \u4f18\u70b9\uff1a\u8ba1\u7b97\u8d44\u6e90\u96c6\u4e2d\u5728\u5173\u952e\u533a\u57df\n- \u6311\u6218\uff1aP2G/G2P\u8de8\u7ea7\u522b\u4f20\u8f93\u590d\u6742</p>\n<p><strong>\u7c92\u5b50\u5206\u5e03\u7b56\u7565</strong>\uff1a</p>\n<p><strong>\u521d\u59cb\u5206\u5e03\u6a21\u5f0f</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u89c4\u5219\u5206\u5e03</strong>\uff1a\n   - 2D\uff1a$2\\times2$\u6216$3\\times3$\u6bcf\u5355\u5143\n   - 3D\uff1a$2\\times2\\times2$\u6216$3\\times3\\times3$\u6bcf\u5355\u5143\n   - \u4f18\u70b9\uff1a\u5747\u5300\uff0c\u6613\u5b9e\u73b0\n   - \u7f3a\u70b9\uff1a\u53ef\u80fd\u4ea7\u751f\u5404\u5411\u5f02\u6027</p>\n</li>\n<li>\n<p><strong>\u968f\u673a\u6270\u52a8</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Jittered sampling</span>\n<span class=\"n\">x_p</span> <span class=\"o\">=</span> <span class=\"n\">x_regular</span> <span class=\"o\">+</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">dx</span> <span class=\"o\">*</span> <span class=\"n\">jitter_factor</span>\n</code></pre></div>\n\n<ul>\n<li>jitter_factor\u901a\u5e38\u53d60.1-0.3</li>\n<li>\u51cf\u5c11\u89c4\u5219\u5206\u5e03\u7684\u4f2a\u5f71</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Poisson\u76d8\u91c7\u6837</strong>\uff1a\n   - \u4fdd\u8bc1\u6700\u5c0f\u95f4\u8ddd$r_{\\min}$\n   - \u84dd\u566a\u58f0\u7279\u6027\uff0c\u66f4\u5747\u5300\n   - \u5b9e\u73b0\u590d\u6742\u4f46\u8d28\u91cf\u6700\u9ad8</li>\n</ol>\n<p><strong>\u7c92\u5b50\u5bc6\u5ea6\u51c6\u5219</strong>\uff1a</p>\n<p>| \u7ef4\u5ea6 | \u6700\u5c0f\u5bc6\u5ea6 | \u63a8\u8350\u5bc6\u5ea6 | \u9ad8\u8d28\u91cf\u5bc6\u5ea6 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7ef4\u5ea6</th>\n<th>\u6700\u5c0f\u5bc6\u5ea6</th>\n<th>\u63a8\u8350\u5bc6\u5ea6</th>\n<th>\u9ad8\u8d28\u91cf\u5bc6\u5ea6</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1D</td>\n<td>2 ppc</td>\n<td>3 ppc</td>\n<td>4 ppc</td>\n</tr>\n<tr>\n<td>2D</td>\n<td>4 ppc</td>\n<td>9 ppc</td>\n<td>16 ppc</td>\n</tr>\n<tr>\n<td>3D</td>\n<td>8 ppc</td>\n<td>27 ppc</td>\n<td>64 ppc</td>\n</tr>\n</tbody>\n</table>\n<p>\uff08ppc = particles per cell\uff09</p>\n<p><strong>\u79ef\u5206\u7cbe\u5ea6\u4e0e\u7c92\u5b50\u6570\u5173\u7cfb</strong>\uff1a\n$$\\text{Error} = O\\left(\\frac{1}{\\sqrt{N_p}}\\right) + O(h^k)$$\n\u7b2c\u4e00\u9879\u662f\u7edf\u8ba1\u8bef\u5dee\uff0c\u7b2c\u4e8c\u9879\u662f\u79bb\u6563\u5316\u8bef\u5dee\u3002</p>\n<h3 id=\"824\">8.2.4 \u8fb9\u754c\u6761\u4ef6\u5904\u7406</h3>\n<p>MPM\u4e2d\u7684\u8fb9\u754c\u6761\u4ef6\u5728\u7f51\u683c\u7ea7\u522b\u65bd\u52a0\uff0c\u8fd9\u662f\u6b27\u62c9\u90e8\u5206\u5904\u7406\u7684\u4f18\u52bf\u3002\u8fb9\u754c\u6761\u4ef6\u7684\u6b63\u786e\u65bd\u52a0\u5bf9\u6a21\u62df\u7684\u7269\u7406\u771f\u5b9e\u6027\u81f3\u5173\u91cd\u8981\uff1a</p>\n<p><strong>\u8fb9\u754c\u6761\u4ef6\u7c7b\u578b</strong>\uff1a</p>\n<p><strong>1. \u7c98\u6027\u8fb9\u754c\uff08Sticky/No-slip\uff09</strong>\uff1a\n\u7269\u7406\u610f\u4e49\uff1a\u5b8c\u5168\u7c98\u9644\uff0c\u6a21\u62df\u7c97\u7cd9\u8868\u9762\u6216\u80f6\u5408\u754c\u9762\n$$\\mathbf{v}_i = \\mathbf{v}_{\\text{wall}} \\quad \\text{if } \\mathbf{x}_i \\in \\partial\\Omega_{\\text{sticky}}$$\n\u901a\u5e38$\\mathbf{v}_{\\text{wall}} = 0$\uff08\u9759\u6b62\u58c1\u9762\uff09\uff0c\u4f46\u4e5f\u53ef\u4ee5\u662f\u8fd0\u52a8\u8fb9\u754c\u3002</p>\n<p><strong>2. \u6ed1\u52a8\u8fb9\u754c\uff08Slip/Free-slip\uff09</strong>\uff1a\n\u7269\u7406\u610f\u4e49\uff1a\u65e0\u6469\u64e6\u6ed1\u52a8\uff0c\u53ea\u7ea6\u675f\u6cd5\u5411\u5206\u91cf\n$$\\begin{cases}\n\\mathbf{v}_i \\cdot \\mathbf{n} = \\mathbf{v}_{\\text{wall}} \\cdot \\mathbf{n} \\\\\n\\mathbf{v}_i^{\\text{new}} = \\mathbf{v}_i - (\\mathbf{v}_i \\cdot \\mathbf{n} - \\mathbf{v}_{\\text{wall}} \\cdot \\mathbf{n})\\mathbf{n}\n\\end{cases}$$</p>\n<p><strong>3. \u5206\u79bb\u8fb9\u754c\uff08Separable/One-way\uff09</strong>\uff1a\n\u7269\u7406\u610f\u4e49\uff1a\u5355\u5411\u7ea6\u675f\uff0c\u5141\u8bb8\u5206\u79bb\u4f46\u963b\u6b62\u7a7f\u900f\n$$\\mathbf{v}_i^{\\text{new}} = \\begin{cases}\n\\mathbf{v}_i - \\min(0, \\mathbf{v}_i \\cdot \\mathbf{n})\\mathbf{n} &amp; \\text{if approaching} \\\\\n\\mathbf{v}_i &amp; \\text{if separating}\n\\end{cases}$$</p>\n<p><strong>4. \u6469\u64e6\u8fb9\u754c\uff08Frictional\uff09</strong>\uff1a\n\u7ed3\u5408\u5e93\u4ed1\u6469\u64e6\u6a21\u578b\uff1a\n$$\\begin{cases}\n\\mathbf{v}_n = -e \\cdot \\mathbf{v}_i \\cdot \\mathbf{n} \\cdot \\mathbf{n} &amp; \\text{(\u6cd5\u5411\uff0ce\u662f\u6062\u590d\u7cfb\u6570)} \\\\\n\\mathbf{v}_t = \\max(0, 1 - \\mu \\frac{|\\mathbf{v}_n|}{|\\mathbf{v}_t|}) \\mathbf{v}_t &amp; \\text{(\u5207\u5411\uff0c\u03bc\u662f\u6469\u64e6\u7cfb\u6570)}\n\\end{cases}$$\n<strong>\u5b9e\u73b0\u7b56\u7565</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">apply_boundary_conditions</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">grid_v</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u68c0\u67e5\u8fb9\u754c</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">boundary_width</span> <span class=\"ow\">or</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"n\">res_x</span> <span class=\"o\">-</span> <span class=\"n\">boundary_width</span><span class=\"p\">:</span>\n            <span class=\"n\">apply_bc_x</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"o\">&lt;</span> <span class=\"n\">boundary_width</span> <span class=\"ow\">or</span> <span class=\"n\">j</span> <span class=\"o\">&gt;=</span> <span class=\"n\">res_y</span> <span class=\"o\">-</span> <span class=\"n\">boundary_width</span><span class=\"p\">:</span>\n            <span class=\"n\">apply_bc_y</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">&lt;</span> <span class=\"n\">boundary_width</span> <span class=\"ow\">or</span> <span class=\"n\">k</span> <span class=\"o\">&gt;=</span> <span class=\"n\">res_z</span> <span class=\"o\">-</span> <span class=\"n\">boundary_width</span><span class=\"p\">:</span>\n            <span class=\"n\">apply_bc_z</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">apply_bc_x</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">boundary_type</span> <span class=\"o\">==</span> <span class=\"n\">STICKY</span><span class=\"p\">:</span>\n        <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">vec3</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">boundary_type</span> <span class=\"o\">==</span> <span class=\"n\">SLIP</span><span class=\"p\">:</span>\n        <span class=\"n\">normal</span> <span class=\"o\">=</span> <span class=\"n\">vec3</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">boundary_width</span> <span class=\"k\">else</span> <span class=\"n\">vec3</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">vn</span> <span class=\"o\">=</span> <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">normal</span><span class=\"p\">)</span>\n        <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">vn</span> <span class=\"o\">*</span> <span class=\"n\">normal</span>\n    <span class=\"k\">elif</span> <span class=\"n\">boundary_type</span> <span class=\"o\">==</span> <span class=\"n\">SEPARATE</span><span class=\"p\">:</span>\n        <span class=\"n\">normal</span> <span class=\"o\">=</span> <span class=\"n\">vec3</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">boundary_width</span> <span class=\"k\">else</span> <span class=\"n\">vec3</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">vn</span> <span class=\"o\">=</span> <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">normal</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">vn</span> <span class=\"o\">*</span> <span class=\"n\">normal</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>  <span class=\"c1\"># \u671d\u5411\u8fb9\u754c</span>\n            <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">vn</span> <span class=\"o\">*</span> <span class=\"n\">normal</span>\n    <span class=\"k\">elif</span> <span class=\"n\">boundary_type</span> <span class=\"o\">==</span> <span class=\"n\">FRICTION</span><span class=\"p\">:</span>\n        <span class=\"n\">apply_friction_bc</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u590d\u6742\u8fb9\u754c\u51e0\u4f55</strong>\uff1a</p>\n<p><strong>1. \u9690\u5f0f\u8868\u9762\uff08Level Set\uff09</strong>\uff1a\n\u4f7f\u7528\u6709\u7b26\u53f7\u8ddd\u79bb\u573a$\\phi(\\mathbf{x})$\u8868\u793a\u8fb9\u754c\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">apply_sdf_boundary</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">):</span>\n    <span class=\"n\">phi</span> <span class=\"o\">=</span> <span class=\"n\">sample_sdf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">phi</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>  <span class=\"c1\"># \u5728\u7269\u4f53\u5185\u90e8</span>\n        <span class=\"n\">normal</span> <span class=\"o\">=</span> <span class=\"n\">compute_sdf_gradient</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">normalized</span><span class=\"p\">()</span>\n        <span class=\"n\">vn</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">normal</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">boundary_type</span> <span class=\"o\">==</span> <span class=\"n\">STICKY</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">vec3</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">boundary_type</span> <span class=\"o\">==</span> <span class=\"n\">SLIP</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">-=</span> <span class=\"n\">vn</span> <span class=\"o\">*</span> <span class=\"n\">normal</span>\n    <span class=\"k\">return</span> <span class=\"n\">v</span>\n</code></pre></div>\n\n<p><strong>2. \u89e3\u6790\u8fb9\u754c</strong>\uff1a\n\u7403\u4f53\u3001\u5e73\u9762\u3001\u76d2\u5b50\u7b49\u7b80\u5355\u51e0\u4f55\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n<span class=\"k\">def</span> <span class=\"nf\">sphere_boundary</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">):</span>\n    <span class=\"n\">dist</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">center</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">dist</span> <span class=\"o\">&lt;</span> <span class=\"n\">radius</span><span class=\"p\">:</span>\n        <span class=\"n\">normal</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">center</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">normalized</span><span class=\"p\">()</span>\n        <span class=\"c1\"># \u5e94\u7528\u8fb9\u754c\u6761\u4ef6</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">apply_bc</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">normal</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">v</span>\n</code></pre></div>\n\n<p><strong>3. \u4e09\u89d2\u7f51\u683c\u8fb9\u754c</strong>\uff1a\n\u590d\u6742\u51e0\u4f55\u4f7f\u7528\u4e09\u89d2\u7f51\u683c\u8868\u793a\uff0c\u9700\u8981\u52a0\u901f\u7ed3\u6784\uff08BVH\u3001\u7a7a\u95f4\u54c8\u5e0c\uff09\u3002</p>\n<p><strong>\u8fb9\u754c\u6761\u4ef6\u7684\u65f6\u673a</strong>\uff1a</p>\n<p>\u6b63\u786e\u7684\u65bd\u52a0\u987a\u5e8f\uff1a</p>\n<ol>\n<li>P2G\u4f20\u8f93</li>\n<li>\u7f51\u683c\u52a8\u91cf\u66f4\u65b0\uff08\u91cd\u529b\u3001\u5185\u529b\uff09</li>\n<li><strong>\u65bd\u52a0\u8fb9\u754c\u6761\u4ef6</strong> \u2190 \u5173\u952e\u65f6\u673a</li>\n<li>G2P\u4f20\u8f93</li>\n</ol>\n<p><strong>\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7c92\u5b50\u7a7f\u900f</strong>\uff1a\n   - \u539f\u56e0\uff1a\u65f6\u95f4\u6b65\u8fc7\u5927\u6216\u8fb9\u754c\u592a\u8584\n   - \u89e3\u51b3\uff1aCFL\u6761\u4ef6\u3001\u591a\u5c42\u8fb9\u754c\u3001\u8fde\u7eed\u78b0\u649e\u68c0\u6d4b</p>\n</li>\n<li>\n<p><strong>\u7c98\u9644\u4f2a\u5f71</strong>\uff1a\n   - \u539f\u56e0\uff1a\u6570\u503c\u7c98\u6027\n   - \u89e3\u51b3\uff1a\u9ad8\u9636\u5f62\u51fd\u6570\u3001FLIP\u6df7\u5408</p>\n</li>\n<li>\n<p><strong>\u8fb9\u754c\u5c42\u5206\u79bb</strong>\uff1a\n   - \u539f\u56e0\uff1a\u8fb9\u754c\u5904\u7c92\u5b50\u7a00\u758f\n   - \u89e3\u51b3\uff1a\u8fb9\u754c\u9644\u8fd1\u589e\u52a0\u7c92\u5b50\u5bc6\u5ea6</p>\n</li>\n<li>\n<p><strong>\u52a8\u91cf\u4e0d\u5b88\u6052</strong>\uff1a\n   - \u539f\u56e0\uff1a\u8fb9\u754c\u529b\u672a\u6b63\u786e\u8ba1\u7b97\n   - \u89e3\u51b3\uff1a\u8bb0\u5f55\u8fb9\u754c\u51b2\u91cf\uff0c\u7528\u4e8e\u540e\u5904\u7406\u5206\u6790</p>\n</li>\n</ol>\n<h2 id=\"83-mpmmls-mpm\">8.3 \u79fb\u52a8\u6700\u5c0f\u4e8c\u4e58MPM(MLS-MPM)</h2>\n<h3 id=\"831-mls\">8.3.1 MLS\u63d2\u503c\u7406\u8bba</h3>\n<p>MLS-MPM\u662fHu\u7b49\u4eba\u57282018\u5e74\u63d0\u51fa\u7684MPM\u7b80\u5316\u7248\u672c\uff0c\u6838\u5fc3\u601d\u60f3\u662f\u4f7f\u7528\u79fb\u52a8\u6700\u5c0f\u4e8c\u4e58\uff08Moving Least Squares\uff09\u63d2\u503c\u66ff\u4ee3\u4f20\u7edf\u7684B\u6837\u6761\u63d2\u503c\u3002</p>\n<p>MLS\u63d2\u503c\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u591a\u9879\u5f0f$p(\\mathbf{x})$\uff0c\u6700\u5c0f\u5316\u52a0\u6743\u8bef\u5dee\uff1a\n$$\\min_p \\sum_i w_i(\\mathbf{x}) [p(\\mathbf{x}_i) - f_i]^2$$\n\u5176\u4e2d$w_i(\\mathbf{x})$\u662f\u6743\u91cd\u51fd\u6570\u3002</p>\n<p>\u5bf9\u4e8e\u4e00\u9636MLS\uff08\u7ebf\u6027\uff09\uff0c\u6211\u4eec\u5bfb\u627e\uff1a\n$$p(\\mathbf{x}) = \\mathbf{a}^T \\mathbf{x} + b$$\n\u89e3\u5f97\u7cfb\u6570\u540e\uff0cMLS\u5f62\u51fd\u6570\u4e3a\uff1a\n$$\\phi_i(\\mathbf{x}) = w_i(\\mathbf{x}) \\mathbf{q}^T(\\mathbf{x}) \\mathbf{M}^{-1}(\\mathbf{x}) \\mathbf{q}(\\mathbf{x}_i)$$\n\u5176\u4e2d$\\mathbf{q}(\\mathbf{x}) = [1, x, y, z]^T$\u662f\u57fa\u51fd\u6570\u5411\u91cf\u3002</p>\n<h3 id=\"832-88\">8.3.2 88\u884c\u5b9e\u73b0\u89e3\u6790</h3>\n<p>MLS-MPM\u7684\u4e00\u4e2a\u91cd\u8981\u8d21\u732e\u662f\u6781\u7b80\u7684\u5b9e\u73b0\u3002\u4ee5\u4e0b\u662f\u6838\u5fc3\u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u89e3\u6790\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u521d\u59cb\u5316</span>\n<span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">particles</span><span class=\"p\">:</span>\n    <span class=\"n\">x_p</span> <span class=\"o\">=</span> <span class=\"n\">initial_position</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span>\n    <span class=\"n\">v_p</span> <span class=\"o\">=</span> <span class=\"n\">initial_velocity</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span>\n    <span class=\"n\">F_p</span> <span class=\"o\">=</span> <span class=\"n\">I</span>  <span class=\"c1\"># \u53d8\u5f62\u68af\u5ea6\u521d\u59cb\u4e3a\u5355\u4f4d\u77e9\u9635</span>\n    <span class=\"n\">C_p</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>  <span class=\"c1\"># \u4eff\u5c04\u901f\u5ea6\u573a\u77e9\u9635</span>\n\n<span class=\"c1\"># \u4e3b\u5faa\u73af</span>\n<span class=\"k\">for</span> <span class=\"n\">step</span> <span class=\"ow\">in</span> <span class=\"n\">time_steps</span><span class=\"p\">:</span>\n    <span class=\"c1\"># \u6e05\u7a7a\u7f51\u683c</span>\n    <span class=\"n\">grid_v</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">grid_m</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"c1\"># P2G: \u7c92\u5b50\u5230\u7f51\u683c</span>\n    <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">particles</span><span class=\"p\">:</span>\n        <span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x_p</span> <span class=\"o\">/</span> <span class=\"n\">dx</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">int</span><span class=\"p\">()</span>\n        <span class=\"n\">fx</span> <span class=\"o\">=</span> <span class=\"n\">x_p</span> <span class=\"o\">/</span> <span class=\"n\">dx</span> <span class=\"o\">-</span> <span class=\"n\">base</span>\n\n        <span class=\"c1\"># \u4e8c\u6b21B\u6837\u6761\u6743\u91cd</span>\n        <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"mf\">1.5</span> <span class=\"o\">-</span> <span class=\"n\">fx</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n             <span class=\"mf\">0.75</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">fx</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n             <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">fx</span> <span class=\"o\">-</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u5e94\u529b\uff08\u672c\u6784\u6a21\u578b\uff09</span>\n        <span class=\"n\">stress</span> <span class=\"o\">=</span> <span class=\"n\">constitutive_model</span><span class=\"p\">(</span><span class=\"n\">F_p</span><span class=\"p\">)</span>\n        <span class=\"n\">affine</span> <span class=\"o\">=</span> <span class=\"n\">stress</span> <span class=\"o\">+</span> <span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"n\">C_p</span>\n\n        <span class=\"c1\"># \u4f20\u8f93\u5230\u7f51\u683c</span>\n        <span class=\"k\">for</span> <span class=\"n\">offset</span> <span class=\"ow\">in</span> <span class=\"mi\">3</span><span class=\"n\">x3x3</span><span class=\"p\">:</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">base</span> <span class=\"o\">+</span> <span class=\"n\">offset</span>\n            <span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">offset</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">offset</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">offset</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">]</span>\n            <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">weight</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"n\">v_p</span> <span class=\"o\">+</span> <span class=\"n\">affine</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x_i</span> <span class=\"o\">-</span> <span class=\"n\">x_p</span><span class=\"p\">))</span>\n            <span class=\"n\">grid_m</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">weight</span> <span class=\"o\">*</span> <span class=\"n\">mass</span>\n\n    <span class=\"c1\"># \u7f51\u683c\u66f4\u65b0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">grid</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">grid_m</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">/=</span> <span class=\"n\">grid_m</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>  <span class=\"c1\"># \u52a8\u91cf\u8f6c\u901f\u5ea6</span>\n            <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">gravity</span>  <span class=\"c1\"># \u91cd\u529b</span>\n            <span class=\"c1\"># \u65bd\u52a0\u8fb9\u754c\u6761\u4ef6</span>\n            <span class=\"n\">apply_boundary_conditions</span><span class=\"p\">(</span><span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># G2P: \u7f51\u683c\u5230\u7c92\u5b50</span>\n    <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">particles</span><span class=\"p\">:</span>\n        <span class=\"n\">v_p</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">C_p</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">offset</span> <span class=\"ow\">in</span> <span class=\"mi\">3</span><span class=\"n\">x3x3</span><span class=\"p\">:</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">base</span> <span class=\"o\">+</span> <span class=\"n\">offset</span>\n            <span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">offset</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">offset</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">w</span><span class=\"p\">[</span><span class=\"n\">offset</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">]</span>\n            <span class=\"n\">v_p</span> <span class=\"o\">+=</span> <span class=\"n\">weight</span> <span class=\"o\">*</span> <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"n\">C_p</span> <span class=\"o\">+=</span> <span class=\"mi\">4</span> <span class=\"o\">*</span> <span class=\"n\">weight</span> <span class=\"o\">*</span> <span class=\"n\">grid_v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x_i</span> <span class=\"o\">-</span> <span class=\"n\">x_p</span><span class=\"p\">)</span><span class=\"o\">^</span><span class=\"n\">T</span> <span class=\"o\">/</span> <span class=\"n\">dx</span><span class=\"o\">^</span><span class=\"mi\">2</span>\n\n        <span class=\"c1\"># \u66f4\u65b0\u4f4d\u7f6e\u548c\u53d8\u5f62\u68af\u5ea6</span>\n        <span class=\"n\">x_p</span> <span class=\"o\">+=</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">v_p</span>\n        <span class=\"n\">F_p</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">I</span> <span class=\"o\">+</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">C_p</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">F_p</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u7b80\u5316\uff1a</p>\n<ol>\n<li>\u76f4\u63a5\u4f7f\u7528$\\mathbf{C}_p$\u77e9\u9635\u8fd1\u4f3c\u901f\u5ea6\u68af\u5ea6$\\nabla \\mathbf{v}$</li>\n<li>\u53d8\u5f62\u68af\u5ea6\u66f4\u65b0\uff1a$\\mathbf{F}^{n+1} = (\\mathbf{I} + \\Delta t \\mathbf{C}^n) \\mathbf{F}^n$</li>\n<li>\u4f53\u79ef\u66f4\u65b0\uff1a$J_{p} *= 1 + \\Delta t \\cdot \\text{trace}(\\mathbf{C})$</li>\n</ol>\n<h3 id=\"833\">8.3.3 \u6027\u80fd\u4f18\u52bf\u5206\u6790</h3>\n<p>MLS-MPM\u76f8\u6bd4\u4f20\u7edfMPM\u7684\u6027\u80fd\u4f18\u52bf\uff1a</p>\n<ol>\n<li>\n<p><strong>\u8ba1\u7b97\u590d\u6742\u5ea6\u964d\u4f4e</strong>\uff1a\n   - \u4f20\u7edfMPM\u9700\u8981\u8ba1\u7b97$\\nabla N_i$\uff1a\u7ea630 FLOPs/\u7c92\u5b50\n   - MLS-MPM\u76f4\u63a5\u4f7f\u7528$\\mathbf{C}_p$\uff1a\u7ea615 FLOPs/\u7c92\u5b50\n   - FLOPs\u51cf\u5c11\u7ea650%</p>\n</li>\n<li>\n<p><strong>\u5185\u5b58\u8bbf\u95ee\u4f18\u5316</strong>\uff1a\n   - \u51cf\u5c11\u4e86\u68af\u5ea6\u8ba1\u7b97\u7684\u5185\u5b58\u8bbf\u95ee\n   - \u66f4\u597d\u7684\u7f13\u5b58\u5c40\u90e8\u6027\n   - \u9002\u5408GPU\u5b9e\u73b0</p>\n</li>\n<li>\n<p><strong>\u6570\u503c\u7a33\u5b9a\u6027</strong>\uff1a\n   - \u81ea\u7136\u6ee1\u8db3\u89d2\u52a8\u91cf\u5b88\u6052\n   - \u51cf\u5c11\u4e86\u6570\u503c\u8017\u6563\n   - \u66f4\u7a33\u5b9a\u7684\u5927\u65f6\u95f4\u6b65\u957f</p>\n</li>\n<li>\n<p><strong>\u5b9e\u73b0\u7b80\u6d01\u6027</strong>\uff1a\n   - \u4ee3\u7801\u884c\u6570\u5927\u5e45\u51cf\u5c11\n   - \u6613\u4e8e\u7406\u89e3\u548c\u8c03\u8bd5\n   - \u4fbf\u4e8e\u6269\u5c55\u5230\u4e0d\u540c\u6750\u6599\u6a21\u578b</p>\n</li>\n</ol>\n<h3 id=\"834-apic\">8.3.4 \u4e0eAPIC\u7684\u5173\u7cfb</h3>\n<p>MLS-MPM\u672c\u8d28\u4e0a\u662fAPIC\uff08Affine Particle-in-Cell\uff09\u65b9\u6cd5\u5728\u5f39\u6027\u56fa\u4f53\u4e0a\u7684\u5e94\u7528\uff1a</p>\n<p><strong>APIC\u56de\u987e</strong>\uff1a</p>\n<ul>\n<li>\u7c92\u5b50\u643a\u5e26\u4eff\u5c04\u901f\u5ea6\u573a\uff1a$\\mathbf{v}(\\mathbf{x}) = \\mathbf{v}_p + \\mathbf{C}_p(\\mathbf{x} - \\mathbf{x}_p)$</li>\n<li>\u4fdd\u8bc1\u89d2\u52a8\u91cf\u5b88\u6052</li>\n</ul>\n<p><strong>MLS-MPM\u7684\u521b\u65b0</strong>\uff1a</p>\n<ol>\n<li>\u5c06APIC\u7684\u52a8\u91cf\u4f20\u8f93\u7528\u4e8eMPM</li>\n<li>\u5728P2G\u9636\u6bb5\u878d\u5408\u4e86\u5f39\u6027\u529b\u8ba1\u7b97</li>\n<li>\u7edf\u4e00\u4e86\u6d41\u4f53\u548c\u56fa\u4f53\u7684\u5904\u7406\u6846\u67b6</li>\n</ol>\n<p>\u6570\u5b66\u5173\u7cfb\uff1a\n$$\\mathbf{C}_p^{APIC} = \\mathbf{C}_p^{MLS-MPM} \\quad \\text{(\u901f\u5ea6\u68af\u5ea6\u77e9\u9635\u76f8\u540c)}$$</p>\n<p>$$\\text{MLS-MPM} = \\text{APIC} + \\text{\u5f39\u6027\u529b} + \\text{\u672c\u6784\u6a21\u578b}$$\n\u8fd9\u79cd\u7edf\u4e00\u4f7f\u5f97MLS-MPM\u53ef\u4ee5\u65e0\u7f1d\u5904\u7406\u6d41\u56fa\u8026\u5408\u95ee\u9898\u3002</p>\n<h2 id=\"84-mpm\">8.4 MPM\u4e2d\u7684\u672c\u6784\u6a21\u578b</h2>\n<h3 id=\"841-neo-hookean-corotated\">8.4.1 \u5f39\u6027\u56fa\u4f53(Neo-Hookean, Corotated)</h3>\n<p>MPM\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u5404\u79cd\u8d85\u5f39\u6027\u6750\u6599\u6a21\u578b\u3002\u6700\u5e38\u7528\u7684\u662fNeo-Hookean\u548cCorotated\u6a21\u578b\u3002</p>\n<p><strong>Neo-Hookean\u6a21\u578b</strong>\uff1a\n\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570\uff1a\n$$\\psi(\\mathbf{F}) = \\frac{\\mu}{2}(\\text{tr}(\\mathbf{F}^T\\mathbf{F}) - d) - \\mu\\ln(J) + \\frac{\\lambda}{2}\\ln^2(J)$$\n\u5176\u4e2d$J = \\det(\\mathbf{F})$\uff0c$d$\u662f\u7a7a\u95f4\u7ef4\u5ea6\uff0c$\\mu$\u548c$\\lambda$\u662fLam\u00e9\u53c2\u6570\uff1a\n$$\\mu = \\frac{E}{2(1+\\nu)}, \\quad \\lambda = \\frac{E\\nu}{(1+\\nu)(1-2\\nu)}$$\n\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529b\uff1a\n$$\\mathbf{P}(\\mathbf{F}) = \\mu(\\mathbf{F} - \\mathbf{F}^{-T}) + \\lambda\\ln(J)\\mathbf{F}^{-T}$$\n<strong>Corotated\u6a21\u578b</strong>\uff1a\n\u4f7f\u7528\u6781\u5206\u89e3$\\mathbf{F} = \\mathbf{R}\\mathbf{S}$\uff0c\u5176\u4e2d$\\mathbf{R}$\u662f\u65cb\u8f6c\u77e9\u9635\uff0c$\\mathbf{S}$\u662f\u5bf9\u79f0\u77e9\u9635\u3002</p>\n<p>\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570\uff1a\n$$\\psi(\\mathbf{F}) = \\mu\\sum_i(\\sigma_i - 1)^2 + \\frac{\\lambda}{2}(J - 1)^2$$\n\u5176\u4e2d$\\sigma_i$\u662f$\\mathbf{F}$\u7684\u5947\u5f02\u503c\u3002</p>\n<p>\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529b\uff1a\n$$\\mathbf{P}(\\mathbf{F}) = 2\\mu(\\mathbf{F} - \\mathbf{R}) + \\lambda(J - 1)J\\mathbf{F}^{-T}$$\nCorotated\u6a21\u578b\u66f4\u9002\u5408\u5927\u65cb\u8f6c\u5c0f\u5e94\u53d8\u7684\u60c5\u51b5\uff0c\u800cNeo-Hookean\u66f4\u9002\u5408\u5927\u53d8\u5f62\u3002</p>\n<h3 id=\"842\">8.4.2 \u5f31\u53ef\u538b\u7f29\u6d41\u4f53</h3>\n<p>\u5bf9\u4e8e\u6d41\u4f53\u6a21\u62df\uff0cMPM\u53ef\u4ee5\u4f7f\u7528\u7b80\u5316\u7684\u72b6\u6001\u65b9\u7a0b\u6a21\u578b\u3002</p>\n<p><strong>\u72b6\u6001\u65b9\u7a0b</strong>\uff1a\n$$p = K(1 - J)$$\n\u5176\u4e2d$K$\u662f\u4f53\u79ef\u6a21\u91cf\uff0c$J = \\det(\\mathbf{F})$\u662f\u4f53\u79ef\u6bd4\u3002</p>\n<p><strong>\u6d41\u4f53\u7684\u7279\u6b8a\u5904\u7406</strong>\uff1a</p>\n<ol>\n<li>\u53ea\u7ef4\u62a4$J$\u800c\u4e0d\u662f\u5b8c\u6574\u7684$\\mathbf{F}$\u77e9\u9635</li>\n<li>\u907f\u514d\u6570\u503c\u4e0d\u7a33\u5b9a\u6027</li>\n<li>\u538b\u529b\u8d21\u732e\uff1a$\\mathbf{P} = -pJ\\mathbf{F}^{-T}$</li>\n</ol>\n<p><strong>\u7c98\u6027\u9879</strong>\uff1a\n\u53ef\u4ee5\u6dfb\u52a0\u7c98\u6027\u5e94\u529b\uff1a\n$$\\boldsymbol{\\tau}_{\\text{viscous}} = \\mu(\\nabla\\mathbf{v} + \\nabla\\mathbf{v}^T)$$\n\u5728P2G\u9636\u6bb5\u76f4\u63a5\u4f7f\u7528$\\mathbf{C}_p$\u8ba1\u7b97\u7c98\u6027\u529b\u3002</p>\n<h3 id=\"843\">8.4.3 \u5f39\u5851\u6027\u6750\u6599</h3>\n<p>\u5f39\u5851\u6027\u6750\u6599\u5728\u8d85\u8fc7\u5c48\u670d\u6781\u9650\u540e\u4f1a\u4ea7\u751f\u6c38\u4e45\u53d8\u5f62\u3002MPM\u4e2d\u5e38\u7528\u4e58\u6cd5\u5206\u89e3\uff1a\n$$\\mathbf{F} = \\mathbf{F}^e \\mathbf{F}^p$$\n\u5176\u4e2d$\\mathbf{F}^e$\u662f\u5f39\u6027\u53d8\u5f62\uff0c$\\mathbf{F}^p$\u662f\u5851\u6027\u53d8\u5f62\u3002</p>\n<p><strong>\u5c48\u670d\u51c6\u5219</strong>\uff1a\n\u5224\u65ad\u6750\u6599\u662f\u5426\u8fdb\u5165\u5851\u6027\u72b6\u6001\u3002\u5e38\u7528\u7684\u6709\uff1a</p>\n<ol>\n<li>\n<p><strong>von Mises\u51c6\u5219</strong>\uff08\u91d1\u5c5e\uff09\uff1a\n$$f = \\sqrt{\\frac{3}{2}\\mathbf{s}:\\mathbf{s}} - \\sigma_Y \\leq 0$$\n\u5176\u4e2d$\\mathbf{s}$\u662f\u504f\u5e94\u529b\u5f20\u91cf\uff0c$\\sigma_Y$\u662f\u5c48\u670d\u5e94\u529b\u3002</p>\n</li>\n<li>\n<p><strong>Drucker-Prager\u51c6\u5219</strong>\uff08\u7802\u571f\uff09\uff1a\n$$f = \\sqrt{J_2} + \\alpha I_1 - k \\leq 0$$\n\u5176\u4e2d$I_1$\u662f\u7b2c\u4e00\u5e94\u529b\u4e0d\u53d8\u91cf\uff0c$J_2$\u662f\u7b2c\u4e8c\u504f\u5e94\u529b\u4e0d\u53d8\u91cf\u3002</p>\n</li>\n</ol>\n<p><strong>\u8fd4\u56de\u6620\u5c04\u7b97\u6cd5</strong>\uff1a\n\u5f53\u5e94\u529b\u8d85\u8fc7\u5c48\u670d\u9762\u65f6\uff0c\u9700\u8981\u5c06\u5e94\u529b\u6295\u5f71\u56de\u5c48\u670d\u9762\u4e0a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># SVD\u5206\u89e3</span>\n<span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">Sigma</span><span class=\"p\">,</span> <span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"n\">svd</span><span class=\"p\">(</span><span class=\"n\">F_elastic</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># von Mises\u8fd4\u56de\u6620\u5c04</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">Sigma</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">yield_surface</span><span class=\"p\">:</span>\n        <span class=\"n\">Sigma</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">yield_surface</span>\n    <span class=\"k\">elif</span> <span class=\"n\">Sigma</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"o\">-</span><span class=\"n\">yield_surface</span><span class=\"p\">:</span>\n        <span class=\"n\">Sigma</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">yield_surface</span>\n\n<span class=\"c1\"># \u91cd\u6784\u5f39\u6027\u53d8\u5f62\u68af\u5ea6</span>\n<span class=\"n\">F_elastic</span> <span class=\"o\">=</span> <span class=\"n\">U</span> <span class=\"o\">@</span> <span class=\"n\">diag</span><span class=\"p\">(</span><span class=\"n\">Sigma</span><span class=\"p\">)</span> <span class=\"o\">@</span> <span class=\"n\">V</span><span class=\"o\">.</span><span class=\"n\">T</span>\n</code></pre></div>\n\n<h3 id=\"844\">8.4.4 \u5c48\u670d\u51c6\u5219\u4e0e\u5851\u6027\u6d41\u52a8</h3>\n<p>\u5851\u6027\u6d41\u52a8\u7684\u65b9\u5411\u7531\u6d41\u52a8\u6cd5\u5219\u51b3\u5b9a\uff1a</p>\n<p><strong>\u5173\u8054\u6d41\u52a8\u6cd5\u5219</strong>\uff1a\n$$\\dot{\\boldsymbol{\\varepsilon}}^p = \\dot{\\lambda} \\frac{\\partial f}{\\partial \\boldsymbol{\\sigma}}$$\n\u5176\u4e2d$\\dot{\\lambda}$\u662f\u5851\u6027\u4e58\u5b50\uff0c$f$\u662f\u5c48\u670d\u51fd\u6570\u3002</p>\n<p><strong>\u5177\u4f53\u6a21\u578b\u5b9e\u4f8b</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u96ea\u7684\u6a21\u578b</strong>\uff08Stomakhin 2013\uff09\uff1a\n   - \u4f7f\u7528\u53ef\u53d8\u7684\u4e34\u754c\u538b\u7f29\u548c\u62c9\u4f38\u6bd4\n   - \u786c\u5316\u53c2\u6570\u968f\u5851\u6027\u53d8\u5f62\u589e\u52a0\n   - $\\theta_c = \\theta_{c0}(1 + \\xi\\max(0, \\varepsilon_p))$</p>\n</li>\n<li>\n<p><strong>\u6c99\u5b50\u6a21\u578b</strong>\uff08Kl\u00e1r 2016\uff09\uff1a\n   - Drucker-Prager\u5c48\u670d\u51c6\u5219\n   - \u4f53\u79ef\u4fdd\u6301\uff1a$\\det(\\mathbf{F}^p) = 1$\n   - \u6469\u64e6\u89d2$\\phi$\u548c\u5185\u805a\u529b$c$</p>\n</li>\n<li>\n<p><strong>\u6ce5\u571f\u6a21\u578b</strong>\uff08Cam-Clay\uff09\uff1a\n   - \u692d\u5706\u5f62\u5c48\u670d\u9762\n   - \u786c\u5316/\u8f6f\u5316\u884c\u4e3a\n   - \u4e34\u754c\u72b6\u6001\u7ebf</p>\n</li>\n</ol>\n<p><strong>SVD\u5939\u6301\u6280\u5de7</strong>\uff1a\nMPM\u4e2d\u5e38\u7528SVD\u5206\u89e3\u5904\u7406\u5851\u6027\uff1a\n$$\\mathbf{F} = \\mathbf{U}\\boldsymbol{\\Sigma}\\mathbf{V}^T$$\n\u901a\u8fc7\u5939\u6301\u5947\u5f02\u503c$\\boldsymbol{\\Sigma}$\u5230\u5c48\u670d\u9762\u5185\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5b9e\u73b0\u5404\u79cd\u5c48\u670d\u51c6\u5219\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Box\u5c48\u670d\u51c6\u5219\uff08\u7528\u4e8e\u96ea\uff09</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"p\">):</span>\n    <span class=\"n\">Sigma</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">Sigma</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">theta_c</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"n\">theta_s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Drucker-Prager\uff08\u7528\u4e8e\u6c99\u5b50\uff09</span>\n<span class=\"k\">if</span> <span class=\"n\">trace</span><span class=\"p\">(</span><span class=\"n\">Sigma</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>  <span class=\"c1\"># \u538b\u7f29</span>\n    <span class=\"c1\"># \u6295\u5f71\u5230\u5c48\u670d\u9762</span>\n    <span class=\"n\">project_to_yield_surface</span><span class=\"p\">(</span><span class=\"n\">Sigma</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h2 id=\"85-mpm\">8.5 MPM\u4e2d\u7684\u62c9\u683c\u6717\u65e5\u529b</h2>\n<h3 id=\"851\">8.5.1 \u5f39\u7c27\u4e0e\u963b\u5c3c\u5668</h3>\n<p>MPM\u53ef\u4ee5\u7ed3\u5408\u62c9\u683c\u6717\u65e5\u529b\u6765\u6a21\u62df\u989d\u5916\u7684\u7ea6\u675f\u548c\u76f8\u4e92\u4f5c\u7528\u3002\u6700\u5e38\u89c1\u7684\u662f\u5f39\u7c27-\u963b\u5c3c\u7cfb\u7edf\u3002</p>\n<p><strong>\u5f39\u7c27\u529b\u6a21\u578b</strong>\uff1a\n\u4e24\u4e2a\u7c92\u5b50\u4e4b\u95f4\u7684\u5f39\u7c27\u529b\uff1a\n$$\\mathbf{f}_{spring} = -k_s(||\\mathbf{x}_i - \\mathbf{x}_j|| - L_0)\\frac{\\mathbf{x}_i - \\mathbf{x}_j}{||\\mathbf{x}_i - \\mathbf{x}_j||}$$\n\u5176\u4e2d$k_s$\u662f\u5f39\u7c27\u521a\u5ea6\uff0c$L_0$\u662f\u539f\u59cb\u957f\u5ea6\u3002</p>\n<p><strong>\u963b\u5c3c\u529b</strong>\uff1a\n$$\\mathbf{f}_{damp} = -k_d(\\mathbf{v}_i - \\mathbf{v}_j) \\cdot \\frac{\\mathbf{x}_i - \\mathbf{x}_j}{||\\mathbf{x}_i - \\mathbf{x}_j||} \\cdot \\frac{\\mathbf{x}_i - \\mathbf{x}_j}{||\\mathbf{x}_i - \\mathbf{x}_j||}$$\n<strong>\u5b9e\u73b0\u65b9\u5f0f</strong>\uff1a</p>\n<ol>\n<li>\u5728P2G\u4e4b\u524d\u8ba1\u7b97\u62c9\u683c\u6717\u65e5\u529b</li>\n<li>\u5c06\u529b\u8f6c\u6362\u4e3a\u52a8\u91cf\u53d8\u5316</li>\n<li>\u5728P2G\u9636\u6bb5\u4f20\u8f93\u5230\u7f51\u683c</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u8ba1\u7b97\u5f39\u7c27\u529b</span>\n<span class=\"k\">for</span> <span class=\"n\">spring</span> <span class=\"ow\">in</span> <span class=\"n\">springs</span><span class=\"p\">:</span>\n    <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">spring</span><span class=\"o\">.</span><span class=\"n\">endpoints</span>\n    <span class=\"n\">direction</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">normalized</span><span class=\"p\">()</span>\n    <span class=\"n\">stretch</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">spring</span><span class=\"o\">.</span><span class=\"n\">rest_length</span>\n\n    <span class=\"c1\"># \u5f39\u7c27\u529b</span>\n    <span class=\"n\">f_spring</span> <span class=\"o\">=</span> <span class=\"n\">spring</span><span class=\"o\">.</span><span class=\"n\">stiffness</span> <span class=\"o\">*</span> <span class=\"n\">stretch</span> <span class=\"o\">*</span> <span class=\"n\">direction</span>\n\n    <span class=\"c1\"># \u963b\u5c3c\u529b</span>\n    <span class=\"n\">v_rel</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"n\">f_damp</span> <span class=\"o\">=</span> <span class=\"n\">spring</span><span class=\"o\">.</span><span class=\"n\">damping</span> <span class=\"o\">*</span> <span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">v_rel</span><span class=\"p\">,</span> <span class=\"n\">direction</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">direction</span>\n\n    <span class=\"c1\"># \u5e94\u7528\u529b</span>\n    <span class=\"n\">forces</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">f_spring</span> <span class=\"o\">+</span> <span class=\"n\">f_damp</span>\n    <span class=\"n\">forces</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">f_spring</span> <span class=\"o\">+</span> <span class=\"n\">f_damp</span>\n</code></pre></div>\n\n<h3 id=\"852\">8.5.2 \u8584\u58f3\u4e0e\u8584\u819c</h3>\n<p>MPM\u53ef\u4ee5\u5904\u7406\u5d4c\u5165\u5728\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4e\u7ef4\u7ed3\u6784\u3002</p>\n<p><strong>\u8584\u819c\u6a21\u578b</strong>\uff1a\n\u4f7f\u7528\u9762\u5185\u5e94\u53d8\u80fd\uff1a\n$$\\psi_{membrane} = \\frac{h}{2}\\int_S \\mathbf{E} : \\mathbb{C} : \\mathbf{E} \\, dS$$\n\u5176\u4e2d$h$\u662f\u539a\u5ea6\uff0c$\\mathbf{E}$\u662fGreen\u5e94\u53d8\u5f20\u91cf\uff0c$\\mathbb{C}$\u662f\u5f39\u6027\u5f20\u91cf\u3002</p>\n<p><strong>\u5f2f\u66f2\u80fd</strong>\uff1a\n\u5bf9\u4e8e\u8584\u58f3\uff0c\u9700\u8981\u6dfb\u52a0\u5f2f\u66f2\u9879\uff1a\n$$\\psi_{bending} = \\frac{h^3}{24}\\int_S \\kappa^2 \\, dS$$\n\u5176\u4e2d$\\kappa$\u662f\u66f2\u7387\u3002</p>\n<p><strong>\u79bb\u6563\u5316\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\u4f7f\u7528\u4e09\u89d2\u7f51\u683c\u8868\u793a\u8584\u58f3</li>\n<li>\u6bcf\u4e2a\u4e09\u89d2\u5f62\u8ba1\u7b97\u5e94\u53d8\u80fd</li>\n<li>\u5c06\u529b\u8d21\u732e\u4f20\u8f93\u5230MPM\u7c92\u5b50</li>\n</ol>\n<p><strong>\u8026\u5408\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li>\u5355\u5411\u8026\u5408\uff1a\u8584\u58f3\u5f71\u54cd\u6d41\u4f53\u4f46\u4e0d\u53d7\u6d41\u4f53\u5f71\u54cd</li>\n<li>\u53cc\u5411\u8026\u5408\uff1a\u901a\u8fc7\u7f51\u683c\u4ea4\u6362\u52a8\u91cf</li>\n</ul>\n<h3 id=\"853\">8.5.3 \u521a\u4f53\u7ea6\u675f</h3>\n<p>MPM\u53ef\u4ee5\u4e0e\u521a\u4f53\u52a8\u529b\u5b66\u8026\u5408\uff0c\u5b9e\u73b0\u521a\u4f53-\u53d8\u5f62\u4f53\u76f8\u4e92\u4f5c\u7528\u3002</p>\n<p><strong>\u521a\u4f53\u8868\u793a</strong>\uff1a</p>\n<ul>\n<li>\u8d28\u5fc3\u4f4d\u7f6e\uff1a$\\mathbf{x}_c$</li>\n<li>\u59ff\u6001\u56db\u5143\u6570\uff1a$\\mathbf{q}$</li>\n<li>\u7ebf\u901f\u5ea6\uff1a$\\mathbf{v}_c$</li>\n<li>\u89d2\u901f\u5ea6\uff1a$\\boldsymbol{\\omega}$</li>\n</ul>\n<p><strong>\u7ea6\u675f\u65bd\u52a0</strong>\uff1a\n\u5bf9\u4e8e\u9644\u7740\u5728\u521a\u4f53\u4e0a\u7684\u7c92\u5b50\uff1a\n$$\\mathbf{v}_p = \\mathbf{v}_c + \\boldsymbol{\\omega} \\times (\\mathbf{x}_p - \\mathbf{x}_c)$$\n<strong>\u78b0\u649e\u5904\u7406</strong>\uff1a</p>\n<ol>\n<li>\u68c0\u6d4b\u7c92\u5b50\u4e0e\u521a\u4f53\u7684\u78b0\u649e</li>\n<li>\u8ba1\u7b97\u51b2\u91cf\u54cd\u5e94</li>\n<li>\u66f4\u65b0\u7c92\u5b50\u548c\u521a\u4f53\u7684\u901f\u5ea6</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u521a\u4f53\u7ea6\u675f</span>\n<span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">constrained_particles</span><span class=\"p\">:</span>\n    <span class=\"c1\"># \u8ba1\u7b97\u521a\u4f53\u4e0a\u5bf9\u5e94\u70b9\u7684\u901f\u5ea6</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">rigid_body</span><span class=\"o\">.</span><span class=\"n\">center</span>\n    <span class=\"n\">v_rigid</span> <span class=\"o\">=</span> <span class=\"n\">rigid_body</span><span class=\"o\">.</span><span class=\"n\">velocity</span> <span class=\"o\">+</span> <span class=\"n\">cross</span><span class=\"p\">(</span><span class=\"n\">rigid_body</span><span class=\"o\">.</span><span class=\"n\">omega</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u7ea6\u675f\u7c92\u5b50\u901f\u5ea6</span>\n    <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v_rigid</span>\n</code></pre></div>\n\n<h3 id=\"854\">8.5.4 \u63a5\u89e6\u529b\u6a21\u578b</h3>\n<p>MPM\u5929\u7136\u5904\u7406\u81ea\u78b0\u649e\uff0c\u4f46\u6709\u65f6\u9700\u8981\u989d\u5916\u7684\u63a5\u89e6\u529b\u6a21\u578b\u3002</p>\n<p><strong>\u7f5a\u51fd\u6570\u65b9\u6cd5</strong>\uff1a\n\u5f53\u68c0\u6d4b\u5230\u7a7f\u900f\u65f6\uff0c\u65bd\u52a0\u7f5a\u529b\uff1a\n$$\\mathbf{f}_{penalty} = k_{penalty} \\cdot d_{penetration} \\cdot \\mathbf{n}$$\n<strong>\u6469\u64e6\u529b</strong>\uff1a\n\u4f7f\u7528\u5e93\u4ed1\u6469\u64e6\u6a21\u578b\uff1a\n$$||\\mathbf{f}_t|| \\leq \\mu ||\\mathbf{f}_n||$$\n\u5176\u4e2d$\\mu$\u662f\u6469\u64e6\u7cfb\u6570\u3002</p>\n<p><strong>\u7c98\u9644\u529b</strong>\uff1a\n\u6a21\u62df\u6750\u6599\u4e4b\u95f4\u7684\u7c98\u9644\uff1a\n$$\\mathbf{f}_{adhesion} = -k_{adhesion} \\cdot A_{contact} \\cdot \\mathbf{n}$$</p>\n<h2 id=\"86\">8.6 \u6570\u503c\u65ad\u88c2</h2>\n<h3 id=\"861-cdm\">8.6.1 \u8fde\u7eed\u635f\u4f24\u529b\u5b66(CDM)</h3>\n<p>\u8fde\u7eed\u635f\u4f24\u529b\u5b66\u901a\u8fc7\u5f15\u5165\u635f\u4f24\u53d8\u91cf$d \\in [0,1]$\u6765\u63cf\u8ff0\u6750\u6599\u7684\u9000\u5316\u3002</p>\n<p><strong>\u635f\u4f24\u6f14\u5316\u65b9\u7a0b</strong>\uff1a\n$$\\dot{d} = \\frac{\\langle f(\\varepsilon) - \\kappa \\rangle}{\\eta}$$\n\u5176\u4e2d$f$\u662f\u635f\u4f24\u52a0\u8f7d\u51fd\u6570\uff0c$\\kappa$\u662f\u635f\u4f24\u9608\u503c\uff0c$\\eta$\u662f\u7c98\u6027\u53c2\u6570\u3002</p>\n<p><strong>\u6709\u6548\u5e94\u529b</strong>\uff1a\n$$\\boldsymbol{\\sigma}_{effective} = (1-d)\\boldsymbol{\\sigma}_{undamaged}$$\n<strong>\u5b9e\u73b0\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u5e94\u53d8\u6216\u5e94\u529b\u6307\u6807</li>\n<li>\u66f4\u65b0\u635f\u4f24\u53d8\u91cf</li>\n<li>\u4fee\u6b63\u5e94\u529b\u54cd\u5e94</li>\n<li>\u5f53$d \\approx 1$\u65f6\uff0c\u7c92\u5b50\u5931\u6548</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u635f\u4f24\u66f4\u65b0</span>\n<span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">particles</span><span class=\"p\">:</span>\n    <span class=\"c1\"># \u8ba1\u7b97\u7b49\u6548\u5e94\u53d8</span>\n    <span class=\"n\">epsilon_eq</span> <span class=\"o\">=</span> <span class=\"n\">compute_equivalent_strain</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># \u66f4\u65b0\u635f\u4f24\u53d8\u91cf</span>\n    <span class=\"k\">if</span> <span class=\"n\">epsilon_eq</span> <span class=\"o\">&gt;</span> <span class=\"n\">damage_threshold</span><span class=\"p\">:</span>\n        <span class=\"n\">damage</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">damage</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">damage_rate</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">epsilon_eq</span> <span class=\"o\">-</span> <span class=\"n\">damage_threshold</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># \u4fee\u6b63\u5e94\u529b</span>\n    <span class=\"n\">stress</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">damage</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># \u68c0\u67e5\u5931\u6548</span>\n    <span class=\"k\">if</span> <span class=\"n\">damage</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.99</span><span class=\"p\">:</span>\n        <span class=\"n\">particle_active</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</code></pre></div>\n\n<h3 id=\"862\">8.6.2 \u76f8\u573a\u65ad\u88c2\u6a21\u578b</h3>\n<p>\u76f8\u573a\u65b9\u6cd5\u4f7f\u7528\u8fde\u7eed\u573a$\\phi \\in [0,1]$\u8868\u793a\u88c2\u7eb9\uff0c\u907f\u514d\u4e86\u663e\u5f0f\u8ffd\u8e2a\u88c2\u7eb9\u8868\u9762\u3002</p>\n<p><strong>\u80fd\u91cf\u6cdb\u51fd</strong>\uff1a\n$$\\Psi = \\int_\\Omega g(\\phi)\\psi^e(\\boldsymbol{\\varepsilon}) \\, dV + G_c\\int_\\Omega \\left(\\frac{\\phi^2}{2l} + \\frac{l}{2}|\\nabla\\phi|^2\\right) \\, dV$$\n\u5176\u4e2d$g(\\phi) = (1-\\phi)^2$\u662f\u9000\u5316\u51fd\u6570\uff0c$G_c$\u662f\u65ad\u88c2\u80fd\uff0c$l$\u662f\u957f\u5ea6\u5c3a\u5ea6\u3002</p>\n<p><strong>\u6f14\u5316\u65b9\u7a0b</strong>\uff1a\n$$\\frac{\\partial \\phi}{\\partial t} = -M\\frac{\\delta \\Psi}{\\delta \\phi}$$\n<strong>MPM\u5b9e\u73b0</strong>\uff1a</p>\n<ol>\n<li>\u5728\u7c92\u5b50\u4e0a\u5b58\u50a8\u76f8\u573a\u503c</li>\n<li>\u901a\u8fc7\u7f51\u683c\u6c42\u89e3\u76f8\u573a\u65b9\u7a0b</li>\n<li>\u6839\u636e\u76f8\u573a\u503c\u4fee\u6b63\u6750\u6599\u54cd\u5e94</li>\n</ol>\n<h3 id=\"863-cpic\">8.6.3 CPIC\u65b9\u6cd5</h3>\n<p>Compatible PIC (CPIC)\u65b9\u6cd5\u901a\u8fc7\u7ef4\u62a4\u7c92\u5b50\u4e4b\u95f4\u7684\u8fde\u63a5\u5173\u7cfb\u6765\u5904\u7406\u65ad\u88c2\u3002</p>\n<p><strong>\u8fde\u63a5\u77e9\u9635</strong>\uff1a\n\u7ef4\u62a4\u7c92\u5b50\u5bf9\u4e4b\u95f4\u7684\u8fde\u63a5\u5f3a\u5ea6\uff1a\n$$C_{ij} \\in [0,1]$$\n<strong>\u65ad\u88c2\u51c6\u5219</strong>\uff1a\n\u5f53\u5e94\u53d8\u8d85\u8fc7\u4e34\u754c\u503c\u65f6\uff0c\u51cf\u5c11\u8fde\u63a5\u5f3a\u5ea6\uff1a\n$$C_{ij} = \\max(0, C_{ij} - \\Delta t \\cdot R(\\varepsilon_{ij}))$$\n<strong>\u529b\u7684\u8ba1\u7b97</strong>\uff1a\n\u53ea\u5728\u8fde\u63a5\u7684\u7c92\u5b50\u4e4b\u95f4\u4f20\u9012\u529b\uff1a\n$$\\mathbf{f}_i = \\sum_j C_{ij} \\mathbf{f}_{ij}$$</p>\n<h3 id=\"864\">8.6.4 \u65ad\u88c2\u51c6\u5219</h3>\n<p>\u4e0d\u540c\u7684\u65ad\u88c2\u51c6\u5219\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u6750\u6599\uff1a</p>\n<p><strong>\u6700\u5927\u4e3b\u5e94\u529b\u51c6\u5219</strong>\uff1a\n$$\\sigma_1 &gt; \\sigma_{critical}$$\n\u9002\u7528\u4e8e\u8106\u6027\u6750\u6599\u3002</p>\n<p><strong>\u6700\u5927\u4e3b\u5e94\u53d8\u51c6\u5219</strong>\uff1a\n$$\\varepsilon_1 &gt; \\varepsilon_{critical}$$\n\u9002\u7528\u4e8e\u5ef6\u6027\u6750\u6599\u3002</p>\n<p><strong>\u80fd\u91cf\u91ca\u653e\u7387\u51c6\u5219</strong>\uff1a\n$$G &gt; G_c$$\n\u57fa\u4e8eGriffith\u65ad\u88c2\u7406\u8bba\u3002</p>\n<p><strong>J\u79ef\u5206\u51c6\u5219</strong>\uff1a\n\u7528\u4e8e\u8bc4\u4f30\u88c2\u7eb9\u5c16\u7aef\u7684\u5e94\u529b\u5f3a\u5ea6\u56e0\u5b50\u3002</p>\n<p><strong>\u5b9e\u73b0\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u57fa\u4e8e\u4e3b\u5e94\u529b\u7684\u65ad\u88c2</span>\n<span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">particles</span><span class=\"p\">:</span>\n    <span class=\"c1\"># SVD\u5206\u89e3\u5f97\u5230\u4e3b\u5e94\u529b</span>\n    <span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"n\">svd</span><span class=\"p\">(</span><span class=\"n\">stress</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">])</span>\n    <span class=\"n\">max_principal_stress</span> <span class=\"o\">=</span> <span class=\"n\">S</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u68c0\u67e5\u65ad\u88c2\u51c6\u5219</span>\n    <span class=\"k\">if</span> <span class=\"n\">max_principal_stress</span> <span class=\"o\">&gt;</span> <span class=\"n\">fracture_threshold</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u6807\u8bb0\u7c92\u5b50\u65ad\u88c2</span>\n        <span class=\"n\">fractured</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"c1\"># \u91ca\u653e\u5e94\u529b</span>\n        <span class=\"n\">stress</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">*=</span> <span class=\"n\">stress_release_factor</span>\n\n        <span class=\"c1\"># \u53ef\u9009\uff1a\u751f\u6210\u88c2\u7eb9\u7c92\u5b50</span>\n        <span class=\"k\">if</span> <span class=\"n\">generate_crack_particles</span><span class=\"p\">:</span>\n            <span class=\"n\">create_crack_particles</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">],</span> <span class=\"n\">U</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>  <span class=\"c1\"># \u6cbf\u4e3b\u5e94\u529b\u65b9\u5411</span>\n</code></pre></div>\n\n<h2 id=\"87-mpm\">8.7 \u9690\u5f0fMPM</h2>\n<h3 id=\"871\">8.7.1 \u9690\u5f0f\u65f6\u95f4\u79ef\u5206</h3>\n<p>\u5f53\u6a21\u62df\u521a\u6027\u6750\u6599\uff08\u9ad8\u6768\u6c0f\u6a21\u91cf\uff09\u6216\u9700\u8981\u5927\u65f6\u95f4\u6b65\u957f\u65f6\uff0c\u663e\u5f0fMPM\u4f1a\u9047\u5230\u7a33\u5b9a\u6027\u95ee\u9898\u3002\u9690\u5f0fMPM\u901a\u8fc7\u6c42\u89e3\u975e\u7ebf\u6027\u7cfb\u7edf\u6765\u4fdd\u8bc1\u65e0\u6761\u4ef6\u7a33\u5b9a\u6027\u3002</p>\n<p><strong>\u9690\u5f0f\u6b27\u62c9\u683c\u5f0f</strong>\uff1a\n$$\\mathbf{v}^{n+1} = \\mathbf{v}^n + \\Delta t \\mathbf{M}^{-1}[\\mathbf{f}_{ext} - \\mathbf{f}_{int}(\\mathbf{x}^{n+1})]$$\n$$\\mathbf{x}^{n+1} = \\mathbf{x}^n + \\Delta t \\mathbf{v}^{n+1}$$\n\u8fd9\u5bfc\u81f4\u975e\u7ebf\u6027\u7cfb\u7edf\uff1a\n$$\\mathbf{g}(\\mathbf{v}^{n+1}) = \\mathbf{M}\\mathbf{v}^{n+1} - \\mathbf{M}\\mathbf{v}^n - \\Delta t[\\mathbf{f}_{ext} - \\mathbf{f}_{int}(\\mathbf{x}^n + \\Delta t \\mathbf{v}^{n+1})] = 0$$\n<strong>Newton-Raphson\u6c42\u89e3</strong>\uff1a\n\u7ebf\u6027\u5316\u7cfb\u7edf\uff1a\n$$\\mathbf{J}\\Delta\\mathbf{v} = -\\mathbf{g}(\\mathbf{v}^k)$$\n\u5176\u4e2d\u96c5\u53ef\u6bd4\u77e9\u9635\uff1a\n$$\\mathbf{J} = \\frac{\\partial \\mathbf{g}}{\\partial \\mathbf{v}} = \\mathbf{M} + \\Delta t^2 \\frac{\\partial \\mathbf{f}_{int}}{\\partial \\mathbf{x}}$$</p>\n<h3 id=\"872\">8.7.2 \u5207\u7ebf\u521a\u5ea6\u77e9\u9635</h3>\n<p>\u8ba1\u7b97\u5207\u7ebf\u521a\u5ea6\u77e9\u9635\u662f\u9690\u5f0fMPM\u7684\u5173\u952e\u3002\u5bf9\u4e8e\u8d85\u5f39\u6027\u6750\u6599\uff1a</p>\n<p><strong>\u5e94\u529b\u5bfc\u6570</strong>\uff1a\n$$\\frac{\\partial \\mathbf{P}}{\\partial \\mathbf{F}} = \\frac{\\partial^2 \\psi}{\\partial \\mathbf{F} \\partial \\mathbf{F}} = \\mathbb{C}$$\n\u8fd9\u662f\u56db\u9636\u5f20\u91cf\uff0c\u79f0\u4e3a\u5207\u7ebf\u6a21\u91cf\u3002</p>\n<p><strong>Neo-Hookean\u7684\u5207\u7ebf\u6a21\u91cf</strong>\uff1a\n$$\\mathbb{C}_{ijkl} = \\mu\\delta_{ik}\\delta_{jl} + (\\mu - \\lambda\\ln J)F^{-1}_{ji}F^{-1}_{lk} + \\lambda F^{-1}_{ji}F^{-1}_{lk}$$\n<strong>\u7f51\u683c\u7ea7\u522b\u7684\u521a\u5ea6\u77e9\u9635</strong>\uff1a\n$$\\mathbf{K}_{IJ} = \\sum_p V_p \\nabla N_I(\\mathbf{x}_p) : \\mathbb{C}_p : \\nabla N_J(\\mathbf{x}_p)$$</p>\n<h3 id=\"873-newton-raphson\">8.7.3 Newton-Raphson\u8fed\u4ee3</h3>\n<p>\u9690\u5f0fMPM\u7684Newton\u8fed\u4ee3\u8fc7\u7a0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">implicit_mpm_step</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u521d\u59cb\u731c\u6d4b</span>\n    <span class=\"n\">v_new</span> <span class=\"o\">=</span> <span class=\"n\">v_old</span> <span class=\"o\">+</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">f_ext</span> <span class=\"o\">/</span> <span class=\"n\">mass</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">newton_iter</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">max_iterations</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u6b8b\u5dee</span>\n        <span class=\"n\">x_trial</span> <span class=\"o\">=</span> <span class=\"n\">x_old</span> <span class=\"o\">+</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"n\">v_new</span>\n        <span class=\"n\">f_int</span> <span class=\"o\">=</span> <span class=\"n\">compute_internal_forces</span><span class=\"p\">(</span><span class=\"n\">x_trial</span><span class=\"p\">)</span>\n        <span class=\"n\">residual</span> <span class=\"o\">=</span> <span class=\"n\">mass</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">v_new</span> <span class=\"o\">-</span> <span class=\"n\">v_old</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">dt</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">f_ext</span> <span class=\"o\">-</span> <span class=\"n\">f_int</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u68c0\u67e5\u6536\u655b</span>\n        <span class=\"k\">if</span> <span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">residual</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">tolerance</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"c1\"># \u8ba1\u7b97\u5207\u7ebf\u521a\u5ea6\u77e9\u9635</span>\n        <span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"n\">compute_tangent_stiffness</span><span class=\"p\">(</span><span class=\"n\">x_trial</span><span class=\"p\">)</span>\n        <span class=\"n\">J</span> <span class=\"o\">=</span> <span class=\"n\">mass</span> <span class=\"o\">+</span> <span class=\"n\">dt</span><span class=\"o\">^</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">K</span>\n\n        <span class=\"c1\"># \u6c42\u89e3\u7ebf\u6027\u7cfb\u7edf</span>\n        <span class=\"n\">delta_v</span> <span class=\"o\">=</span> <span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">J</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">residual</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u7ebf\u641c\u7d22\uff08\u53ef\u9009\uff09</span>\n        <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">line_search</span><span class=\"p\">(</span><span class=\"n\">v_new</span><span class=\"p\">,</span> <span class=\"n\">delta_v</span><span class=\"p\">)</span>\n        <span class=\"n\">v_new</span> <span class=\"o\">+=</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">delta_v</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">v_new</span>\n</code></pre></div>\n\n<p><strong>\u7ebf\u641c\u7d22\u7b56\u7565</strong>\uff1a\n\u4e3a\u786e\u4fdd\u6536\u655b\uff0c\u4f7f\u7528Armijo\u7ebf\u641c\u7d22\uff1a\n$$||\\mathbf{g}(\\mathbf{v} + \\alpha\\Delta\\mathbf{v})|| &lt; (1 - c\\alpha)||\\mathbf{g}(\\mathbf{v})||$$\n\u5176\u4e2d$c \\in (0, 0.5)$\u662f\u5e38\u6570\u3002</p>\n<h3 id=\"874\">8.7.4 \u5927\u53d8\u5f62\u5904\u7406</h3>\n<p>\u5927\u53d8\u5f62\u4e0b\u7684\u9690\u5f0fMPM\u9700\u8981\u7279\u6b8a\u5904\u7406\uff1a</p>\n<p><strong>\u51e0\u4f55\u975e\u7ebf\u6027</strong>\uff1a\n\u53d8\u5f62\u68af\u5ea6\u7684\u589e\u91cf\u66f4\u65b0\uff1a\n$$\\mathbf{F}^{n+1} = (\\mathbf{I} + \\Delta t \\nabla \\mathbf{v}^{n+1})\\mathbf{F}^n$$\n\u8fd9\u662f\u5173\u4e8e$\\mathbf{v}^{n+1}$\u7684\u975e\u7ebf\u6027\u51fd\u6570\u3002</p>\n<p><strong>\u5171\u65cb\u6846\u67b6</strong>\uff1a\n\u4f7f\u7528\u5171\u65cb\u5750\u6807\u7cfb\u51cf\u5c11\u975e\u7ebf\u6027\uff1a</p>\n<ol>\n<li>\u63d0\u53d6\u65cb\u8f6c\uff1a$\\mathbf{F} = \\mathbf{R}\\mathbf{S}$</li>\n<li>\u5728\u5c40\u90e8\u5750\u6807\u7cfb\u6c42\u89e3</li>\n<li>\u8f6c\u6362\u56de\u5168\u5c40\u5750\u6807\u7cfb</li>\n</ol>\n<p><strong>\u589e\u91cf\u5f62\u5f0f</strong>\uff1a\n\u4f7f\u7528\u589e\u91cf\u53d8\u5f62\u68af\u5ea6\uff1a\n$$\\delta\\mathbf{F} = \\Delta t \\nabla\\delta\\mathbf{v} \\cdot \\mathbf{F}^n$$\n<strong>\u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f</strong>\uff1a\n\u6839\u636eNewton\u8fed\u4ee3\u7684\u6536\u655b\u6027\u8c03\u6574\u65f6\u95f4\u6b65\u957f\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">newton_iterations</span> <span class=\"o\">&gt;</span> <span class=\"n\">max_iter</span> <span class=\"o\">*</span> <span class=\"mf\">0.8</span><span class=\"p\">:</span>\n    <span class=\"n\">dt</span> <span class=\"o\">*=</span> <span class=\"mf\">0.5</span>  <span class=\"c1\"># \u51cf\u5c0f\u65f6\u95f4\u6b65\u957f</span>\n<span class=\"k\">elif</span> <span class=\"n\">newton_iterations</span> <span class=\"o\">&lt;</span> <span class=\"n\">max_iter</span> <span class=\"o\">*</span> <span class=\"mf\">0.2</span><span class=\"p\">:</span>\n    <span class=\"n\">dt</span> <span class=\"o\">*=</span> <span class=\"mf\">1.2</span>  <span class=\"c1\"># \u589e\u5927\u65f6\u95f4\u6b65\u957f</span>\n</code></pre></div>\n\n<h2 id=\"88-taichi2\">8.8 \u9ad8\u7ea7Taichi\u7279\u6027\uff082\uff09</h2>\n<h3 id=\"881\">8.8.1 \u7a00\u758f\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1</h3>\n<p>MPM\u7684\u8ba1\u7b97\u57df\u901a\u5e38\u662f\u7a00\u758f\u7684\uff0c\u4f7f\u7528\u7a00\u758f\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u6027\u80fd\u3002</p>\n<p><strong>SPGrid (Setaluri et al. 2014)</strong>\uff1a\n\u5229\u7528\u865a\u62df\u5185\u5b58\u7684\u5206\u9875\u673a\u5236\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">SPGrid</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">resolution</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">resolution</span> <span class=\"o\">=</span> <span class=\"n\">resolution</span>\n        <span class=\"c1\"># \u4f7f\u7528\u4f4d\u63a9\u7801\u7ba1\u7406\u7a00\u758f\u5757</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">resolution</span><span class=\"o\">//</span><span class=\"n\">block_size</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u52a8\u6001\u5206\u914d</span>\n        <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">pointer</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ijk</span><span class=\"p\">,</span> <span class=\"n\">resolution</span><span class=\"o\">//</span><span class=\"n\">block_size</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ijk</span><span class=\"p\">,</span> <span class=\"n\">block_size</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u52bf</strong>\uff1a</p>\n<ul>\n<li>\u5185\u5b58\u81ea\u52a8\u7ba1\u7406</li>\n<li>\u7f13\u5b58\u53cb\u597d\u7684\u8bbf\u95ee\u6a21\u5f0f</li>\n<li>\u652f\u6301\u52a8\u6001\u62d3\u6251\u53d8\u5316</li>\n</ul>\n<p><strong>OpenVDB\u98ce\u683c\u7684\u5c42\u6b21\u7ed3\u6784</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Taichi\u4e2d\u7684\u5c42\u6b21\u7a00\u758f\u7f51\u683c</span>\n<span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">pointer</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ijk</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pointer</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ijk</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ijk</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">grid</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>\u4e09\u5c42\u7ed3\u6784\uff1a</p>\n<ol>\n<li>\u9876\u5c42\uff1a64\u00b3\u7684\u6307\u9488\u7f51\u683c</li>\n<li>\u4e2d\u5c42\uff1a8\u00b3\u7684\u6307\u9488\u5757</li>\n<li>\u5e95\u5c42\uff1a8\u00b3\u7684\u5bc6\u96c6\u6570\u636e</li>\n</ol>\n<h3 id=\"882\">8.8.2 \u52a8\u6001\u5185\u5b58\u5206\u914d</h3>\n<p>Taichi\u652f\u6301\u52a8\u6001\u5185\u5b58\u7ba1\u7406\uff0c\u9002\u5408\u7c92\u5b50\u6570\u91cf\u53d8\u5316\u7684\u573a\u666f\u3002</p>\n<p><strong>\u52a8\u6001\u7c92\u5b50\u6570\u7ec4</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">ParticleSystem</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">max_particles</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_particles</span> <span class=\"o\">=</span> <span class=\"n\">max_particles</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_particles</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n\n        <span class=\"c1\"># \u52a8\u6001\u6570\u7ec4</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">F</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u4f7f\u7528\u52a8\u6001SNode</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particle</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">dynamic</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_particles</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">particle</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">F</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_particle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)):</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_particles</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pos</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"p\">([</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">F</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Matrix</span><span class=\"o\">.</span><span class=\"n\">identity</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5185\u5b58\u6c60\u7ba1\u7406</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">MemoryPool</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"p\">,</span> <span class=\"n\">max_chunks</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chunk_size</span> <span class=\"o\">=</span> <span class=\"n\">chunk_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">free_list</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">max_chunks</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_free</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n    <span class=\"k\">def</span> <span class=\"nf\">allocate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">:</span>\n        <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_sub</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_free</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">free_list</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span>  <span class=\"c1\"># \u5206\u914d\u5931\u8d25</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n    <span class=\"k\">def</span> <span class=\"nf\">deallocate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chunk_id</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">):</span>\n        <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n_free</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">free_list</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">chunk_id</span>\n</code></pre></div>\n\n<h3 id=\"883\">8.8.3 \u5c42\u6b21\u5316\u7f51\u683c</h3>\n<p>\u5c42\u6b21\u5316\u7f51\u683c\u53ef\u4ee5\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0a\u9ad8\u6548\u5904\u7406\u7269\u7406\u73b0\u8c61\u3002</p>\n<p><strong>\u81ea\u9002\u5e94\u7f51\u683c\u7ec6\u5316(AMR)</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">AdaptiveGrid</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u591a\u5c42\u7ea7\u7f51\u683c</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level0</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level1</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level2</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"mi\">256</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># \u7ec6\u5316\u6807\u8bb0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refine_flag</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_refine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level0</span><span class=\"p\">:</span>\n            <span class=\"c1\"># \u68c0\u67e5\u7ec6\u5316\u51c6\u5219\uff08\u5982\u68af\u5ea6\uff09</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">needs_refinement</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refine_flag</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                <span class=\"c1\"># \u63d2\u503c\u5230\u7ec6\u7f51\u683c</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">interpolate_to_fine</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">func</span>\n    <span class=\"k\">def</span> <span class=\"nf\">needs_refinement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u57fa\u4e8e\u68af\u5ea6\u7684\u7ec6\u5316\u51c6\u5219</span>\n        <span class=\"n\">grad</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level0</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">,</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">level0</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">,</span><span class=\"n\">k</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">grad</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refine_threshold</span>\n</code></pre></div>\n\n<p><strong>\u591a\u91cd\u7f51\u683c\u52a0\u901f</strong>\uff1a\n\u7528\u4e8e\u9690\u5f0f\u6c42\u89e3\u5668\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">multigrid_vcycle</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i32</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u524d\u5149\u6ed1</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_smooth</span><span class=\"p\">):</span>\n        <span class=\"n\">smooth</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">level</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u9650\u5236\u5230\u7c97\u7f51\u683c</span>\n        <span class=\"n\">restrict</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u9012\u5f52\u6c42\u89e3</span>\n        <span class=\"n\">multigrid_vcycle</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u5ef6\u62d3\u5230\u7ec6\u7f51\u683c</span>\n        <span class=\"n\">prolongate</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># \u540e\u5149\u6ed1</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_smooth</span><span class=\"p\">):</span>\n        <span class=\"n\">smooth</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"884\">8.8.4 \u81ea\u5b9a\u4e49\u6570\u636e\u5e03\u5c40</h3>\n<p>\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u5bf9\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002</p>\n<p><strong>AoS vs SoA\u5e03\u5c40</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Array of Structures (AoS)</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Particle</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n    <span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">vector</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span>\n\n<span class=\"n\">particles_aos</span> <span class=\"o\">=</span> <span class=\"n\">Particle</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_particles</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Structure of Arrays (SoA)</span>\n<span class=\"n\">x_soa</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_particles</span><span class=\"p\">)</span>\n<span class=\"n\">v_soa</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_particles</span><span class=\"p\">)</span>\n<span class=\"n\">m_soa</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_particles</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u6027\u80fd\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>AoS\uff1a\u7a7a\u95f4\u5c40\u90e8\u6027\u597d\uff0c\u9002\u5408\u8bbf\u95ee\u5355\u4e2a\u7c92\u5b50\u7684\u6240\u6709\u5c5e\u6027</li>\n<li>SoA\uff1a\u5411\u91cf\u5316\u53cb\u597d\uff0c\u9002\u5408\u6279\u91cf\u5904\u7406\u540c\u4e00\u5c5e\u6027</li>\n</ul>\n<p><strong>\u81ea\u5b9a\u4e49\u5e03\u5c40\u793a\u4f8b</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5757\u72b6\u5e03\u5c40\uff0c\u7ed3\u5408AoS\u548cSoA\u7684\u4f18\u52bf</span>\n<span class=\"n\">block_size</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n<span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># \u4e8c\u7ea7\u7ed3\u6784\uff1a\u5757\u5185SoA\uff0c\u5757\u95f4\u6570\u7ec4</span>\n<span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">n_particles</span><span class=\"o\">//</span><span class=\"n\">block_size</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"p\">(</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">block_size</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5185\u5b58\u5bf9\u9f50</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u786e\u4fdd\u7f13\u5b58\u884c\u5bf9\u9f50</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">aligned_access</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Taichi\u81ea\u52a8\u5904\u7406\u5bf9\u9f50</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_particles</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8fde\u7eed\u8bbf\u95ee\uff0c\u5229\u7528\u7f13\u5b58</span>\n        <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">dt</span>\n</code></pre></div>\n\n<h2 id=\"_1\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u7269\u8d28\u70b9\u6cd5(MPM)\u4f5c\u4e3a\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7684\u4ee3\u8868\uff0c\u6210\u529f\u7ed3\u5408\u4e86\u4e24\u79cd\u89c6\u89d2\u7684\u4f18\u52bf\u3002\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u4e86MPM\u7684\u7406\u8bba\u57fa\u7840\u3001\u7b97\u6cd5\u5b9e\u73b0\u548c\u5de5\u7a0b\u5e94\u7528\uff1a</p>\n<p><strong>\u6838\u5fc3\u6982\u5ff5</strong>\uff1a</p>\n<ol>\n<li><strong>MPM\u57fa\u7840</strong>\uff1a\u7c92\u5b50\u643a\u5e26\u6750\u6599\u4fe1\u606f\uff0c\u7f51\u683c\u7528\u4e8e\u52a8\u91cf\u66f4\u65b0\uff0c\u907f\u514d\u7f51\u683c\u626d\u66f2\u548c\u6570\u503c\u8017\u6563</li>\n<li><strong>MLS-MPM</strong>\uff1a\u901a\u8fc7\u79fb\u52a8\u6700\u5c0f\u4e8c\u4e58\u7b80\u5316\u5b9e\u73b0\uff0c\u4ec5\u970088\u884c\u4ee3\u7801\uff0c\u6027\u80fd\u63d0\u534750%</li>\n<li><strong>\u672c\u6784\u6a21\u578b</strong>\uff1a\u652f\u6301\u5f39\u6027\u3001\u5851\u6027\u3001\u6d41\u4f53\u7b49\u591a\u79cd\u6750\u6599\uff0c\u901a\u8fc7SVD\u5b9e\u73b0\u5c48\u670d\u51c6\u5219</li>\n<li><strong>\u6570\u503c\u65ad\u88c2</strong>\uff1a\u8fde\u7eed\u635f\u4f24\u529b\u5b66\u3001\u76f8\u573a\u65b9\u6cd5\u3001CPIC\u7b49\u65ad\u88c2\u6a21\u62df\u6280\u672f</li>\n<li><strong>\u9690\u5f0f\u79ef\u5206</strong>\uff1a\u5904\u7406\u521a\u6027\u6750\u6599\u548c\u5927\u65f6\u95f4\u6b65\u957f\uff0cNewton-Raphson\u8fed\u4ee3\u6c42\u89e3</li>\n</ol>\n<p><strong>\u5173\u952e\u516c\u5f0f</strong>\uff1a</p>\n<ul>\n<li>\u5f31\u5f62\u5f0f\uff1a$\\int_\\Omega \\rho \\mathbf{a} \\cdot \\mathbf{w} \\, dV = -\\int_\\Omega \\boldsymbol{\\sigma} : \\nabla \\mathbf{w} \\, dV + \\int_\\Omega \\rho \\mathbf{b} \\cdot \\mathbf{w} \\, dV$</li>\n<li>\u53d8\u5f62\u68af\u5ea6\u66f4\u65b0\uff1a$\\mathbf{F}^{n+1} = (\\mathbf{I} + \\Delta t \\mathbf{C}^n) \\mathbf{F}^n$</li>\n<li>Neo-Hookean\u5e94\u529b\uff1a$\\mathbf{P} = \\mu(\\mathbf{F} - \\mathbf{F}^{-T}) + \\lambda\\ln(J)\\mathbf{F}^{-T}$</li>\n<li>\u5851\u6027\u8fd4\u56de\u6620\u5c04\uff1a\u901a\u8fc7SVD\u5939\u6301\u5947\u5f02\u503c\u5230\u5c48\u670d\u9762</li>\n</ul>\n<p><strong>\u5b9e\u73b0\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u5f62\u51fd\u6570\u9009\u62e9\uff1a\u4e8c\u6b21B\u6837\u6761\u63d0\u4f9b\u7cbe\u5ea6-\u6548\u7387\u5e73\u8861</li>\n<li>P2G/G2P\u4f20\u8f93\uff1aAPIC\u4fdd\u8bc1\u89d2\u52a8\u91cf\u5b88\u6052</li>\n<li>\u7a00\u758f\u6570\u636e\u7ed3\u6784\uff1aSPGrid\u6216OpenVDB\u5904\u7406\u5927\u89c4\u6a21\u7a00\u758f\u57df</li>\n<li>\u6027\u80fd\u4f18\u5316\uff1aSoA\u5e03\u5c40\u3001\u5411\u91cf\u5316\u3001\u591a\u5c42\u7ea7\u7f51\u683c</li>\n</ul>\n<h2 id=\"_2\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_3\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e608.1</strong>\uff1a\u63a8\u5bfc\u4e8c\u7ef4\u60c5\u51b5\u4e0b\u4e8c\u6b21B\u6837\u6761\u57fa\u51fd\u6570\u7684\u663e\u5f0f\u8868\u8fbe\u5f0f\uff0c\u5e76\u8ba1\u7b97\u5176\u68af\u5ea6\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u4ece\u4e00\u7ef4B\u6837\u6761$N(x)$\u51fa\u53d1\uff0c\u4f7f\u7528\u5f20\u91cf\u79ef\u6784\u9020\u4e8c\u7ef4\u57fa\u51fd\u6570\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u4e00\u7ef4\u4e8c\u6b21B\u6837\u6761\uff1a\n$$N(x) = \\begin{cases}\n\\frac{3}{4} - x^2 &amp; |x| \\leq \\frac{1}{2} \\\\\n\\frac{1}{2}(\\frac{3}{2} - |x|)^2 &amp; \\frac{1}{2} &lt; |x| \\leq \\frac{3}{2} \\\\\n0 &amp; |x| &gt; \\frac{3}{2}\n\\end{cases}$$\n\u4e8c\u7ef4\u57fa\u51fd\u6570\uff1a\n$$N_{ij}(x, y) = N(x - x_i)N(y - y_j)$$\n\u68af\u5ea6\uff1a\n$$\\nabla N_{ij} = \\begin{bmatrix}\nN'(x - x_i)N(y - y_j) \\\\\nN(x - x_i)N'(y - y_j)\n\\end{bmatrix}$$\n\u5176\u4e2d$N'(x) = -2x$\u5f53$|x| \\leq \\frac{1}{2}$\uff0c$N'(x) = -(\\frac{3}{2} - |x|)\\text{sign}(x)$\u5f53$\\frac{1}{2} &lt; |x| \\leq \\frac{3}{2}$\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e608.2</strong>\uff1a\u8bc1\u660eMLS-MPM\u4e2d\u7684$\\mathbf{C}_p$\u77e9\u9635\u786e\u5b9e\u8fd1\u4f3c\u4e86\u901f\u5ea6\u68af\u5ea6$\\nabla\\mathbf{v}$\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u4eceAPIC\u7684\u63a8\u5bfc\u51fa\u53d1\uff0c\u8003\u8651\u4eff\u5c04\u901f\u5ea6\u573a$\\mathbf{v}(\\mathbf{x}) = \\mathbf{v}_p + \\mathbf{C}_p(\\mathbf{x} - \\mathbf{x}_p)$\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u4eff\u5c04\u901f\u5ea6\u573a\u7684\u68af\u5ea6\uff1a\n$$\\nabla\\mathbf{v} = \\nabla[\\mathbf{v}_p + \\mathbf{C}_p(\\mathbf{x} - \\mathbf{x}_p)] = \\mathbf{C}_p$$\n\u5728G2P\u4f20\u8f93\u4e2d\uff1a\n$$\\mathbf{C}_p = \\sum_i \\mathbf{v}_i \\otimes \\nabla N_i(\\mathbf{x}_p)$$\n\u8fd9\u6b63\u662f\u901f\u5ea6\u573a\u5728\u7c92\u5b50\u4f4d\u7f6e\u7684\u68af\u5ea6\u7684\u52a0\u6743\u5e73\u5747\uff0c\u56e0\u6b64$\\mathbf{C}_p \\approx \\nabla\\mathbf{v}|_{\\mathbf{x}_p}$\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e608.3</strong>\uff1a\u8ba1\u7b97Neo-Hookean\u6a21\u578b\u5728\u5355\u8f74\u62c9\u4f38\u4e0b\u7684\u5e94\u529b-\u5e94\u53d8\u5173\u7cfb\u3002\u8bbe\u62c9\u4f38\u6bd4\u4e3a$\\lambda$\uff0c\u5176\u4ed6\u65b9\u5411\u81ea\u7531\u53d8\u5f62\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u5229\u7528\u4e0d\u53ef\u538b\u7f29\u6761\u4ef6$\\det(\\mathbf{F}) = 1$\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5355\u8f74\u62c9\u4f38\u7684\u53d8\u5f62\u68af\u5ea6\uff1a\n$$\\mathbf{F} = \\text{diag}(\\lambda, \\lambda^{-1/2}, \\lambda^{-1/2})$$\n\u4fdd\u8bc1$\\det(\\mathbf{F}) = \\lambda \\cdot \\lambda^{-1/2} \\cdot \\lambda^{-1/2} = 1$\u3002</p>\n<p>Neo-Hookean\u5e94\u529b\uff1a\n$$P_{11} = \\mu(\\lambda - \\lambda^{-1})$$\n\u5de5\u7a0b\u5e94\u529b\uff1a\n$$\\sigma = \\frac{P_{11}}{\\lambda} = \\mu(1 - \\lambda^{-2})$$</p>\n</details>\n<h3 id=\"_4\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e608.4</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u7c92\u5b50\u7ec6\u5316\u7b97\u6cd5\uff0c\u5f53\u68c0\u6d4b\u5230\u5927\u53d8\u5f62\u65f6\u81ea\u52a8\u589e\u52a0\u7c92\u5b50\u5bc6\u5ea6\u3002\u7ed9\u51fa\u7ec6\u5316\u51c6\u5219\u548c\u7c92\u5b50\u5206\u88c2\u7b56\u7565\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u8003\u8651\u57fa\u4e8e\u53d8\u5f62\u68af\u5ea6\u7684\u884c\u5217\u5f0f\u6216\u6700\u5927\u4e3b\u4f38\u957f\u6bd4\u7684\u51c6\u5219\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7ec6\u5316\u51c6\u5219\uff1a</p>\n<ol>\n<li>\u4f53\u79ef\u53d8\u5316\uff1a$|\\det(\\mathbf{F}) - 1| &gt; \\theta_V$</li>\n<li>\u6700\u5927\u4e3b\u4f38\u957f\uff1a$\\lambda_{\\max} &gt; \\theta_{\\lambda}$</li>\n<li>\u5851\u6027\u5e94\u53d8\uff1a$\\varepsilon_p &gt; \\theta_p$</li>\n</ol>\n<p>\u5206\u88c2\u7b56\u7565\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">split_particle</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">):</span>\n    <span class=\"c1\"># \u83b7\u53d6\u4e3b\u65b9\u5411</span>\n    <span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"n\">svd</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># \u6cbf\u6700\u5927\u4f38\u957f\u65b9\u5411\u5206\u88c2</span>\n    <span class=\"n\">direction</span> <span class=\"o\">=</span> <span class=\"n\">U</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span> <span class=\"o\">*</span> <span class=\"n\">dx</span> <span class=\"o\">*</span> <span class=\"n\">direction</span>\n\n    <span class=\"c1\"># \u521b\u5efa\u5b50\u7c92\u5b50</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]:</span>\n        <span class=\"n\">new_p</span> <span class=\"o\">=</span> <span class=\"n\">create_particle</span><span class=\"p\">()</span>\n        <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">new_p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"n\">offset</span>\n        <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">new_p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span>\n        <span class=\"n\">F</span><span class=\"p\">[</span><span class=\"n\">new_p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span>\n        <span class=\"n\">m</span><span class=\"p\">[</span><span class=\"n\">new_p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"n\">V</span><span class=\"p\">[</span><span class=\"n\">new_p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">V</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n\n    <span class=\"c1\"># \u5220\u9664\u539f\u7c92\u5b50</span>\n    <span class=\"n\">delete_particle</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n</code></pre></div>\n\n</details>\n<p><strong>\u7ec3\u4e608.5</strong>\uff1a\u63a8\u5bfc\u5e76\u5b9e\u73b0\u5404\u5411\u5f02\u6027\u6750\u6599\u7684MPM\u672c\u6784\u6a21\u578b\uff0c\u8003\u8651\u7ea4\u7ef4\u65b9\u5411\u7684\u5f71\u54cd\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u4f7f\u7528\u7ed3\u6784\u5f20\u91cf$\\mathbf{M} = \\mathbf{a}_0 \\otimes \\mathbf{a}_0$\u8868\u793a\u7ea4\u7ef4\u65b9\u5411\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5404\u5411\u5f02\u6027\u8d85\u5f39\u6027\u6a21\u578b\uff1a\n$$\\psi = \\psi_{iso}(\\mathbf{F}) + \\psi_{aniso}(\\mathbf{F}, \\mathbf{a}_0)$$\n\u5176\u4e2d\u5404\u5411\u5f02\u6027\u90e8\u5206\uff1a\n$$\\psi_{aniso} = \\frac{k_1}{2k_2}[\\exp(k_2(I_4 - 1)^2) - 1]$$\n$I_4 = \\mathbf{a}_0 \\cdot (\\mathbf{C} \\mathbf{a}_0)$\u662f\u7ea4\u7ef4\u4f38\u957f\u7684\u5e73\u65b9\u3002</p>\n<p>\u5e94\u529b\uff1a\n$$\\mathbf{P} = \\mathbf{P}_{iso} + 2k_1(I_4 - 1)\\exp(k_2(I_4 - 1)^2)\\mathbf{F}\\mathbf{a}_0 \\otimes \\mathbf{a}_0$$</p>\n</details>\n<p><strong>\u7ec3\u4e608.6</strong>\uff1a\u5206\u6790MPM\u4e2d\u7684\u80fd\u91cf\u5b88\u6052\u6027\u8d28\u3002\u8bc1\u660e\u5728\u65e0\u5916\u529b\u3001\u65e0\u963b\u5c3c\u7684\u60c5\u51b5\u4e0b\uff0cAPIC\u4f20\u8f93\u4fdd\u8bc1\u603b\u89d2\u52a8\u91cf\u5b88\u6052\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u8ba1\u7b97\u7cfb\u7edf\u603b\u89d2\u52a8\u91cf$\\mathbf{L} = \\sum_p m_p \\mathbf{x}_p \\times \\mathbf{v}_p$\u7684\u65f6\u95f4\u5bfc\u6570\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7cfb\u7edf\u603b\u89d2\u52a8\u91cf\uff1a\n$$\\mathbf{L} = \\sum_p m_p \\mathbf{x}_p \\times \\mathbf{v}_p$$\nP2G\u540e\u7f51\u683c\u89d2\u52a8\u91cf\uff1a\n$$\\mathbf{L}_g = \\sum_i m_i \\mathbf{x}_i \\times \\mathbf{v}_i$$\n\u7531\u4e8eAPIC\u4f20\u8f93\u5305\u542b\u4e86$\\mathbf{C}_p$\u9879\uff1a\n$$\\mathbf{v}_i = \\frac{1}{m_i}\\sum_p w_{ip}m_p[\\mathbf{v}_p + \\mathbf{C}_p(\\mathbf{x}_i - \\mathbf{x}_p)]$$\n\u53ef\u4ee5\u8bc1\u660e\uff1a\n$$\\mathbf{L}_g = \\mathbf{L}_p$$</p>\n<p>G2P\u540e\uff0c\u7531\u4e8e\u4f7f\u7528\u76f8\u540c\u7684\u6743\u91cd\u548c$\\mathbf{C}_p$\u66f4\u65b0\uff0c\u89d2\u52a8\u91cf\u7ee7\u7eed\u5b88\u6052\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e608.7</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2aMPM-FEM\u8026\u5408\u7b97\u6cd5\uff0c\u5728\u5c0f\u53d8\u5f62\u533a\u57df\u4f7f\u7528FEM\uff0c\u5927\u53d8\u5f62\u533a\u57df\u4f7f\u7528MPM\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u8003\u8651\u8fc7\u6e21\u533a\u57df\u7684\u5904\u7406\u548c\u52a8\u91cf\u4f20\u9012\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u8026\u5408\u7b56\u7565\uff1a</p>\n<ol>\n<li><strong>\u533a\u57df\u5212\u5206</strong>\uff1a\u57fa\u4e8e\u53d8\u5f62\u68af\u5ea6\u7684\u884c\u5217\u5f0f\u5224\u65ad</li>\n<li><strong>\u8fc7\u6e21\u533a</strong>\uff1a\u540c\u65f6\u5b58\u5728\u7c92\u5b50\u548c\u7f51\u683c\u8282\u70b9</li>\n<li><strong>\u52a8\u91cf\u4ea4\u6362</strong>\uff1a\n   - FEM\u2192MPM\uff1a\u5728FEM\u8fb9\u754c\u751f\u6210\u865a\u62df\u7c92\u5b50\n   - MPM\u2192FEM\uff1a\u7c92\u5b50\u8d21\u732e\u4f5c\u4e3aFEM\u7684\u8fb9\u754c\u529b</li>\n</ol>\n<p>\u7b97\u6cd5\u6846\u67b6\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">coupled_step</span><span class=\"p\">():</span>\n    <span class=\"c1\"># FEM\u533a\u57df</span>\n    <span class=\"n\">K_fem</span> <span class=\"o\">=</span> <span class=\"n\">assemble_stiffness_matrix</span><span class=\"p\">()</span>\n    <span class=\"n\">f_fem</span> <span class=\"o\">=</span> <span class=\"n\">assemble_force_vector</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># MPM\u8d21\u732e\u5230FEM\u8fb9\u754c</span>\n    <span class=\"n\">f_mpm_to_fem</span> <span class=\"o\">=</span> <span class=\"n\">compute_mpm_boundary_force</span><span class=\"p\">()</span>\n    <span class=\"n\">f_fem</span> <span class=\"o\">+=</span> <span class=\"n\">f_mpm_to_fem</span>\n\n    <span class=\"c1\"># \u6c42\u89e3FEM</span>\n    <span class=\"n\">u_fem</span> <span class=\"o\">=</span> <span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">K_fem</span><span class=\"p\">,</span> <span class=\"n\">f_fem</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># FEM\u901f\u5ea6\u4f5c\u4e3aMPM\u8fb9\u754c\u6761\u4ef6</span>\n    <span class=\"n\">v_fem_boundary</span> <span class=\"o\">=</span> <span class=\"n\">differentiate</span><span class=\"p\">(</span><span class=\"n\">u_fem</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">dt</span>\n\n    <span class=\"c1\"># MPM\u6b65\u9aa4\uff08\u4f7f\u7528FEM\u8fb9\u754c\u901f\u5ea6\uff09</span>\n    <span class=\"n\">mpm_step_with_boundary</span><span class=\"p\">(</span><span class=\"n\">v_fem_boundary</span><span class=\"p\">)</span>\n</code></pre></div>\n\n</details>\n<p><strong>\u7ec3\u4e608.8</strong>\uff1a\u5b9e\u73b0\u4e00\u4e2a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u672c\u6784\u6a21\u578b\uff0c\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u66ff\u4ee3\u89e3\u6790\u7684\u5e94\u529b-\u5e94\u53d8\u5173\u7cfb\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u7f51\u7edc\u8f93\u5165\u4e3a$\\mathbf{F}$\u6216\u5176\u4e0d\u53d8\u91cf\uff0c\u8f93\u51fa\u4e3a$\\mathbf{P}$\u3002</p>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u795e\u7ecf\u7f51\u7edc\u672c\u6784\u6a21\u578b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">NeuralConstitutive</span><span class=\"p\">(</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"c1\"># \u8f93\u5165\uff1aF\u7684\u4e0d\u53d8\u91cf (I1, I2, I3)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">net</span> <span class=\"o\">=</span> <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">(</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">(),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">(),</span>\n            <span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>  <span class=\"c1\"># \u8f93\u51faP\u76849\u4e2a\u5206\u91cf</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">):</span>\n        <span class=\"c1\"># \u8ba1\u7b97\u4e0d\u53d8\u91cf</span>\n        <span class=\"n\">I1</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">trace</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">@</span> <span class=\"n\">F</span><span class=\"p\">)</span>\n        <span class=\"n\">I2</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">I1</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">trace</span><span class=\"p\">((</span><span class=\"n\">F</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">@</span> <span class=\"n\">F</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n        <span class=\"n\">I3</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">det</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n        <span class=\"n\">invariants</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">([</span><span class=\"n\">I1</span><span class=\"p\">,</span> <span class=\"n\">I2</span><span class=\"p\">,</span> <span class=\"n\">I3</span><span class=\"p\">])</span>\n        <span class=\"n\">P_vec</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">net</span><span class=\"p\">(</span><span class=\"n\">invariants</span><span class=\"p\">)</span>\n        <span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">P_vec</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># \u786e\u4fdd\u7269\u7406\u4e00\u81f4\u6027</span>\n        <span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">enforce_symmetry</span><span class=\"p\">(</span><span class=\"n\">P</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">P</span>\n</code></pre></div>\n\n<p>\u8bad\u7ec3\u6570\u636e\u6765\u81ea\uff1a</p>\n<ol>\n<li>\u89e3\u6790\u6a21\u578b\u751f\u6210</li>\n<li>\u5b9e\u9a8c\u6d4b\u91cf</li>\n<li>\u9ad8\u7cbe\u5ea6\u4eff\u771f</li>\n</ol>\n</details>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef (Gotchas)</h2>\n<ol>\n<li>\n<p><strong>\u7c92\u5b50\u7a7f\u8d8a\u7f51\u683c\u8fb9\u754c</strong>\uff1a\u7c92\u5b50\u79bb\u5f00\u8ba1\u7b97\u57df\u65f6\u9700\u8981\u6b63\u786e\u5904\u7406\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6bb5\u9519\u8bef\n   - \u89e3\u51b3\uff1a\u8fb9\u754c\u68c0\u67e5\u548c\u7c92\u5b50\u5220\u9664\u673a\u5236</p>\n</li>\n<li>\n<p><strong>\u53d8\u5f62\u68af\u5ea6\u9000\u5316</strong>\uff1a$\\det(\\mathbf{F}) \\leq 0$\u5bfc\u81f4\u5e94\u529b\u8ba1\u7b97\u5931\u8d25\n   - \u89e3\u51b3\uff1a\u4f7f\u7528\u53ef\u9006\u6709\u9650\u5143\u6280\u672f\u6216SVD\u5939\u6301</p>\n</li>\n<li>\n<p><strong>\u65f6\u95f4\u6b65\u957f\u8fc7\u5927</strong>\uff1aCFL\u6761\u4ef6$\\Delta t &lt; \\frac{\\Delta x}{c}$\uff0c\u5176\u4e2d$c = \\sqrt{E/\\rho}$\n   - \u89e3\u51b3\uff1a\u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f\u6216\u9690\u5f0f\u79ef\u5206</p>\n</li>\n<li>\n<p><strong>\u80fd\u91cf\u4e0d\u5b88\u6052</strong>\uff1a\u6570\u503c\u8017\u6563\u5bfc\u81f4\u80fd\u91cf\u635f\u5931\n   - \u89e3\u51b3\uff1a\u4f7f\u7528APIC/MLS-MPM\uff0c\u8f9b\u79ef\u5206\u5668</p>\n</li>\n<li>\n<p><strong>\u5185\u5b58\u7206\u70b8</strong>\uff1a\u7c92\u5b50\u6570\u91cf\u52a8\u6001\u589e\u957f\u5bfc\u81f4\u5185\u5b58\u4e0d\u8db3\n   - \u89e3\u51b3\uff1a\u7c92\u5b50\u6570\u91cf\u4e0a\u9650\uff0c\u81ea\u9002\u5e94\u7c92\u5b50\u7ba1\u7406</p>\n</li>\n<li>\n<p><strong>\u5e76\u884c\u7ade\u6001</strong>\uff1aP2G\u9636\u6bb5\u7684\u539f\u5b50\u64cd\u4f5c\u6027\u80fd\u74f6\u9888\n   - \u89e3\u51b3\uff1a\u7c92\u5b50\u6392\u5e8f\uff0c\u5206\u5757\u5e76\u884c</p>\n</li>\n<li>\n<p><strong>\u8fb9\u754c\u6761\u4ef6\u4e0d\u4e00\u81f4</strong>\uff1a\u7f51\u683c\u8fb9\u754c\u6761\u4ef6\u4e0e\u7c92\u5b50\u8fd0\u52a8\u51b2\u7a81\n   - \u89e3\u51b3\uff1a\u7edf\u4e00\u7684\u8fb9\u754c\u5904\u7406\u7b56\u7565</p>\n</li>\n<li>\n<p><strong>\u6570\u503c\u65ad\u88c2\u4e0d\u7a33\u5b9a</strong>\uff1a\u65ad\u88c2\u540e\u5e94\u529b\u96c6\u4e2d\u5bfc\u81f4\u6570\u503c\u7206\u70b8\n   - \u89e3\u51b3\uff1a\u5e94\u529b\u91ca\u653e\uff0c\u635f\u4f24\u6b63\u5219\u5316</p>\n</li>\n</ol>\n<h2 id=\"_5\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_6\">\u7b97\u6cd5\u9009\u62e9</h3>\n<ul>\n<li>[ ] \u5c0f\u53d8\u5f62\uff1a\u8003\u8651\u4f7f\u7528FEM\u800c\u975eMPM</li>\n<li>[ ] \u6d41\u56fa\u8026\u5408\uff1aMLS-MPM\u7edf\u4e00\u6846\u67b6</li>\n<li>[ ] \u65ad\u88c2\u6a21\u62df\uff1aCPIC\u6216\u76f8\u573a\u65b9\u6cd5</li>\n<li>[ ] \u5927\u65f6\u95f4\u6b65\u957f\uff1a\u9690\u5f0fMPM</li>\n</ul>\n<h3 id=\"_7\">\u53c2\u6570\u8bbe\u7f6e</h3>\n<ul>\n<li>[ ] \u7c92\u5b50\u5bc6\u5ea6\uff1a\u6bcf\u4e2a\u5355\u51432-4\u4e2a\u7c92\u5b50\uff082D\uff09\uff0c4-8\u4e2a\uff083D\uff09</li>\n<li>[ ] \u5f62\u51fd\u6570\u9636\u6570\uff1a\u4e8c\u6b21B\u6837\u6761\uff08\u9ed8\u8ba4\uff09\uff0c\u4e09\u6b21\uff08\u9ad8\u7cbe\u5ea6\uff09</li>\n<li>[ ] \u65f6\u95f4\u6b65\u957f\uff1a\u6ee1\u8db3CFL\u6761\u4ef6\uff0c\u8003\u8651\u6750\u6599\u521a\u5ea6</li>\n<li>[ ] \u7f51\u683c\u5206\u8fa8\u7387\uff1a\u6355\u6349\u6700\u5c0f\u7279\u5f81\u5c3a\u5bf8</li>\n</ul>\n<h3 id=\"_8\">\u6027\u80fd\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u6570\u636e\u5e03\u5c40\uff1aSoA\u7528\u4e8e\u6279\u91cf\u8ba1\u7b97\uff0cAoS\u7528\u4e8e\u968f\u673a\u8bbf\u95ee</li>\n<li>[ ] \u7a00\u758f\u7ed3\u6784\uff1aSPGrid\u6216OpenVDB\u5904\u7406\u5927\u89c4\u6a21\u7a00\u758f\u57df</li>\n<li>[ ] \u5e76\u884c\u7b56\u7565\uff1a\u7c92\u5b50\u6392\u5e8f\u51cf\u5c11\u539f\u5b50\u64cd\u4f5c\u51b2\u7a81</li>\n<li>[ ] \u5185\u5b58\u7ba1\u7406\uff1a\u9884\u5206\u914d\uff0c\u907f\u514d\u52a8\u6001\u5206\u914d</li>\n</ul>\n<h3 id=\"_9\">\u6570\u503c\u7a33\u5b9a\u6027</h3>\n<ul>\n<li>[ ] \u53d8\u5f62\u68af\u5ea6\u76d1\u63a7\uff1a\u68c0\u6d4b\u5e76\u5904\u7406\u9000\u5316\u60c5\u51b5</li>\n<li>[ ] \u80fd\u91cf\u76d1\u63a7\uff1a\u8ddf\u8e2a\u7cfb\u7edf\u603b\u80fd\u91cf\u53d8\u5316</li>\n<li>[ ] \u6b8b\u5dee\u68c0\u67e5\uff1a\u9690\u5f0f\u6c42\u89e3\u5668\u7684\u6536\u655b\u6027</li>\n<li>[ ] \u8fb9\u754c\u5904\u7406\uff1a\u786e\u4fdd\u8fb9\u754c\u6761\u4ef6\u7684\u4e00\u81f4\u6027</li>\n</ul>\n<h3 id=\"_10\">\u9a8c\u8bc1\u4e0e\u8c03\u8bd5</h3>\n<ul>\n<li>[ ] \u5355\u5143\u6d4b\u8bd5\uff1a\u672c\u6784\u6a21\u578b\u3001\u4f20\u8f93\u7b97\u5b50</li>\n<li>[ ] \u6536\u655b\u6027\u6d4b\u8bd5\uff1a\u7f51\u683c\u7ec6\u5316\u7814\u7a76</li>\n<li>[ ] \u5b88\u6052\u6027\u68c0\u67e5\uff1a\u8d28\u91cf\u3001\u52a8\u91cf\u3001\u89d2\u52a8\u91cf</li>\n<li>[ ] \u57fa\u51c6\u6d4b\u8bd5\uff1a\u4e0e\u89e3\u6790\u89e3\u6216\u5b9e\u9a8c\u5bf9\u6bd4</li>\n</ul>"
  },
  "../chapter3.md": {
    "hash": "eb3312dacc22a1743e542016a88eaae1",
    "content": "<h1 id=\"2\">\u7b2c\u4e09\u7ae0\uff1a\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff082\uff09\uff1a\u6709\u9650\u5143\u4eff\u771f</h1>\n<p>\u6709\u9650\u5143\u65b9\u6cd5(FEM)\u662f\u7269\u7406\u4eff\u771f\u4e2d\u6700\u91cd\u8981\u7684\u6570\u503c\u65b9\u6cd5\u4e4b\u4e00\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u56fa\u4f53\u529b\u5b66\u3001\u6d41\u4f53\u529b\u5b66\u548c\u4f20\u70ed\u7b49\u9886\u57df\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u6709\u9650\u5143\u65b9\u6cd5\u7684\u7406\u8bba\u57fa\u7840\uff0c\u4ece\u5f31\u5f62\u5f0f\u63a8\u5bfc\u5f00\u59cb\uff0c\u9010\u6b65\u4ecb\u7ecd\u6750\u6599\u6a21\u578b\u3001\u7f51\u683c\u7c7b\u578b\u548c\u9ad8\u7ea7\u7279\u6027\u3002\u901a\u8fc7\u5b66\u4e60\u672c\u7ae0\u5185\u5bb9\uff0c\u8bfb\u8005\u5c06\u638c\u63e1\u4f7f\u7528\u6709\u9650\u5143\u65b9\u6cd5\u8fdb\u884c\u5f39\u6027\u4f53\u4eff\u771f\u7684\u6838\u5fc3\u6280\u672f\uff0c\u5e76\u4e86\u89e3\u62d3\u6251\u4f18\u5316\u7b49\u524d\u6cbf\u5e94\u7528\u3002</p>\n<h2 id=\"31\">3.1 \u5f31\u5f62\u5f0f\u4e0e\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143\u5165\u95e8</h2>\n<p>\u6709\u9650\u5143\u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5c06\u8fde\u7eed\u7684\u504f\u5fae\u5206\u65b9\u7a0b\u95ee\u9898\u8f6c\u5316\u4e3a\u79bb\u6563\u7684\u7ebf\u6027\u4ee3\u6570\u95ee\u9898\u3002\u8fd9\u4e2a\u8f6c\u5316\u8fc7\u7a0b\u7684\u5173\u952e\u662f\u5f31\u5f62\u5f0f(weak form)\uff0c\u5b83\u4e0d\u4ec5\u964d\u4f4e\u4e86\u5bf9\u89e3\u7684\u5149\u6ed1\u6027\u8981\u6c42\uff0c\u8fd8\u81ea\u7136\u5730\u5f15\u5165\u4e86\u8fb9\u754c\u6761\u4ef6\u7684\u5904\u7406\u65b9\u5f0f\u3002</p>\n<h3 id=\"311-vs\">3.1.1 \u5f3a\u5f62\u5f0fvs\u5f31\u5f62\u5f0f</h3>\n<p>\u5728\u7269\u7406\u4eff\u771f\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u6c42\u89e3\u504f\u5fae\u5206\u65b9\u7a0b(PDE)\u3002\u4ee5\u6cca\u677e\u65b9\u7a0b\u4e3a\u4f8b\uff0c\u5b83\u63cf\u8ff0\u4e86\u7a33\u6001\u70ed\u4f20\u5bfc\u3001\u9759\u7535\u52bf\u7b49\u7269\u7406\u73b0\u8c61\uff1a</p>\n<p><strong>\u5f3a\u5f62\u5f0f</strong>\uff1a\n$$\\nabla \\cdot \\nabla u = f \\quad \\text{in } \\Omega$$\n$$u = g \\quad \\text{on } \\partial\\Omega_D \\quad \\text{(Dirichlet\u8fb9\u754c)}$$\n$$\\nabla u \\cdot n = h \\quad \\text{on } \\partial\\Omega_N \\quad \\text{(Neumann\u8fb9\u754c)}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\Omega$ \u662f\u6c42\u89e3\u57df</li>\n<li>$\\partial\\Omega = \\partial\\Omega_D \\cup \\partial\\Omega_N$ \u662f\u8fb9\u754c</li>\n<li>$n$ \u662f\u5916\u6cd5\u5411\u91cf</li>\n<li>$f$ \u662f\u6e90\u9879\uff08\u5982\u70ed\u6e90\u5bc6\u5ea6\uff09</li>\n<li>$g$ \u662f\u5df2\u77e5\u7684\u8fb9\u754c\u503c\uff08\u5982\u6e29\u5ea6\uff09</li>\n<li>$h$ \u662f\u5df2\u77e5\u7684\u8fb9\u754c\u901a\u91cf\uff08\u5982\u70ed\u6d41\uff09</li>\n</ul>\n<p>\u5f3a\u5f62\u5f0f\u8981\u6c42\u89e3\u5728\u6bcf\u4e2a\u70b9\u90fd\u6ee1\u8db3\u5fae\u5206\u65b9\u7a0b\uff0c\u8fd9\u610f\u5473\u7740\uff1a</p>\n<ol>\n<li>\u89e3\u5fc5\u987b\u4e8c\u9636\u53ef\u5fae\uff08$C^2$\u8fde\u7eed\uff09</li>\n<li>\u5728\u4e0d\u8fde\u7eed\u70b9\uff08\u5982\u6750\u6599\u754c\u9762\uff09\u96be\u4ee5\u5904\u7406</li>\n<li>\u6570\u503c\u79bb\u6563\u5316\u4e0d\u76f4\u89c2</li>\n</ol>\n<p><strong>\u5f31\u5f62\u5f0f\u63a8\u5bfc</strong>\uff1a\n\u5f15\u5165\u6d4b\u8bd5\u51fd\u6570\uff08\u4e5f\u79f0\u6743\u51fd\u6570\uff09$w \\in V$\uff0c\u5176\u4e2d $V = \\{w : w \\in H^1(\\Omega), w = 0 \\text{ on } \\partial\\Omega_D\\}$\u3002</p>\n<p>\u5c06\u5f3a\u5f62\u5f0f\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5\u6d4b\u8bd5\u51fd\u6570\u5e76\u5728\u57df\u4e0a\u79ef\u5206\uff1a\n$$\\int_\\Omega w(\\nabla \\cdot \\nabla u) \\, d\\Omega = \\int_\\Omega wf \\, d\\Omega$$\n\u8fd9\u5c31\u662f\u5f31\u5f62\u5f0f\u7684\u8d77\u70b9\u3002\u6ce8\u610f\u5230\u5de6\u8fb9\u5305\u542b\u4e86$u$\u7684\u4e8c\u9636\u5bfc\u6570\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u5206\u90e8\u79ef\u5206\u964d\u4f4e\u5bfc\u6570\u9636\u6570\u3002</p>\n<h3 id=\"312\">3.1.2 \u5206\u90e8\u79ef\u5206\u4e0e\u6563\u5ea6\u5b9a\u7406</h3>\n<p>\u5206\u90e8\u79ef\u5206\u662f\u5c06\u5f3a\u5f62\u5f0f\u8f6c\u5316\u4e3a\u5f31\u5f62\u5f0f\u7684\u5173\u952e\u5de5\u5177\u3002\u56de\u987e\u4e00\u7ef4\u7684\u5206\u90e8\u79ef\u5206\u516c\u5f0f\uff1a\n$$\\int_a^b u'v \\, dx = [uv]_a^b - \\int_a^b uv' \\, dx$$\n\u5728\u591a\u7ef4\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\u6563\u5ea6\u5b9a\u7406\uff08\u4e5f\u79f0\u9ad8\u65af\u5b9a\u7406\uff09\uff1a\n$$\\int_\\Omega \\nabla \\cdot \\mathbf{F} \\, d\\Omega = \\int_{\\partial\\Omega} \\mathbf{F} \\cdot n \\, d\\Gamma$$\n<strong>\u8be6\u7ec6\u63a8\u5bfc\u8fc7\u7a0b</strong>\uff1a\n\u4ece $\\int_\\Omega w(\\nabla \\cdot \\nabla u) \\, d\\Omega$ \u5f00\u59cb\uff0c\u6ce8\u610f\u5230 $\\nabla \\cdot \\nabla u = \\nabla \\cdot (\\nabla u)$\u3002</p>\n<p>\u4f7f\u7528\u6052\u7b49\u5f0f\uff1a\n$$\\nabla \\cdot (w\\nabla u) = \\nabla w \\cdot \\nabla u + w(\\nabla \\cdot \\nabla u)$$\n\u91cd\u6392\u5f97\uff1a\n$$w(\\nabla \\cdot \\nabla u) = \\nabla \\cdot (w\\nabla u) - \\nabla w \\cdot \\nabla u$$\n\u4ee3\u5165\u79ef\u5206\uff1a\n$$\\int_\\Omega w(\\nabla \\cdot \\nabla u) \\, d\\Omega = \\int_\\Omega \\nabla \\cdot (w\\nabla u) \\, d\\Omega - \\int_\\Omega \\nabla w \\cdot \\nabla u \\, d\\Omega$$\n\u5e94\u7528\u6563\u5ea6\u5b9a\u7406\u4e8e\u7b2c\u4e00\u9879\uff1a\n$$\\int_\\Omega w(\\nabla \\cdot \\nabla u) \\, d\\Omega = \\int_{\\partial\\Omega} w \\nabla u \\cdot n \\, d\\Gamma - \\int_\\Omega \\nabla w \\cdot \\nabla u \\, d\\Omega$$\n<strong>\u5904\u7406\u8fb9\u754c\u79ef\u5206</strong>\uff1a\n\u8fb9\u754c\u79ef\u5206\u9700\u8981\u6839\u636e\u8fb9\u754c\u7c7b\u578b\u5206\u522b\u5904\u7406\uff1a\n$$\\int_{\\partial\\Omega} w \\nabla u \\cdot n \\, d\\Gamma = \\int_{\\partial\\Omega_D} w \\nabla u \\cdot n \\, d\\Gamma + \\int_{\\partial\\Omega_N} w \\nabla u \\cdot n \\, d\\Gamma$$\n\u7531\u4e8e\u6d4b\u8bd5\u51fd\u6570\u5728Dirichlet\u8fb9\u754c\u4e0a\u4e3a\u96f6\uff08$w = 0$ on $\\partial\\Omega_D$\uff09\uff0c\u7b2c\u4e00\u9879\u6d88\u5931\u3002\n\u5728Neumann\u8fb9\u754c\u4e0a\uff0c\u6211\u4eec\u6709 $\\nabla u \\cdot n = h$\uff0c\u56e0\u6b64\uff1a\n$$\\int_{\\partial\\Omega} w \\nabla u \\cdot n \\, d\\Gamma = \\int_{\\partial\\Omega_N} wh \\, d\\Gamma$$\n<strong>\u5f31\u5f62\u5f0f\u7684\u6700\u7ec8\u5f62\u5f0f</strong>\uff1a\n$$\\int_\\Omega \\nabla w \\cdot \\nabla u \\, d\\Omega = \\int_\\Omega wf \\, d\\Omega + \\int_{\\partial\\Omega_N} wh \\, d\\Gamma$$\n\u8fd9\u5c31\u662f\u6cca\u677e\u65b9\u7a0b\u7684\u5f31\u5f62\u5f0f\uff0c\u4e5f\u79f0\u4e3a\u53d8\u5206\u5f62\u5f0f\u3002\u6ce8\u610f\u5230\uff1a</p>\n<ol>\n<li>\u53ea\u9700\u8981$u$\u548c$w$\u7684\u4e00\u9636\u5bfc\u6570\uff08$H^1$\u7a7a\u95f4\uff09</li>\n<li>Neumann\u8fb9\u754c\u6761\u4ef6\u81ea\u7136\u5730\u51fa\u73b0\u5728\u5f31\u5f62\u5f0f\u4e2d\uff08\u81ea\u7136\u8fb9\u754c\u6761\u4ef6\uff09</li>\n<li>Dirichlet\u8fb9\u754c\u6761\u4ef6\u901a\u8fc7\u6d4b\u8bd5\u51fd\u6570\u7a7a\u95f4\u5f3a\u5236\u6ee1\u8db3\uff08\u672c\u8d28\u8fb9\u754c\u6761\u4ef6\uff09</li>\n</ol>\n<h3 id=\"313-galerkin\">3.1.3 Galerkin\u65b9\u6cd5</h3>\n<p>Galerkin\u65b9\u6cd5\u662f\u5c06\u65e0\u9650\u7ef4\u51fd\u6570\u7a7a\u95f4\u95ee\u9898\u8f6c\u5316\u4e3a\u6709\u9650\u7ef4\u7ebf\u6027\u4ee3\u6570\u95ee\u9898\u7684\u4e00\u822c\u6846\u67b6\u3002\u6709\u9650\u5143\u65b9\u6cd5\u662fGalerkin\u65b9\u6cd5\u7684\u4e00\u4e2a\u7279\u4f8b\uff0c\u5176\u7279\u70b9\u662f\u4f7f\u7528\u5177\u6709\u5c40\u90e8\u652f\u6491\u7684\u57fa\u51fd\u6570\u3002</p>\n<p><strong>Galerkin\u79bb\u6563\u5316\u7684\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6784\u9020\u6709\u9650\u7ef4\u5b50\u7a7a\u95f4</strong>\uff1a\n   \u9009\u62e9\u6709\u9650\u7ef4\u8bd5\u51fd\u6570\u7a7a\u95f4 $V_h \\subset V$\uff1a\n$$V_h = \\text{span}\\{\\phi_1, \\phi_2, ..., \\phi_n\\}$$\n\u5176\u4e2d$h$\u8868\u793a\u7f51\u683c\u5c3a\u5bf8\uff0c$\\phi_i$\u662f\u57fa\u51fd\u6570\uff08\u4e5f\u79f0\u5f62\u51fd\u6570\uff09\u3002</p>\n</li>\n<li>\n<p><strong>\u89e3\u7684\u79bb\u6563\u8868\u793a</strong>\uff1a\n   \u5c06\u8fd1\u4f3c\u89e3$u_h$\u8868\u793a\u4e3a\u57fa\u51fd\u6570\u7684\u7ebf\u6027\u7ec4\u5408\uff1a\n$$u_h(x) = \\sum_{j=1}^n u_j \\phi_j(x)$$\n\u5176\u4e2d$u_j$\u662f\u5f85\u6c42\u7684\u7cfb\u6570\uff08\u8282\u70b9\u503c\uff09\u3002</p>\n</li>\n<li>\n<p><strong>Galerkin\u6295\u5f71</strong>\uff1a\n   \u8981\u6c42\u6b8b\u5dee\u4e0e\u6240\u6709\u6d4b\u8bd5\u51fd\u6570\u6b63\u4ea4\u3002\u9009\u62e9\u6d4b\u8bd5\u51fd\u6570 $w_h = \\phi_i$\uff08$i = 1, 2, ..., n$\uff09\uff0c\u4ee3\u5165\u5f31\u5f62\u5f0f\uff1a\n$$\\int_\\Omega \\nabla \\phi_i \\cdot \\nabla u_h \\, d\\Omega = \\int_\\Omega \\phi_i f \\, d\\Omega + \\int_{\\partial\\Omega_N} \\phi_i h \\, d\\Gamma$$</p>\n</li>\n<li>\n<p><strong>\u7ebf\u6027\u65b9\u7a0b\u7ec4</strong>\uff1a\n   \u5c06$u_h$\u7684\u8868\u8fbe\u5f0f\u4ee3\u5165\uff1a\n$$\\sum_{j=1}^n u_j \\int_\\Omega \\nabla \\phi_i \\cdot \\nabla \\phi_j \\, d\\Omega = \\int_\\Omega \\phi_i f \\, d\\Omega + \\int_{\\partial\\Omega_N} \\phi_i h \\, d\\Gamma$$\n\u5b9a\u4e49\uff1a</p>\n</li>\n</ol>\n<ul>\n<li>\u521a\u5ea6\u77e9\u9635\uff1a$K_{ij} = \\int_\\Omega \\nabla \\phi_i \\cdot \\nabla \\phi_j \\, d\\Omega$</li>\n<li>\u8f7d\u8377\u5411\u91cf\uff1a$f_i = \\int_\\Omega \\phi_i f \\, d\\Omega + \\int_{\\partial\\Omega_N} \\phi_i h \\, d\\Gamma$</li>\n</ul>\n<p>\u5f97\u5230\u7ebf\u6027\u7cfb\u7edf\uff1a\n$$\\mathbf{K}\\mathbf{u} = \\mathbf{f}$$\n<strong>Galerkin\u65b9\u6cd5\u7684\u6570\u5b66\u6027\u8d28</strong>\uff1a</p>\n<ul>\n<li><strong>\u6700\u4f73\u8fd1\u4f3c\u6027</strong>\uff1aGalerkin\u89e3\u662f\u771f\u89e3\u5728$V_h$\u4e2d\u7684\u6700\u4f73\u8fd1\u4f3c\uff08\u5728\u80fd\u91cf\u8303\u6570\u610f\u4e49\u4e0b\uff09</li>\n<li><strong>\u5bf9\u79f0\u6027</strong>\uff1a\u5982\u679c\u539f\u95ee\u9898\u662f\u81ea\u4f34\u7684\uff0c\u5219\u521a\u5ea6\u77e9\u9635\u5bf9\u79f0</li>\n<li><strong>\u6b63\u5b9a\u6027</strong>\uff1a\u5bf9\u4e8e\u692d\u5706\u578b\u95ee\u9898\uff0c\u521a\u5ea6\u77e9\u9635\u6b63\u5b9a</li>\n</ul>\n<h3 id=\"314\">3.1.4 \u8bd5\u51fd\u6570\u4e0e\u6d4b\u8bd5\u51fd\u6570</h3>\n<p>\u6709\u9650\u5143\u65b9\u6cd5\u7684\u4e00\u4e2a\u5173\u952e\u7279\u5f81\u662f\u4f7f\u7528\u5177\u6709\u5c40\u90e8\u652f\u6491\u7684\u5206\u7247\u591a\u9879\u5f0f\u57fa\u51fd\u6570\u3002\u8fd9\u4e9b\u57fa\u51fd\u6570\u7684\u9009\u62e9\u76f4\u63a5\u5f71\u54cd\u4e86\u65b9\u6cd5\u7684\u7cbe\u5ea6\u3001\u7a33\u5b9a\u6027\u548c\u8ba1\u7b97\u6548\u7387\u3002</p>\n<p><strong>\u57fa\u51fd\u6570\u7684\u8981\u6c42</strong>\uff1a</p>\n<ol>\n<li><strong>\u5b8c\u5907\u6027</strong>\uff1a\u80fd\u591f\u7cbe\u786e\u8868\u793a\u5e38\u6570\u548c\u7ebf\u6027\u51fd\u6570\uff08\u5bf9\u4e8e\u4e8c\u9636PDE\uff09</li>\n<li><strong>\u8fde\u7eed\u6027</strong>\uff1a\u6ee1\u8db3\u6240\u9700\u7684\u8fde\u7eed\u6027\u8981\u6c42\uff08$C^0$\u5bf9\u4e8e\u4e8c\u9636PDE\uff09</li>\n<li><strong>\u5c40\u90e8\u652f\u6491</strong>\uff1a\u6bcf\u4e2a\u57fa\u51fd\u6570\u53ea\u5728\u5c11\u6570\u5355\u5143\u4e0a\u975e\u96f6</li>\n<li><strong>\u63d2\u503c\u6027</strong>\uff1a$\\phi_i(x_j) = \\delta_{ij}$\uff08Kronecker delta\uff09</li>\n</ol>\n<p><strong>\u4e00\u7ef4\u57fa\u51fd\u6570</strong>\uff1a</p>\n<ol>\n<li><strong>\u7ebf\u6027\u57fa\u51fd\u6570\uff08\u5e3d\u5b50\u51fd\u6570\uff09</strong>\uff1a\n$$\\phi_i(x) = \\begin{cases}\n   \\frac{x - x_{i-1}}{x_i - x_{i-1}} &amp; x_{i-1} \\leq x \\leq x_i \\\\\n   \\frac{x_{i+1} - x}{x_{i+1} - x_i} &amp; x_i \\leq x \\leq x_{i+1} \\\\\n   0 &amp; \\text{otherwise}\n   \\end{cases}$$\n\u6027\u8d28\uff1a</li>\n</ol>\n<ul>\n<li>\u5728\u8282\u70b9$x_i$\u5904\u503c\u4e3a1\uff0c\u5728\u5176\u4ed6\u8282\u70b9\u5904\u4e3a0</li>\n<li>\u652f\u6491\u57df\u4e3a$[x_{i-1}, x_{i+1}]$</li>\n<li>\u5bfc\u6570\u4e3a\u5206\u7247\u5e38\u6570</li>\n</ul>\n<ol start=\"2\">\n<li>\n<p><strong>\u4e8c\u6b21\u57fa\u51fd\u6570</strong>\uff1a\n   \u9700\u8981\u5728\u5355\u5143\u4e2d\u70b9\u5f15\u5165\u989d\u5916\u8282\u70b9\u3002\u5bf9\u4e8e\u6807\u51c6\u5355\u5143$[-1, 1]$\uff1a\n$$N_1(\\xi) = \\frac{\\xi(\\xi-1)}{2}, \\quad N_2(\\xi) = 1-\\xi^2, \\quad N_3(\\xi) = \\frac{\\xi(\\xi+1)}{2}$$</p>\n</li>\n<li>\n<p><strong>Hermite\u57fa\u51fd\u6570</strong>\uff1a\n   \u540c\u65f6\u63d2\u503c\u51fd\u6570\u503c\u548c\u5bfc\u6570\u503c\uff0c\u7528\u4e8e\u9700\u8981$C^1$\u8fde\u7eed\u7684\u95ee\u9898\uff1a\n$$H_i^0(x) = 1 - 3\\xi^2 + 2\\xi^3, \\quad H_i^1(x) = \\xi - 2\\xi^2 + \\xi^3$$\n\u5176\u4e2d$\\xi = (x-x_i)/(x_{i+1}-x_i)$\u3002</p>\n</li>\n</ol>\n<p><strong>\u4e8c\u7ef4\u57fa\u51fd\u6570</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u4e09\u89d2\u5f62\u5355\u5143\u7684\u7ebf\u6027\u57fa\u51fd\u6570</strong>\uff1a\n   \u4f7f\u7528\u91cd\u5fc3\u5750\u6807$(L_1, L_2, L_3)$\uff1a\n$$\\phi_i = L_i, \\quad i = 1, 2, 3$$\n\u5176\u4e2d$L_i$\u662f\u7b2c$i$\u4e2a\u91cd\u5fc3\u5750\u6807\uff0c\u6ee1\u8db3$L_1 + L_2 + L_3 = 1$\u3002</p>\n</li>\n<li>\n<p><strong>\u56db\u8fb9\u5f62\u5355\u5143\u7684\u53cc\u7ebf\u6027\u57fa\u51fd\u6570</strong>\uff1a\n   \u5728\u53c2\u8003\u5355\u5143$[-1,1]^2$\u4e0a\uff1a\n$$N_i(\\xi, \\eta) = \\frac{1}{4}(1 + \\xi_i\\xi)(1 + \\eta_i\\eta)$$\n\u5176\u4e2d$(\\xi_i, \\eta_i)$\u662f\u89d2\u70b9\u5750\u6807\u3002</p>\n</li>\n</ol>\n<p><strong>p\u578b\u4e0eh\u578b\u7ec6\u5316</strong>\uff1a</p>\n<ul>\n<li><strong>h\u578b\u7ec6\u5316</strong>\uff1a\u51cf\u5c0f\u5355\u5143\u5c3a\u5bf8$h$\uff0c\u4fdd\u6301\u591a\u9879\u5f0f\u9636\u6570$p$\u56fa\u5b9a</li>\n<li><strong>p\u578b\u7ec6\u5316</strong>\uff1a\u589e\u52a0\u591a\u9879\u5f0f\u9636\u6570$p$\uff0c\u4fdd\u6301\u7f51\u683c\u56fa\u5b9a</li>\n<li><strong>hp\u578b\u7ec6\u5316</strong>\uff1a\u540c\u65f6\u8c03\u6574$h$\u548c$p$\uff0c\u8fbe\u5230\u6307\u6570\u6536\u655b\u7387</li>\n</ul>\n<p><strong>\u57fa\u51fd\u6570\u7684\u6570\u503c\u6027\u8d28</strong>\uff1a</p>\n<ul>\n<li><strong>\u6761\u4ef6\u6570</strong>\uff1a\u9ad8\u9636\u57fa\u51fd\u6570\u53ef\u80fd\u5bfc\u81f4\u521a\u5ea6\u77e9\u9635\u6761\u4ef6\u6570\u589e\u5927</li>\n<li><strong>\u7a00\u758f\u6027</strong>\uff1a\u5c40\u90e8\u652f\u6491\u4fdd\u8bc1\u521a\u5ea6\u77e9\u9635\u7a00\u758f</li>\n<li><strong>\u6b63\u4ea4\u6027</strong>\uff1a\u67d0\u4e9b\u57fa\u51fd\u6570\uff08\u5982Legendre\u591a\u9879\u5f0f\uff09\u5177\u6709\u6b63\u4ea4\u6027\uff0c\u6539\u5584\u6570\u503c\u6027\u8d28</li>\n</ul>\n<h2 id=\"32\">3.2 \u53d8\u5f62\u4e0e\u5f39\u6027\u57fa\u7840</h2>\n<p>\u8fde\u7eed\u4ecb\u8d28\u529b\u5b66\u662f\u6709\u9650\u5143\u4eff\u771f\u7684\u7406\u8bba\u57fa\u7840\u3002\u672c\u8282\u5c06\u4ecb\u7ecd\u63cf\u8ff0\u6750\u6599\u53d8\u5f62\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5305\u62ec\u53d8\u5f62\u68af\u5ea6\u3001\u5e94\u53d8\u5ea6\u91cf\u548c\u5e94\u529b\u5f20\u91cf\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u8fd9\u4e9b\u6982\u5ff5\u5bf9\u4e8e\u7406\u89e3\u548c\u5b9e\u73b0\u975e\u7ebf\u6027\u6709\u9650\u5143\u81f3\u5173\u91cd\u8981\u3002</p>\n<h3 id=\"321-f\">3.2.1 \u53d8\u5f62\u68af\u5ea6\u5f20\u91cfF</h3>\n<p>\u53d8\u5f62\u68af\u5ea6\u5f20\u91cf$\\mathbf{F}$\u662f\u63cf\u8ff0\u6750\u6599\u5c40\u90e8\u53d8\u5f62\u7684\u6700\u57fa\u672c\u91cf\uff0c\u5b83\u5efa\u7acb\u4e86\u53c2\u8003\u6784\u578b\u548c\u5f53\u524d\u6784\u578b\u4e4b\u95f4\u7684\u8054\u7cfb\u3002</p>\n<p><strong>\u5b9a\u4e49\u4e0e\u51e0\u4f55\u610f\u4e49</strong>\uff1a\n\u8003\u8651\u4e00\u4e2a\u8fde\u7eed\u4f53\u4ece\u53c2\u8003\u6784\u578b\uff08\u521d\u59cb/\u672a\u53d8\u5f62\u72b6\u6001\uff09\u5230\u5f53\u524d\u6784\u578b\uff08\u53d8\u5f62\u540e\u72b6\u6001\uff09\u7684\u6620\u5c04\uff1a\n$$\\mathbf{x} = \\boldsymbol{\\chi}(\\mathbf{X}, t)$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathbf{X} \\in \\Omega_0$\uff1a\u53c2\u8003\u6784\u578b\u4e2d\u7684\u6750\u6599\u70b9\u4f4d\u7f6e</li>\n<li>$\\mathbf{x} \\in \\Omega$\uff1a\u5f53\u524d\u6784\u578b\u4e2d\u7684\u6750\u6599\u70b9\u4f4d\u7f6e</li>\n<li>$\\boldsymbol{\\chi}$\uff1a\u53d8\u5f62\u6620\u5c04</li>\n<li>$t$\uff1a\u65f6\u95f4\u53c2\u6570</li>\n</ul>\n<p>\u53d8\u5f62\u68af\u5ea6\u5b9a\u4e49\u4e3a\uff1a\n$$\\mathbf{F} = \\frac{\\partial \\mathbf{x}}{\\partial \\mathbf{X}} = \\frac{\\partial \\boldsymbol{\\chi}}{\\partial \\mathbf{X}}$$\n\u5728\u6307\u6807\u8bb0\u53f7\u4e0b\uff1a\n$$F_{ij} = \\frac{\\partial x_i}{\\partial X_j}$$\n<strong>\u4e0e\u4f4d\u79fb\u7684\u5173\u7cfb</strong>\uff1a\n\u5f15\u5165\u4f4d\u79fb\u573a $\\mathbf{u}(\\mathbf{X}, t) = \\mathbf{x} - \\mathbf{X}$\uff0c\u5219\uff1a\n$$\\mathbf{F} = \\mathbf{I} + \\frac{\\partial \\mathbf{u}}{\\partial \\mathbf{X}} = \\mathbf{I} + \\nabla_0 \\mathbf{u}$$\n\u5176\u4e2d$\\nabla_0$\u8868\u793a\u76f8\u5bf9\u4e8e\u53c2\u8003\u5750\u6807\u7684\u68af\u5ea6\u7b97\u5b50\u3002</p>\n<p><strong>\u7269\u7406\u89e3\u91ca</strong>\uff1a\n\u53d8\u5f62\u68af\u5ea6\u63cf\u8ff0\u4e86\u6750\u6599\u7ebf\u5143\u7684\u53d8\u5f62\uff1a</p>\n<ul>\n<li>\u53c2\u8003\u6784\u578b\u4e2d\u7684\u7ebf\u5143\uff1a$d\\mathbf{X}$</li>\n<li>\u5f53\u524d\u6784\u578b\u4e2d\u7684\u7ebf\u5143\uff1a$d\\mathbf{x} = \\mathbf{F} d\\mathbf{X}$</li>\n</ul>\n<p><strong>\u53d8\u5f62\u68af\u5ea6\u7684\u91cd\u8981\u6027\u8d28</strong>\uff1a</p>\n<ol>\n<li><strong>\u53ef\u9006\u6027\u6761\u4ef6</strong>\uff1a\n$$J = \\det(\\mathbf{F}) &gt; 0$$\n$J$\u79f0\u4e3aJacobian\u6216\u4f53\u79ef\u6bd4\uff0c\u8868\u793a\u5c40\u90e8\u4f53\u79ef\u53d8\u5316\uff1a</li>\n</ol>\n<ul>\n<li>$J &gt; 1$\uff1a\u4f53\u79ef\u81a8\u80c0</li>\n<li>$J &lt; 1$\uff1a\u4f53\u79ef\u538b\u7f29  </li>\n<li>$J = 1$\uff1a\u4f53\u79ef\u4e0d\u53d8\uff08\u4e0d\u53ef\u538b\u7f29\uff09</li>\n<li>$J \\leq 0$\uff1a\u6750\u6599\u7a7f\u900f\u6216\u7ffb\u8f6c\uff08\u975e\u7269\u7406\uff09</li>\n</ul>\n<ol start=\"2\">\n<li><strong>\u6781\u5206\u89e3</strong>\uff1a\n   \u4efb\u4f55\u53ef\u9006\u7684\u53d8\u5f62\u68af\u5ea6\u53ef\u4ee5\u552f\u4e00\u5206\u89e3\u4e3a\uff1a\n$$\\mathbf{F} = \\mathbf{R}\\mathbf{U} = \\mathbf{V}\\mathbf{R}$$\n\u5176\u4e2d\uff1a</li>\n</ol>\n<ul>\n<li>$\\mathbf{R}$\uff1a\u65cb\u8f6c\u5f20\u91cf\uff08\u6b63\u4ea4\u5f20\u91cf\uff09</li>\n<li>$\\mathbf{U}$\uff1a\u53f3\u62c9\u4f38\u5f20\u91cf\uff08\u5bf9\u79f0\u6b63\u5b9a\uff09</li>\n<li>$\\mathbf{V}$\uff1a\u5de6\u62c9\u4f38\u5f20\u91cf\uff08\u5bf9\u79f0\u6b63\u5b9a\uff09</li>\n</ul>\n<ol start=\"3\">\n<li>\n<p><strong>\u5ba2\u89c2\u6027\uff08\u6846\u67b6\u4e0d\u53d8\u6027\uff09</strong>\uff1a\n   \u5728\u521a\u4f53\u8fd0\u52a8\u4e0b\uff0c\u53d8\u5f62\u68af\u5ea6\u53d8\u6362\u4e3a\uff1a\n$$\\mathbf{F}^* = \\mathbf{Q}\\mathbf{F}$$\n\u5176\u4e2d$\\mathbf{Q}$\u662f\u65cb\u8f6c\u5f20\u91cf\u3002\u8fd9\u8981\u6c42\u672c\u6784\u5173\u7cfb\u5fc5\u987b\u6ee1\u8db3\u5ba2\u89c2\u6027\u3002</p>\n</li>\n<li>\n<p><strong>\u7279\u6b8a\u53d8\u5f62\u6a21\u5f0f</strong>\uff1a\n   - \u521a\u4f53\u5e73\u79fb\uff1a$\\mathbf{F} = \\mathbf{I}$\n   - \u521a\u4f53\u65cb\u8f6c\uff1a$\\mathbf{F} = \\mathbf{R}$\uff08\u6b63\u4ea4\u5f20\u91cf\uff09\n   - \u5355\u8f74\u62c9\u4f38\uff1a$\\mathbf{F} = \\text{diag}(\\lambda, 1/\\sqrt{\\lambda}, 1/\\sqrt{\\lambda})$\uff08\u4e0d\u53ef\u538b\u7f29\u60c5\u51b5\uff09\n   - \u7b80\u5355\u526a\u5207\uff1a$\\mathbf{F} = \\mathbf{I} + \\gamma \\mathbf{e}_1 \\otimes \\mathbf{e}_2$</p>\n</li>\n</ol>\n<h3 id=\"322\">3.2.2 \u683c\u6797\u5e94\u53d8\u4e0e\u67ef\u897f\u5e94\u53d8</h3>\n<p>\u5e94\u53d8\u662f\u63cf\u8ff0\u53d8\u5f62\u7a0b\u5ea6\u7684\u65e0\u91cf\u7eb2\u91cf\u3002\u7531\u4e8e\u6709\u9650\u53d8\u5f62\u4e0b\u5e94\u53d8\u7684\u5b9a\u4e49\u4e0d\u552f\u4e00\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u5404\u79cd\u5e94\u53d8\u5ea6\u91cf\u53ca\u5176\u9002\u7528\u573a\u666f\u3002</p>\n<p><strong>\u4e3a\u4ec0\u4e48\u9700\u8981\u5e94\u53d8\u5ea6\u91cf</strong>\uff1a\n\u53d8\u5f62\u68af\u5ea6$\\mathbf{F}$\u5305\u542b\u4e86\u521a\u4f53\u65cb\u8f6c\uff0c\u4e0d\u662f\u771f\u6b63\u7684\u5e94\u53d8\u5ea6\u91cf\u3002\u6211\u4eec\u9700\u8981\u4ece$\\mathbf{F}$\u4e2d\u63d0\u53d6\u51fa\u7eaf\u53d8\u5f62\u4fe1\u606f\u3002</p>\n<p><strong>\u53f3\u67ef\u897f-\u683c\u6797\u53d8\u5f62\u5f20\u91cf</strong>\uff1a\n$$\\mathbf{C} = \\mathbf{F}^T \\mathbf{F}$$\n\u6027\u8d28\uff1a</p>\n<ul>\n<li>\u5bf9\u79f0\u5f20\u91cf\uff1a$\\mathbf{C} = \\mathbf{C}^T$</li>\n<li>\u5ba2\u89c2\u6027\uff1a\u5728\u521a\u4f53\u65cb\u8f6c\u4e0b\u4e0d\u53d8</li>\n<li>\u4e3b\u4e0d\u53d8\u91cf\uff1a$I_1 = \\text{tr}(\\mathbf{C})$\uff0c$I_2 = \\frac{1}{2}[(\\text{tr}\\mathbf{C})^2 - \\text{tr}(\\mathbf{C}^2)]$\uff0c$I_3 = \\det(\\mathbf{C}) = J^2$</li>\n</ul>\n<p><strong>\u683c\u6797-\u62c9\u683c\u6717\u65e5\u5e94\u53d8\u5f20\u91cf</strong>\uff1a\n$$\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I}) = \\frac{1}{2}(\\mathbf{F}^T \\mathbf{F} - \\mathbf{I})$$\n\u5c55\u5f00\u5f62\u5f0f\uff1a\n$$\\mathbf{E} = \\frac{1}{2}(\\nabla_0 \\mathbf{u} + (\\nabla_0 \\mathbf{u})^T + (\\nabla_0 \\mathbf{u})^T \\nabla_0 \\mathbf{u})$$\n\u5728\u5c0f\u53d8\u5f62\u4e0b\uff08$||\\nabla_0 \\mathbf{u}|| \\ll 1$\uff09\uff0c\u5ffd\u7565\u4e8c\u6b21\u9879\uff1a\n$$\\mathbf{E} \\approx \\boldsymbol{\\epsilon} = \\frac{1}{2}(\\nabla_0 \\mathbf{u} + (\\nabla_0 \\mathbf{u})^T)$$\n\u8fd9\u5c31\u662f\u5de5\u7a0b\u5e94\u53d8\uff08\u65e0\u7a77\u5c0f\u5e94\u53d8\uff09\u3002</p>\n<p><strong>\u5176\u4ed6\u5e38\u7528\u5e94\u53d8\u5ea6\u91cf</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u5de6\u67ef\u897f-\u683c\u6797\u53d8\u5f62\u5f20\u91cf</strong>\uff1a\n$$\\mathbf{B} = \\mathbf{F}\\mathbf{F}^T$$\n\u5728\u5f53\u524d\u6784\u578b\u4e2d\u5ea6\u91cf\u53d8\u5f62\u3002</p>\n</li>\n<li>\n<p><strong>Hencky\u5e94\u53d8\uff08\u5bf9\u6570\u5e94\u53d8\uff09</strong>\uff1a\n$$\\mathbf{E}_H = \\frac{1}{2}\\ln(\\mathbf{C}) = \\ln(\\mathbf{U})$$\n\u5176\u4e2d$\\mathbf{U}$\u6765\u81ea\u6781\u5206\u89e3$\\mathbf{F} = \\mathbf{R}\\mathbf{U}$\u3002</p>\n</li>\n</ol>\n<p>\u4f18\u70b9\uff1a</p>\n<ul>\n<li>\u5bf9\u4e8e\u5355\u8f74\u62c9\u4f38\uff0c$E_H = \\ln(\\lambda)$\uff0c\u5177\u6709\u53ef\u52a0\u6027</li>\n<li>\u538b\u7f29\u548c\u62c9\u4f38\u5bf9\u79f0\uff1a$E_H(-\\lambda) = -E_H(\\lambda)$</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Almansi\u5e94\u53d8</strong>\uff1a\n$$\\mathbf{e} = \\frac{1}{2}(\\mathbf{I} - \\mathbf{B}^{-1})$$\n\u5728\u5f53\u524d\u6784\u578b\u4e2d\u5b9a\u4e49\u7684\u5e94\u53d8\u5ea6\u91cf\u3002</li>\n</ol>\n<p><strong>\u4e3b\u62c9\u4f38\u4e0e\u4e3b\u65b9\u5411</strong>\uff1a\n\u5bf9$\\mathbf{C}$\u8fdb\u884c\u7279\u5f81\u503c\u5206\u89e3\uff1a\n$$\\mathbf{C} = \\sum_{i=1}^3 \\lambda_i^2 \\mathbf{N}_i \\otimes \\mathbf{N}_i$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\lambda_i$\uff1a\u4e3b\u62c9\u4f38\u6bd4\uff08$\\mathbf{F}$\u7684\u5947\u5f02\u503c\uff09</li>\n<li>$\\mathbf{N}_i$\uff1a\u62c9\u683c\u6717\u65e5\u4e3b\u65b9\u5411</li>\n</ul>\n<p><strong>\u4f53\u79ef\u4e0e\u7b49\u5bb9\u53d8\u5f62\u5206\u89e3</strong>\uff1a\n\u5c06\u53d8\u5f62\u68af\u5ea6\u5206\u89e3\u4e3a\u4f53\u79ef\u548c\u7b49\u5bb9\u90e8\u5206\uff1a\n$$\\mathbf{F} = J^{1/3}\\bar{\\mathbf{F}}$$\n\u5176\u4e2d$\\bar{\\mathbf{F}} = J^{-1/3}\\mathbf{F}$\u662f\u7b49\u5bb9\u53d8\u5f62\u68af\u5ea6\uff0c\u6ee1\u8db3$\\det(\\bar{\\mathbf{F}}) = 1$\u3002</p>\n<p>\u76f8\u5e94\u7684\u7b49\u5bb9\u53f3\u67ef\u897f-\u683c\u6797\u5f20\u91cf\uff1a\n$$\\bar{\\mathbf{C}} = \\bar{\\mathbf{F}}^T\\bar{\\mathbf{F}} = J^{-2/3}\\mathbf{C}$$</p>\n<h3 id=\"323\">3.2.3 \u5e94\u529b\u5f20\u91cf</h3>\n<p>\u5e94\u529b\u63cf\u8ff0\u4e86\u6750\u6599\u5185\u90e8\u7684\u529b\u5206\u5e03\u3002\u5728\u6709\u9650\u53d8\u5f62\u4e0b\uff0c\u6709\u591a\u79cd\u5e94\u529b\u5ea6\u91cf\uff0c\u6bcf\u79cd\u90fd\u6709\u5176\u7269\u7406\u610f\u4e49\u548c\u5e94\u7528\u573a\u666f\u3002</p>\n<p><strong>\u5e94\u529b\u7684\u7269\u7406\u5b9a\u4e49</strong>\uff1a\n\u8003\u8651\u6750\u6599\u5185\u90e8\u4e00\u4e2a\u9762\u5143\uff0c\u5176\u6cd5\u5411\u91cf\u4e3a$\\mathbf{n}$\uff0c\u4f5c\u7528\u5728\u8be5\u9762\u5143\u4e0a\u7684\u529b\u4e3a$\\mathbf{t}$\uff08\u7275\u5f15\u529b\uff09\uff0c\u5219\u5e94\u529b\u5f20\u91cf\u5b9a\u4e49\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p>\n<p><strong>\u67ef\u897f\u5e94\u529b\u5f20\u91cf\uff08\u771f\u5b9e\u5e94\u529b\uff09</strong>\uff1a\n$$\\mathbf{t} = \\boldsymbol{\\sigma} \\mathbf{n}$$\n\u5176\u4e2d$\\mathbf{t}$\u548c$\\mathbf{n}$\u90fd\u5728\u5f53\u524d\u6784\u578b\u4e2d\u5b9a\u4e49\u3002\u67ef\u897f\u5e94\u529b\u7684\u7269\u7406\u610f\u4e49\uff1a</p>\n<ul>\n<li>$\\sigma_{ij}$\uff1a\u4f5c\u7528\u5728\u6cd5\u5411\u4e3a$\\mathbf{e}_j$\u7684\u9762\u4e0a\uff0c\u65b9\u5411\u4e3a$\\mathbf{e}_i$\u7684\u5e94\u529b\u5206\u91cf</li>\n<li>\u5bf9\u79f0\u5f20\u91cf\uff1a$\\boldsymbol{\\sigma} = \\boldsymbol{\\sigma}^T$\uff08\u89d2\u52a8\u91cf\u5b88\u6052\uff09</li>\n<li>\u4e3b\u5e94\u529b\uff1a$\\boldsymbol{\\sigma}$\u7684\u7279\u5f81\u503c</li>\n</ul>\n<p><strong>\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529b\uff08PK1\uff0c\u540d\u4e49\u5e94\u529b\uff09</strong>\uff1a\n\u5c06\u5f53\u524d\u6784\u578b\u7684\u529b\u4e0e\u53c2\u8003\u6784\u578b\u7684\u9762\u79ef\u5173\u8054\uff1a\n$$\\mathbf{t}_0 = \\mathbf{P} \\mathbf{N}$$\n\u5176\u4e2d$\\mathbf{N}$\u662f\u53c2\u8003\u6784\u578b\u4e2d\u7684\u6cd5\u5411\u91cf\u3002</p>\n<p>\u4e0e\u67ef\u897f\u5e94\u529b\u7684\u5173\u7cfb\uff08Piola\u53d8\u6362\uff09\uff1a\n$$\\mathbf{P} = J \\boldsymbol{\\sigma} \\mathbf{F}^{-T}$$\n\u6216\u53cd\u8fc7\u6765\uff1a\n$$\\boldsymbol{\\sigma} = \\frac{1}{J} \\mathbf{P} \\mathbf{F}^T$$\n\u6027\u8d28\uff1a</p>\n<ul>\n<li>\u975e\u5bf9\u79f0\u5f20\u91cf\uff08\u4e00\u822c\u60c5\u51b5\u4e0b\uff09</li>\n<li>\u529f\u5171\u8f6d\u4e8e\u53d8\u5f62\u68af\u5ea6\uff1a$\\dot{W} = \\mathbf{P} : \\dot{\\mathbf{F}}$</li>\n<li>\u4ece\u5e94\u53d8\u80fd\u5bfc\u51fa\uff1a$\\mathbf{P} = \\frac{\\partial \\psi}{\\partial \\mathbf{F}}$</li>\n</ul>\n<p><strong>\u7b2c\u4e8cPiola-Kirchhoff\u5e94\u529b\uff08PK2\uff09</strong>\uff1a\n\u5b8c\u5168\u5728\u53c2\u8003\u6784\u578b\u4e2d\u5b9a\u4e49\u7684\u5bf9\u79f0\u5e94\u529b\u5ea6\u91cf\uff1a\n$$\\mathbf{S} = \\mathbf{F}^{-1} \\mathbf{P} = J \\mathbf{F}^{-1} \\boldsymbol{\\sigma} \\mathbf{F}^{-T}$$\n\u6027\u8d28\uff1a</p>\n<ul>\n<li>\u5bf9\u79f0\u5f20\u91cf\uff1a$\\mathbf{S} = \\mathbf{S}^T$</li>\n<li>\u529f\u5171\u8f6d\u4e8e\u683c\u6797\u5e94\u53d8\uff1a$\\dot{W} = \\mathbf{S} : \\dot{\\mathbf{E}}$</li>\n<li>\u4ece\u5e94\u53d8\u80fd\u5bfc\u51fa\uff1a$\\mathbf{S} = 2\\frac{\\partial \\psi}{\\partial \\mathbf{C}} = \\frac{\\partial \\psi}{\\partial \\mathbf{E}}$</li>\n</ul>\n<p><strong>Kirchhoff\u5e94\u529b</strong>\uff1a\n$$\\boldsymbol{\\tau} = J \\boldsymbol{\\sigma}$$\n\u5728\u4e0d\u53ef\u538b\u7f29\u6750\u6599\u4e2d\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a$J = 1$\u65f6$\\boldsymbol{\\tau} = \\boldsymbol{\\sigma}$\u3002</p>\n<p><strong>\u5e94\u529b\u5f20\u91cf\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u603b\u7ed3</strong>\uff1a\n$$\\begin{aligned}\n\\boldsymbol{\\sigma} &amp;= \\frac{1}{J} \\mathbf{P} \\mathbf{F}^T = \\frac{1}{J} \\mathbf{F} \\mathbf{S} \\mathbf{F}^T \\\\\n\\mathbf{P} &amp;= J \\boldsymbol{\\sigma} \\mathbf{F}^{-T} = \\mathbf{F} \\mathbf{S} \\\\\n\\mathbf{S} &amp;= J \\mathbf{F}^{-1} \\boldsymbol{\\sigma} \\mathbf{F}^{-T} = \\mathbf{F}^{-1} \\mathbf{P}\n\\end{aligned}$$\n<strong>\u5e94\u529b\u529f\u7387\u4e0e\u5171\u8f6d\u5bf9</strong>\uff1a\n\u4e0d\u540c\u7684\u5e94\u529b-\u5e94\u53d8\u5bf9\u8ba1\u7b97\u7684\u529f\u7387\u76f8\u540c\uff1a\n$$\\dot{W} = \\boldsymbol{\\sigma} : \\mathbf{D} = \\mathbf{P} : \\dot{\\mathbf{F}} = \\mathbf{S} : \\dot{\\mathbf{E}} = \\frac{1}{2}\\mathbf{S} : \\dot{\\mathbf{C}}$$\n\u5176\u4e2d$\\mathbf{D} = \\frac{1}{2}(\\mathbf{L} + \\mathbf{L}^T)$\u662f\u53d8\u5f62\u7387\u5f20\u91cf\uff0c$\\mathbf{L} = \\dot{\\mathbf{F}}\\mathbf{F}^{-1}$\u662f\u901f\u5ea6\u68af\u5ea6\u3002</p>\n<h3 id=\"324\">3.2.4 \u672c\u6784\u5173\u7cfb\u4e0e\u6750\u6599\u53c2\u6570</h3>\n<p>\u672c\u6784\u5173\u7cfb\u63cf\u8ff0\u4e86\u5e94\u529b\u548c\u5e94\u53d8\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u662f\u6750\u6599\u6a21\u578b\u7684\u6838\u5fc3\u3002\u4e0d\u540c\u7684\u6750\u6599\u9700\u8981\u4e0d\u540c\u7684\u672c\u6784\u6a21\u578b\uff0c\u4ece\u7b80\u5355\u7684\u7ebf\u5f39\u6027\u5230\u590d\u6742\u7684\u7c98\u5f39\u5851\u6027\u3002</p>\n<p><strong>\u7ebf\u5f39\u6027\u672c\u6784\u5173\u7cfb</strong>\uff1a\n\u5bf9\u4e8e\u5404\u5411\u540c\u6027\u7ebf\u5f39\u6027\u6750\u6599\uff0c\u5728\u5c0f\u5e94\u53d8\u4e0b\uff1a\n$$\\boldsymbol{\\sigma} = \\mathbf{C} : \\boldsymbol{\\epsilon}$$\n\u5176\u4e2d$\\mathbf{C}$\u662f\u56db\u9636\u5f39\u6027\u5f20\u91cf\u3002\u5bf9\u4e8e\u5404\u5411\u540c\u6027\u6750\u6599\uff1a\n$$\\sigma_{ij} = \\lambda \\epsilon_{kk} \\delta_{ij} + 2\\mu \\epsilon_{ij}$$\n\u6216\u7528\u77e9\u9635\u5f62\u5f0f\uff08Voigt\u8bb0\u53f7\uff09\uff1a\n$$\\begin{bmatrix}\n\\sigma_{11} \\\\ \\sigma_{22} \\\\ \\sigma_{33} \\\\ \\sigma_{23} \\\\ \\sigma_{13} \\\\ \\sigma_{12}\n\\end{bmatrix} = \\begin{bmatrix}\n\\lambda + 2\\mu &amp; \\lambda &amp; \\lambda &amp; 0 &amp; 0 &amp; 0 \\\\\n\\lambda &amp; \\lambda + 2\\mu &amp; \\lambda &amp; 0 &amp; 0 &amp; 0 \\\\\n\\lambda &amp; \\lambda &amp; \\lambda + 2\\mu &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; \\mu &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 0 &amp; \\mu &amp; 0 \\\\\n0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\mu\n\\end{bmatrix} \\begin{bmatrix}\n\\epsilon_{11} \\\\ \\epsilon_{22} \\\\ \\epsilon_{33} \\\\ 2\\epsilon_{23} \\\\ 2\\epsilon_{13} \\\\ 2\\epsilon_{12}\n\\end{bmatrix}$$\n<strong>\u6750\u6599\u53c2\u6570\u53ca\u5176\u7269\u7406\u610f\u4e49</strong>\uff1a</p>\n<ol>\n<li>\n<p><strong>\u6768\u6c0f\u6a21\u91cf\uff08Young's modulus\uff09E</strong>\uff1a\n   - \u5b9a\u4e49\uff1a\u5355\u8f74\u62c9\u4f38\u65f6\u5e94\u529b\u4e0e\u5e94\u53d8\u7684\u6bd4\u503c\n   - \u7269\u7406\u610f\u4e49\uff1a\u6750\u6599\u7684\u521a\u5ea6\n   - \u5355\u4f4d\uff1aPa\uff08\u5e15\u65af\u5361\uff09\n   - \u5178\u578b\u503c\uff1a\u94a2\u6750 200 GPa\uff0c\u6a61\u80f6 0.01-0.1 GPa</p>\n</li>\n<li>\n<p><strong>\u6cca\u677e\u6bd4\uff08Poisson's ratio\uff09\u03bd</strong>\uff1a\n   - \u5b9a\u4e49\uff1a\u6a2a\u5411\u5e94\u53d8\u4e0e\u7eb5\u5411\u5e94\u53d8\u7684\u8d1f\u6bd4\u503c\n   - \u7269\u7406\u610f\u4e49\uff1a\u6750\u6599\u7684\u4f53\u79ef\u53d8\u5316\u503e\u5411\n   - \u8303\u56f4\uff1a$\\nu \\in [0, 0.5)$\uff08\u70ed\u529b\u5b66\u7a33\u5b9a\u6027\u8981\u6c42\uff09\n   - \u7279\u6b8a\u503c\uff1a</p>\n<ul>\n<li>$\\nu = 0$\uff1a\u8f6f\u6728\uff08\u65e0\u6a2a\u5411\u53d8\u5f62\uff09</li>\n<li>$\\nu \\approx 0.5$\uff1a\u6a61\u80f6\uff08\u8fd1\u4f3c\u4e0d\u53ef\u538b\u7f29\uff09</li>\n<li>$\\nu \\approx 0.3$\uff1a\u5927\u591a\u6570\u91d1\u5c5e</li>\n</ul>\n</li>\n<li>\n<p><strong>Lam\u00e9\u53c2\u6570</strong>\uff1a\n$$\\lambda = \\frac{E\\nu}{(1+\\nu)(1-2\\nu)}, \\quad \\mu = \\frac{E}{2(1+\\nu)}$$</p>\n</li>\n</ol>\n<ul>\n<li>$\\lambda$\uff1aLam\u00e9\u7b2c\u4e00\u53c2\u6570\uff08\u65e0\u76f4\u63a5\u7269\u7406\u610f\u4e49\uff09</li>\n<li>$\\mu$\uff1a\u526a\u5207\u6a21\u91cf\uff0c\u4e5f\u8bb0\u4f5c$G$</li>\n</ul>\n<ol start=\"4\">\n<li><strong>\u4f53\u79ef\u6a21\u91cf\uff08Bulk modulus\uff09K</strong>\uff1a\n$$K = \\frac{E}{3(1-2\\nu)} = \\lambda + \\frac{2\\mu}{3}$$</li>\n</ol>\n<ul>\n<li>\u7269\u7406\u610f\u4e49\uff1a\u62b5\u6297\u4f53\u79ef\u53d8\u5316\u7684\u80fd\u529b</li>\n<li>\u5f53$\\nu \\to 0.5$\u65f6\uff0c$K \\to \\infty$\uff08\u4e0d\u53ef\u538b\u7f29\uff09</li>\n</ul>\n<p><strong>\u53c2\u6570\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb</strong>\uff1a\n\u7ed9\u5b9a\u4efb\u610f\u4e24\u4e2a\u72ec\u7acb\u53c2\u6570\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5176\u4ed6\u53c2\u6570\uff1a\n$$\\begin{aligned}\nE &amp;= \\frac{9KG}{3K + G} = \\frac{\\mu(3\\lambda + 2\\mu)}{\\lambda + \\mu} \\\\\n\\nu &amp;= \\frac{3K - 2G}{2(3K + G)} = \\frac{\\lambda}{2(\\lambda + \\mu)} \\\\\nK &amp;= \\frac{\\lambda + 2\\mu}{3} = \\frac{E}{3(1-2\\nu)} \\\\\nG &amp;= \\mu = \\frac{E}{2(1+\\nu)} = \\frac{3K(1-2\\nu)}{2(1+\\nu)}\n\\end{aligned}$$\n<strong>\u6750\u6599\u7a33\u5b9a\u6027\u8981\u6c42</strong>\uff1a\n\u70ed\u529b\u5b66\u7b2c\u4e8c\u5b9a\u5f8b\u8981\u6c42\u5e94\u53d8\u80fd\u4e3a\u6b63\u5b9a\uff0c\u8fd9\u5bfc\u81f4\uff1a</p>\n<ul>\n<li>$E &gt; 0$\uff08\u62c9\u4f38\u521a\u5ea6\u4e3a\u6b63\uff09</li>\n<li>$G &gt; 0$\uff08\u526a\u5207\u521a\u5ea6\u4e3a\u6b63\uff09</li>\n<li>$K &gt; 0$\uff08\u4f53\u79ef\u521a\u5ea6\u4e3a\u6b63\uff09</li>\n<li>$-1 &lt; \\nu &lt; 0.5$\uff08\u5b9e\u9645\u6750\u6599\u901a\u5e38$\\nu &gt; 0$\uff09</li>\n</ul>\n<p><strong>\u5404\u5411\u5f02\u6027\u6750\u6599</strong>\uff1a\n\u5bf9\u4e8e\u6b63\u4ea4\u5404\u5411\u5f02\u6027\u6750\u6599\uff0c\u9700\u89819\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a</p>\n<ul>\n<li>3\u4e2a\u6768\u6c0f\u6a21\u91cf\uff1a$E_1, E_2, E_3$</li>\n<li>3\u4e2a\u526a\u5207\u6a21\u91cf\uff1a$G_{12}, G_{23}, G_{31}$</li>\n<li>3\u4e2a\u6cca\u677e\u6bd4\uff1a$\\nu_{12}, \\nu_{23}, \\nu_{31}$</li>\n</ul>\n<p>\u5bf9\u4e8e\u4e00\u822c\u5404\u5411\u5f02\u6027\u6750\u6599\uff0c\u5f39\u6027\u5f20\u91cf$\\mathbf{C}$\u670921\u4e2a\u72ec\u7acb\u5206\u91cf\u3002</p>\n<h2 id=\"33\">3.3 \u8d85\u5f39\u6027\u6750\u6599\u6a21\u578b</h2>\n<h3 id=\"331\">3.3.1 \u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570</h3>\n<p>\u8d85\u5f39\u6027\u6750\u6599\u901a\u8fc7\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570$\\psi(\\mathbf{F})$\u5b8c\u5168\u63cf\u8ff0\u5176\u529b\u5b66\u884c\u4e3a\uff1a\n$$\\mathbf{P} = \\frac{\\partial \\psi}{\\partial \\mathbf{F}}$$\n\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3\uff1a</p>\n<ul>\n<li><strong>\u5ba2\u89c2\u6027</strong>\uff1a$\\psi(\\mathbf{QF}) = \\psi(\\mathbf{F})$ \u5bf9\u6240\u6709\u65cb\u8f6c\u77e9\u9635$\\mathbf{Q}$</li>\n<li><strong>\u6750\u6599\u5bf9\u79f0\u6027</strong>\uff1a\u53cd\u6620\u6750\u6599\u7684\u5404\u5411\u540c\u6027\u6216\u5404\u5411\u5f02\u6027</li>\n<li><strong>\u51f8\u6027</strong>\uff1a\u4fdd\u8bc1\u6750\u6599\u7a33\u5b9a\u6027</li>\n</ul>\n<h3 id=\"332-neo-hookean\">3.3.2 Neo-Hookean\u6a21\u578b</h3>\n<p>Neo-Hookean\u6a21\u578b\u662f\u6700\u7b80\u5355\u7684\u8d85\u5f39\u6027\u6a21\u578b\uff0c\u9002\u7528\u4e8e\u6a61\u80f6\u7c7b\u6750\u6599\uff1a\n$$\\psi(\\mathbf{F}) = \\frac{\\mu}{2}(\\text{tr}(\\mathbf{F}^T\\mathbf{F}) - 3) - \\mu \\ln(J) + \\frac{\\lambda}{2}\\ln^2(J)$$\n\u5bf9\u5e94\u7684\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529b\uff1a\n$$\\mathbf{P}(\\mathbf{F}) = \\mu(\\mathbf{F} - \\mathbf{F}^{-T}) + \\lambda \\ln(J) \\mathbf{F}^{-T}$$\nNeo-Hookean\u6a21\u578b\u7684\u7279\u70b9\uff1a</p>\n<ul>\n<li>\u5728\u5c0f\u53d8\u5f62\u4e0b\u9000\u5316\u4e3a\u7ebf\u5f39\u6027</li>\n<li>\u53ef\u4ee5\u5904\u7406\u5927\u53d8\u5f62</li>\n<li>\u6570\u5b66\u5f62\u5f0f\u7b80\u5355\uff0c\u8ba1\u7b97\u6548\u7387\u9ad8</li>\n</ul>\n<h3 id=\"333-corotated\">3.3.3 Corotated\u6a21\u578b</h3>\n<p>Corotated\u6a21\u578b\u901a\u8fc7\u6781\u5206\u89e3\u5904\u7406\u5927\u65cb\u8f6c\uff1a\n$$\\mathbf{F} = \\mathbf{R}\\mathbf{S}$$\n\u5176\u4e2d$\\mathbf{R}$\u662f\u65cb\u8f6c\u90e8\u5206\uff0c$\\mathbf{S}$\u662f\u62c9\u4f38\u90e8\u5206\u3002</p>\n<p>\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570\uff1a\n$$\\psi(\\mathbf{F}) = \\mu \\sum_i (\\sigma_i - 1)^2 + \\frac{\\lambda}{2}(J - 1)^2$$\n\u5176\u4e2d$\\sigma_i$\u662f$\\mathbf{F}$\u7684\u5947\u5f02\u503c\u3002</p>\n<p>\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529b\uff1a\n$$\\mathbf{P}(\\mathbf{F}) = 2\\mu(\\mathbf{F} - \\mathbf{R}) + \\lambda(J - 1)J\\mathbf{F}^{-T}$$</p>\n<h3 id=\"334-mooney-rivlin\">3.3.4 Mooney-Rivlin\u6a21\u578b</h3>\n<p>Mooney-Rivlin\u6a21\u578b\u7528\u4e8e\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u6a61\u80f6\u6750\u6599\uff1a\n$$\\psi = C_{10}(I_1 - 3) + C_{01}(I_2 - 3) + \\frac{1}{D_1}(J - 1)^2$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$I_1 = \\text{tr}(\\mathbf{C})$\uff1a\u7b2c\u4e00\u4e0d\u53d8\u91cf</li>\n<li>$I_2 = \\frac{1}{2}[(\\text{tr}(\\mathbf{C}))^2 - \\text{tr}(\\mathbf{C}^2)]$\uff1a\u7b2c\u4e8c\u4e0d\u53d8\u91cf</li>\n<li>$C_{10}, C_{01}, D_1$\uff1a\u6750\u6599\u53c2\u6570</li>\n</ul>\n<h2 id=\"34\">3.4 \u57fa\u4e8e\u516d\u9762\u4f53\u7f51\u683c\u7684\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143</h2>\n<h3 id=\"341\">3.4.1 \u7b49\u53c2\u5355\u5143\u4e0e\u5f62\u51fd\u6570</h3>\n<p>\u516d\u9762\u4f53\u5355\u5143\u4f7f\u7528\u4e09\u7ebf\u6027\u5f62\u51fd\u6570\uff0c\u5728\u53c2\u8003\u5750\u6807$(\\xi, \\eta, \\zeta) \\in [-1,1]^3$\u4e2d\uff1a\n$$N_i(\\xi, \\eta, \\zeta) = \\frac{1}{8}(1 + \\xi_i\\xi)(1 + \\eta_i\\eta)(1 + \\zeta_i\\zeta)$$\n\u5176\u4e2d$(\\xi_i, \\eta_i, \\zeta_i)$\u662f\u7b2c$i$\u4e2a\u8282\u70b9\u7684\u53c2\u8003\u5750\u6807\u3002</p>\n<p>\u51e0\u4f55\u6620\u5c04\uff08\u7b49\u53c2\u6620\u5c04\uff09\uff1a\n$$\\mathbf{x} = \\sum_{i=1}^8 N_i(\\xi, \\eta, \\zeta) \\mathbf{x}_i$$</p>\n<h3 id=\"342\">3.4.2 \u6570\u503c\u79ef\u5206</h3>\n<p>\u4f7f\u7528\u9ad8\u65af\u79ef\u5206\u8ba1\u7b97\u5355\u5143\u77e9\u9635\uff1a\n$$\\mathbf{K}_e = \\int_{\\Omega_e} \\mathbf{B}^T \\mathbf{D} \\mathbf{B} \\, d\\Omega \\approx \\sum_{g=1}^{n_g} w_g \\mathbf{B}^T(\\xi_g) \\mathbf{D} \\mathbf{B}(\\xi_g) |\\mathbf{J}(\\xi_g)|$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$n_g$\uff1a\u9ad8\u65af\u70b9\u6570\uff08\u901a\u5e38$2\u00d72\u00d72$\uff09</li>\n<li>$w_g$\uff1a\u9ad8\u65af\u6743\u91cd</li>\n<li>$\\mathbf{J}$\uff1a\u96c5\u53ef\u6bd4\u77e9\u9635</li>\n</ul>\n<h3 id=\"343\">3.4.3 \u5355\u5143\u521a\u5ea6\u77e9\u9635\u7ec4\u88c5</h3>\n<p>\u6bcf\u4e2a\u516d\u9762\u4f53\u5355\u5143\u8d21\u732e\u4e00\u4e2a$24\u00d724$\u7684\u5355\u5143\u521a\u5ea6\u77e9\u9635\uff083D\u60c5\u51b5\uff0c\u6bcf\u8282\u70b93\u4e2a\u81ea\u7531\u5ea6\uff09\uff1a\n$$\\mathbf{K} = \\bigcup_{e=1}^{n_e} \\mathbf{K}_e$$\n\u7ec4\u88c5\u8fc7\u7a0b\u9700\u8981\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u6bcf\u4e2a\u5355\u5143\u7684\u521a\u5ea6\u77e9\u9635</li>\n<li>\u6839\u636e\u8282\u70b9\u7f16\u53f7\u6620\u5c04\u5230\u5168\u5c40\u77e9\u9635</li>\n<li>\u5904\u7406\u8fb9\u754c\u6761\u4ef6</li>\n</ol>\n<h3 id=\"344\">3.4.4 \u8fb9\u754c\u6761\u4ef6\u5904\u7406</h3>\n<p><strong>Dirichlet\u8fb9\u754c\u6761\u4ef6</strong>\uff08\u4f4d\u79fb\u7ea6\u675f\uff09\uff1a</p>\n<ul>\n<li>\u76f4\u63a5\u8bbe\u7f6e\uff1a$u_i = \\bar{u}_i$</li>\n<li>\u7f5a\u51fd\u6570\u6cd5\uff1a\u6dfb\u52a0\u5927\u521a\u5ea6$\\alpha(u_i - \\bar{u}_i)^2$</li>\n<li>\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff1a\u5f15\u5165\u7ea6\u675f\u529b</li>\n</ul>\n<p><strong>Neumann\u8fb9\u754c\u6761\u4ef6</strong>\uff08\u529b\u8fb9\u754c\uff09\uff1a\n$$\\mathbf{f}_i = \\int_{\\Gamma_N} N_i \\mathbf{t} \\, d\\Gamma$$\n\u5176\u4e2d$\\mathbf{t}$\u662f\u8868\u9762\u529b\u3002</p>\n<h2 id=\"35\">3.5 \u57fa\u4e8e\u56db\u9762\u4f53\u7f51\u683c\u7684\u62c9\u683c\u6717\u65e5\u6709\u9650\u5143</h2>\n<h3 id=\"351\">3.5.1 \u7ebf\u6027\u56db\u9762\u4f53\u5355\u5143</h3>\n<p>\u5bf9\u4e8e\u7ebf\u6027\u56db\u9762\u4f53\uff0c\u53d8\u5f62\u68af\u5ea6\u5728\u5355\u5143\u5185\u4e3a\u5e38\u6570\uff1a\n$$\\mathbf{F} = \\mathbf{D}_s \\mathbf{D}_m^{-1}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathbf{D}_s = [\\mathbf{x}_1 - \\mathbf{x}_4, \\mathbf{x}_2 - \\mathbf{x}_4, \\mathbf{x}_3 - \\mathbf{x}_4]$\uff1a\u53d8\u5f62\u8fb9\u77e9\u9635</li>\n<li>$\\mathbf{D}_m = [\\mathbf{X}_1 - \\mathbf{X}_4, \\mathbf{X}_2 - \\mathbf{X}_4, \\mathbf{X}_3 - \\mathbf{X}_4]$\uff1a\u53c2\u8003\u8fb9\u77e9\u9635</li>\n</ul>\n<h3 id=\"352\">3.5.2 \u5e38\u5e94\u53d8\u5047\u8bbe</h3>\n<p>\u7ebf\u6027\u56db\u9762\u4f53\u5355\u5143\u5047\u8bbe\u5e94\u53d8\u5728\u5355\u5143\u5185\u5747\u5300\u5206\u5e03\uff1a</p>\n<ul>\n<li>\u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u9002\u5408\u5927\u53d8\u5f62</li>\n<li>\u7f3a\u70b9\uff1a\u9700\u8981\u66f4\u591a\u5355\u5143\u624d\u80fd\u51c6\u786e\u6355\u6349\u5f2f\u66f2\u53d8\u5f62</li>\n<li>\u53ef\u80fd\u8fc7\u4e8e\u521a\u786c\uff08\u8fc7\u5ea6\u7ea6\u675f\uff09</li>\n</ul>\n<h3 id=\"353\">3.5.3 \u4f53\u79ef\u9501\u5b9a\u4e0e\u7f13\u89e3\u7b56\u7565</h3>\n<p>\u5f53\u6750\u6599\u63a5\u8fd1\u4e0d\u53ef\u538b\u7f29\uff08$\\nu \\to 0.5$\uff09\u65f6\uff0c\u51fa\u73b0\u4f53\u79ef\u9501\u5b9a\u73b0\u8c61\uff1a</p>\n<p><strong>\u539f\u56e0</strong>\uff1a\u4f53\u79ef\u6a21\u91cf$K \\to \\infty$\uff0c\u6570\u503c\u8bef\u5dee\u88ab\u653e\u5927</p>\n<p><strong>\u7f13\u89e3\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li><strong>\u6df7\u5408\u6709\u9650\u5143</strong>\uff1a\u5206\u522b\u63d2\u503c\u4f4d\u79fb\u548c\u538b\u529b</li>\n<li><strong>\u964d\u9636\u79ef\u5206</strong>\uff1a\u4f7f\u7528\u8f83\u5c11\u7684\u79ef\u5206\u70b9</li>\n<li><strong>F-bar\u65b9\u6cd5</strong>\uff1a\u4fee\u6b63\u53d8\u5f62\u68af\u5ea6\u7684\u4f53\u79ef\u90e8\u5206</li>\n<li><strong>\u589e\u5f3a\u5e94\u53d8\u5143</strong>\uff1a\u6dfb\u52a0\u989d\u5916\u7684\u5e94\u53d8\u6a21\u5f0f</li>\n</ol>\n<h3 id=\"354\">3.5.4 \u7f51\u683c\u751f\u6210\u4e0e\u8d28\u91cf\u63a7\u5236</h3>\n<p>\u9ad8\u8d28\u91cf\u7684\u56db\u9762\u4f53\u7f51\u683c\u9700\u8981\u6ee1\u8db3\uff1a</p>\n<ul>\n<li><strong>\u6700\u5c0f\u89d2\u5ea6</strong>\uff1a\u907f\u514d\u8fc7\u4e8e\u5c16\u9510\u7684\u89d2\u5ea6\uff08\u5efa\u8bae&gt;15\u00b0\uff09</li>\n<li><strong>\u7eb5\u6a2a\u6bd4</strong>\uff1a\u63a7\u5236\u6700\u957f\u8fb9\u4e0e\u6700\u77ed\u8fb9\u7684\u6bd4\u503c\uff08\u5efa\u8bae&lt;10\uff09</li>\n<li><strong>\u4f53\u79ef</strong>\uff1a\u907f\u514d\u9000\u5316\u7684\u5355\u5143\uff08\u4f53\u79ef\u63a5\u8fd10\uff09</li>\n</ul>\n<p>\u5e38\u7528\u7f51\u683c\u751f\u6210\u65b9\u6cd5\uff1a</p>\n<ul>\n<li>Delaunay\u4e09\u89d2\u5256\u5206</li>\n<li>\u524d\u6cbf\u63a8\u8fdb\u6cd5</li>\n<li>\u516b\u53c9\u6811\u7ec6\u5206</li>\n</ul>\n<h2 id=\"36-invertible\">3.6 \u53ef\u9006(Invertible)\u6709\u9650\u5143</h2>\n<h3 id=\"361\">3.6.1 \u5355\u5143\u7ffb\u8f6c\u95ee\u9898</h3>\n<p>\u5f53$\\det(\\mathbf{F}) \\leq 0$\u65f6\uff0c\u5355\u5143\u53d1\u751f\u7ffb\u8f6c\uff1a</p>\n<ul>\n<li>\u7269\u7406\u4e0a\u4e0d\u5408\u7406\uff08\u6750\u6599\u7a7f\u900f\u81ea\u8eab\uff09</li>\n<li>\u6570\u503c\u4e0a\u5bfc\u81f4\u53d1\u6563\uff08\u5e94\u529b\u65e0\u7a77\u5927\uff09</li>\n<li>\u4eff\u771f\u5d29\u6e83</li>\n</ul>\n<p>\u7ffb\u8f6c\u901a\u5e38\u53d1\u751f\u5728\uff1a</p>\n<ul>\n<li>\u5927\u53d8\u5f62\u60c5\u51b5</li>\n<li>\u78b0\u649e\u5904\u7406</li>\n<li>\u4e0d\u5f53\u7684\u65f6\u95f4\u6b65\u957f</li>\n</ul>\n<h3 id=\"362-svd\">3.6.2 SVD\u5206\u89e3\u4e0e\u4fee\u590d</h3>\n<p>\u4f7f\u7528\u5947\u5f02\u503c\u5206\u89e3(SVD)\u68c0\u6d4b\u548c\u4fee\u590d\u7ffb\u8f6c\uff1a\n$$\\mathbf{F} = \\mathbf{U}\\boldsymbol{\\Sigma}\\mathbf{V}^T$$\n\u4fee\u590d\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97SVD</li>\n<li>\u68c0\u67e5$\\det(\\mathbf{U})$\u548c$\\det(\\mathbf{V})$\u7684\u7b26\u53f7</li>\n<li>\u5982\u679c\u4e3a\u8d1f\uff0c\u7ffb\u8f6c\u76f8\u5e94\u7684\u5217</li>\n<li>\u786e\u4fdd\u6240\u6709\u5947\u5f02\u503c\u4e3a\u6b63</li>\n</ol>\n<h3 id=\"363\">3.6.3 \u80fd\u91cf\u52bf\u5792\u65b9\u6cd5</h3>\n<p>\u5728\u5e94\u53d8\u80fd\u4e2d\u6dfb\u52a0\u52bf\u5792\u9879\u9632\u6b62\u7ffb\u8f6c\uff1a\n$$\\psi_{barrier}(J) = \\begin{cases}\n0 &amp; J &gt; \\epsilon \\\\\n\\alpha(J - \\epsilon)^2 &amp; J \\leq \\epsilon\n\\end{cases}$$\n\u5176\u4e2d$\\epsilon$\u662f\u5c0f\u7684\u6b63\u6570\uff08\u59820.01\uff09\u3002</p>\n<h3 id=\"364\">3.6.4 \u7a33\u5b9a\u6027\u4fdd\u8bc1</h3>\n<p>\u786e\u4fdd\u6570\u503c\u7a33\u5b9a\u7684\u6280\u672f\uff1a</p>\n<ol>\n<li><strong>\u6295\u5f71\u65b9\u6cd5</strong>\uff1a\u5c06$\\mathbf{F}$\u6295\u5f71\u5230\u53ef\u884c\u57df</li>\n<li><strong>\u7ebf\u641c\u7d22</strong>\uff1a\u5728Newton\u8fed\u4ee3\u4e2d\u4f7f\u7528\u7ebf\u641c\u7d22</li>\n<li><strong>\u81ea\u9002\u5e94\u65f6\u95f4\u6b65</strong>\uff1a\u68c0\u6d4b\u5230\u63a5\u8fd1\u7ffb\u8f6c\u65f6\u51cf\u5c0f\u65f6\u95f4\u6b65</li>\n<li><strong>\u9690\u5f0f\u79ef\u5206</strong>\uff1a\u63d0\u9ad8\u5927\u53d8\u5f62\u4e0b\u7684\u7a33\u5b9a\u6027</li>\n</ol>\n<h2 id=\"37\">3.7 \u62d3\u6251\u4f18\u5316</h2>\n<h3 id=\"371\">3.7.1 \u6700\u5c0f\u67d4\u5ea6\u95ee\u9898</h3>\n<p>\u62d3\u6251\u4f18\u5316\u7684\u6807\u51c6\u5f62\u5f0f\uff1a\n$$\\begin{aligned}\n\\min_{\\boldsymbol{\\rho}} \\quad &amp; c(\\boldsymbol{\\rho}) = \\mathbf{u}^T \\mathbf{K}(\\boldsymbol{\\rho}) \\mathbf{u} \\\\\n\\text{s.t.} \\quad &amp; \\mathbf{K}(\\boldsymbol{\\rho})\\mathbf{u} = \\mathbf{f} \\\\\n&amp; \\sum_{e=1}^{n_e} v_e \\rho_e \\leq V_{max} \\\\\n&amp; 0 &lt; \\rho_{min} \\leq \\rho_e \\leq 1\n\\end{aligned}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\rho_e$\uff1a\u5355\u5143$e$\u7684\u5bc6\u5ea6</li>\n<li>$c$\uff1a\u7ed3\u6784\u67d4\u5ea6\uff08compliance\uff09</li>\n<li>$V_{max}$\uff1a\u6750\u6599\u4f53\u79ef\u7ea6\u675f</li>\n</ul>\n<h3 id=\"372-simp\">3.7.2 SIMP\u65b9\u6cd5</h3>\n<p>\u56fa\u4f53\u5404\u5411\u540c\u6027\u6750\u6599\u60e9\u7f5a(SIMP)\u65b9\u6cd5\uff1a\n$$E_e(\\rho_e) = \\rho_e^p E_0$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$p$\uff1a\u60e9\u7f5a\u53c2\u6570\uff08\u901a\u5e38$p=3$\uff09</li>\n<li>$E_0$\uff1a\u5b9e\u4f53\u6750\u6599\u7684\u6768\u6c0f\u6a21\u91cf</li>\n</ul>\n<p>\u60e9\u7f5a\u4e2d\u95f4\u5bc6\u5ea6\uff0c\u63a8\u52a8\u8bbe\u8ba1\u54110-1\u5206\u5e03\u3002</p>\n<h3 id=\"373\">3.7.3 \u654f\u611f\u5ea6\u5206\u6790</h3>\n<p>\u76ee\u6807\u51fd\u6570\u5bf9\u8bbe\u8ba1\u53d8\u91cf\u7684\u5bfc\u6570\uff1a\n$$\\frac{\\partial c}{\\partial \\rho_e} = -p\\rho_e^{p-1} \\mathbf{u}_e^T \\mathbf{k}_0 \\mathbf{u}_e$$\n\u5176\u4e2d$\\mathbf{k}_0$\u662f\u5bc6\u5ea6\u4e3a1\u65f6\u7684\u5355\u5143\u521a\u5ea6\u77e9\u9635\u3002</p>\n<p>\u654f\u611f\u5ea6\u6ee4\u6ce2\uff08\u907f\u514d\u68cb\u76d8\u683c\uff09\uff1a\n$$\\frac{\\widetilde{\\partial c}}{\\partial \\rho_e} = \\frac{\\sum_{i \\in N_e} H_{ei} \\rho_i \\frac{\\partial c}{\\partial \\rho_i}}{\\rho_e \\sum_{i \\in N_e} H_{ei}}$$</p>\n<h3 id=\"374-oc\">3.7.4 \u4f18\u5316\u51c6\u5219\u6cd5(OC)</h3>\n<p>\u57fa\u4e8e\u6700\u4f18\u6027\u6761\u4ef6\u7684\u66f4\u65b0\u516c\u5f0f\uff1a\n$$\\rho_e^{new} = \\begin{cases}\n\\max(\\rho_{min}, \\rho_e - m) &amp; \\text{if } \\rho_e B_e^{\\eta} \\leq \\max(\\rho_{min}, \\rho_e - m) \\\\\n\\min(1, \\rho_e + m) &amp; \\text{if } \\rho_e B_e^{\\eta} \\geq \\min(1, \\rho_e + m) \\\\\n\\rho_e B_e^{\\eta} &amp; \\text{otherwise}\n\\end{cases}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$B_e = -\\frac{\\partial c/\\partial \\rho_e}{\\lambda \\frac{\\partial V/\\partial \\rho_e}}$</li>\n<li>$\\lambda$\uff1a\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff08\u901a\u8fc7\u4e8c\u5206\u6cd5\u786e\u5b9a\uff09</li>\n<li>$m$\uff1a\u79fb\u52a8\u9650\u5236\uff08\u59820.2\uff09</li>\n<li>$\\eta$\uff1a\u963b\u5c3c\u7cfb\u6570\uff08\u59820.5\uff09</li>\n</ul>\n<h2 id=\"38-taichi1\">3.8 \u9ad8\u7ea7Taichi\u7279\u6027\uff081\uff09</h2>\n<h3 id=\"381\">3.8.1 \u53ef\u5fae\u7f16\u7a0b\u57fa\u7840</h3>\n<p>Taichi\u652f\u6301\u81ea\u52a8\u5fae\u5206\uff0c\u4f7f\u7269\u7406\u4eff\u771f\u53ef\u5fae\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">data_oriented</span>\n<span class=\"k\">class</span> <span class=\"nc\">ElasticBody</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_verts</span><span class=\"p\">,</span> <span class=\"n\">needs_grad</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_verts</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"n\">n_verts</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">U</span> <span class=\"o\">=</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">(</span><span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">f32</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(),</span> <span class=\"n\">needs_grad</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># \u52bf\u80fd</span>\n</code></pre></div>\n\n<h3 id=\"382\">3.8.2 \u81ea\u52a8\u5fae\u5206</h3>\n<p>Taichi\u63d0\u4f9b\u524d\u5411\u548c\u53cd\u5411\u81ea\u52a8\u5fae\u5206\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">with</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Tape</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">):</span>\n    <span class=\"n\">forward_simulation</span><span class=\"p\">()</span>\n<span class=\"c1\"># \u68af\u5ea6\u81ea\u52a8\u8ba1\u7b97\u5728 x.grad \u4e2d</span>\n</code></pre></div>\n\n<p>\u5173\u952e\u7279\u6027\uff1a</p>\n<ul>\n<li>\u652f\u6301\u590d\u6742\u63a7\u5236\u6d41</li>\n<li>\u9ad8\u6548\u7684\u68af\u5ea6\u7d2f\u79ef</li>\n<li>\u4e0e\u5e76\u884c\u8ba1\u7b97\u517c\u5bb9</li>\n</ul>\n<h3 id=\"383\">3.8.3 \u68af\u5ea6\u8ba1\u7b97\u4e0e\u4f18\u5316</h3>\n<p>\u5229\u7528\u81ea\u52a8\u5fae\u5206\u8fdb\u884c\u53c2\u6570\u4f18\u5316\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">compute_loss</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u8ba1\u7b97\u76ee\u6807\u51fd\u6570</span>\n    <span class=\"n\">loss</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_verts</span><span class=\"p\">):</span>\n        <span class=\"n\">loss</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">target</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">norm_sqr</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># \u4f18\u5316\u5faa\u73af</span>\n<span class=\"k\">for</span> <span class=\"nb\">iter</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">max_iters</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Tape</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">):</span>\n        <span class=\"n\">simulate</span><span class=\"p\">()</span>\n        <span class=\"n\">compute_loss</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u66f4\u65b0\u53c2\u6570</span>\n    <span class=\"n\">lr</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n_params</span><span class=\"p\">):</span>\n        <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">lr</span> <span class=\"o\">*</span> <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n</code></pre></div>\n\n<h3 id=\"384\">3.8.4 \u7269\u7406\u8fc7\u7a0b\u7684\u7aef\u5230\u7aef\u4f18\u5316</h3>\n<p>\u81ea\u52a8\u5fae\u5206\u4f7f\u5f97\u7aef\u5230\u7aef\u4f18\u5316\u6210\u4e3a\u53ef\u80fd\uff1a</p>\n<p><strong>\u5e94\u7528\u573a\u666f</strong>\uff1a</p>\n<ol>\n<li><strong>\u6750\u6599\u53c2\u6570\u8bc6\u522b</strong>\uff1a\u4ece\u89c2\u6d4b\u6570\u636e\u53cd\u63a8\u6750\u6599\u5c5e\u6027</li>\n<li><strong>\u5f62\u72b6\u4f18\u5316</strong>\uff1a\u4f18\u5316\u7ed3\u6784\u5f62\u72b6\u4ee5\u6ee1\u8db3\u6027\u80fd\u8981\u6c42</li>\n<li><strong>\u63a7\u5236\u4f18\u5316</strong>\uff1a\u8bbe\u8ba1\u6700\u4f18\u63a7\u5236\u5e8f\u5217</li>\n<li><strong>\u9006\u5411\u8bbe\u8ba1</strong>\uff1a\u4ece\u76ee\u6807\u6027\u80fd\u8bbe\u8ba1\u6750\u6599\u5206\u5e03</li>\n</ol>\n<p><strong>\u4f18\u52bf</strong>\uff1a</p>\n<ul>\n<li>\u65e0\u9700\u624b\u52a8\u63a8\u5bfc\u68af\u5ea6</li>\n<li>\u652f\u6301\u590d\u6742\u7684\u7269\u7406\u6a21\u578b</li>\n<li>\u4e0e\u795e\u7ecf\u7f51\u7edc\u65e0\u7f1d\u96c6\u6210</li>\n</ul>\n<hr />\n<h2 id=\"_1\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u4ecb\u7ecd\u4e86\u6709\u9650\u5143\u65b9\u6cd5\u7684\u7406\u8bba\u57fa\u7840\u548c\u5b9e\u73b0\u6280\u672f\uff1a</p>\n<p><strong>\u6838\u5fc3\u6982\u5ff5</strong>\uff1a</p>\n<ul>\n<li>\u5f31\u5f62\u5f0f\u5c06PDE\u8f6c\u5316\u4e3a\u79ef\u5206\u65b9\u7a0b\uff0c\u964d\u4f4e\u5bf9\u89e3\u7684\u5149\u6ed1\u6027\u8981\u6c42</li>\n<li>\u53d8\u5f62\u68af\u5ea6$\\mathbf{F}$\u63cf\u8ff0\u4e86\u6750\u6599\u7684\u5c40\u90e8\u53d8\u5f62</li>\n<li>\u8d85\u5f39\u6027\u6750\u6599\u901a\u8fc7\u5e94\u53d8\u80fd\u5bc6\u5ea6\u51fd\u6570\u5b9a\u4e49\u672c\u6784\u5173\u7cfb</li>\n<li>\u4e0d\u540c\u7f51\u683c\u7c7b\u578b\uff08\u516d\u9762\u4f53\u3001\u56db\u9762\u4f53\uff09\u5404\u6709\u4f18\u52a3</li>\n</ul>\n<p><strong>\u5173\u952e\u516c\u5f0f</strong>\uff1a</p>\n<ul>\n<li>\u5f31\u5f62\u5f0f\uff1a$\\int_\\Omega \\nabla w \\cdot \\nabla u \\, d\\Omega = \\int_\\Omega wf \\, d\\Omega$</li>\n<li>Neo-Hookean\u5e94\u529b\uff1a$\\mathbf{P} = \\mu(\\mathbf{F} - \\mathbf{F}^{-T}) + \\lambda \\ln(J) \\mathbf{F}^{-T}$</li>\n<li>SIMP\u63d2\u503c\uff1a$E(\\rho) = \\rho^p E_0$</li>\n</ul>\n<p><strong>\u5b9e\u8df5\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u9009\u62e9\u5408\u9002\u7684\u6750\u6599\u6a21\u578b\u548c\u5355\u5143\u7c7b\u578b</li>\n<li>\u5904\u7406\u6570\u503c\u4e0d\u7a33\u5b9a\u6027\uff08\u7ffb\u8f6c\u3001\u9501\u5b9a\uff09</li>\n<li>\u5229\u7528\u81ea\u52a8\u5fae\u5206\u8fdb\u884c\u4f18\u5316\u8bbe\u8ba1</li>\n</ul>\n<hr />\n<h2 id=\"_2\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_3\">\u57fa\u7840\u9898</h3>\n<p><strong>\u4e60\u98983.1</strong> \u63a8\u5bfc\u4e00\u7ef4\u6746\u7684\u5f31\u5f62\u5f0f\u3002\u7ed9\u5b9a\u5f3a\u5f62\u5f0f\uff1a\n$$-\\frac{d}{dx}\\left(EA\\frac{du}{dx}\\right) = f(x), \\quad 0 &lt; x &lt; L$$\n\u5176\u4e2d$E$\u662f\u6768\u6c0f\u6a21\u91cf\uff0c$A$\u662f\u6a2a\u622a\u9762\u79ef\uff0c$f(x)$\u662f\u5206\u5e03\u8f7d\u8377\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4e58\u4ee5\u6d4b\u8bd5\u51fd\u6570$w(x)$\u5e76\u5728\u533a\u95f4$[0,L]$\u4e0a\u79ef\u5206\uff0c\u7136\u540e\u4f7f\u7528\u5206\u90e8\u79ef\u5206\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5f31\u5f62\u5f0f\u4e3a\uff1a\n$$\\int_0^L EA\\frac{dw}{dx}\\frac{du}{dx}dx = \\int_0^L wf dx + [wEA\\frac{du}{dx}]_0^L$$\n\u5982\u679c$w(0)=w(L)=0$\uff08\u672c\u8d28\u8fb9\u754c\u6761\u4ef6\uff09\uff0c\u5219\u8fb9\u754c\u9879\u6d88\u5931\u3002</p>\n</details>\n<p><strong>\u4e60\u98983.2</strong> \u7ed9\u5b9a\u4e8c\u7ef4\u53d8\u5f62\u68af\u5ea6\uff1a\n$$\\mathbf{F} = \\begin{bmatrix} 1.2 &amp; 0.3 \\\\ 0.1 &amp; 0.8 \\end{bmatrix}$$\n\u8ba1\u7b97\uff1a(a) \u4f53\u79ef\u6bd4$J$ (b) \u53f3\u67ef\u897f-\u683c\u6797\u5f20\u91cf$\\mathbf{C}$ (c) \u683c\u6797\u5e94\u53d8$\\mathbf{E}$</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>$J = \\det(\\mathbf{F})$\uff0c$\\mathbf{C} = \\mathbf{F}^T\\mathbf{F}$\uff0c$\\mathbf{E} = \\frac{1}{2}(\\mathbf{C} - \\mathbf{I})$</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>(a) $J = 1.2 \\times 0.8 - 0.3 \\times 0.1 = 0.96 - 0.03 = 0.93$</p>\n<p>(b) $\\mathbf{C} = \\begin{bmatrix} 1.2 &amp; 0.1 \\\\ 0.3 &amp; 0.8 \\end{bmatrix} \\begin{bmatrix} 1.2 &amp; 0.3 \\\\ 0.1 &amp; 0.8 \\end{bmatrix} = \\begin{bmatrix} 1.45 &amp; 0.44 \\\\ 0.44 &amp; 0.73 \\end{bmatrix}$</p>\n<p>(c) $\\mathbf{E} = \\frac{1}{2}\\begin{bmatrix} 0.45 &amp; 0.44 \\\\ 0.44 &amp; -0.27 \\end{bmatrix}$</p>\n</details>\n<p><strong>\u4e60\u98983.3</strong> \u5bf9\u4e8eNeo-Hookean\u6750\u6599\uff0c\u8bc1\u660e\u5728\u5c0f\u53d8\u5f62\u6781\u9650\u4e0b\uff08$\\mathbf{F} = \\mathbf{I} + \\boldsymbol{\\epsilon}$\uff0c$||\\boldsymbol{\\epsilon}|| \\ll 1$\uff09\uff0c\u7b2c\u4e00Piola-Kirchhoff\u5e94\u529b\u9000\u5316\u4e3a\u7ebf\u5f39\u6027\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u5c06$\\mathbf{F} = \\mathbf{I} + \\boldsymbol{\\epsilon}$\u4ee3\u5165Neo-Hookean\u5e94\u529b\u516c\u5f0f\uff0c\u4f7f\u7528\u6cf0\u52d2\u5c55\u5f00\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>$\\ln(J) \\approx \\text{tr}(\\boldsymbol{\\epsilon})$\uff0c$\\mathbf{F}^{-T} \\approx \\mathbf{I} - \\boldsymbol{\\epsilon}^T$</p>\n<p>\u56e0\u6b64\uff1a\n$$\\mathbf{P} \\approx \\mu(\\boldsymbol{\\epsilon} + \\boldsymbol{\\epsilon}^T) + \\lambda\\text{tr}(\\boldsymbol{\\epsilon})\\mathbf{I}$$\n\u8fd9\u6b63\u662f\u7ebf\u5f39\u6027\u7684\u5e94\u529b-\u5e94\u53d8\u5173\u7cfb\u3002</p>\n</details>\n<h3 id=\"_4\">\u6311\u6218\u9898</h3>\n<p><strong>\u4e60\u98983.4</strong> \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u68c0\u6d4b\u56db\u9762\u4f53\u5355\u5143\u662f\u5426\u63a5\u8fd1\u7ffb\u8f6c\uff0c\u5e76\u63d0\u51fa\u4e00\u4e2a\u4fee\u590d\u7b56\u7565\u3002\u8003\u8651\u6570\u503c\u7a33\u5b9a\u6027\u548c\u8ba1\u7b97\u6548\u7387\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u76d1\u63a7$\\det(\\mathbf{F})$\u7684\u503c\uff0c\u5f53\u5b83\u63a5\u8fd10\u65f6\u91c7\u53d6\u884c\u52a8\u3002\u53ef\u4ee5\u4f7f\u7528SVD\u6216\u7279\u5f81\u503c\u5206\u89e3\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7b97\u6cd5\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97$J = \\det(\\mathbf{F})$</li>\n<li>\u5982\u679c$J &lt; \\epsilon$\uff08\u59820.1\uff09\uff1a\n   - \u8ba1\u7b97SVD\uff1a$\\mathbf{F} = \\mathbf{U}\\boldsymbol{\\Sigma}\\mathbf{V}^T$\n   - \u4fee\u6b63\u5947\u5f02\u503c\uff1a$\\tilde{\\sigma}_i = \\max(\\sigma_i, \\epsilon)$\n   - \u91cd\u6784\uff1a$\\tilde{\\mathbf{F}} = \\mathbf{U}\\tilde{\\boldsymbol{\\Sigma}}\\mathbf{V}^T$</li>\n<li>\u4f7f\u7528\u7ebf\u641c\u7d22\uff1a$\\mathbf{F}_{new} = \\alpha\\tilde{\\mathbf{F}} + (1-\\alpha)\\mathbf{F}_{old}$</li>\n<li>\u9009\u62e9$\\alpha$\u4f7f\u5f97$\\det(\\mathbf{F}_{new}) &gt; \\epsilon$</li>\n</ol>\n</details>\n<p><strong>\u4e60\u98983.5</strong> \u63a8\u5bfcSIMP\u65b9\u6cd5\u4e2d\u4f53\u79ef\u7ea6\u675f\u7684\u62c9\u683c\u6717\u65e5\u4e58\u5b50$\\lambda$\u7684\u66f4\u65b0\u516c\u5f0f\u3002\u4f7f\u7528KKT\u6761\u4ef6\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u5199\u51fa\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff0c\u5bf9$\\rho_e$\u548c$\\lambda$\u5206\u522b\u6c42\u5bfc\uff0c\u5229\u7528\u4e92\u8865\u677e\u5f1b\u6761\u4ef6\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u62c9\u683c\u6717\u65e5\u51fd\u6570\uff1a\n$$L = c(\\boldsymbol{\\rho}) + \\lambda(\\sum_e v_e\\rho_e - V_{max})$$\nKKT\u6761\u4ef6\u7ed9\u51fa\uff1a\n$$\\frac{\\partial c}{\\partial \\rho_e} + \\lambda v_e = 0$$</p>\n<p>\u8fd9\u5bfc\u51fa$B_e = -\\frac{\\partial c/\\partial \\rho_e}{\\lambda v_e}$\u3002$\\lambda$\u901a\u8fc7\u4e8c\u5206\u6cd5\u786e\u5b9a\uff0c\u4f7f\u5f97\u4f53\u79ef\u7ea6\u675f\u6ee1\u8db3\u3002</p>\n</details>\n<p><strong>\u4e60\u98983.6</strong> \u8003\u8651\u4e00\u4e2a2D\u60ac\u81c2\u6881\u62d3\u6251\u4f18\u5316\u95ee\u9898\u3002\u6881\u957f$L=2$\uff0c\u9ad8$H=1$\uff0c\u5de6\u7aef\u56fa\u5b9a\uff0c\u53f3\u7aef\u4e2d\u70b9\u53d7\u5411\u4e0b\u7684\u96c6\u4e2d\u529b$F=1$\u3002\u6750\u6599\u4f53\u79ef\u9650\u5236\u4e3a30%\u3002\u8bbe\u8ba1\u4e00\u4e2a\u5b8c\u6574\u7684\u4f18\u5316\u6d41\u7a0b\uff0c\u5305\u62ec\u654f\u611f\u5ea6\u6ee4\u6ce2\u548c\u6536\u655b\u51c6\u5219\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4f7f\u752888\u884c\u62d3\u6251\u4f18\u5316\u4ee3\u7801\u7684\u6846\u67b6\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\u7684\u6b63\u786e\u65bd\u52a0\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u4f18\u5316\u6d41\u7a0b\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u5316\uff1a$\\rho_e = 0.3$\uff08\u6ee1\u8db3\u4f53\u79ef\u7ea6\u675f\uff09</li>\n<li>\u8fed\u4ee3\uff1a\n   - FE\u5206\u6790\uff1a\u6c42\u89e3$\\mathbf{K}\\mathbf{u} = \\mathbf{f}$\n   - \u8ba1\u7b97\u76ee\u6807\u51fd\u6570\uff1a$c = \\mathbf{f}^T\\mathbf{u}$\n   - \u654f\u611f\u5ea6\u5206\u6790\uff1a$\\frac{\\partial c}{\\partial \\rho_e} = -p\\rho_e^{p-1}\\mathbf{u}_e^T\\mathbf{k}_0\\mathbf{u}_e$\n   - \u654f\u611f\u5ea6\u6ee4\u6ce2\uff08\u534a\u5f84$r_{min}=0.04$\uff09\n   - OC\u66f4\u65b0</li>\n<li>\u6536\u655b\u5224\u65ad\uff1a$\\max|\\rho_e^{new} - \\rho_e^{old}| &lt; 0.01$</li>\n</ol>\n<p>\u5178\u578b\u7ed3\u679c\uff1a\u7c7b\u4f3c\u62f1\u6865\u7684\u7ed3\u6784\uff0c\u6750\u6599\u96c6\u4e2d\u5728\u53d7\u62c9\u548c\u53d7\u538b\u7684\u4e3b\u8981\u8def\u5f84\u4e0a\u3002</p>\n</details>\n<p><strong>\u4e60\u98983.7</strong> \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u53ef\u5fae\u6709\u9650\u5143\u6c42\u89e3\u5668\uff0c\u7528\u4e8e\u4f18\u5316\u60ac\u81c2\u6881\u7684\u6750\u6599\u5206\u5e03\u4ee5\u6700\u5c0f\u5316\u672b\u7aef\u4f4d\u79fb\u3002\u4f7f\u7528\u81ea\u52a8\u5fae\u5206\u8ba1\u7b97\u68af\u5ea6\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4f7f\u7528Taichi\u7684\u81ea\u52a8\u5fae\u5206\u529f\u80fd\uff0c\u5b9a\u4e49\u524d\u5411\u4eff\u771f\u548c\u635f\u5931\u51fd\u6570\uff0c\u7136\u540e\u7528\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5173\u952e\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\u5b9a\u4e49\u53ef\u5fae\u53d8\u91cf\uff1a<code>density = ti.field(ti.f32, shape=(nx, ny), needs_grad=True)</code></li>\n<li>\u524d\u5411\u4eff\u771f\uff1a\u7ec4\u88c5\u521a\u5ea6\u77e9\u9635\uff0c\u6c42\u89e3\u4f4d\u79fb</li>\n<li>\u635f\u5931\u51fd\u6570\uff1a<code>loss = u_tip ** 2</code></li>\n<li>\u4f18\u5316\u5faa\u73af\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"nb\">iter</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">Tape</span><span class=\"p\">(</span><span class=\"n\">loss</span><span class=\"p\">):</span>\n        <span class=\"n\">assemble_K</span><span class=\"p\">()</span>\n        <span class=\"n\">solve_system</span><span class=\"p\">()</span>\n        <span class=\"n\">compute_loss</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u68af\u5ea6\u4e0b\u964d</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">density</span><span class=\"p\">:</span>\n        <span class=\"n\">density</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">lr</span> <span class=\"o\">*</span> <span class=\"n\">density</span><span class=\"o\">.</span><span class=\"n\">grad</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span>\n        <span class=\"n\">density</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">density</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span>\n</code></pre></div>\n\n</details>\n<p><strong>\u4e60\u98983.8</strong> \u5206\u6790\u5e76\u6bd4\u8f83\u516d\u9762\u4f53\u5355\u5143\u548c\u56db\u9762\u4f53\u5355\u5143\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\uff1a(a) \u5f2f\u66f2\u4e3b\u5bfc\u7684\u53d8\u5f62 (b) \u8fd1\u4f3c\u4e0d\u53ef\u538b\u7f29\u6750\u6599 (c) \u5927\u65cb\u8f6c\u53d8\u5f62\u3002\u8ba8\u8bba\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u548c\u9002\u7528\u573a\u666f\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u5355\u5143\u7684\u63d2\u503c\u9636\u6570\u3001\u79ef\u5206\u70b9\u6570\u91cf\u3001\u4f53\u79ef\u9501\u5b9a\u503e\u5411\u7b49\u56e0\u7d20\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u6bd4\u8f83\u5206\u6790\uff1a</p>\n<p>(a) <strong>\u5f2f\u66f2\u4e3b\u5bfc\u53d8\u5f62</strong>\uff1a</p>\n<ul>\n<li>\u516d\u9762\u4f53\uff1a8\u8282\u70b9\u4e09\u7ebf\u6027\u63d2\u503c\uff0c\u80fd\u8f83\u597d\u6355\u6349\u5f2f\u66f2</li>\n<li>\u56db\u9762\u4f53\uff1a\u7ebf\u6027\u63d2\u503c\uff0c\u9700\u8981\u66f4\u591a\u5355\u5143\uff0c\u53ef\u80fd\u8fc7\u521a</li>\n<li>\u7ed3\u8bba\uff1a\u516d\u9762\u4f53\u66f4\u9002\u5408</li>\n</ul>\n<p>(b) <strong>\u8fd1\u4f3c\u4e0d\u53ef\u538b\u7f29\u6750\u6599</strong>\uff1a</p>\n<ul>\n<li>\u516d\u9762\u4f53\uff1a\u5bb9\u6613\u4f53\u79ef\u9501\u5b9a\uff0c\u9700\u8981\u7279\u6b8a\u6280\u672f\uff08B-bar\u3001\u964d\u9636\u79ef\u5206\uff09</li>\n<li>\u56db\u9762\u4f53\uff1a\u540c\u6837\u6709\u9501\u5b9a\u95ee\u9898\uff0c\u4f46\u66f4\u5bb9\u6613\u5b9e\u73b0\u6df7\u5408\u516c\u5f0f</li>\n<li>\u7ed3\u8bba\uff1a\u90fd\u9700\u8981\u7279\u6b8a\u5904\u7406\uff0c\u56db\u9762\u4f53\u5b9e\u73b0\u66f4\u7b80\u5355</li>\n</ul>\n<p>(c) <strong>\u5927\u65cb\u8f6c\u53d8\u5f62</strong>\uff1a</p>\n<ul>\n<li>\u516d\u9762\u4f53\uff1a\u53ef\u80fd\u51fa\u73b0\u6c99\u6f0f\u6a21\u5f0f\uff0c\u9700\u8981\u6c99\u6f0f\u63a7\u5236</li>\n<li>\u56db\u9762\u4f53\uff1a\u5e38\u5e94\u53d8\u5047\u8bbe\u4e0b\u8868\u73b0\u7a33\u5b9a</li>\n<li>\u7ed3\u8bba\uff1a\u56db\u9762\u4f53\u66f4\u7a33\u5065\uff0c\u4f46\u53ef\u80fd\u8fc7\u521a</li>\n</ul>\n<p>\u603b\u4f53\u5efa\u8bae\uff1a</p>\n<ul>\n<li>\u89c4\u5219\u51e0\u4f55\u3001\u7cbe\u5ea6\u8981\u6c42\u9ad8\uff1a\u516d\u9762\u4f53</li>\n<li>\u590d\u6742\u51e0\u4f55\u3001\u5927\u53d8\u5f62\uff1a\u56db\u9762\u4f53</li>\n<li>\u6df7\u5408\u7f51\u683c\uff1a\u7ed3\u5408\u4e24\u8005\u4f18\u52bf</li>\n</ul>\n</details>\n<hr />\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef (Gotchas)</h2>\n<ol>\n<li><strong>\u5355\u5143\u7ffb\u8f6c</strong>\uff1a\u5927\u53d8\u5f62\u65f6\u5fd8\u8bb0\u68c0\u67e5$\\det(\\mathbf{F}) &gt; 0$\uff0c\u5bfc\u81f4\u4eff\u771f\u7206\u70b8</li>\n<li><strong>\u4f53\u79ef\u9501\u5b9a</strong>\uff1a\u5bf9\u8fd1\u4f3c\u4e0d\u53ef\u538b\u7f29\u6750\u6599\u4f7f\u7528\u5b8c\u5168\u79ef\u5206\uff0c\u5bfc\u81f4\u8fc7\u5ea6\u521a\u786c</li>\n<li><strong>\u6570\u503c\u79ef\u5206\u9636\u6570</strong>\uff1a\u79ef\u5206\u9636\u6570\u8fc7\u4f4e\u5bfc\u81f4\u79e9\u7f3a\u9677\uff0c\u8fc7\u9ad8\u5bfc\u81f4\u9501\u5b9a</li>\n<li><strong>\u6750\u6599\u53c2\u6570</strong>\uff1a\u6cca\u677e\u6bd4\u63a5\u8fd10.5\u65f6\u6570\u503c\u4e0d\u7a33\u5b9a\uff0c\u9700\u8981\u7279\u6b8a\u5904\u7406</li>\n<li><strong>\u7f51\u683c\u8d28\u91cf</strong>\uff1a\u5ffd\u89c6\u7f51\u683c\u8d28\u91cf\u68c0\u67e5\uff0c\u9000\u5316\u5355\u5143\u5bfc\u81f4\u77e9\u9635\u5947\u5f02</li>\n<li><strong>\u8fb9\u754c\u6761\u4ef6</strong>\uff1aDirichlet\u548cNeumann\u8fb9\u754c\u6761\u4ef6\u6df7\u6dc6\uff0c\u5bfc\u81f4\u9519\u8bef\u7ed3\u679c</li>\n<li><strong>\u5e94\u529b\u5ea6\u91cf</strong>\uff1a\u6df7\u6dc6\u4e0d\u540c\u5e94\u529b\u5f20\u91cf\uff08PK1\u3001PK2\u3001Cauchy\uff09\uff0c\u5bfc\u81f4\u9519\u8bef\u7684\u672c\u6784\u5b9e\u73b0</li>\n<li><strong>\u4f18\u5316\u6536\u655b</strong>\uff1a\u62d3\u6251\u4f18\u5316\u4e2d\u5ffd\u7565\u654f\u611f\u5ea6\u6ee4\u6ce2\uff0c\u51fa\u73b0\u68cb\u76d8\u683c\u73b0\u8c61</li>\n</ol>\n<hr />\n<h2 id=\"_5\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_6\">\u6709\u9650\u5143\u5b9e\u73b0</h3>\n<ul>\n<li>[ ] \u9a8c\u8bc1\u5355\u4e2a\u5355\u5143\u7684\u521a\u5ea6\u77e9\u9635\u5bf9\u79f0\u6027</li>\n<li>[ ] \u68c0\u67e5\u7ec4\u88c5\u540e\u7684\u5168\u5c40\u77e9\u9635\u662f\u5426\u6ee1\u8db3\u9884\u671f\u7684\u6027\u8d28\uff08\u5bf9\u79f0\u3001\u6b63\u5b9a\uff09</li>\n<li>[ ] \u5b9e\u73b0patch test\u9a8c\u8bc1\u6536\u655b\u6027</li>\n<li>[ ] \u76d1\u63a7\u80fd\u91cf\u5b88\u6052\uff08\u5bf9\u4e8e\u4fdd\u5b88\u7cfb\u7edf\uff09</li>\n<li>[ ] \u68c0\u67e5\u5355\u5143\u8d28\u91cf\u6307\u6807</li>\n</ul>\n<h3 id=\"_7\">\u6750\u6599\u6a21\u578b</h3>\n<ul>\n<li>[ ] \u9a8c\u8bc1\u5c0f\u53d8\u5f62\u6781\u9650\u4e0b\u9000\u5316\u4e3a\u7ebf\u5f39\u6027</li>\n<li>[ ] \u68c0\u67e5\u5e94\u529b-\u5e94\u53d8\u66f2\u7ebf\u7684\u7269\u7406\u5408\u7406\u6027</li>\n<li>[ ] \u6d4b\u8bd5\u5404\u5411\u540c\u6027\u6750\u6599\u7684\u65cb\u8f6c\u4e0d\u53d8\u6027</li>\n<li>[ ] \u9a8c\u8bc1\u80fd\u91cf\u51fd\u6570\u7684\u51f8\u6027</li>\n</ul>\n<h3 id=\"_8\">\u6570\u503c\u7a33\u5b9a\u6027</h3>\n<ul>\n<li>[ ] \u5b9e\u73b0\u5355\u5143\u7ffb\u8f6c\u68c0\u6d4b\u548c\u4fee\u590d</li>\n<li>[ ] \u5bf9\u4e0d\u53ef\u538b\u7f29\u6750\u6599\u4f7f\u7528\u9002\u5f53\u7684\u516c\u5f0f</li>\n<li>[ ] \u9009\u62e9\u5408\u9002\u7684\u65f6\u95f4\u79ef\u5206\u65b9\u6848</li>\n<li>[ ] \u5b9e\u73b0\u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f\u63a7\u5236</li>\n</ul>\n<h3 id=\"_9\">\u4f18\u5316\u8bbe\u8ba1</h3>\n<ul>\n<li>[ ] \u4f7f\u7528\u4f53\u79ef\u7ea6\u675f\u786e\u4fdd\u53ef\u5236\u9020\u6027</li>\n<li>[ ] \u5e94\u7528\u654f\u611f\u5ea6\u6ee4\u6ce2\u907f\u514d\u6570\u503c\u4e0d\u7a33\u5b9a</li>\n<li>[ ] \u8bbe\u7f6e\u5408\u7406\u7684\u6536\u655b\u51c6\u5219</li>\n<li>[ ] \u9a8c\u8bc1\u68af\u5ea6\u8ba1\u7b97\u7684\u6b63\u786e\u6027\uff08\u6709\u9650\u5dee\u5206\u68c0\u9a8c\uff09</li>\n</ul>\n<h3 id=\"_10\">\u6027\u80fd\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u5229\u7528\u5355\u5143\u77e9\u9635\u7684\u5bf9\u79f0\u6027\u51cf\u5c11\u8ba1\u7b97</li>\n<li>[ ] \u4f7f\u7528\u7a00\u758f\u77e9\u9635\u5b58\u50a8\u548c\u6c42\u89e3\u5668</li>\n<li>[ ] \u5b9e\u73b0\u5e76\u884c\u5316\uff08\u5355\u5143\u7ea7\u5e76\u884c\uff09</li>\n<li>[ ] \u8003\u8651\u4f7f\u7528\u81ea\u9002\u5e94\u7f51\u683c\u7ec6\u5316\n</content>\n</invoke></li>\n</ul>"
  },
  "../chapter8b.md": {
    "hash": "613c5b1c08e4737fa5503198c5a2e833",
    "content": "<h1 id=\"_1\">\u7b2c\u516b\u7ae0\uff1a\u591a\u91cd\u7f51\u683c\u65b9\u6cd5</h1>\n<p>\u591a\u91cd\u7f51\u683c\u65b9\u6cd5\u662f\u6c42\u89e3\u5927\u89c4\u6a21\u7ebf\u6027\u7cfb\u7edf\u6700\u9ad8\u6548\u7684\u7b97\u6cd5\u4e4b\u4e00\uff0c\u7279\u522b\u9002\u7528\u4e8e\u692d\u5706\u578b\u504f\u5fae\u5206\u65b9\u7a0b\u79bb\u6563\u5316\u4ea7\u751f\u7684\u7cfb\u7edf\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u591a\u91cd\u7f51\u683c\u7684\u7406\u8bba\u57fa\u7840\u3001\u5b9e\u73b0\u7ec6\u8282\u548c\u5728\u7269\u7406\u4eff\u771f\u4e2d\u7684\u5e94\u7528\u3002\u901a\u8fc7\u5b66\u4e60\u672c\u7ae0\uff0c\u8bfb\u8005\u5c06\u638c\u63e1\u8bbe\u8ba1\u548c\u5b9e\u73b0\u9ad8\u6027\u80fd\u591a\u91cd\u7f51\u683c\u6c42\u89e3\u5668\u7684\u6838\u5fc3\u6280\u672f\u3002</p>\n<p><strong>\u5b66\u4e60\u76ee\u6807</strong>\uff1a</p>\n<ul>\n<li>\u7406\u89e3\u8bef\u5dee\u7684\u9891\u7387\u5206\u6790\u548c\u5149\u6ed1\u6027\u8d28</li>\n<li>\u638c\u63e1\u51e0\u4f55\u591a\u91cd\u7f51\u683c\u548c\u4ee3\u6570\u591a\u91cd\u7f51\u683c\u7684\u5b9e\u73b0</li>\n<li>\u5b66\u4f1a\u9009\u62e9\u5408\u9002\u7684\u5149\u6ed1\u5668\u548c\u4f20\u8f93\u7b97\u5b50</li>\n<li>\u80fd\u591f\u5728GPU\u4e0a\u5b9e\u73b0\u5e76\u884c\u591a\u91cd\u7f51\u683c\u7b97\u6cd5</li>\n<li>\u5c06\u591a\u91cd\u7f51\u683c\u5e94\u7528\u4e8e\u6d41\u4f53\u538b\u529b\u6295\u5f71\u548c\u5f39\u6027\u529b\u5b66\u95ee\u9898</li>\n</ul>\n<hr />\n<h2 id=\"81\">8.1 \u591a\u91cd\u7f51\u683c\u65b9\u6cd5\u57fa\u7840</h2>\n<h3 id=\"811\">8.1.1 \u8fed\u4ee3\u65b9\u6cd5\u7684\u5c40\u9650\u6027</h3>\n<p>\u8003\u8651\u7ebf\u6027\u7cfb\u7edf $Au = f$\uff0c\u4f20\u7edf\u8fed\u4ee3\u65b9\u6cd5\u5982Jacobi\u548cGauss-Seidel\u7684\u6536\u655b\u901f\u5ea6\u4f9d\u8d56\u4e8e\u8bef\u5dee\u7684\u9891\u7387\u6210\u5206\u3002\u5b9a\u4e49\u8bef\u5dee $e = u - u^*$\uff0c\u5176\u4e2d $u^*$ \u662f\u7cbe\u786e\u89e3\u3002</p>\n<p>\u5bf9\u4e8e\u4e00\u7ef4\u6cca\u677e\u65b9\u7a0b $-u_{xx} = f$\uff0c\u5728\u5747\u5300\u7f51\u683c\u4e0a\u79bb\u6563\u5316\u5f97\u5230\uff1a\n$$\\frac{-u_{i-1} + 2u_i - u_{i+1}}{h^2} = f_i$$\n\u8bef\u5dee\u53ef\u4ee5\u5c55\u5f00\u4e3a\u5085\u91cc\u53f6\u7ea7\u6570\uff1a\n$$e(x) = \\sum_{k=1}^{n-1} \\alpha_k \\sin(k\\pi x/L)$$\n\u5176\u4e2d\u9ad8\u9891\u6210\u5206\uff08\u5927\u7684 $k$\uff09\u5bf9\u5e94\u5feb\u901f\u632f\u8361\u7684\u8bef\u5dee\uff0c\u4f4e\u9891\u6210\u5206\u5bf9\u5e94\u7f13\u6162\u53d8\u5316\u7684\u8bef\u5dee\u3002</p>\n<h3 id=\"812\">8.1.2 \u5149\u6ed1\u6027\u8d28</h3>\n<p>Jacobi\u8fed\u4ee3\u7684\u8bef\u5dee\u4f20\u64ad\u7b97\u5b50\u4e3a\uff1a\n$$G_{Jacobi} = I - \\omega D^{-1}A$$\n\u5bf9\u4e8e\u6a21\u5f0f $k$\uff0c\u5176\u8870\u51cf\u56e0\u5b50\u4e3a\uff1a\n$$\\mu_k = 1 - \\omega \\frac{\\lambda_k}{\\lambda_{max}}$$\n\u5176\u4e2d $\\lambda_k = 4\\sin^2(k\\pi h/2)/h^2$ \u662f\u77e9\u9635 $A$ \u7684\u7b2c $k$ \u4e2a\u7279\u5f81\u503c\u3002</p>\n<p><strong>\u5173\u952e\u89c2\u5bdf</strong>\uff1a\u9ad8\u9891\u8bef\u5dee\uff08$k$ \u63a5\u8fd1 $n/2$\uff09\u5feb\u901f\u8870\u51cf\uff0c\u4f46\u4f4e\u9891\u8bef\u5dee\uff08\u5c0f\u7684 $k$\uff09\u8870\u51cf\u7f13\u6162\u3002\u8fd9\u5c31\u662f\u5149\u6ed1\u6027\u8d28\u2014\u2014\u7b80\u5355\u8fed\u4ee3\u65b9\u6cd5\u80fd\u5feb\u901f\u6d88\u9664\u9ad8\u9891\u8bef\u5dee\uff0c\u4f46\u5bf9\u4f4e\u9891\u8bef\u5dee\u6548\u679c\u5dee\u3002</p>\n<h3 id=\"813\">8.1.3 \u7c97\u7f51\u683c\u4fee\u6b63\u539f\u7406</h3>\n<p>\u591a\u91cd\u7f51\u683c\u7684\u6838\u5fc3\u601d\u60f3\uff1a\u5728\u7c97\u7f51\u683c\u4e0a\uff0c\u539f\u672c\u7684\u4f4e\u9891\u8bef\u5dee\u53d8\u6210\u4e86\u76f8\u5bf9\u9ad8\u9891\u7684\u8bef\u5dee\uff0c\u56e0\u6b64\u53ef\u4ee5\u88ab\u9ad8\u6548\u6d88\u9664\u3002</p>\n<p>\u8bbe\u7ec6\u7f51\u683c\u6b65\u957f\u4e3a $h$\uff0c\u7c97\u7f51\u683c\u6b65\u957f\u4e3a $2h$\u3002\u5728\u7ec6\u7f51\u683c\u4e0a\u9891\u7387\u4e3a $k$ \u7684\u6a21\u5f0f\uff0c\u5728\u7c97\u7f51\u683c\u4e0a\u5bf9\u5e94\u9891\u7387 $2k$\uff0c\u76f8\u5bf9\u9891\u7387\u63d0\u9ad8\u4e86\u4e00\u500d\u3002</p>\n<h3 id=\"814\">8.1.4 \u4e24\u7f51\u683c\u7b97\u6cd5</h3>\n<p>\u57fa\u672c\u7684\u4e24\u7f51\u683c\u7b97\u6cd5\u6d41\u7a0b\uff1a</p>\n<ol>\n<li>\u5728\u7ec6\u7f51\u683c\u4e0a\u8fdb\u884c $\\nu_1$ \u6b21\u524d\u5149\u6ed1\uff08\u5982Gauss-Seidel\uff09</li>\n<li>\u8ba1\u7b97\u6b8b\u5dee $r^h = f^h - A^h u^h$</li>\n<li>\u9650\u5236\u6b8b\u5dee\u5230\u7c97\u7f51\u683c\uff1a$r^{2h} = I_{2h}^h r^h$</li>\n<li>\u5728\u7c97\u7f51\u683c\u4e0a\u6c42\u89e3\uff1a$A^{2h} e^{2h} = r^{2h}$</li>\n<li>\u5ef6\u62d3\u8bef\u5dee\u5230\u7ec6\u7f51\u683c\uff1a$e^h = I_h^{2h} e^{2h}$</li>\n<li>\u4fee\u6b63\u89e3\uff1a$u^h \\leftarrow u^h + e^h$</li>\n<li>\u5728\u7ec6\u7f51\u683c\u4e0a\u8fdb\u884c $\\nu_2$ \u6b21\u540e\u5149\u6ed1</li>\n</ol>\n<h3 id=\"815\">8.1.5 \u6536\u655b\u6027\u5206\u6790</h3>\n<p>\u4e24\u7f51\u683c\u65b9\u6cd5\u7684\u8bef\u5dee\u4f20\u64ad\u7b97\u5b50\uff1a\n$$M_{TG} = S^{\\nu_2} (I - I_h^{2h} (A^{2h})^{-1} I_{2h}^h A^h) S^{\\nu_1}$$\n\u5176\u4e2d $S$ \u662f\u5149\u6ed1\u5668\u7684\u8bef\u5dee\u4f20\u64ad\u7b97\u5b50\u3002</p>\n<p><strong>\u6536\u655b\u6761\u4ef6</strong>\uff1a$\\rho(M_{TG}) &lt; 1$\uff0c\u5176\u4e2d $\\rho$ \u8868\u793a\u8c31\u534a\u5f84\u3002</p>\n<p>\u5bf9\u4e8e\u9002\u5f53\u9009\u62e9\u7684\u5149\u6ed1\u5668\u548c\u4f20\u8f93\u7b97\u5b50\uff0c\u53ef\u4ee5\u8bc1\u660e\uff1a\n$$|M_{TG}| \\leq C \\cdot h^{\\alpha}$$\n\u5176\u4e2d $\\alpha &gt; 0$\uff0c\u8868\u660e\u7f51\u683c\u8d8a\u7ec6\uff0c\u6536\u655b\u8d8a\u5feb\u3002</p>\n<h3 id=\"816\">8.1.6 \u591a\u91cd\u7f51\u683c\u7684\u52a8\u673a</h3>\n<p>\u4e24\u7f51\u683c\u65b9\u6cd5\u9700\u8981\u5728\u7c97\u7f51\u683c\u4e0a\u7cbe\u786e\u6c42\u89e3\uff0c\u5f53\u95ee\u9898\u89c4\u6a21\u5927\u65f6\u4ecd\u7136\u6602\u8d35\u3002\u89e3\u51b3\u65b9\u6848\uff1a\u9012\u5f52\u5e94\u7528\u4e24\u7f51\u683c\u601d\u60f3\uff0c\u5f62\u6210\u591a\u91cd\u7f51\u683c\u3002</p>\n<p>\u5728\u6700\u7c97\u7f51\u683c\u4e0a\uff0c\u95ee\u9898\u89c4\u6a21\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u7528\u76f4\u63a5\u6cd5\u6c42\u89e3\uff08\u5982LU\u5206\u89e3\uff09\u3002</p>\n<hr />\n<h2 id=\"82\">8.2 \u51e0\u4f55\u591a\u91cd\u7f51\u683c</h2>\n<h3 id=\"821\">8.2.1 \u7f51\u683c\u5c42\u6b21\u6784\u5efa</h3>\n<p>\u5bf9\u4e8e $d$ \u7ef4\u95ee\u9898\uff0c\u6784\u5efa\u7f51\u683c\u5e8f\u5217\uff1a\n$$\\Omega^{h_0} \\supset \\Omega^{h_1} \\supset ... \\supset \\Omega^{h_L}$$\n\u5176\u4e2d $h_{l+1} = 2h_l$\uff0c\u6bcf\u4e2a\u65b9\u5411\u4e0a\u7f51\u683c\u70b9\u6570\u51cf\u534a\u3002</p>\n<p><strong>\u7f51\u683c\u7c97\u5316\u7b56\u7565</strong>\uff1a</p>\n<ul>\n<li>\u6807\u51c6\u7c97\u5316\uff1a\u6bcf\u4e2a\u65b9\u5411\u5747\u5300\u7c97\u5316\u56e0\u5b50\u4e3a2</li>\n<li>\u534a\u7c97\u5316\uff1a\u53ea\u5728\u67d0\u4e9b\u65b9\u5411\u7c97\u5316\uff08\u7528\u4e8e\u5404\u5411\u5f02\u6027\u95ee\u9898\uff09</li>\n<li>\u81ea\u9002\u5e94\u7c97\u5316\uff1a\u6839\u636e\u95ee\u9898\u7279\u6027\u9009\u62e9\u7c97\u5316\u533a\u57df</li>\n</ul>\n<h3 id=\"822\">8.2.2 \u9650\u5236\u7b97\u5b50</h3>\n<p>\u9650\u5236\u7b97\u5b50 $I_{2h}^h: \\Omega^h \\rightarrow \\Omega^{2h}$ \u5c06\u7ec6\u7f51\u683c\u51fd\u6570\u6620\u5c04\u5230\u7c97\u7f51\u683c\u3002</p>\n<p><strong>1D\u60c5\u51b5</strong>\uff1a</p>\n<ul>\n<li>\u6ce8\u5165(Injection)\uff1a$u_{2i}^{2h} = u_{2i}^h$</li>\n<li>\u5168\u6743\u91cd(Full weighting)\uff1a$u_i^{2h} = \\frac{1}{4}(u_{2i-1}^h + 2u_{2i}^h + u_{2i+1}^h)$</li>\n</ul>\n<p><strong>2D\u60c5\u51b5</strong>\uff089\u70b9\u6a21\u677f\uff09\uff1a\n$$u_{i,j}^{2h} = \\frac{1}{16} \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 2 &amp; 4 &amp; 2 \\\\ 1 &amp; 2 &amp; 1 \\end{bmatrix} \\ast u^h$$</p>\n<h3 id=\"823\">8.2.3 \u5ef6\u62d3\u7b97\u5b50</h3>\n<p>\u5ef6\u62d3\u7b97\u5b50 $I_h^{2h}: \\Omega^{2h} \\rightarrow \\Omega^h$ \u5c06\u7c97\u7f51\u683c\u51fd\u6570\u63d2\u503c\u5230\u7ec6\u7f51\u683c\u3002</p>\n<p><strong>\u7ebf\u6027\u63d2\u503c\uff081D\uff09</strong>\uff1a</p>\n<ul>\n<li>\u7c97\u7f51\u683c\u70b9\u76f4\u63a5\u590d\u5236\uff1a$u_{2i}^h = u_i^{2h}$</li>\n<li>\u4e2d\u95f4\u70b9\u7ebf\u6027\u63d2\u503c\uff1a$u_{2i+1}^h = \\frac{1}{2}(u_i^{2h} + u_{i+1}^{2h})$</li>\n</ul>\n<p><strong>\u53cc\u7ebf\u6027\u63d2\u503c\uff082D\uff09</strong>\uff1a\n\u5bf9\u4e8e\u7ec6\u7f51\u683c\u70b9 $(2i+p, 2j+q)$\uff0c\u5176\u4e2d $p,q \\in \\{0,1\\}$\uff1a\n$$u_{2i+p,2j+q}^h = \\sum_{k,l \\in \\{0,1\\}} w_{p,k} w_{q,l} u_{i+k,j+l}^{2h}$$\n\u5176\u4e2d\u6743\u91cd $w_{0,0} = w_{1,1} = 1$\uff0c$w_{0,1} = w_{1,0} = 0.5$\u3002</p>\n<h3 id=\"824-galerkin\">8.2.4 Galerkin\u7c97\u5316</h3>\n<p>\u7c97\u7f51\u683c\u7b97\u5b50\u901a\u8fc7Galerkin\u6761\u4ef6\u6784\u9020\uff1a\n$$A^{2h} = I_{2h}^h A^h I_h^{2h}$$\n<strong>\u6027\u8d28</strong>\uff1a</p>\n<ul>\n<li>\u5982\u679c $A^h$ \u5bf9\u79f0\u6b63\u5b9a\uff0c\u5219 $A^{2h}$ \u4e5f\u5bf9\u79f0\u6b63\u5b9a</li>\n<li>\u4fdd\u6301\u53d8\u5206\u6027\u8d28</li>\n<li>\u81ea\u52a8\u6ee1\u8db3\u80fd\u91cf\u6700\u5c0f\u5316\u539f\u7406</li>\n</ul>\n<p><strong>\u8ba1\u7b97\u4f18\u5316</strong>\uff1a\u5bf9\u4e8e\u6807\u51c6\u79bb\u6563\u5316\uff0c\u53ef\u4ee5\u76f4\u63a5\u63a8\u5bfc\u7c97\u7f51\u683c\u6a21\u677f\uff0c\u907f\u514d\u77e9\u9635\u4e58\u6cd5\u3002</p>\n<h3 id=\"825\">8.2.5 \u8fb9\u754c\u6761\u4ef6\u5904\u7406</h3>\n<p><strong>Dirichlet\u8fb9\u754c</strong>\uff1a</p>\n<ul>\n<li>\u7ec6\u7f51\u683c\u8fb9\u754c\u503c\u76f4\u63a5\u9650\u5236\u5230\u7c97\u7f51\u683c</li>\n<li>\u5ef6\u62d3\u65f6\u4fdd\u6301\u8fb9\u754c\u503c\u4e0d\u53d8</li>\n</ul>\n<p><strong>Neumann\u8fb9\u754c</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u4fee\u6b63\u7684\u9650\u5236/\u5ef6\u62d3\u6a21\u677f</li>\n<li>\u4fdd\u8bc1\u901a\u91cf\u5b88\u6052</li>\n</ul>\n<p><strong>\u6df7\u5408\u8fb9\u754c</strong>\uff1a\u5206\u533a\u57df\u5904\u7406\uff0c\u786e\u4fdd\u4e00\u81f4\u6027\u3002</p>\n<h3 id=\"826\">8.2.6 \u53d8\u7cfb\u6570\u95ee\u9898</h3>\n<p>\u5bf9\u4e8e\u53d8\u7cfb\u6570\u6cca\u677e\u65b9\u7a0b $-\\nabla \\cdot (a(x)\\nabla u) = f$\uff1a</p>\n<p><strong>\u7b97\u672f\u5e73\u5747</strong>\uff1a\n$$a_{i+1/2}^{2h} = \\frac{1}{2}(a_{2i+1/2}^h + a_{2i+3/2}^h)$$\n<strong>\u8c03\u548c\u5e73\u5747</strong>\uff08\u66f4\u9002\u5408\u5f3a\u95f4\u65ad\uff09\uff1a\n$$\\frac{1}{a_{i+1/2}^{2h}} = \\frac{1}{2}\\left(\\frac{1}{a_{2i+1/2}^h} + \\frac{1}{a_{2i+3/2}^h}\\right)$$</p>\n<hr />\n<h2 id=\"83-amg\">8.3 \u4ee3\u6570\u591a\u91cd\u7f51\u683c(AMG)</h2>\n<h3 id=\"831-amg\">8.3.1 AMG\u7684\u52a8\u673a</h3>\n<p>\u51e0\u4f55\u591a\u91cd\u7f51\u683c\u9700\u8981\uff1a</p>\n<ul>\n<li>\u7ed3\u6784\u5316\u7f51\u683c</li>\n<li>\u51e0\u4f55\u4fe1\u606f</li>\n<li>\u89c4\u5219\u7684\u7c97\u5316\u7b56\u7565</li>\n</ul>\n<p>AMG\u53ea\u9700\u8981\u77e9\u9635 $A$\uff0c\u9002\u7528\u4e8e\uff1a</p>\n<ul>\n<li>\u975e\u7ed3\u6784\u7f51\u683c</li>\n<li>\u590d\u6742\u51e0\u4f55</li>\n<li>\u5404\u5411\u5f02\u6027\u95ee\u9898</li>\n</ul>\n<h3 id=\"832\">8.3.2 \u5f3a\u8fde\u63a5\u4e0e\u5f71\u54cd</h3>\n<p>\u5b9a\u4e49\u5f3a\u8fde\u63a5\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u9608\u503c $\\theta \\in (0,1)$\uff0c\u5982\u679c\n$$|a_{ij}| \\geq \\theta \\max_{k \\neq i} |a_{ik}|$$\n\u5219\u79f0 $i$ \u5f3a\u4f9d\u8d56\u4e8e $j$\uff0c\u8bb0\u4f5c $j \\in S_i$\u3002</p>\n<p><strong>\u5f3a\u8fde\u63a5\u7684\u610f\u4e49</strong>\uff1a</p>\n<ul>\n<li>\u8868\u793a\u53d8\u91cf\u95f4\u7684\u5f3a\u8026\u5408</li>\n<li>\u6307\u5bfc\u7c97\u7f51\u683c\u70b9\u9009\u62e9</li>\n<li>\u51b3\u5b9a\u63d2\u503c\u6743\u91cd</li>\n</ul>\n<h3 id=\"833\">8.3.3 \u7c97\u7f51\u683c\u70b9\u9009\u62e9</h3>\n<p><strong>Classical AMG\u7684C/F\u5206\u88c2</strong>\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u5f71\u54cd\u5ea6\u91cf\uff1a$\\lambda_i = |S_i^T|$\uff08\u88ab\u591a\u5c11\u70b9\u5f3a\u4f9d\u8d56\uff09</li>\n<li>\u9009\u62e9 $\\lambda$ \u6700\u5927\u7684\u70b9\u4f5c\u4e3aC\u70b9</li>\n<li>\u5c06\u5176\u5f3a\u8fde\u63a5\u7684\u90bb\u5c45\u6807\u8bb0\u4e3aF\u70b9</li>\n<li>\u66f4\u65b0\u5269\u4f59\u70b9\u7684 $\\lambda$ \u503c</li>\n<li>\u91cd\u590d\u76f4\u5230\u6240\u6709\u70b9\u88ab\u5206\u7c7b</li>\n</ol>\n<p><strong>\u6027\u8d28\u8981\u6c42</strong>\uff1a</p>\n<ul>\n<li>F\u70b9\u5e94\u88ab\u8db3\u591f\u7684C\u70b9\u5f3a\u8fde\u63a5</li>\n<li>C\u70b9\u96c6\u5e94\u8be5\u662f\u6781\u5927\u72ec\u7acb\u96c6</li>\n<li>C\u70b9\u5206\u5e03\u76f8\u5bf9\u5747\u5300</li>\n</ul>\n<h3 id=\"834\">8.3.4 \u63d2\u503c\u7b97\u5b50\u6784\u9020</h3>\n<p><strong>\u7ecf\u5178\u63d2\u503c</strong>\uff1a\u5bf9F\u70b9 $i$\uff0c\u5176\u63d2\u503c\u516c\u5f0f\uff1a\n$$u_i = \\sum_{j \\in C_i} w_{ij} u_j$$\n\u5176\u4e2d $C_i$ \u662f\u5f3a\u8fde\u63a5\u5230 $i$ \u7684C\u70b9\u96c6\u5408\u3002</p>\n<p><strong>\u6743\u91cd\u8ba1\u7b97</strong>\uff1a\n$$w_{ij} = -\\frac{a_{ij} + \\sum_{k \\in F_i^s} a_{ik} \\bar{a}_{kj}}{a_{ii} + \\sum_{k \\in F_i^w} a_{ik}}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$F_i^s$\uff1a\u5f3a\u8fde\u63a5\u7684F\u70b9</li>\n<li>$F_i^w$\uff1a\u5f31\u8fde\u63a5\u7684F\u70b9  </li>\n<li>$\\bar{a}_{kj}$\uff1a\u4eceF\u70b9\u5230C\u70b9\u7684\u5e73\u5747\u8fde\u63a5</li>\n</ul>\n<h3 id=\"835-amg\">8.3.5 \u5e73\u6ed1\u805a\u5408AMG</h3>\n<p><strong>\u805a\u5408\u9636\u6bb5</strong>\uff1a</p>\n<ol>\n<li>\u6784\u5efa\u805a\u5408 $\\{A_k\\}$\uff0c\u6bcf\u4e2a\u805a\u5408\u5305\u542b\u5f3a\u8fde\u63a5\u7684\u70b9</li>\n<li>\u521d\u59cb\u5ef6\u62d3\u7b97\u5b50\uff1a$(P^0)_{ij} = 1$ \u5982\u679c $i \\in A_j$\uff0c\u5426\u5219\u4e3a0</li>\n</ol>\n<p><strong>\u5e73\u6ed1\u9636\u6bb5</strong>\uff1a\n$$P = (I - \\omega D^{-1}A) P^0$$\n\u5176\u4e2d $\\omega = 2/3 \\cdot 1/\\rho(D^{-1}A)$\u3002</p>\n<p><strong>\u4f18\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u6784\u9020\u7b80\u5355</li>\n<li>\u5e76\u884c\u6027\u597d</li>\n<li>\u5bf9\u5404\u5411\u5f02\u6027\u95ee\u9898\u9c81\u68d2</li>\n</ul>\n<h3 id=\"836-amg\">8.3.6 \u81ea\u9002\u5e94AMG</h3>\n<p><strong>Bootstrap AMG</strong>\uff1a</p>\n<ol>\n<li>\u7528\u5f53\u524dAMG\u6c42\u89e3\u6d4b\u8bd5\u95ee\u9898</li>\n<li>\u5206\u6790\u6536\u655b\u6162\u7684\u8bef\u5dee\u5206\u91cf</li>\n<li>\u5c06\u8fd9\u4e9b\u5206\u91cf\u52a0\u5165\u63d2\u503c\u7b97\u5b50</li>\n<li>\u91cd\u65b0\u6784\u9020AMG\u5c42\u6b21</li>\n</ol>\n<p><strong>\u6536\u655b\u6027\u76d1\u6d4b</strong>\uff1a\n$$\\rho_{est} = |e^{(k)}| / |e^{(k-1)}|$$\n\u5982\u679c $\\rho_{est}$ \u8fc7\u5927\uff0c\u89e6\u53d1\u81ea\u9002\u5e94\u3002</p>\n<hr />\n<h2 id=\"84\">8.4 \u5149\u6ed1\u5668\u4e0e\u9650\u5236/\u5ef6\u62d3\u7b97\u5b50</h2>\n<h3 id=\"841\">8.4.1 \u5149\u6ed1\u5668\u7684\u9009\u62e9\u51c6\u5219</h3>\n<p>\u5149\u6ed1\u5668\u7684\u4f5c\u7528\u662f\u6d88\u9664\u9ad8\u9891\u8bef\u5dee\u5206\u91cf\u3002\u7406\u60f3\u7684\u5149\u6ed1\u5668\u5e94\u8be5\uff1a</p>\n<ul>\n<li>\u8ba1\u7b97\u6210\u672c\u4f4e</li>\n<li>\u5e76\u884c\u6027\u597d</li>\n<li>\u5bf9\u9ad8\u9891\u8bef\u5dee\u6709\u5f3a\u963b\u5c3c\u4f5c\u7528</li>\n<li>\u4e0d\u653e\u5927\u4f4e\u9891\u8bef\u5dee</li>\n</ul>\n<p><strong>\u5149\u6ed1\u56e0\u5b50</strong>\uff1a\u5b9a\u4e49\u4e3a\u9ad8\u9891\u8bef\u5dee\u7684\u6700\u5927\u653e\u5927\u7387\n$$\\mu = \\max_{k &gt; n/2} |\\mu_k|$$\n\u5176\u4e2d $\\mu_k$ \u662f\u6a21\u5f0f $k$ \u7684\u8870\u51cf\u56e0\u5b50\u3002</p>\n<h3 id=\"842\">8.4.2 \u70b9\u5149\u6ed1\u5668</h3>\n<p><strong>Jacobi\u8fed\u4ee3</strong>\uff1a\n$$u_i^{new} = u_i^{old} + \\omega \\frac{r_i}{a_{ii}}$$\n\u5176\u4e2d $r_i = f_i - \\sum_j a_{ij}u_j^{old}$\u3002</p>\n<ul>\n<li>\u6700\u4f18\u677e\u5f1b\u56e0\u5b50\uff1a$\\omega = 2/3$\uff08\u5bf9\u4e8e\u6cca\u677e\u65b9\u7a0b\uff09</li>\n<li>\u5149\u6ed1\u56e0\u5b50\uff1a$\\mu \\approx 0.6$</li>\n<li>\u5e76\u884c\u6027\uff1a\u5b8c\u7f8e\u5e76\u884c</li>\n</ul>\n<p><strong>Gauss-Seidel\u8fed\u4ee3</strong>\uff1a\n$$u_i^{new} = \\frac{1}{a_{ii}}\\left(f_i - \\sum_{j<i} a\\_{ij}u\\_j^{new} - \\sum\\_{j>i} a_{ij}u_j^{old}\\right)$$</p>\n<ul>\n<li>\u5149\u6ed1\u56e0\u5b50\uff1a$\\mu \\approx 0.5$</li>\n<li>\u5e76\u884c\u6027\uff1a\u9700\u8981\u7740\u8272\u6216\u5206\u5757\u7b56\u7565</li>\n</ul>\n<p><strong>\u7ea2\u9ed1Gauss-Seidel</strong>\uff1a</p>\n<ol>\n<li>\u66f4\u65b0\u7ea2\u70b9\uff08\u68cb\u76d8\u7740\u8272\uff09</li>\n<li>\u66f4\u65b0\u9ed1\u70b9</li>\n</ol>\n<p>\u4f18\u70b9\uff1a\u4fdd\u6301Gauss-Seidel\u7684\u6536\u655b\u6027\uff0c\u5b9e\u73b0\u5e76\u884c\u3002</p>\n<h3 id=\"843\">8.4.3 \u5757\u5149\u6ed1\u5668</h3>\n<p><strong>\u5757Jacobi</strong>\uff1a\u5c06\u672a\u77e5\u91cf\u5206\u7ec4\uff0c\u6bcf\u7ec4\u5185\u90e8\u7528\u76f4\u63a5\u6cd5\u6c42\u89e3\n$$U_I^{new} = U_I^{old} + \\omega A_{II}^{-1} R_I$$\n\u5176\u4e2d $I$ \u8868\u793a\u7b2c $I$ \u4e2a\u5757\u3002</p>\n<p><strong>\u7ebf\u5149\u6ed1\u5668</strong>\uff1a\u7279\u522b\u9002\u5408\u5404\u5411\u5f02\u6027\u95ee\u9898</p>\n<ul>\n<li>x-line\uff1a\u6cbfx\u65b9\u5411\u7684\u6240\u6709\u70b9\u7ec4\u6210\u4e00\u4e2a\u5757</li>\n<li>y-line\uff1a\u6cbfy\u65b9\u5411\u7684\u6240\u6709\u70b9\u7ec4\u6210\u4e00\u4e2a\u5757</li>\n<li>\u4ea4\u66ff\u65b9\u5411\uff1a\u5148x-line\u518dy-line</li>\n</ul>\n<p><strong>ILU\u5149\u6ed1\u5668</strong>\uff1a\u4e0d\u5b8c\u5168LU\u5206\u89e3\n$$A \\approx LU$$\n\u4fdd\u6301\u7a00\u758f\u6a21\u5f0f\uff0c\u4f5c\u4e3a\u9884\u6761\u4ef6\u5b50\u3002</p>\n<h3 id=\"844\">8.4.4 \u591a\u9879\u5f0f\u5149\u6ed1\u5668</h3>\n<p><strong>Chebyshev\u591a\u9879\u5f0f</strong>\uff1a\n$$u^{(k+1)} = u^{(k)} + \\alpha_k r^{(k)} + \\beta_k (u^{(k)} - u^{(k-1)})$$\n\u53c2\u6570\u9009\u62e9\u57fa\u4e8e\u8c31\u534a\u5f84\u4f30\u8ba1\uff1a\n$$\\alpha_k = \\frac{4}{3\\rho}, \\quad \\beta_k = \\left(\\frac{\\rho - 2}{\\rho + 2}\\right)^2$$\n\u4f18\u70b9\uff1a</p>\n<ul>\n<li>\u4e0d\u9700\u8981\u77e9\u9635\u5143\u7d20\uff0c\u53ea\u9700\u77e9\u9635\u5411\u91cf\u4e58\u79ef</li>\n<li>\u53ef\u4ee5\u7cbe\u786e\u63a7\u5236\u963b\u5c3c\u7279\u6027</li>\n<li>\u9002\u5408\u65e0\u77e9\u9635\u65b9\u6cd5</li>\n</ul>\n<h3 id=\"845\">8.4.5 \u9650\u5236/\u5ef6\u62d3\u7b97\u5b50\u7684\u4f18\u5316</h3>\n<p><strong>\u80fd\u91cf\u6700\u5c0f\u5316\u5ef6\u62d3</strong>\uff1a\n$$P = \\arg\\min_{\\tilde{P}} |(I - \\tilde{P}A_c^{-1}\\tilde{P}^T A)|_A$$\n\u5176\u4e2d $|\\cdot|_A$ \u662f\u80fd\u91cf\u8303\u6570\u3002</p>\n<p><strong>\u4fdd\u6301\u5e38\u6570\u5ef6\u62d3</strong>\uff1a\u786e\u4fdd $P \\mathbf{1} = \\mathbf{1}$\uff0c\u4fdd\u8bc1\u5e38\u6570\u51fd\u6570\u7cbe\u786e\u4f20\u8f93\u3002</p>\n<p><strong>\u9ad8\u9636\u5ef6\u62d3</strong>\uff1a</p>\n<ul>\n<li>\u4e09\u6b21\u63d2\u503c\uff1a\u4f7f\u7528\u66f4\u591a\u90bb\u5c45\u70b9</li>\n<li>\u4fdd\u6301\u591a\u9879\u5f0f\uff1a\u7cbe\u786e\u4f20\u8f93\u4f4e\u9636\u591a\u9879\u5f0f</li>\n</ul>\n<h3 id=\"846\">8.4.6 \u7b97\u5b50\u4f9d\u8d56\u7684\u4f20\u8f93</h3>\n<p><strong>\u57fa\u4e8e\u77e9\u9635\u7684\u63d2\u503c</strong>\uff1a\n$$P_{ij} = \\begin{cases}\n1 &amp; \\text{if } i \\text{ is coarse point } j \\\\\n-\\frac{\\sum_{k \\in N_i^C} a_{ik} P_{kj}}{a_{ii}} &amp; \\text{if } i \\text{ is fine point}\n\\end{cases}$$\n\u5176\u4e2d $N_i^C$ \u662f $i$ \u7684\u7c97\u7f51\u683c\u90bb\u5c45\u3002</p>\n<p><strong>\u4f18\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u81ea\u52a8\u9002\u5e94\u7cfb\u6570\u53d8\u5316</li>\n<li>\u5904\u7406\u5404\u5411\u5f02\u6027</li>\n<li>\u4fdd\u6301\u77e9\u9635\u6027\u8d28\uff08\u5982M\u77e9\u9635\uff09</li>\n</ul>\n<hr />\n<h2 id=\"85-vw\">8.5 V\u5faa\u73af\u3001W\u5faa\u73af\u4e0e\u5b8c\u5168\u591a\u91cd\u7f51\u683c</h2>\n<h3 id=\"851\">8.5.1 \u591a\u91cd\u7f51\u683c\u5faa\u73af\u7b56\u7565</h3>\n<p><strong>\u9012\u5f52\u5b9a\u4e49</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>MGM(A_l, u_l, f_l, \u03b3):\n  if l == L (\u6700\u7c97\u5c42):\n    \u76f4\u63a5\u6c42\u89e3 A_L u_L = f_L\n  else:\n    \u524d\u5149\u6ed1 \u03bd\u2081 \u6b21\n    r_l = f_l - A_l u_l\n    r_{l+1} = I_{l+1}^l r_l\n    e_{l+1} = 0\n    for i = 1 to \u03b3:\n      MGM(A_{l+1}, e_{l+1}, r_{l+1}, \u03b3)\n    e_l = I_l^{l+1} e_{l+1}\n    u_l = u_l + e_l\n    \u540e\u5149\u6ed1 \u03bd\u2082 \u6b21\n</code></pre></div>\n\n<p>\u5176\u4e2d $\\gamma$ \u51b3\u5b9a\u5faa\u73af\u7c7b\u578b\u3002</p>\n<h3 id=\"852-v1\">8.5.2 V\u5faa\u73af\uff08\u03b3=1\uff09</h3>\n<p><strong>\u8ba1\u7b97\u590d\u6742\u5ea6</strong>\uff1a\u8bbe\u7ec6\u7f51\u683c\u6709 $N$ \u4e2a\u672a\u77e5\u91cf</p>\n<ul>\n<li>\u5de5\u4f5c\u91cf\uff1a$W_V = O(N)$\uff08\u6700\u4f18\uff09</li>\n<li>\u5b58\u50a8\uff1a$S_V = O(N)$</li>\n</ul>\n<p><strong>\u6536\u655b\u56e0\u5b50\u4f30\u8ba1</strong>\uff1a\n$$\\rho_V \\approx 1 - O(h^2)$$\n\u5bf9\u4e8e\u6a21\u578b\u95ee\u9898\uff0c\u5178\u578b\u503c $\\rho_V \\approx 0.1$\u3002</p>\n<p><strong>V\u5faa\u73af\u7684\u7279\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u6bcf\u5c42\u53ea\u8bbf\u95ee\u4e00\u6b21</li>\n<li>\u9002\u5408\u4f5c\u4e3a\u9884\u6761\u4ef6\u5b50</li>\n<li>\u5bf9\u521d\u503c\u654f\u611f</li>\n</ul>\n<h3 id=\"853-w2\">8.5.3 W\u5faa\u73af\uff08\u03b3=2\uff09</h3>\n<p><strong>\u52a8\u673a</strong>\uff1a\u5728\u7c97\u7f51\u683c\u4e0a\u505a\u66f4\u591a\u5de5\u4f5c\uff0c\u66f4\u5f7b\u5e95\u5730\u6d88\u9664\u8bef\u5dee\u3002</p>\n<p><strong>\u8ba1\u7b97\u590d\u6742\u5ea6</strong>\uff1a</p>\n<ul>\n<li>2D\uff1a$W_W = O(N)$</li>\n<li>3D\uff1a$W_W = O(N\\log N)$</li>\n</ul>\n<p><strong>\u6536\u655b\u56e0\u5b50</strong>\uff1a\n$$\\rho_W \\approx \\rho_V^2$$\n\u66f4\u9c81\u68d2\u4f46\u8ba1\u7b97\u91cf\u66f4\u5927\u3002</p>\n<h3 id=\"854-f\">8.5.4 F\u5faa\u73af</h3>\n<p>F\u5faa\u73af\u662fV\u5faa\u73af\u548cW\u5faa\u73af\u7684\u6298\u4e2d\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>\u7b2c\u4e00\u6b21\u4e0b\u964d\uff1aV\u5faa\u73af\u65b9\u5f0f\n\u4e4b\u540e\uff1aW\u5faa\u73af\u65b9\u5f0f\n</code></pre></div>\n\n<p>\u5e73\u8861\u4e86\u6548\u7387\u548c\u9c81\u68d2\u6027\u3002</p>\n<h3 id=\"855-fmg\">8.5.5 \u5b8c\u5168\u591a\u91cd\u7f51\u683c\uff08FMG\uff09</h3>\n<p><strong>\u601d\u60f3</strong>\uff1a\u4f7f\u7528\u7c97\u7f51\u683c\u89e3\u4f5c\u4e3a\u7ec6\u7f51\u683c\u7684\u521d\u59cb\u731c\u6d4b\u3002</p>\n<p><strong>\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>FMG(f):\n  if \u6700\u7c97\u5c42:\n    \u76f4\u63a5\u6c42\u89e3\n  else:\n    f_{coarse} = restrict(f)\n    u_{coarse} = FMG(f_{coarse})\n    u = interpolate(u_{coarse})\n    u = V-cycle(u, f)  // \u4e00\u6b21\u6216\u591a\u6b21\n  return u\n</code></pre></div>\n\n<p><strong>\u8bef\u5dee\u4f30\u8ba1</strong>\uff1a\n$$|u - u^*|_A \\leq C h^p$$\n\u5176\u4e2d $p$ \u662f\u79bb\u6563\u5316\u9636\u6570\u3002</p>\n<h3 id=\"856\">8.5.6 \u5faa\u73af\u7b56\u7565\u9009\u62e9</h3>\n<p><strong>V\u5faa\u73af\u9002\u7528\u4e8e</strong>\uff1a</p>\n<ul>\n<li>\u89c4\u5219\u95ee\u9898</li>\n<li>\u4f5c\u4e3aKrylov\u65b9\u6cd5\u7684\u9884\u6761\u4ef6\u5b50</li>\n<li>\u5185\u5b58\u53d7\u9650\u60c5\u51b5</li>\n</ul>\n<p><strong>W\u5faa\u73af\u9002\u7528\u4e8e</strong>\uff1a</p>\n<ul>\n<li>\u56f0\u96be\u95ee\u9898\uff08\u5404\u5411\u5f02\u6027\u3001\u4e0d\u8fde\u7eed\u7cfb\u6570\uff09</li>\n<li>\u9700\u8981\u9ad8\u9c81\u68d2\u6027</li>\n<li>\u7c97\u7f51\u683c\u4ee3\u4ef7\u4f4e</li>\n</ul>\n<p><strong>FMG\u9002\u7528\u4e8e</strong>\uff1a</p>\n<ul>\n<li>\u9700\u8981\u9ad8\u7cbe\u5ea6\u89e3</li>\n<li>\u4e00\u6b21\u6027\u6c42\u89e3\uff08\u975e\u8fed\u4ee3\u73af\u5883\uff09</li>\n<li>\u6709\u597d\u7684\u521d\u503c\u4f30\u8ba1</li>\n</ul>\n<hr />\n<h2 id=\"86\">8.6 \u5e76\u884c\u591a\u91cd\u7f51\u683c\u5b9e\u73b0</h2>\n<h3 id=\"861\">8.6.1 \u5e76\u884c\u5316\u6311\u6218</h3>\n<p><strong>\u7ec6\u7f51\u683c</strong>\uff1a</p>\n<ul>\n<li>\u5927\u91cf\u5e76\u884c\u5ea6</li>\n<li>\u901a\u4fe1/\u8ba1\u7b97\u6bd4\u4f4e</li>\n<li>\u8d1f\u8f7d\u5747\u8861\u5bb9\u6613</li>\n</ul>\n<p><strong>\u7c97\u7f51\u683c</strong>\uff1a</p>\n<ul>\n<li>\u5e76\u884c\u5ea6\u964d\u4f4e</li>\n<li>\u901a\u4fe1\u5f00\u9500\u76f8\u5bf9\u589e\u52a0</li>\n<li>\u53ef\u80fd\u6210\u4e3a\u74f6\u9888</li>\n</ul>\n<h3 id=\"862\">8.6.2 \u6570\u636e\u5206\u5e03\u7b56\u7565</h3>\n<p><strong>\u6807\u51c6\u5206\u5e03</strong>\uff1a\u6bcf\u5c42\u72ec\u7acb\u5206\u533a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">level</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">):</span>\n    <span class=\"n\">partition</span><span class=\"p\">[</span><span class=\"n\">level</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">domain_decomposition</span><span class=\"p\">(</span><span class=\"n\">grid</span><span class=\"p\">[</span><span class=\"n\">level</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p><strong>\u805a\u5408\u7b56\u7565</strong>\uff1a\u7c97\u7f51\u683c\u805a\u5408\u5230\u90e8\u5206\u5904\u7406\u5668</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">grid_size</span><span class=\"p\">[</span><span class=\"n\">level</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n    <span class=\"n\">use_subset_processors</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u70b9</strong>\uff1a\u51cf\u5c11\u7c97\u7f51\u683c\u901a\u4fe1\uff0c\u63d0\u9ad8\u7f13\u5b58\u5229\u7528\u7387\u3002</p>\n<h3 id=\"863\">8.6.3 \u5e76\u884c\u5149\u6ed1\u5668</h3>\n<p><strong>Jacobi</strong>\uff1a\u81ea\u7136\u5e76\u884c</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">jacobi_smooth</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">omega</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">u</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">not_boundary</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">):</span>\n            <span class=\"n\">u_new</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">omega</span> <span class=\"o\">*</span> <span class=\"n\">residual</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">a_diag</span>\n</code></pre></div>\n\n<p><strong>\u591a\u8272Gauss-Seidel</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>  \n<span class=\"k\">def</span> <span class=\"nf\">red_black_gs</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">u</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"n\">color</span> <span class=\"ow\">and</span> <span class=\"n\">not_boundary</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">):</span>\n            <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">off_diagonal_sum</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"n\">a_diag</span>\n</code></pre></div>\n\n<p><strong>\u5e76\u884c\u7ebf\u5149\u6ed1</strong>\uff1a\u6d41\u6c34\u7ebf\u65b9\u5f0f\u6216\u5faa\u73af\u7f29\u51cf\u3002</p>\n<h3 id=\"864-gpu\">8.6.4 GPU\u5b9e\u73b0\u4f18\u5316</h3>\n<p><strong>\u5185\u5b58\u5408\u5e76\u8bbf\u95ee</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u7ed3\u6784\u6570\u7ec4(SoA)\u5e03\u5c40</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">restrict_2d</span><span class=\"p\">(</span><span class=\"n\">r_fine</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">r_coarse</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">r_coarse</span><span class=\"p\">:</span>\n        <span class=\"n\">r_coarse</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.25</span> <span class=\"o\">*</span> <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> \\\n                        <span class=\"mf\">0.125</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> \n                                <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">+</span> \\\n                        <span class=\"mf\">0.0625</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span>\n                                 <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">r_fine</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p><strong>\u5171\u4eab\u5185\u5b58\u5229\u7528</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">block_smooth</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">):</span>\n    <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">block_local</span><span class=\"p\">(</span><span class=\"n\">u_local</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_SIZE</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_SIZE</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"c1\"># \u52a0\u8f7d\u5230\u5171\u4eab\u5185\u5b58\uff0c\u5305\u62echalo</span>\n    <span class=\"c1\"># \u5728\u5171\u4eab\u5185\u5b58\u4e2d\u8fed\u4ee3</span>\n    <span class=\"c1\"># \u5199\u56de\u5168\u5c40\u5185\u5b58</span>\n</code></pre></div>\n\n<h3 id=\"865\">8.6.5 \u901a\u4fe1\u4f18\u5316</h3>\n<p><strong>\u975e\u963b\u585e\u901a\u4fe1</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u91cd\u53e0\u8ba1\u7b97\u548c\u901a\u4fe1</span>\n<span class=\"k\">def</span> <span class=\"nf\">parallel_smooth</span><span class=\"p\">():</span>\n    <span class=\"c1\"># \u542f\u52a8\u8fb9\u754c\u901a\u4fe1</span>\n    <span class=\"n\">start_halo_exchange</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97\u5185\u90e8\u70b9</span>\n    <span class=\"n\">smooth_interior</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u7b49\u5f85\u901a\u4fe1\u5b8c\u6210</span>\n    <span class=\"n\">wait_halo_exchange</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># \u8ba1\u7b97\u8fb9\u754c\u70b9</span>\n    <span class=\"n\">smooth_boundary</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p><strong>\u901a\u4fe1\u907f\u514d</strong>\uff1a</p>\n<ul>\n<li>\u5197\u4f59\u8ba1\u7b97\u6362\u901a\u4fe1</li>\n<li>\u4f7f\u7528\u66f4\u5bbd\u7684halo</li>\n<li>\u7c97\u7f51\u683c\u590d\u5236</li>\n</ul>\n<h3 id=\"866\">8.6.6 \u8d1f\u8f7d\u5747\u8861</h3>\n<p><strong>\u52a8\u6001\u8d1f\u8f7d\u5747\u8861</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">adaptive_distribution</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">):</span>\n    <span class=\"n\">work_estimate</span> <span class=\"o\">=</span> <span class=\"n\">estimate_work</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">work_estimate</span> <span class=\"o\">&lt;</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n        <span class=\"c1\"># \u805a\u5408\u5230\u66f4\u5c11\u7684\u5904\u7406\u5668</span>\n        <span class=\"n\">new_procs</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">nprocs</span><span class=\"p\">,</span> <span class=\"n\">work_estimate</span> <span class=\"o\">//</span> <span class=\"n\">min_work</span><span class=\"p\">)</span>\n        <span class=\"n\">redistribute</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">new_procs</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf</strong>\uff1a\u4f7f\u7528Hilbert\u6216Z-order\u66f2\u7ebf\u4fdd\u6301\u5c40\u90e8\u6027\u3002</p>\n<hr />\n<h2 id=\"87\">8.7 \u7269\u7406\u4eff\u771f\u4e2d\u7684\u5e94\u7528</h2>\n<h3 id=\"871\">8.7.1 \u4e0d\u53ef\u538b\u7f29\u6d41\u4f53\u7684\u538b\u529b\u6295\u5f71</h3>\n<p><strong>\u6cca\u677e\u65b9\u7a0b</strong>\uff1a\u5728Chorin\u6295\u5f71\u6cd5\u4e2d\uff0c\u538b\u529b\u6ee1\u8db3\uff1a\n$$\\nabla^2 p = \\frac{\\rho}{\\Delta t} \\nabla \\cdot u^*$$\n<strong>\u79bb\u6563\u5316</strong>\uff1a\u5728MAC\u7f51\u683c\u4e0a\n$$\\frac{p_{i+1,j} - 2p_{i,j} + p_{i-1,j}}{\\Delta x^2} + \\frac{p_{i,j+1} - 2p_{i,j} + p_{i,j-1}}{\\Delta y^2} = \\frac{\\rho}{\\Delta t} \\left(\\frac{u^*_{i+1/2,j} - u^*_{i-1/2,j}}{\\Delta x} + \\frac{v^*_{i,j+1/2} - v^*_{i,j-1/2}}{\\Delta y}\\right)$$\n<strong>\u591a\u91cd\u7f51\u683c\u8bbe\u7f6e</strong>\uff1a</p>\n<ul>\n<li>\u5149\u6ed1\u5668\uff1a\u7ea2\u9ed1Gauss-Seidel\uff08\u4fdd\u6301\u5bf9\u79f0\u6027\uff09</li>\n<li>\u9650\u5236/\u5ef6\u62d3\uff1a\u5168\u6743\u91cd\u9650\u5236\uff0c\u7ebf\u6027\u5ef6\u62d3</li>\n<li>\u8fb9\u754c\u6761\u4ef6\uff1aNeumann\u8fb9\u754c\uff08$\\partial p/\\partial n = 0$\uff09</li>\n</ul>\n<p><strong>\u5947\u5f02\u6027\u5904\u7406</strong>\uff1a</p>\n<ul>\n<li>\u7eafNeumann\u8fb9\u754c\u5bfc\u81f4\u5947\u5f02\u7cfb\u7edf</li>\n<li>\u89e3\u51b3\u65b9\u6848\uff1a\u56fa\u5b9a\u4e00\u70b9\u538b\u529b\u503c\u6216\u6295\u5f71\u5230\u96f6\u5747\u503c\u7a7a\u95f4</li>\n</ul>\n<h3 id=\"872\">8.7.2 \u5f39\u6027\u529b\u5b66\u95ee\u9898</h3>\n<p><strong>\u7ebf\u5f39\u6027\u65b9\u7a0b</strong>\uff1a\n$$-\\nabla \\cdot \\sigma = f$$\n$$\\sigma = 2\\mu\\epsilon + \\lambda(\\nabla \\cdot u)I$$\n$$\\epsilon = \\frac{1}{2}(\\nabla u + \\nabla u^T)$$\n<strong>\u5757\u7ed3\u6784</strong>\uff1a2D\u95ee\u9898\u6bcf\u4e2a\u8282\u70b9\u67092\u4e2a\u81ea\u7531\u5ea6$(u,v)$\n$$\\begin{bmatrix} A_{uu} &amp; A_{uv} \\\\ A_{vu} &amp; A_{vv} \\end{bmatrix} \\begin{bmatrix} u \\\\ v \\end{bmatrix} = \\begin{bmatrix} f_x \\\\ f_y \\end{bmatrix}$$\n<strong>\u591a\u91cd\u7f51\u683c\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u5757\u5149\u6ed1\u5668\u4fdd\u6301\u8026\u5408</li>\n<li>Vanka\u5149\u6ed1\u5668\uff1a\u540c\u65f6\u66f4\u65b0\u4e00\u4e2a\u5355\u5143\u7684\u6240\u6709\u81ea\u7531\u5ea6</li>\n<li>\u5404\u5411\u5f02\u6027\u95ee\u9898\u9700\u8981\u7ebf\u5149\u6ed1\u6216ILU</li>\n</ul>\n<h3 id=\"873\">8.7.3 \u70ed\u4f20\u5bfc\u4e0e\u6269\u6563</h3>\n<p><strong>\u9690\u5f0f\u65f6\u95f4\u79bb\u6563</strong>\uff1a\n$$\\frac{u^{n+1} - u^n}{\\Delta t} = \\alpha \\nabla^2 u^{n+1} + f$$\n\u6574\u7406\u5f97\uff1a\n$$(I - \\alpha \\Delta t \\nabla^2) u^{n+1} = u^n + \\Delta t f$$\n<strong>\u591a\u91cd\u7f51\u683c\u6548\u7387</strong>\uff1a</p>\n<ul>\n<li>\u5927\u65f6\u95f4\u6b65\uff08$\\Delta t$ \u5927\uff09\u4f7f\u7cfb\u7edf\u66f4\u63a5\u8fd1\u6cca\u677e\u65b9\u7a0b</li>\n<li>\u5c0f\u65f6\u95f4\u6b65\u7cfb\u7edf\u63a5\u8fd1\u6052\u7b49\u7b97\u5b50\uff0c\u7b80\u5355\u8fed\u4ee3\u5373\u53ef</li>\n<li>\u5178\u578b\u7b56\u7565\uff1aV(2,2)\u5faa\u73af\u4f5c\u4e3a\u65f6\u95f4\u6b65\u8fdb\u5668</li>\n</ul>\n<h3 id=\"874\">8.7.4 \u76f8\u573a\u65b9\u6cd5</h3>\n<p><strong>Cahn-Hilliard\u65b9\u7a0b</strong>\uff1a\n$$\\frac{\\partial \\phi}{\\partial t} = \\nabla \\cdot (M \\nabla \\mu)$$\n$$\\mu = f'(\\phi) - \\epsilon^2 \\nabla^2 \\phi$$\n<strong>\u7b97\u5b50\u5206\u88c2</strong>\uff1a</p>\n<ol>\n<li>\u6c42\u89e3\u5316\u5b66\u52bf\uff1a$(I - \\epsilon^2 \\nabla^2)\\mu = f'(\\phi)$</li>\n<li>\u66f4\u65b0\u76f8\u573a\uff1a$\\phi^{n+1} = \\phi^n + \\Delta t \\nabla \\cdot (M \\nabla \\mu)$</li>\n</ol>\n<p>\u4e24\u6b65\u90fd\u53ef\u7528\u591a\u91cd\u7f51\u683c\u52a0\u901f\u3002</p>\n<h3 id=\"875\">8.7.5 \u590d\u6742\u8fb9\u754c\u5904\u7406</h3>\n<p><strong>\u6d78\u5165\u8fb9\u754c\u6cd5</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u7b1b\u5361\u5c14\u7f51\u683c\uff0c\u8fb9\u754c\u5207\u5272\u5355\u5143</li>\n<li>\u4fee\u6b63\u79bb\u6563\u5316\u6a21\u677f\u8fd1\u8fb9\u754c\u5904</li>\n<li>\u591a\u91cd\u7f51\u683c\u9700\u8981\u7279\u6b8a\u5904\u7406\u5207\u5272\u5355\u5143</li>\n</ul>\n<p><strong>\u81ea\u9002\u5e94\u7f51\u683c</strong>\uff1a</p>\n<ul>\n<li>\u5c40\u90e8\u52a0\u5bc6\u9700\u8981\u7684\u533a\u57df</li>\n<li>\u591a\u91cd\u7f51\u683c\u5728\u975e\u5747\u5300\u7f51\u683c\u4e0a\u7684\u4fee\u6b63</li>\n<li>\u9650\u5236/\u5ef6\u62d3\u7b97\u5b50\u7684\u7279\u6b8a\u5904\u7406</li>\n</ul>\n<h3 id=\"876\">8.7.6 \u591a\u7269\u7406\u573a\u8026\u5408</h3>\n<p><strong>\u6d41\u56fa\u8026\u5408</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>while not converged:\n    # \u56fa\u4f53\u5b50\u95ee\u9898\uff08\u591a\u91cd\u7f51\u683c\uff09\n    solve_elasticity(u_solid, f_interface)\n\n    # \u6d41\u4f53\u5b50\u95ee\u9898\uff08\u591a\u91cd\u7f51\u683c\uff09  \n    solve_fluid(u_fluid, p, bc_from_solid)\n\n    # \u754c\u9762\u529b\u66f4\u65b0\n    update_interface_forces()\n</code></pre></div>\n\n<p><strong>\u5355\u7247\u5f0f\u6c42\u89e3</strong>\uff1a\u5c06\u8026\u5408\u7cfb\u7edf\u6574\u4f53\u7528\u591a\u91cd\u7f51\u683c</p>\n<ul>\n<li>\u9700\u8981\u5408\u9002\u7684\u5757\u5149\u6ed1\u5668</li>\n<li>\u7269\u7406\u91cf\u5c3a\u5ea6\u5dee\u5f02\u9700\u8981\u9884\u6761\u4ef6</li>\n</ul>\n<hr />\n<h2 id=\"88\">8.8 \u9ad8\u7ea7\u4e3b\u9898\u4e0e\u4f18\u5316</h2>\n<h3 id=\"881\">8.8.1 \u81ea\u9002\u5e94\u591a\u91cd\u7f51\u683c</h3>\n<p><strong>\u8bef\u5dee\u4f30\u8ba1</strong>\uff1a\n$$\\eta_K = h_K |r_K|_{L^2(K)}$$\n\u5176\u4e2d $K$ \u662f\u5355\u5143\uff0c$r_K$ \u662f\u5c40\u90e8\u6b8b\u5dee\u3002</p>\n<p><strong>\u81ea\u9002\u5e94\u7b56\u7565</strong>\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u8bef\u5dee\u6307\u793a\u5b50</li>\n<li>\u6807\u8bb0\u9700\u8981\u52a0\u5bc6\u7684\u533a\u57df</li>\n<li>\u5c40\u90e8\u52a0\u5bc6\u7f51\u683c</li>\n<li>\u66f4\u65b0\u591a\u91cd\u7f51\u683c\u5c42\u6b21</li>\n</ol>\n<p><strong>\u6311\u6218</strong>\uff1a</p>\n<ul>\n<li>\u975e\u5d4c\u5957\u7f51\u683c\u7684\u4f20\u8f93\u7b97\u5b50</li>\n<li>\u60ac\u6302\u8282\u70b9\u5904\u7406</li>\n<li>\u8d1f\u8f7d\u5747\u8861</li>\n</ul>\n<h3 id=\"882\">8.8.2 \u65e0\u77e9\u9635\u591a\u91cd\u7f51\u683c</h3>\n<p><strong>\u77e9\u9635\u5411\u91cf\u4e58\u79ef</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">apply_stencil</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">Au</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">u</span><span class=\"p\">:</span>\n        <span class=\"n\">Au</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">stencil_center</span> <span class=\"o\">*</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> \\\n                  <span class=\"n\">stencil_x</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">])</span> <span class=\"o\">+</span> \\\n                  <span class=\"n\">stencil_y</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u52bf</strong>\uff1a</p>\n<ul>\n<li>\u51cf\u5c11\u5185\u5b58\u9700\u6c42</li>\n<li>\u63d0\u9ad8\u7f13\u5b58\u6548\u7387</li>\n<li>\u9002\u5408GPU\u5b9e\u73b0</li>\n</ul>\n<p><strong>\u51e0\u4f55\u4fe1\u606f</strong>\uff1a\u9700\u8981\u4fdd\u5b58</p>\n<ul>\n<li>\u7f51\u683c\u5c42\u6b21\u7ed3\u6784</li>\n<li>\u7cfb\u6570\u573a\uff08\u5982\u679c\u662f\u53d8\u7cfb\u6570\uff09</li>\n<li>\u8fb9\u754c\u6807\u8bb0</li>\n</ul>\n<h3 id=\"883\">8.8.3 \u591a\u91cd\u7f51\u683c\u9884\u6761\u4ef6</h3>\n<p><strong>\u4e0eKrylov\u65b9\u6cd5\u7ed3\u5408</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">pcg_with_multigrid</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">):</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">b</span> <span class=\"o\">-</span> <span class=\"n\">A</span> <span class=\"o\">@</span> <span class=\"n\">x0</span>\n    <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">multigrid_v_cycle</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>  <span class=\"c1\"># \u9884\u6761\u4ef6</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">z</span>\n\n    <span class=\"k\">while</span> <span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">tol</span><span class=\"p\">:</span>\n        <span class=\"n\">Ap</span> <span class=\"o\">=</span> <span class=\"n\">A</span> <span class=\"o\">@</span> <span class=\"n\">p</span>\n        <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">Ap</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">p</span>\n        <span class=\"n\">r_new</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">-</span> <span class=\"n\">alpha</span> <span class=\"o\">*</span> <span class=\"n\">Ap</span>\n        <span class=\"n\">z_new</span> <span class=\"o\">=</span> <span class=\"n\">multigrid_v_cycle</span><span class=\"p\">(</span><span class=\"n\">r_new</span><span class=\"p\">)</span>\n        <span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">r_new</span><span class=\"p\">,</span> <span class=\"n\">z_new</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">z_new</span> <span class=\"o\">+</span> <span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"n\">p</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">r_new</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">z_new</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u7ed3\u5408\u591a\u91cd\u7f51\u683c\u7684\u6700\u4f18\u590d\u6742\u5ea6</li>\n<li>Krylov\u65b9\u6cd5\u7684\u9c81\u68d2\u6027</li>\n<li>\u53ef\u5904\u7406\u975e\u5bf9\u79f0\u7cfb\u7edf\uff08BiCGSTAB+AMG\uff09</li>\n</ul>\n<h3 id=\"884-fas\">8.8.4 \u975e\u7ebf\u6027\u591a\u91cd\u7f51\u683c\uff08FAS\uff09</h3>\n<p><strong>Full Approximation Scheme</strong>\uff1a\n\u5904\u7406\u975e\u7ebf\u6027\u95ee\u9898 $N(u) = f$</p>\n<div class=\"codehilite\"><pre><span></span><code>FAS(level, u, f):\n  if coarsest level:\n    solve N(u) = f exactly\n  else:\n    # \u524d\u5149\u6ed1\n    smooth(N, u, f)\n\n    # \u9650\u5236\n    u_coarse = restrict(u)\n    r = f - N(u)\n    f_coarse = restrict(r) + N_coarse(u_coarse)\n\n    # \u7c97\u7f51\u683c\u6c42\u89e3\n    FAS(level+1, u_coarse, f_coarse)\n\n    # \u5ef6\u62d3\u4fee\u6b63\n    u = u + prolongate(u_coarse - restrict(u))\n\n    # \u540e\u5149\u6ed1\n    smooth(N, u, f)\n</code></pre></div>\n\n<h3 id=\"885\">8.8.5 \u65f6\u7a7a\u591a\u91cd\u7f51\u683c</h3>\n<p><strong>\u5e76\u884c\u65f6\u95f4\u79ef\u5206</strong>\uff1a</p>\n<ul>\n<li>\u65f6\u95f4\u65b9\u5411\u4e5f\u8fdb\u884c\u591a\u91cd\u7f51\u683c</li>\n<li>Parareal\u7b97\u6cd5\u7684\u63a8\u5e7f</li>\n<li>\u9002\u5408\u957f\u65f6\u95f4\u79ef\u5206</li>\n</ul>\n<p><strong>\u5b9e\u73b0\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>\u65f6\u95f4\u7c97\u5316\u7b56\u7565</li>\n<li>\u65f6\u7a7a\u8026\u5408\u7684\u5149\u6ed1\u5668</li>\n<li>\u5e76\u884c\u6548\u7387\u5206\u6790</li>\n</ul>\n<h3 id=\"886\">8.8.6 \u6027\u80fd\u4f18\u5316\u6280\u5de7</h3>\n<p><strong>\u7f13\u5b58\u4f18\u5316</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u5faa\u73af\u5206\u5757</span>\n<span class=\"nd\">@ti</span><span class=\"o\">.</span><span class=\"n\">kernel</span>\n<span class=\"k\">def</span> <span class=\"nf\">blocked_smooth</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">bi</span><span class=\"p\">,</span> <span class=\"n\">bj</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"o\">//</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"o\">//</span><span class=\"n\">B</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">ti</span><span class=\"o\">.</span><span class=\"n\">ndrange</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">):</span>\n            <span class=\"n\">ii</span><span class=\"p\">,</span> <span class=\"n\">jj</span> <span class=\"o\">=</span> <span class=\"n\">bi</span><span class=\"o\">*</span><span class=\"n\">B</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">bj</span><span class=\"o\">*</span><span class=\"n\">B</span> <span class=\"o\">+</span> <span class=\"n\">j</span>\n            <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;</span> <span class=\"n\">ii</span> <span class=\"o\">&lt;</span> <span class=\"n\">N</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;</span> <span class=\"n\">jj</span> <span class=\"o\">&lt;</span> <span class=\"n\">N</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">u</span><span class=\"p\">[</span><span class=\"n\">ii</span><span class=\"p\">,</span><span class=\"n\">jj</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">compute_update</span><span class=\"p\">(</span><span class=\"n\">ii</span><span class=\"p\">,</span> <span class=\"n\">jj</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u5411\u91cf\u5316</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528SIMD\u6307\u4ee4</li>\n<li>\u6570\u636e\u5bf9\u9f50</li>\n<li>\u907f\u514d\u5206\u652f</li>\n</ul>\n<p><strong>GPU\u7279\u5b9a\u4f18\u5316</strong>\uff1a</p>\n<ul>\n<li>Warp\u7ea7\u522b\u539f\u8bed</li>\n<li>Texture\u5185\u5b58\u7528\u4e8e\u63d2\u503c</li>\n<li>\u5e38\u91cf\u5185\u5b58\u5b58\u50a8\u6a21\u677f\u7cfb\u6570</li>\n</ul>\n<hr />\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u591a\u91cd\u7f51\u683c\u65b9\u6cd5\u662f\u6c42\u89e3\u5927\u89c4\u6a21\u7ebf\u6027\u7cfb\u7edf\u7684\u6700\u4f18\u7b97\u6cd5\u4e4b\u4e00\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\u5229\u7528\u4e0d\u540c\u5c3a\u5ea6\u7f51\u683c\u7684\u4e92\u8865\u6027\uff1a</p>\n<ul>\n<li>\u7ec6\u7f51\u683c\u4e0a\u7684\u5149\u6ed1\u8fed\u4ee3\u5feb\u901f\u6d88\u9664\u9ad8\u9891\u8bef\u5dee</li>\n<li>\u7c97\u7f51\u683c\u5c06\u4f4e\u9891\u8bef\u5dee\u8f6c\u6362\u4e3a\u76f8\u5bf9\u9ad8\u9891\u5e76\u9ad8\u6548\u6d88\u9664</li>\n<li>\u9012\u5f52\u5e94\u7528\u5f62\u6210O(N)\u590d\u6742\u5ea6\u7684\u6c42\u89e3\u5668</li>\n</ul>\n<p><strong>\u5173\u952e\u6982\u5ff5\u56de\u987e</strong>\uff1a</p>\n<ol>\n<li><strong>\u8bef\u5dee\u7684\u9891\u7387\u5206\u6790</strong>\uff1a\u7406\u89e3\u5149\u6ed1\u6027\u8d28\u662f\u591a\u91cd\u7f51\u683c\u6210\u529f\u7684\u57fa\u7840</li>\n<li><strong>\u7f51\u683c\u4f20\u8f93\u7b97\u5b50</strong>\uff1a\u9650\u5236\u548c\u5ef6\u62d3\u9700\u8981\u4fdd\u6301\u95ee\u9898\u7684\u7269\u7406\u6027\u8d28</li>\n<li><strong>\u5faa\u73af\u7b56\u7565</strong>\uff1aV\u3001W\u3001FMG\u5404\u6709\u9002\u7528\u573a\u666f</li>\n<li><strong>\u5e76\u884c\u5316</strong>\uff1a\u7c97\u7f51\u683c\u662f\u5e76\u884c\u74f6\u9888\uff0c\u9700\u8981\u7279\u6b8a\u5904\u7406</li>\n<li><strong>\u4ee3\u6570\u591a\u91cd\u7f51\u683c</strong>\uff1a\u53ea\u9700\u77e9\u9635\u4fe1\u606f\uff0c\u9002\u7528\u8303\u56f4\u66f4\u5e7f</li>\n</ol>\n<p><strong>\u7b97\u6cd5\u590d\u6742\u5ea6\u603b\u7ed3</strong>\uff1a</p>\n<ul>\n<li>\u8ba1\u7b97\u590d\u6742\u5ea6\uff1aO(N)\uff082D\u548c3D\u7684V\u5faa\u73af\uff09</li>\n<li>\u5b58\u50a8\u590d\u6742\u5ea6\uff1aO(N)</li>\n<li>\u5e76\u884c\u53ef\u6269\u5c55\u6027\uff1a\u4f18\u79c0\uff08\u9700\u8981\u5904\u7406\u7c97\u7f51\u683c\uff09</li>\n</ul>\n<hr />\n<h2 id=\"_3\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_4\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e608.1</strong>\uff1a\u4e00\u7ef4\u6cca\u677e\u65b9\u7a0b\u7684\u53cc\u7f51\u683c\u5206\u6790\n\u8003\u8651\u4e00\u7ef4\u6cca\u677e\u65b9\u7a0b $-u_{xx} = f$ \u5728 $[0,1]$ \u4e0a\uff0c\u4f7f\u7528\u4e2d\u5fc3\u5dee\u5206\u79bb\u6563\u3002\u8bbe\u7ec6\u7f51\u683c\u6709 $n=7$ \u4e2a\u5185\u90e8\u8282\u70b9\u3002</p>\n<ol>\n<li>\u5199\u51fa\u7ec6\u7f51\u683c\u4e0a\u7684\u7cfb\u6570\u77e9\u9635 $A^h$</li>\n<li>\u4f7f\u7528\u5168\u6743\u91cd\u9650\u5236\u548c\u7ebf\u6027\u63d2\u503c\uff0c\u6784\u9020\u7c97\u7f51\u683c\uff08$n=3$\uff09\u4e0a\u7684\u7cfb\u6570\u77e9\u9635 $A^{2h}$</li>\n<li>\u8ba1\u7b97\u5e76\u6bd4\u8f83\u4e24\u4e2a\u77e9\u9635\u7684\u7279\u5f81\u503c</li>\n<li>\u9a8c\u8bc1\u9ad8\u9891\u6a21\u5f0f\u5728\u7ec6\u7f51\u683c\u4e0a\u7684\u8870\u51cf\u7387</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u7ec6\u7f51\u683c\u77e9\u9635\u662f\u4e09\u5bf9\u89d2\u77e9\u9635\uff0c\u5bf9\u89d2\u5143\u7d20\u4e3a $2/h^2$\uff0c\u975e\u5bf9\u89d2\u5143\u7d20\u4e3a $-1/h^2$</li>\n<li>\u4f7f\u7528Galerkin\u6761\u4ef6 $A^{2h} = I_{2h}^h A^h I_h^{2h}$ \u6784\u9020\u7c97\u7f51\u683c\u77e9\u9635</li>\n<li>\u4e09\u5bf9\u89d2\u77e9\u9635\u7684\u7279\u5f81\u503c\u6709\u89e3\u6790\u8868\u8fbe\u5f0f</li>\n</ul>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<ol>\n<li>\n<p>\u7ec6\u7f51\u683c\u77e9\u9635\uff08$h=1/8$\uff09\uff1a\n$$A^h = \\frac{64}{1} \\begin{bmatrix}\n2 &amp; -1 &amp; &amp; &amp; \\\\\n-1 &amp; 2 &amp; -1 &amp; &amp; \\\\\n&amp; -1 &amp; 2 &amp; -1 &amp; \\\\\n&amp; &amp; \\ddots &amp; \\ddots &amp; \\ddots \\\\\n&amp; &amp; &amp; -1 &amp; 2\n\\end{bmatrix}_{7 \\times 7}$$</p>\n</li>\n<li>\n<p>\u9650\u5236\u7b97\u5b50\u548c\u5ef6\u62d3\u7b97\u5b50\u6784\u9020\u7c97\u7f51\u683c\u77e9\u9635\uff0c\u5f97\u5230\uff1a\n$$A^{2h} = \\frac{16}{1} \\begin{bmatrix}\n2 &amp; -1 &amp; 0 \\\\\n-1 &amp; 2 &amp; -1 \\\\\n0 &amp; -1 &amp; 2\n\\end{bmatrix}$$</p>\n</li>\n<li>\n<p>\u7279\u5f81\u503c\uff1a\n- \u7ec6\u7f51\u683c\uff1a$\\lambda_k^h = 4\\sin^2(k\\pi/16)/h^2$\uff0c$k=1,...,7$\n- \u7c97\u7f51\u683c\uff1a$\\lambda_k^{2h} = 4\\sin^2(k\\pi/8)/(2h)^2$\uff0c$k=1,2,3$</p>\n</li>\n<li>\n<p>Jacobi\u8fed\u4ee3\u5bf9\u6a21\u5f0f$k=4,5,6,7$\uff08\u9ad8\u9891\uff09\u7684\u8870\u51cf\u56e0\u5b50\u5c0f\u4e8e0.5</p>\n</li>\n</ol>\n</details>\n<p><strong>\u7ec3\u4e608.2</strong>\uff1a\u7ea2\u9ed1Gauss-Seidel\u7684\u5e76\u884c\u5b9e\u73b0\n\u5b9e\u73b0\u4e8c\u7ef4\u6cca\u677e\u65b9\u7a0b\u7684\u7ea2\u9ed1Gauss-Seidel\u5149\u6ed1\u5668\uff0c\u8981\u6c42\uff1a</p>\n<ol>\n<li>\u6b63\u786e\u5904\u7406\u8fb9\u754c\u6761\u4ef6</li>\n<li>\u5b9e\u73b0\u5e76\u884c\u66f4\u65b0</li>\n<li>\u6d4b\u8bd5\u4e0d\u540c\u95ee\u9898\u89c4\u6a21\u7684\u52a0\u901f\u6bd4</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u68cb\u76d8\u7740\u8272\uff1a$(i+j)\\%2$ \u51b3\u5b9a\u7ea2\u9ed1</li>\n<li>\u7ea2\u70b9\u548c\u9ed1\u70b9\u53ef\u4ee5\u5206\u522b\u5e76\u884c\u66f4\u65b0</li>\n<li>\u6ce8\u610f\u8fb9\u754c\u70b9\u7684\u7279\u6b8a\u5904\u7406</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e608.3</strong>\uff1aV\u5faa\u73af\u6536\u655b\u6027\u5206\u6790\n\u5bf9\u4e8e\u4e8c\u7ef4\u6cca\u677e\u65b9\u7a0b\uff0c\u5b9e\u73b0V\u5faa\u73af\u5e76\uff1a</p>\n<ol>\n<li>\u6d4b\u91cf\u4e0d\u540c\u5149\u6ed1\u6b21\u6570\uff08$\\nu_1, \\nu_2$\uff09\u7684\u6536\u655b\u56e0\u5b50</li>\n<li>\u7ed8\u5236\u6b8b\u5dee\u4e0b\u964d\u66f2\u7ebf</li>\n<li>\u6bd4\u8f83\u4e0e\u7406\u8bba\u9884\u6d4b\u7684\u5dee\u5f02</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u6536\u655b\u56e0\u5b50 = $|r^{(k+1)}| / |r^{(k)}|$</li>\n<li>\u4f7f\u7528\u968f\u673a\u521d\u503c\u907f\u514d\u7279\u6b8a\u60c5\u51b5</li>\n<li>\u7406\u8bba\u9884\u6d4b\uff1a$\\rho \\approx 0.1$ \u5bf9\u4e8e $\\nu_1=\\nu_2=1$</li>\n</ul>\n</details>\n<h3 id=\"_5\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e608.4</strong>\uff1a\u5404\u5411\u5f02\u6027\u95ee\u9898\u7684\u7ebf\u5149\u6ed1\u5668\n\u8003\u8651\u5404\u5411\u5f02\u6027\u6cca\u677e\u65b9\u7a0b\uff1a\n$$-\\epsilon u_{xx} - u_{yy} = f$$\n\u5176\u4e2d $\\epsilon = 0.001$\u3002</p>\n<ol>\n<li>\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6807\u51c6\u70b9\u5149\u6ed1\u5668\u6548\u679c\u5dee</li>\n<li>\u5b9e\u73b0x-line\u548cy-line\u5149\u6ed1\u5668</li>\n<li>\u8bbe\u8ba1\u4ea4\u66ff\u65b9\u5411\u7b56\u7565</li>\n<li>\u6bd4\u8f83\u4e0d\u540c\u5149\u6ed1\u5668\u7684\u6548\u7387</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u5404\u5411\u5f02\u6027\u5bfc\u81f4x\u65b9\u5411\u548cy\u65b9\u5411\u7684\u8026\u5408\u5f3a\u5ea6\u4e0d\u540c</li>\n<li>y-line\u5149\u6ed1\u5668\u5bf9\u8fd9\u4e2a\u95ee\u9898\u66f4\u6709\u6548</li>\n<li>\u53ef\u4ee5\u7ed3\u5408\uff1a\u5148y-line\u518dx-line</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e608.5</strong>\uff1aAMG\u7684\u5f3a\u8fde\u63a5\u5206\u6790\n\u7ed9\u5b9a\u7a00\u758f\u77e9\u9635\uff0c\u5b9e\u73b0AMG\u7684C/F\u5206\u88c2\u7b97\u6cd5\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u5f3a\u8fde\u63a5\u77e9\u9635\uff08\u9608\u503c$\\theta=0.25$\uff09</li>\n<li>\u5b9e\u73b0\u7ecf\u5178C/F\u5206\u88c2</li>\n<li>\u6784\u9020\u63d2\u503c\u7b97\u5b50</li>\n<li>\u9a8c\u8bc1\u7c97\u7f51\u683c\u7684\u8d28\u91cf</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u5f3a\u8fde\u63a5\uff1a$|a_{ij}| \\geq \\theta \\max_{k \\neq i}|a_{ik}|$</li>\n<li>C\u70b9\u9009\u62e9\uff1a\u6700\u5927\u5316\u5f3a\u5f71\u54cd</li>\n<li>\u63d2\u503c\u6743\u91cd\u9700\u8981\u5f52\u4e00\u5316</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e608.6</strong>\uff1a\u591a\u91cd\u7f51\u683c\u7528\u4e8e\u7279\u5f81\u503c\u95ee\u9898\n\u4f7f\u7528\u591a\u91cd\u7f51\u683c\u52a0\u901f\u6c42\u89e3\u6700\u5c0f\u7279\u5f81\u503c\uff1a\n$$Au = \\lambda u$$</p>\n<ol>\n<li>\u63a8\u5bfcRayleigh\u5546\u8fed\u4ee3\u7684\u591a\u91cd\u7f51\u683c\u52a0\u901f</li>\n<li>\u5b9e\u73b0\u7b97\u6cd5</li>\n<li>\u4e0e\u5e42\u6cd5\u6bd4\u8f83\u6536\u655b\u901f\u5ea6</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>Rayleigh\u5546\uff1a$\\lambda = u^TAu / u^Tu$</li>\n<li>\u6bcf\u6b65\u9700\u8981\u6c42\u89e3 $(A-\\sigma I)v = u$</li>\n<li>\u591a\u91cd\u7f51\u683c\u4f5c\u4e3a\u5185\u5c42\u6c42\u89e3\u5668</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e608.7</strong>\uff1a\u975e\u7ebf\u6027\u591a\u91cd\u7f51\u683c\uff08FAS\uff09\n\u5b9e\u73b0FAS\u6c42\u89e3\u975e\u7ebf\u6027\u65b9\u7a0b\uff1a\n$$-\\nabla^2 u + u^3 = f$$</p>\n<ol>\n<li>\u63a8\u5bfcFAS\u7684\u9650\u5236\u548c\u5ef6\u62d3</li>\n<li>\u5b9e\u73b0\u975e\u7ebf\u6027\u5149\u6ed1\u5668</li>\n<li>\u4e0eNewton-\u591a\u91cd\u7f51\u683c\u6bd4\u8f83</li>\n<li>\u5206\u6790\u8ba1\u7b97\u6210\u672c</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u975e\u7ebf\u6027\u6b8b\u5dee\uff1a$r = f - (-\\nabla^2 u + u^3)$</li>\n<li>\u7c97\u7f51\u683c\u65b9\u7a0b\u5305\u542b\u7ec6\u7f51\u683c\u89e3\u7684\u4fe1\u606f</li>\n<li>\u5149\u6ed1\u5668\u53ef\u7528\u963b\u5c3cNewton</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e608.8</strong>\uff1a\u65f6\u7a7a\u591a\u91cd\u7f51\u683c\n\u5bf9\u70ed\u65b9\u7a0b\u5b9e\u73b0\u65f6\u7a7a\u591a\u91cd\u7f51\u683c\uff1a\n$$u_t - \\nabla^2 u = f$$</p>\n<ol>\n<li>\u8bbe\u8ba1\u65f6\u7a7a\u7f51\u683c\u7684\u7c97\u5316\u7b56\u7565</li>\n<li>\u63a8\u5bfc\u65f6\u7a7a\u8026\u5408\u7684\u5149\u6ed1\u5668</li>\n<li>\u5206\u6790\u5e76\u884c\u6548\u7387</li>\n<li>\u4e0e\u65f6\u95f4\u6b65\u8fdb\u65b9\u6cd5\u6bd4\u8f83</li>\n</ol>\n<details>\n<summary>\u63d0\u793a</summary>\n<ul>\n<li>\u65f6\u95f4\u4e5f\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u7ef4\u5ea6</li>\n<li>\u7c97\u5316\u53ef\u4ee5\u5728\u65f6\u95f4\u3001\u7a7a\u95f4\u6216\u4e24\u8005</li>\n<li>\u6ce8\u610f\u56e0\u679c\u6027\u7ea6\u675f</li>\n</ul>\n</details>\n<hr />\n<h2 id=\"_6\">\u5e38\u89c1\u9677\u9631\u4e0e\u8c03\u8bd5\u6280\u5de7</h2>\n<h3 id=\"1\">\u9677\u96311\uff1a\u4e0d\u5f53\u7684\u8fb9\u754c\u6761\u4ef6\u5904\u7406</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u8fb9\u754c\u6761\u4ef6\u5728\u4e0d\u540c\u7f51\u683c\u5c42\u4e0d\u4e00\u81f4\n<strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>Dirichlet\u8fb9\u754c\uff1a\u7ec6\u7f51\u683c\u503c\u76f4\u63a5\u590d\u5236\u5230\u7c97\u7f51\u683c</li>\n<li>Neumann\u8fb9\u754c\uff1a\u4f7f\u7528\u4fee\u6b63\u7684\u9650\u5236\u7b97\u5b50</li>\n<li>\u6df7\u5408\u8fb9\u754c\uff1a\u5206\u522b\u5904\u7406\u4e0d\u540c\u7c7b\u578b</li>\n</ul>\n<h3 id=\"2\">\u9677\u96312\uff1a\u9519\u8bef\u7684\u6b8b\u5dee\u8ba1\u7b97</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u5fd8\u8bb0\u66f4\u65b0\u6b8b\u5dee\u6216\u4f7f\u7528\u65e7\u503c\n<strong>\u8c03\u8bd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># \u6b63\u786e\u7684\u6b8b\u5dee\u8ba1\u7b97</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">f</span> <span class=\"o\">-</span> <span class=\"n\">A</span> <span class=\"o\">@</span> <span class=\"n\">u</span>  <span class=\"c1\"># \u4e0d\u8981\u91cd\u7528\u65e7\u7684r\uff01</span>\n</code></pre></div>\n\n<h3 id=\"3\">\u9677\u96313\uff1a\u5149\u6ed1\u4e0d\u8db3</h3>\n<p><strong>\u75c7\u72b6</strong>\uff1aV\u5faa\u73af\u4e0d\u6536\u655b\u6216\u6536\u655b\u6162\n<strong>\u8bca\u65ad</strong>\uff1a</p>\n<ul>\n<li>\u68c0\u67e5\u5149\u6ed1\u540e\u7684\u6b8b\u5dee\u9891\u8c31</li>\n<li>\u589e\u52a0\u5149\u6ed1\u6b21\u6570</li>\n<li>\u5c1d\u8bd5\u4e0d\u540c\u5149\u6ed1\u5668</li>\n</ul>\n<h3 id=\"4\">\u9677\u96314\uff1a\u7c97\u7f51\u683c\u8fc7\u5c0f</h3>\n<p><strong>\u95ee\u9898</strong>\uff1a\u76f4\u63a5\u6c42\u89e3\u5668\u5728\"\u7c97\"\u7f51\u683c\u4e0a\u4ecd\u7136\u6602\u8d35\n<strong>\u89e3\u51b3</strong>\uff1a</p>\n<ul>\n<li>\u8bbe\u7f6e\u5408\u7406\u7684\u7c97\u7f51\u683c\u5927\u5c0f\uff08\u5982 $4 \\times 4$\uff09</li>\n<li>\u4f7f\u7528\u8fed\u4ee3\u6cd5\u66ff\u4ee3\u76f4\u63a5\u6cd5</li>\n<li>\u8003\u8651\u805a\u5408\u5230\u5355\u5904\u7406\u5668</li>\n</ul>\n<h3 id=\"5\">\u9677\u96315\uff1a\u5e76\u884c\u6548\u7387\u4e0b\u964d</h3>\n<p><strong>\u75c7\u72b6</strong>\uff1a\u589e\u52a0\u5904\u7406\u5668\u6570\u53cd\u800c\u53d8\u6162\n<strong>\u5206\u6790</strong>\uff1a</p>\n<ul>\n<li>Profile\u901a\u4fe1\u65f6\u95f4</li>\n<li>\u68c0\u67e5\u8d1f\u8f7d\u5747\u8861</li>\n<li>\u4f18\u5316\u7c97\u7f51\u683c\u7b56\u7565</li>\n</ul>\n<hr />\n<h2 id=\"_7\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_8\">\u7b97\u6cd5\u8bbe\u8ba1</h3>\n<ul>\n<li>[ ] \u6839\u636e\u95ee\u9898\u7279\u6027\u9009\u62e9\u51e0\u4f55\u6216\u4ee3\u6570\u591a\u91cd\u7f51\u683c</li>\n<li>[ ] \u5149\u6ed1\u5668\u4e0e\u95ee\u9898\u5339\u914d\uff08\u5404\u5411\u5f02\u6027\u2192\u7ebf\u5149\u6ed1\uff09</li>\n<li>[ ] \u5408\u7406\u7684\u7f51\u683c\u5c42\u6570\uff08\u901a\u5e385-10\u5c42\uff09</li>\n<li>[ ] \u9002\u5f53\u7684\u7c97\u7f51\u683c\u89c4\u6a21\uff08\u907f\u514d\u8fc7\u5c0f\u6216\u8fc7\u5927\uff09</li>\n</ul>\n<h3 id=\"_9\">\u5b9e\u73b0\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u6570\u636e\u7ed3\u6784\u652f\u6301\u9ad8\u6548\u7684\u7f51\u683c\u4f20\u8f93</li>\n<li>[ ] \u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\u914d</li>\n<li>[ ] \u5229\u7528\u95ee\u9898\u7684\u5bf9\u79f0\u6027\u548c\u7a00\u758f\u6027</li>\n<li>[ ] \u9884\u8ba1\u7b97\u4e0d\u53d8\u7684\u7cfb\u6570</li>\n</ul>\n<h3 id=\"_10\">\u5e76\u884c\u5316</h3>\n<ul>\n<li>[ ] \u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u5206\u5e03\u7b56\u7565</li>\n<li>[ ] \u5904\u7406\u7c97\u7f51\u683c\u7684\u5e76\u884c\u74f6\u9888</li>\n<li>[ ] \u6700\u5c0f\u5316\u901a\u4fe1\uff08\u5bbdhalo\u3001\u805a\u5408\u7b49\uff09</li>\n<li>[ ] \u8d1f\u8f7d\u5747\u8861\uff08\u7279\u522b\u662f\u81ea\u9002\u5e94\u7f51\u683c\uff09</li>\n</ul>\n<h3 id=\"_11\">\u9c81\u68d2\u6027</h3>\n<ul>\n<li>[ ] \u5904\u7406\u5947\u5f02\u548c\u8fd1\u5947\u5f02\u7cfb\u7edf</li>\n<li>[ ] \u8fb9\u754c\u6761\u4ef6\u7684\u4e00\u81f4\u5904\u7406</li>\n<li>[ ] \u6570\u503c\u7a33\u5b9a\u6027\uff08\u907f\u514d\u9664\u96f6\u7b49\uff09</li>\n<li>[ ] \u6536\u655b\u6027\u76d1\u6d4b\u548c\u81ea\u9002\u5e94\u7b56\u7565</li>\n</ul>\n<h3 id=\"_12\">\u8c03\u8bd5\u9a8c\u8bc1</h3>\n<ul>\n<li>[ ] \u5355\u5143\u6d4b\u8bd5\u5404\u7ec4\u4ef6\uff08\u5149\u6ed1\u5668\u3001\u4f20\u8f93\u7b49\uff09</li>\n<li>[ ] \u9a8c\u8bc1Galerkin\u6761\u4ef6</li>\n<li>[ ] \u68c0\u67e5\u7f51\u683c\u95f4\u7684\u5b88\u6052\u6027\u8d28</li>\n<li>[ ] \u4e0e\u5df2\u77e5\u89e3\u6216\u5176\u4ed6\u65b9\u6cd5\u5bf9\u6bd4</li>\n</ul>"
  },
  "../chapter7.md": {
    "hash": "857a38cdd1d895e242993f86924c3987",
    "content": "<h1 id=\"-1\">\u7b2c\u4e03\u7ae0\uff1a\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09</h1>\n<p>\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u6df1\u5165\u63a2\u8ba8\u4e86\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u548c\u6b27\u62c9\u89c6\u89d2\u7684\u7269\u7406\u4eff\u771f\u65b9\u6cd5\u3002\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u64c5\u957f\u8ffd\u8e2a\u6750\u6599\u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c\u4fdd\u6301\u6750\u6599\u5c5e\u6027\uff0c\u4f46\u5728\u5904\u7406\u5927\u53d8\u5f62\u65f6\u5bb9\u6613\u4ea7\u751f\u7f51\u683c\u626d\u66f2\uff1b\u6b27\u62c9\u65b9\u6cd5\u5728\u56fa\u5b9a\u7f51\u683c\u4e0a\u6c42\u89e3\uff0c\u4fbf\u4e8e\u5904\u7406\u8fb9\u754c\u6761\u4ef6\u548c\u4e0d\u53ef\u538b\u7f29\u6027\u7ea6\u675f\uff0c\u4f46\u5bf9\u6d41\u9879\u5bb9\u6613\u5f15\u5165\u6570\u503c\u8017\u6563\u3002\u672c\u7ae0\u5c06\u4ecb\u7ecd\u7ed3\u5408\u4e24\u79cd\u89c6\u89d2\u4f18\u52bf\u7684\u6df7\u5408\u65b9\u6cd5\uff0c\u91cd\u70b9\u8bb2\u89e3\u7c92\u5b50\u5143\u80de\u6cd5(PIC)\u3001\u6d41\u4f53\u9690\u7c92\u5b50(FLIP)\u3001\u4eff\u5c04\u7c92\u5b50\u5143\u80de\u6cd5(APIC)\u7b49\u7ecf\u5178\u7b97\u6cd5\u3002</p>\n<h2 id=\"71\">7.1 \u6df7\u5408\u65b9\u6cd5\u6982\u8ff0</h2>\n<p>\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u7c92\u5b50\u643a\u5e26\u548c\u4f20\u8f93\u6750\u6599\u4fe1\u606f\uff0c\u4f7f\u7528\u6b27\u62c9\u7f51\u683c\u8fdb\u884c\u529b\u7684\u8ba1\u7b97\u548c\u4e0d\u53ef\u538b\u7f29\u6027\u6295\u5f71\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5145\u5206\u5229\u7528\u4e86\u4e24\u79cd\u89c6\u89d2\u7684\u4f18\u52bf\uff0c\u907f\u514d\u4e86\u5404\u81ea\u7684\u7f3a\u9677\u3002</p>\n<h3 id=\"711\">7.1.1 \u62c9\u683c\u6717\u65e5\u4e0e\u6b27\u62c9\u7684\u4f18\u7f3a\u70b9</h3>\n<p><strong>\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u7684\u4f18\u52bf\uff1a</strong></p>\n<ul>\n<li>\u81ea\u7136\u5904\u7406\u5bf9\u6d41\uff1a\u7c92\u5b50\u968f\u6d41\u4f53\u8fd0\u52a8\uff0c\u65e0\u9700\u663e\u5f0f\u6c42\u89e3\u5bf9\u6d41\u9879</li>\n<li>\u4fdd\u6301\u6750\u6599\u5c5e\u6027\uff1a\u6bcf\u4e2a\u7c92\u5b50\u643a\u5e26\u5bc6\u5ea6\u3001\u6e29\u5ea6\u7b49\u5c5e\u6027\uff0c\u65e0\u6570\u503c\u8017\u6563</li>\n<li>\u6613\u4e8e\u5904\u7406\u81ea\u7531\u8868\u9762\uff1a\u7c92\u5b50\u7684\u5b58\u5728\u5373\u5b9a\u4e49\u4e86\u6d41\u4f53\u533a\u57df</li>\n<li>\u5386\u53f2\u4f9d\u8d56\u6027\uff1a\u53ef\u4ee5\u8ffd\u8e2a\u6750\u6599\u7684\u5e94\u53d8\u5386\u53f2\uff08\u5982\u5851\u6027\u53d8\u5f62\uff09</li>\n</ul>\n<p><strong>\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u7684\u52a3\u52bf\uff1a</strong></p>\n<ul>\n<li>\u5927\u53d8\u5f62\u95ee\u9898\uff1a\u7f51\u683c\u53ef\u80fd\u4e25\u91cd\u626d\u66f2\uff0c\u9700\u8981\u91cd\u65b0\u7f51\u683c\u5316</li>\n<li>\u4e0d\u53ef\u538b\u7f29\u6027\u6295\u5f71\uff1a\u5728\u7c92\u5b50\u4e0a\u76f4\u63a5\u6295\u5f71\u56f0\u96be\uff0c\u9700\u8981\u6784\u5efa\u8fde\u63a5\u5173\u7cfb</li>\n<li>\u90bb\u5c45\u641c\u7d22\u5f00\u9500\uff1aSPH\u7b49\u65b9\u6cd5\u9700\u8981\u9891\u7e41\u7684\u90bb\u5c45\u641c\u7d22</li>\n</ul>\n<p><strong>\u6b27\u62c9\u89c6\u89d2\u7684\u4f18\u52bf\uff1a</strong></p>\n<ul>\n<li>\u56fa\u5b9a\u7f51\u683c\uff1a\u65e0\u9700\u5904\u7406\u7f51\u683c\u626d\u66f2\uff0c\u6570\u503c\u683c\u5f0f\u6210\u719f</li>\n<li>\u9ad8\u6548\u6295\u5f71\uff1a\u5728\u89c4\u5219\u7f51\u683c\u4e0a\u6c42\u89e3\u6cca\u677e\u65b9\u7a0b\u6548\u7387\u9ad8</li>\n<li>\u8fb9\u754c\u5904\u7406\u7b80\u5355\uff1a\u56fa\u5b9a\u7f51\u683c\u4fbf\u4e8e\u65bd\u52a0\u5404\u79cd\u8fb9\u754c\u6761\u4ef6</li>\n</ul>\n<p><strong>\u6b27\u62c9\u89c6\u89d2\u7684\u52a3\u52bf\uff1a</strong></p>\n<ul>\n<li>\u6570\u503c\u8017\u6563\uff1a\u5bf9\u6d41\u9879\u79bb\u6563\u5316\u5f15\u5165\u4eba\u5de5\u7c98\u6027</li>\n<li>\u754c\u9762\u8ffd\u8e2a\u56f0\u96be\uff1a\u9700\u8981\u989d\u5916\u7684Level Set\u6216VOF\u65b9\u6cd5</li>\n<li>\u5206\u8fa8\u7387\u9650\u5236\uff1a\u7ec6\u8282\u53d7\u7f51\u683c\u5206\u8fa8\u7387\u9650\u5236</li>\n</ul>\n<h3 id=\"712\">7.1.2 \u7269\u7406\u91cf\u5b88\u6052\u95ee\u9898</h3>\n<p>\u5728\u8bbe\u8ba1\u6df7\u5408\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u7279\u522b\u5173\u6ce8\u5404\u79cd\u7269\u7406\u91cf\u7684\u5b88\u6052\u6027\uff1a</p>\n<p><strong>\u52a8\u91cf\u5b88\u6052\uff1a</strong>\n\u7c92\u5b50-\u7f51\u683c\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5fc5\u987b\u4fdd\u8bc1\u603b\u52a8\u91cf\u5b88\u6052\u3002\u4f7f\u7528\u4e00\u81f4\u7684\u63d2\u503c\u6838\u51fd\u6570\uff0c\u786e\u4fdd\uff1a\n$$\\sum_p m_p \\mathbf{v}_p = \\sum_i m_i \\mathbf{v}_i$$\n<strong>\u89d2\u52a8\u91cf\u5b88\u6052\uff1a</strong>\n\u7b80\u5355\u7684\u901f\u5ea6\u63d2\u503c\u53ef\u80fd\u4e0d\u4fdd\u6301\u89d2\u52a8\u91cf\u3002APIC\u65b9\u6cd5\u901a\u8fc7\u5f15\u5165\u4eff\u5c04\u901f\u5ea6\u573a\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p>\n<p><strong>\u4f53\u79ef\u5b88\u6052\uff08\u4e0d\u53ef\u538b\u7f29\u6027\uff09\uff1a</strong>\n\u901a\u8fc7\u7f51\u683c\u4e0a\u7684\u538b\u529b\u6295\u5f71\u5f3a\u5236\u6ee1\u8db3 $\\nabla \\cdot \\mathbf{u} = 0$\u3002</p>\n<p><strong>\u80fd\u91cf\u5b88\u6052\uff1a</strong>\n\u5b8c\u5168\u7684\u80fd\u91cf\u5b88\u6052\u5f88\u96be\u5b9e\u73b0\uff0c\u901a\u5e38\u8ffd\u6c42\u4f4e\u8017\u6563\u800c\u975e\u4e25\u683c\u5b88\u6052\u3002</p>\n<h3 id=\"713\">7.1.3 \u6570\u503c\u8017\u6563\u4e0e\u566a\u58f0</h3>\n<p>\u6df7\u5408\u65b9\u6cd5\u9700\u8981\u5728\u6570\u503c\u8017\u6563\u548c\u566a\u58f0\u4e4b\u95f4\u627e\u5230\u5e73\u8861\uff1a</p>\n<ul>\n<li><strong>PIC\u65b9\u6cd5</strong>\uff1a\u8fc7\u5ea6\u8017\u6563\u4f46\u7a33\u5b9a\uff0c\u9002\u5408\u9700\u8981\u7a33\u5b9a\u6027\u7684\u5e94\u7528</li>\n<li><strong>FLIP\u65b9\u6cd5</strong>\uff1a\u4fdd\u6301\u80fd\u91cf\u4f46\u4ea7\u751f\u566a\u58f0\uff0c\u9002\u5408\u6e4d\u6d41\u7b49\u9ad8\u80fd\u91cf\u6d41\u52a8</li>\n<li><strong>PIC/FLIP\u6df7\u5408</strong>\uff1a\u901a\u8fc7\u7ebf\u6027\u7ec4\u5408\u5728\u4e24\u8005\u95f4\u6743\u8861</li>\n</ul>\n<p>\u8017\u6563\u7684\u6765\u6e90\u4e3b\u8981\u662f\u4fe1\u606f\u5728\u7c92\u5b50\u548c\u7f51\u683c\u95f4\u4f20\u8f93\u65f6\u7684\u635f\u5931\u3002\u8003\u86512D\u60c5\u51b5\uff1a</p>\n<ul>\n<li>\u7c92\u5b50\u81ea\u7531\u5ea6\uff1a$2N_p$\uff08N_p\u4e2a\u7c92\u5b50\uff0c\u6bcf\u4e2a2\u4e2a\u901f\u5ea6\u5206\u91cf\uff09</li>\n<li>\u7f51\u683c\u81ea\u7531\u5ea6\uff1a$2N_g$\uff08N_g\u4e2a\u7f51\u683c\u70b9\uff09</li>\n</ul>\n<p>\u901a\u5e38 $N_p \\gg N_g$\uff0c\u56e0\u6b64P2G\u8fc7\u7a0b\u5fc5\u7136\u635f\u5931\u4fe1\u606f\u3002</p>\n<h3 id=\"714\">7.1.4 \u6df7\u5408\u7b56\u7565\u8bbe\u8ba1</h3>\n<p>\u6210\u529f\u7684\u6df7\u5408\u65b9\u6cd5\u9700\u8981\u7cbe\u5fc3\u8bbe\u8ba1\u4ee5\u4e0b\u7ec4\u4ef6\uff1a</p>\n<ol>\n<li>\n<p><strong>\u63d2\u503c\u6838\u51fd\u6570</strong>\uff1a\u51b3\u5b9a\u7c92\u5b50\u548c\u7f51\u683c\u95f4\u7684\u4fe1\u606f\u4f20\u8f93\n   - \u7ebf\u6027\uff1a\u7b80\u5355\u9ad8\u6548\uff0c\u4f46\u53ef\u80fd\u4ea7\u751f\u566a\u58f0\n   - \u4e8c\u6b21B\u6837\u6761\uff1a\u66f4\u5e73\u6ed1\uff0c\u8ba1\u7b97\u6210\u672c\u9002\u4e2d\n   - \u4e09\u6b21B\u6837\u6761\uff1a\u6700\u5e73\u6ed1\uff0c\u4f46\u8ba1\u7b97\u5f00\u9500\u5927</p>\n</li>\n<li>\n<p><strong>\u4f20\u8f93\u7b56\u7565</strong>\uff1a\n   - \u76f4\u63a5\u4f20\u8f93\uff08PIC\uff09\uff1a\u4f20\u8f93\u901f\u5ea6\u503c\n   - \u589e\u91cf\u4f20\u8f93\uff08FLIP\uff09\uff1a\u4f20\u8f93\u901f\u5ea6\u53d8\u5316\u91cf\n   - \u4eff\u5c04\u4f20\u8f93\uff08APIC\uff09\uff1a\u4f20\u8f93\u901f\u5ea6\u53ca\u5176\u68af\u5ea6</p>\n</li>\n<li>\n<p><strong>\u65f6\u95f4\u79ef\u5206\u65b9\u6848</strong>\uff1a\n   - \u663e\u5f0f\uff1a\u7b80\u5355\u4f46\u53d7CFL\u6761\u4ef6\u9650\u5236\n   - \u9690\u5f0f\uff1a\u7a33\u5b9a\u4f46\u9700\u8981\u6c42\u89e3\u7ebf\u6027\u7cfb\u7edf</p>\n</li>\n<li>\n<p><strong>\u538b\u529b\u6c42\u89e3</strong>\uff1a\n   - \u5728\u7f51\u683c\u4e0a\u6784\u5efa\u548c\u6c42\u89e3\u538b\u529b\u6cca\u677e\u65b9\u7a0b\n   - \u4f7f\u7528\u591a\u91cd\u7f51\u683c\u6216\u5171\u8f6d\u68af\u5ea6\u6cd5\u52a0\u901f</p>\n</li>\n</ol>\n<h2 id=\"72-pic\">7.2 \u7c92\u5b50\u5143\u80de\u6cd5(PIC)</h2>\n<p>\u7c92\u5b50\u5143\u80de\u6cd5(Particle-In-Cell)\u6700\u65e9\u7531Harlow\u57281964\u5e74\u63d0\u51fa\uff0c\u7528\u4e8e\u6c42\u89e3\u6d41\u4f53\u52a8\u529b\u5b66\u65b9\u7a0b\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u7c92\u5b50\u643a\u5e26\u7269\u7406\u91cf\uff0c\u5728\u6b27\u62c9\u7f51\u683c\u4e0a\u8fdb\u884c\u52a8\u91cf\u65b9\u7a0b\u6c42\u89e3\u3002</p>\n<h3 id=\"721-p2gg2p\">7.2.1 P2G\u4e0eG2P\u4f20\u8f93</h3>\n<p>PIC\u7684\u6838\u5fc3\u662f\u7c92\u5b50\u5230\u7f51\u683c(Particle-to-Grid, P2G)\u548c\u7f51\u683c\u5230\u7c92\u5b50(Grid-to-Particle, G2P)\u7684\u4f20\u8f93\u8fc7\u7a0b\u3002</p>\n<p><strong>P2G\u4f20\u8f93\uff08Particle to Grid\uff09\uff1a</strong>\n\u5c06\u7c92\u5b50\u4e0a\u7684\u7269\u7406\u91cf\u4f20\u8f93\u5230\u7f51\u683c\u8282\u70b9\u3002\u5bf9\u4e8e\u901f\u5ea6\u573a\uff1a\n$$m_i = \\sum_p w_{ip} m_p$$\n$$m_i \\mathbf{v}_i = \\sum_p w_{ip} m_p \\mathbf{v}_p$$\n\u5176\u4e2d $w_{ip}$ \u662f\u63d2\u503c\u6743\u91cd\uff0c\u7531\u6838\u51fd\u6570\u51b3\u5b9a\uff1a\n$$w_{ip} = N\\left(\\frac{\\mathbf{x}_p - \\mathbf{x}_i}{h}\\right)$$\n<strong>G2P\u4f20\u8f93\uff08Grid to Particle\uff09\uff1a</strong>\n\u5c06\u7f51\u683c\u4e0a\u66f4\u65b0\u540e\u7684\u901f\u5ea6\u4f20\u56de\u7c92\u5b50\uff1a\n$$\\mathbf{v}_p^{new} = \\sum_i w_{ip} \\mathbf{v}_i^{new}$$\n\u6ce8\u610f\u8fd9\u91cc\u76f4\u63a5\u8986\u76d6\u7c92\u5b50\u901f\u5ea6\uff0c\u8fd9\u662fPIC\u4ea7\u751f\u8017\u6563\u7684\u4e3b\u8981\u539f\u56e0\u3002</p>\n<h3 id=\"722\">7.2.2 \u6838\u51fd\u6570\u9009\u62e9</h3>\n<p>\u6838\u51fd\u6570\u7684\u9009\u62e9\u5bf9\u7b97\u6cd5\u6027\u80fd\u548c\u6570\u503c\u6027\u8d28\u6709\u91cd\u8981\u5f71\u54cd\uff1a</p>\n<p><strong>\u7ebf\u6027\u6838\u51fd\u6570\uff08tent function\uff09\uff1a</strong>\n$$N_1(x) = \\begin{cases}\n1 - |x| &amp; |x| &lt; 1 \\\\\n0 &amp; \\text{otherwise}\n\\end{cases}$$</p>\n<ul>\n<li>\u8ba1\u7b97\u6548\u7387\u9ad8\uff0c\u6bcf\u4e2a\u7c92\u5b50\u53ea\u5f71\u54cd $2^d$ \u4e2a\u7f51\u683c\u70b9</li>\n<li>\u53ef\u80fd\u4ea7\u751f\u7c92\u5b50\u805a\u96c6\u548c\u901f\u5ea6\u573a\u4e0d\u8fde\u7eed</li>\n</ul>\n<p><strong>\u4e8c\u6b21B\u6837\u6761\uff1a</strong>\n$$N_2(x) = \\begin{cases}\n\\frac{3}{4} - x^2 &amp; |x| &lt; \\frac{1}{2} \\\\\n\\frac{1}{2}(|x| - \\frac{3}{2})^2 &amp; \\frac{1}{2} \\leq |x| &lt; \\frac{3}{2} \\\\\n0 &amp; \\text{otherwise}\n\\end{cases}$$</p>\n<ul>\n<li>\u4e00\u9636\u8fde\u7eed\uff0c\u901f\u5ea6\u573a\u66f4\u5e73\u6ed1</li>\n<li>\u6bcf\u4e2a\u7c92\u5b50\u5f71\u54cd $3^d$ \u4e2a\u7f51\u683c\u70b9</li>\n</ul>\n<p><strong>\u4e09\u6b21B\u6837\u6761\uff1a</strong>\n$$N_3(x) = \\begin{cases}\n\\frac{1}{6}(2 - |x|)^3 &amp; 1 &lt; |x| &lt; 2 \\\\\n\\frac{2}{3} - x^2 + \\frac{1}{2}|x|^3 &amp; |x| \\leq 1 \\\\\n0 &amp; \\text{otherwise}\n\\end{cases}$$</p>\n<ul>\n<li>\u4e8c\u9636\u8fde\u7eed\uff0c\u6700\u5e73\u6ed1</li>\n<li>\u8ba1\u7b97\u6210\u672c\u6700\u9ad8\uff0c\u6bcf\u4e2a\u7c92\u5b50\u5f71\u54cd $4^d$ \u4e2a\u7f51\u683c\u70b9</li>\n</ul>\n<h3 id=\"723\">7.2.3 \u4fe1\u606f\u635f\u5931\u5206\u6790</h3>\n<p>PIC\u65b9\u6cd5\u7684\u4e3b\u8981\u95ee\u9898\u662f\u4fe1\u606f\u635f\u5931\u5bfc\u81f4\u7684\u6570\u503c\u8017\u6563\u3002\u8003\u8651\u4e00\u7ef4\u60c5\u51b5\uff1a</p>\n<p>\u8bbe\u6709 $N_p$ \u4e2a\u7c92\u5b50\u548c $N_g$ \u4e2a\u7f51\u683c\u70b9\u3002\u7c92\u5b50\u643a\u5e26 $N_p$ \u4e2a\u901f\u5ea6\u503c\uff0c\u800c\u7f51\u683c\u53ea\u80fd\u5b58\u50a8 $N_g$ \u4e2a\u901f\u5ea6\u503c\u3002\u5f53 $N_p &gt; N_g$ \u65f6\uff08\u901a\u5e38\u60c5\u51b5\uff09\uff0cP2G\u8fc7\u7a0b\u5fc5\u7136\u635f\u5931\u4fe1\u606f\u3002</p>\n<p><strong>\u9891\u8c31\u5206\u6790\uff1a</strong>\nPIC\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\uff0c\u6bcf\u6b21P2G-G2P\u5faa\u73af\u90fd\u4f1a\u8870\u51cf\u9ad8\u9891\u6210\u5206\u3002\u8bbe\u4f20\u8f93\u7b97\u5b50\u4e3a $T$\uff0c\u5219\uff1a\n$$\\hat{v}_{k}^{n+1} = T(k) \\hat{v}_{k}^n$$\n\u5176\u4e2d $T(k) &lt; 1$ \u5bf9\u4e8e\u9ad8\u6ce2\u6570 $k$\uff0c\u5bfc\u81f4\u9ad8\u9891\u4fe1\u606f\u7684\u6307\u6570\u8870\u51cf\u3002</p>\n<p><strong>\u80fd\u91cf\u8017\u6563\u7387\uff1a</strong>\n\u5bf9\u4e8e\u4e8c\u6b21B\u6837\u6761\u6838\u51fd\u6570\uff0c\u5355\u6b21\u4f20\u8f93\u7684\u80fd\u91cf\u4fdd\u7559\u7387\u7ea6\u4e3a\uff1a\n$$\\frac{E_{after}}{E_{before}} \\approx 1 - C \\left(\\frac{\\Delta x}{L}\\right)^2$$\n\u5176\u4e2d $L$ \u662f\u6d41\u52a8\u7279\u5f81\u957f\u5ea6\uff0c$C$ \u662f\u4f9d\u8d56\u4e8e\u6838\u51fd\u6570\u7684\u5e38\u6570\u3002</p>\n<h3 id=\"724\">7.2.4 \u52a8\u91cf\u5b88\u6052\u6027</h3>\n<p>PIC\u65b9\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u4f18\u70b9\u662f\u7cbe\u786e\u7684\u52a8\u91cf\u5b88\u6052\u3002\u8bc1\u660e\u5982\u4e0b\uff1a</p>\n<p><strong>P2G\u9636\u6bb5\uff1a</strong>\n$$\\sum_i m_i \\mathbf{v}_i = \\sum_i \\sum_p w_{ip} m_p \\mathbf{v}_p = \\sum_p m_p \\mathbf{v}_p \\sum_i w_{ip}$$\n\u7531\u4e8e\u6838\u51fd\u6570\u7684\u5f52\u4e00\u5316\u6027\u8d28 $\\sum_i w_{ip} = 1$\uff0c\u56e0\u6b64\uff1a\n$$\\sum_i m_i \\mathbf{v}_i = \\sum_p m_p \\mathbf{v}_p$$\n<strong>G2P\u9636\u6bb5\uff1a</strong>\n\u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u4f7f\u7528\u76f8\u540c\u7684\u6838\u51fd\u6570\u548c\u6743\u91cd\uff0cG2P\u8fc7\u7a0b\u4e5f\u4fdd\u6301\u52a8\u91cf\u5b88\u6052\u3002</p>\n<p>\u8fd9\u79cd\u52a8\u91cf\u5b88\u6052\u6027\u5bf9\u4e8e\u957f\u65f6\u95f4\u4eff\u771f\u7684\u7a33\u5b9a\u6027\u81f3\u5173\u91cd\u8981\u3002</p>\n<h2 id=\"73-flip\">7.3 \u6d41\u4f53\u9690\u7c92\u5b50(FLIP)</h2>\n<p>\u4e3a\u4e86\u89e3\u51b3PIC\u7684\u8fc7\u5ea6\u8017\u6563\u95ee\u9898\uff0cBrackbill\u548cRuppel\u57281986\u5e74\u63d0\u51fa\u4e86\u6d41\u4f53\u9690\u7c92\u5b50\u65b9\u6cd5(Fluid Implicit Particle)\u3002FLIP\u7684\u5173\u952e\u521b\u65b0\u662f\u4f20\u8f93\u901f\u5ea6\u7684\u589e\u91cf\u800c\u975e\u7edd\u5bf9\u503c\u3002</p>\n<h3 id=\"731\">7.3.1 \u589e\u91cf\u5f0f\u901f\u5ea6\u66f4\u65b0</h3>\n<p>FLIP\u7684\u6838\u5fc3\u601d\u60f3\u662f\u4fdd\u7559\u7c92\u5b50\u7684\u901f\u5ea6\u5386\u53f2\uff0c\u53ea\u4ece\u7f51\u683c\u4f20\u8f93\u901f\u5ea6\u7684\u53d8\u5316\u91cf\uff1a</p>\n<p><strong>\u6807\u51c6FLIP\u66f4\u65b0\uff1a</strong>\n$$\\mathbf{v}_p^{n+1} = \\mathbf{v}_p^n + \\sum_i w_{ip} (\\mathbf{v}_i^{n+1} - \\mathbf{v}_i^n)$$\n\u8fd9\u91cc $\\mathbf{v}_i^n$ \u662fP2G\u540e\u7f51\u683c\u4e0a\u7684\u901f\u5ea6\uff0c$\\mathbf{v}_i^{n+1}$ \u662f\u7ecf\u8fc7\u529b\u7684\u4f5c\u7528\u548c\u538b\u529b\u6295\u5f71\u540e\u7684\u901f\u5ea6\u3002</p>\n<p><strong>\u7269\u7406\u89e3\u91ca\uff1a</strong></p>\n<ul>\n<li>\u7c92\u5b50\u4fdd\u6301\u81ea\u5df1\u7684\u901f\u5ea6\"\u8bb0\u5fc6\"</li>\n<li>\u7f51\u683c\u53ea\u63d0\u4f9b\u901f\u5ea6\u7684\u4fee\u6b63\u91cf</li>\n<li>\u907f\u514d\u4e86\u9ad8\u9891\u4fe1\u606f\u7684\u635f\u5931</li>\n</ul>\n<h3 id=\"732-vs\">7.3.2 \u566a\u58f0vs\u8017\u6563\u6743\u8861</h3>\n<p>FLIP\u89e3\u51b3\u4e86\u8017\u6563\u95ee\u9898\uff0c\u4f46\u5f15\u5165\u4e86\u65b0\u7684\u6311\u6218\uff1a</p>\n<p><strong>\u566a\u58f0\u6765\u6e90\uff1a</strong></p>\n<ol>\n<li>\u7c92\u5b50\u901f\u5ea6\u4e0d\u518d\u901a\u8fc7\u7f51\u683c\"\u5e73\u5747\u5316\"</li>\n<li>\u820d\u5165\u8bef\u5dee\u548c\u79bb\u6563\u5316\u8bef\u5dee\u4f1a\u7d2f\u79ef</li>\n<li>\u7c92\u5b50\u53ef\u80fd\u53d1\u5c55\u51fa\u7f51\u683c\u65e0\u6cd5\u89e3\u6790\u7684\u5c0f\u5c3a\u5ea6\u8fd0\u52a8</li>\n</ol>\n<p><strong>\u566a\u58f0\u7279\u5f81\uff1a</strong></p>\n<ul>\n<li>\u9ad8\u9891\u3001\u5c0f\u5c3a\u5ea6\u7684\u901f\u5ea6\u6270\u52a8</li>\n<li>\u5728\u526a\u5207\u6d41\u4e2d\u7279\u522b\u660e\u663e</li>\n<li>\u53ef\u80fd\u5bfc\u81f4\u7c92\u5b50\u5206\u5e03\u4e0d\u5747\u5300</li>\n</ul>\n<p><strong>\u80fd\u91cf\u5b88\u6052\u5206\u6790\uff1a</strong>\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0cFLIP\u4fdd\u6301\u52a8\u80fd\uff1a\n$$E_{kinetic} = \\frac{1}{2} \\sum_p m_p |\\mathbf{v}_p|^2$$\n\u4f46\u5b9e\u9645\u4e0a\uff0c\u538b\u529b\u6295\u5f71\u548c\u529b\u7684\u79bb\u6563\u5316\u4ecd\u4f1a\u5f15\u5165\u4e00\u4e9b\u8017\u6563\u3002</p>\n<h3 id=\"733-picflip\">7.3.3 PIC/FLIP\u6df7\u5408</h3>\n<p>\u4e3a\u4e86\u5728\u7a33\u5b9a\u6027\u548c\u7cbe\u5ea6\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\uff0c\u901a\u5e38\u4f7f\u7528PIC\u548cFLIP\u7684\u7ebf\u6027\u7ec4\u5408\uff1a\n$$\\mathbf{v}_p^{n+1} = (1-\\alpha) \\mathbf{v}_p^{PIC} + \\alpha \\mathbf{v}_p^{FLIP}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathbf{v}_p^{PIC} = \\sum_i w_{ip} \\mathbf{v}_i^{n+1}$ \uff08PIC\u66f4\u65b0\uff09</li>\n<li>$\\mathbf{v}_p^{FLIP} = \\mathbf{v}_p^n + \\sum_i w_{ip} (\\mathbf{v}_i^{n+1} - \\mathbf{v}_i^n)$ \uff08FLIP\u66f4\u65b0\uff09</li>\n</ul>\n<p><strong>\u6df7\u5408\u6bd4\u4f8b\u9009\u62e9\uff1a</strong></p>\n<ul>\n<li>$\\alpha = 0$\uff1a\u7eafPIC\uff0c\u6700\u7a33\u5b9a\u4f46\u8017\u6563\u5927</li>\n<li>$\\alpha = 1$\uff1a\u7eafFLIP\uff0c\u6700\u5c11\u8017\u6563\u4f46\u53ef\u80fd\u4e0d\u7a33\u5b9a</li>\n<li>$\\alpha = 0.95-0.99$\uff1a\u5e38\u7528\u503c\uff0c\u4fdd\u6301\u5927\u90e8\u5206\u80fd\u91cf\u540c\u65f6\u63d0\u4f9b\u4e00\u5b9a\u7a33\u5b9a\u6027</li>\n</ul>\n<h3 id=\"734\">7.3.4 \u81ea\u9002\u5e94\u6df7\u5408\u6bd4\u4f8b</h3>\n<p>\u66f4\u5148\u8fdb\u7684\u65b9\u6cd5\u662f\u6839\u636e\u5c40\u90e8\u6d41\u52a8\u7279\u5f81\u52a8\u6001\u8c03\u6574\u6df7\u5408\u6bd4\u4f8b\uff1a</p>\n<p><strong>\u57fa\u4e8e\u6da1\u5ea6\u7684\u8c03\u6574\uff1a</strong>\n$$\\alpha = \\alpha_{base} + (1 - \\alpha_{base}) \\cdot \\min\\left(1, \\frac{|\\omega|}{|\\omega|_{max}}\\right)$$\n\u5176\u4e2d $\\omega = \\nabla \\times \\mathbf{v}$ \u662f\u6da1\u5ea6\u3002\u9ad8\u6da1\u5ea6\u533a\u57df\u4f7f\u7528\u66f4\u591aFLIP\u4ee5\u4fdd\u6301\u65cb\u8f6c\u8fd0\u52a8\u3002</p>\n<p><strong>\u57fa\u4e8e\u5e94\u53d8\u7387\u7684\u8c03\u6574\uff1a</strong>\n\u5728\u9ad8\u526a\u5207\u533a\u57df\u51cf\u5c11FLIP\u6bd4\u4f8b\u4ee5\u6291\u5236\u566a\u58f0\uff1a\n$$\\alpha = \\alpha_{base} \\cdot \\exp\\left(-\\beta \\frac{|\\mathbf{S}|}{|\\mathbf{S}|_{avg}}\\right)$$\n\u5176\u4e2d $\\mathbf{S} = \\frac{1}{2}(\\nabla \\mathbf{v} + \\nabla \\mathbf{v}^T)$ \u662f\u5e94\u53d8\u7387\u5f20\u91cf\u3002</p>\n<h2 id=\"74-apic\">7.4 \u4eff\u5c04\u7c92\u5b50\u5143\u80de\u6cd5(APIC)</h2>\n<p>\u4eff\u5c04\u7c92\u5b50\u5143\u80de\u6cd5(Affine Particle-In-Cell)\u7531Jiang\u7b49\u4eba\u57282015\u5e74\u63d0\u51fa\uff0c\u662fPIC/FLIP\u7684\u91cd\u8981\u6539\u8fdb\u3002APIC\u7684\u6838\u5fc3\u521b\u65b0\u662f\u8ba9\u6bcf\u4e2a\u7c92\u5b50\u643a\u5e26\u5c40\u90e8\u7684\u4eff\u5c04\u901f\u5ea6\u573a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u901f\u5ea6\u503c\u3002</p>\n<h3 id=\"741\">7.4.1 \u4eff\u5c04\u901f\u5ea6\u573a</h3>\n<p>APIC\u4e2d\uff0c\u6bcf\u4e2a\u7c92\u5b50 $p$ \u7684\u901f\u5ea6\u573a\u5b9a\u4e49\u4e3a\uff1a\n$$\\mathbf{v}(\\mathbf{x}) = \\mathbf{v}_p + \\mathbf{C}_p (\\mathbf{x} - \\mathbf{x}_p)$$\n\u5176\u4e2d $\\mathbf{C}_p$ \u662f $d \\times d$ \u7684\u77e9\u9635\uff0c\u8868\u793a\u901f\u5ea6\u68af\u5ea6\u3002</p>\n<p><strong>\u7269\u7406\u610f\u4e49\uff1a</strong></p>\n<ul>\n<li>$\\mathbf{v}_p$\uff1a\u7c92\u5b50\u4e2d\u5fc3\u7684\u901f\u5ea6</li>\n<li>$\\mathbf{C}_p$\uff1a\u901f\u5ea6\u7684\u7a7a\u95f4\u53d8\u5316\u7387</li>\n<li>\u5305\u542b\u4e86\u65cb\u8f6c\uff08\u53cd\u5bf9\u79f0\u90e8\u5206\uff09\u548c\u53d8\u5f62\uff08\u5bf9\u79f0\u90e8\u5206\uff09</li>\n</ul>\n<p><strong>\u521d\u59cb\u5316\uff1a</strong>\n\u901a\u5e38\u521d\u59cb\u5316 $\\mathbf{C}_p = \\mathbf{0}$\uff0c\u5728\u4eff\u771f\u8fc7\u7a0b\u4e2d\u81ea\u7136\u6f14\u5316\u3002</p>\n<h3 id=\"742\">7.4.2 \u89d2\u52a8\u91cf\u5b88\u6052</h3>\n<p>APIC\u7684\u4e00\u4e2a\u5173\u952e\u4f18\u52bf\u662f\u4e25\u683c\u7684\u89d2\u52a8\u91cf\u5b88\u6052\u3002\u8003\u8651\u5355\u4e2a\u7c92\u5b50\u7684\u89d2\u52a8\u91cf\uff1a\n$$\\mathbf{L}_p = \\mathbf{x}_p \\times m_p \\mathbf{v}_p + \\mathbf{I}_p \\boldsymbol{\\omega}_p$$\n\u5176\u4e2d\u7b2c\u4e8c\u9879\u6765\u81ea\u7c92\u5b50\u7684\"\u5185\u90e8\"\u89d2\u52a8\u91cf\uff0c$\\boldsymbol{\\omega}_p$ \u4e0e $\\mathbf{C}_p$ \u7684\u53cd\u5bf9\u79f0\u90e8\u5206\u76f8\u5173\u3002</p>\n<p><strong>\u5b88\u6052\u6027\u8bc1\u660e\u8981\u70b9\uff1a</strong></p>\n<ol>\n<li>P2G\u4f20\u8f93\u4fdd\u6301\u603b\u89d2\u52a8\u91cf</li>\n<li>\u7f51\u683c\u4e0a\u7684\u529b\uff08\u5982\u538b\u529b\u68af\u5ea6\uff09\u4e0d\u4ea7\u751f\u51c0\u529b\u77e9</li>\n<li>G2P\u4f20\u8f93\u5c06\u89d2\u52a8\u91cf\u6b63\u786e\u5206\u914d\u56de\u7c92\u5b50</li>\n</ol>\n<p>\u6570\u5b66\u4e0a\u53ef\u4ee5\u8bc1\u660e\uff0cAPIC\u7684\u4f20\u8f93\u8fc7\u7a0b\u6ee1\u8db3\uff1a\n$$\\sum_p \\mathbf{x}_p \\times m_p \\mathbf{v}_p = \\text{constant}$$</p>\n<h3 id=\"743-c\">7.4.3 C\u77e9\u9635\u7684\u7269\u7406\u610f\u4e49</h3>\n<p>$\\mathbf{C}_p$ \u77e9\u9635\u53ef\u4ee5\u5206\u89e3\u4e3a\u5bf9\u79f0\u548c\u53cd\u5bf9\u79f0\u90e8\u5206\uff1a\n$$\\mathbf{C}_p = \\mathbf{S}_p + \\mathbf{W}_p$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathbf{S}_p = \\frac{1}{2}(\\mathbf{C}_p + \\mathbf{C}_p^T)$\uff1a\u5e94\u53d8\u7387\uff08\u62c9\u4f38/\u538b\u7f29\uff09</li>\n<li>$\\mathbf{W}_p = \\frac{1}{2}(\\mathbf{C}_p - \\mathbf{C}_p^T)$\uff1a\u65cb\u8f6c\u7387</li>\n</ul>\n<p><strong>\u4e0e\u6d41\u4f53\u529b\u5b66\u7684\u8054\u7cfb\uff1a</strong>\n\u5728\u8fde\u7eed\u4ecb\u8d28\u4e2d\uff0c\u901f\u5ea6\u68af\u5ea6 $\\nabla \\mathbf{v}$ \u6709\u76f8\u540c\u7684\u5206\u89e3\u3002APIC\u7c92\u5b50\u643a\u5e26\u7684 $\\mathbf{C}_p$ \u662f\u5c40\u90e8\u901f\u5ea6\u68af\u5ea6\u7684\u79bb\u6563\u8fd1\u4f3c\u3002</p>\n<p><strong>C\u77e9\u9635\u7684\u66f4\u65b0\uff1a</strong>\nG2P\u8fc7\u7a0b\u4e2d\uff0c$\\mathbf{C}_p$ \u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u66f4\u65b0\uff1a\n$$\\mathbf{C}_p = \\frac{4}{h^2} \\sum_i w_{ip} \\mathbf{v}_i (\\mathbf{x}_i - \\mathbf{x}_p)^T$$\n\u8fd9\u4e2a\u516c\u5f0f\u786e\u4fdd\u4e86\u89d2\u52a8\u91cf\u5b88\u6052\u548c\u4e8c\u9636\u7cbe\u5ea6\u3002</p>\n<h3 id=\"744-apic\">7.4.4 APIC\u7684\u7a33\u5b9a\u6027</h3>\n<p>APIC\u76f8\u6bd4PIC/FLIP\u5177\u6709\u66f4\u597d\u7684\u7a33\u5b9a\u6027\uff1a</p>\n<p><strong>\u80fd\u91cf\u5206\u6790\uff1a</strong>\nAPIC\u7684\u80fd\u91cf\u8017\u6563\u4ecb\u4e8ePIC\u548cFLIP\u4e4b\u95f4\uff1a</p>\n<ul>\n<li>\u6bd4PIC\u4fdd\u6301\u66f4\u591a\u80fd\u91cf\uff08\u56e0\u4e3a\u4fdd\u7559\u4e86\u901f\u5ea6\u68af\u5ea6\u4fe1\u606f\uff09</li>\n<li>\u6bd4FLIP\u66f4\u7a33\u5b9a\uff08\u56e0\u4e3a\u901a\u8fc7\u7f51\u683c\u4f20\u8f93\u63d0\u4f9b\u4e86\u9690\u5f0f\u6ee4\u6ce2\uff09</li>\n</ul>\n<p><strong>\u6570\u503c\u5b9e\u9a8c\u8868\u660e\uff1a</strong></p>\n<ol>\n<li>APIC\u4e0d\u9700\u8981\u663e\u5f0f\u7684PIC/FLIP\u6df7\u5408</li>\n<li>\u5728\u5404\u79cd\u6d41\u52a8\u6761\u4ef6\u4e0b\u90fd\u8868\u73b0\u7a33\u5b9a</li>\n<li>\u7279\u522b\u9002\u5408\u6709\u65cb\u8f6c\u7684\u6d41\u52a8\uff08\u5982\u6da1\u65cb\uff09</li>\n</ol>\n<p><strong>\u4e0eFLIP\u7684\u5173\u7cfb\uff1a</strong>\n\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f53 $\\mathbf{C}_p = \\mathbf{0}$ \u4e14\u4f7f\u7528\u7279\u5b9a\u7684\u4f20\u8f93\u516c\u5f0f\u65f6\uff0cAPIC\u9000\u5316\u4e3aFLIP\u3002\u8fd9\u8bf4\u660eAPIC\u662fFLIP\u7684\u63a8\u5e7f\u3002</p>\n<h2 id=\"75-polypic\">7.5 PolyPIC\u65b9\u6cd5</h2>\n<p>PolyPIC\uff08Polynomial PIC\uff09\u662fPIC\u65b9\u6cd5\u7684\u9ad8\u9636\u63a8\u5e7f\uff0c\u7531Fu\u7b49\u4eba\u57282017\u5e74\u63d0\u51fa\u3002\u5b83\u4f7f\u7528\u591a\u9879\u5f0f\u800c\u975e\u4eff\u5c04\u51fd\u6570\u6765\u8868\u793a\u7c92\u5b50\u5468\u56f4\u7684\u901f\u5ea6\u573a\uff0c\u5b9e\u73b0\u4e86\u7c92\u5b50\u548c\u7f51\u683c\u95f4\u7684\u65e0\u635f\u4fe1\u606f\u4f20\u8f93\u3002</p>\n<h3 id=\"751\">7.5.1 \u9ad8\u9636\u591a\u9879\u5f0f\u8868\u793a</h3>\n<p>PolyPIC\u4e2d\uff0c\u6bcf\u4e2a\u7c92\u5b50\u643a\u5e26\u7684\u901f\u5ea6\u573a\u8868\u793a\u4e3a\uff1a\n$$\\mathbf{v}(\\mathbf{x}) = \\sum_{|\\alpha| \\leq k} \\mathbf{a}_{\\alpha} \\frac{(\\mathbf{x} - \\mathbf{x}_p)^{\\alpha}}{\\alpha!}$$\n\u5176\u4e2d $\\alpha$ \u662f\u591a\u91cd\u6307\u6807\uff0c$k$ \u662f\u591a\u9879\u5f0f\u9636\u6570\u3002</p>\n<p><strong>2D\u4e8c\u9636\u5c55\u5f00\u793a\u4f8b\uff1a</strong>\n$$v_x(x,y) = a_{00} + a_{10}(x-x_p) + a_{01}(y-y_p) + a_{20}\\frac{(x-x_p)^2}{2} + a_{11}(x-x_p)(y-y_p) + a_{02}\\frac{(y-y_p)^2}{2}$$\n\u6bcf\u4e2a\u901f\u5ea6\u5206\u91cf\u9700\u89816\u4e2a\u7cfb\u6570\uff0c2D\u901f\u5ea6\u573a\u5171\u970012\u4e2a\u7cfb\u6570\u3002</p>\n<h3 id=\"752-taylor\">7.5.2 Taylor\u5c55\u5f00\u4f20\u8f93</h3>\n<p>PolyPIC\u7684\u5173\u952e\u662f\u8bbe\u8ba1P2G\u548cG2P\u4f20\u8f93\uff0c\u4f7f\u5f97\u4fe1\u606f\u4f20\u8f93\u662f\u53ef\u9006\u7684\u3002</p>\n<p><strong>\u81ea\u7531\u5ea6\u5339\u914d\uff1a</strong></p>\n<ul>\n<li>2D\u4e8c\u9636PolyPIC\uff1a\u6bcf\u4e2a\u7c92\u5b5018\u4e2a\u81ea\u7531\u5ea6\uff082\u4e2a\u901f\u5ea6\u5206\u91cf\u00d79\u4e2a\u591a\u9879\u5f0f\u7cfb\u6570\uff09</li>\n<li>3\u00d73\u7f51\u683c\u6a21\u677f\uff1a18\u4e2a\u81ea\u7531\u5ea6\uff089\u4e2a\u7f51\u683c\u70b9\u00d72\u4e2a\u901f\u5ea6\u5206\u91cf\uff09</li>\n</ul>\n<p>\u5f53\u81ea\u7531\u5ea6\u5339\u914d\u65f6\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u65e0\u635f\u4f20\u8f93\u3002</p>\n<p><strong>P2G\u4f20\u8f93\uff1a</strong>\n$$m_i \\mathbf{v}_i = \\sum_p \\int_{\\Omega_p} \\rho(\\mathbf{x}) \\mathbf{v}_p(\\mathbf{x}) N_i(\\mathbf{x}) d\\mathbf{x}$$\n\u5176\u4e2d\u79ef\u5206\u5728\u7c92\u5b50\u7684\u5f71\u54cd\u57df $\\Omega_p$ \u4e0a\u8fdb\u884c\u3002</p>\n<p><strong>G2P\u4f20\u8f93\uff1a</strong>\n\u901a\u8fc7\u6700\u5c0f\u4e8c\u4e58\u62df\u5408\u6062\u590d\u591a\u9879\u5f0f\u7cfb\u6570\uff1a\n$$\\min_{\\mathbf{a}} \\sum_i w_{ip} \\left| \\mathbf{v}_i - \\sum_{|\\alpha| \\leq k} \\mathbf{a}_{\\alpha} \\frac{(\\mathbf{x}_i - \\mathbf{x}_p)^{\\alpha}}{\\alpha!} \\right|^2$$</p>\n<h3 id=\"753\">7.5.3 \u7cbe\u5ea6\u4e0e\u6548\u7387\u5206\u6790</h3>\n<p><strong>\u7cbe\u5ea6\u4f18\u52bf\uff1a</strong></p>\n<ol>\n<li>\u9ad8\u9636\u7cbe\u5ea6\uff1a$k$ \u9636PolyPIC\u5177\u6709 $(k+1)$ \u9636\u7a7a\u95f4\u7cbe\u5ea6</li>\n<li>\u4fdd\u6301\u66f4\u591a\u7269\u7406\u7279\u5f81\uff1a\u53ef\u4ee5\u51c6\u786e\u8868\u793a\u6da1\u65cb\u3001\u526a\u5207\u7b49\u590d\u6742\u6d41\u52a8</li>\n<li>\u51cf\u5c11\u6570\u503c\u8017\u6563\uff1a\u9ad8\u9636\u65b9\u6cd5\u5929\u7136\u5177\u6709\u66f4\u4f4e\u7684\u6570\u503c\u8017\u6563</li>\n</ol>\n<p><strong>\u8ba1\u7b97\u6210\u672c\uff1a</strong></p>\n<ul>\n<li>\u5b58\u50a8\u5f00\u9500\uff1a$O(k^d)$ \u4e2a\u7cfb\u6570per\u7c92\u5b50</li>\n<li>P2G\u6210\u672c\uff1a\u9700\u8981\u8ba1\u7b97\u9ad8\u9636\u77e9 $\\int x^{\\alpha} N_i(x) dx$</li>\n<li>G2P\u6210\u672c\uff1a\u6c42\u89e3\u6700\u5c0f\u4e8c\u4e58\u7cfb\u7edf\uff0c\u53ef\u4ee5\u9884\u8ba1\u7b97\u4f2a\u9006</li>\n</ul>\n<p><strong>\u6548\u7387\u5bf9\u6bd4\uff082D\u60c5\u51b5\uff09\uff1a</strong>\n| \u65b9\u6cd5 | \u5b58\u50a8/\u7c92\u5b50 | P2G FLOPs | G2P FLOPs |</p>\n<table>\n<thead>\n<tr>\n<th>\u65b9\u6cd5</th>\n<th>\u5b58\u50a8/\u7c92\u5b50</th>\n<th>P2G FLOPs</th>\n<th>G2P FLOPs</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PIC</td>\n<td>2</td>\n<td>~20</td>\n<td>~20</td>\n</tr>\n<tr>\n<td>APIC</td>\n<td>6</td>\n<td>~60</td>\n<td>~80</td>\n</tr>\n<tr>\n<td>PolyPIC-2</td>\n<td>18</td>\n<td>~200</td>\n<td>~400</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"754\">7.5.4 \u5b9e\u73b0\u7ec6\u8282</h3>\n<p><strong>\u6570\u503c\u79ef\u5206\uff1a</strong>\nP2G\u4e2d\u7684\u79ef\u5206\u901a\u5e38\u4f7f\u7528\u9ad8\u65af\u6c42\u79ef\uff1a\n$$\\int_{\\Omega_p} f(\\mathbf{x}) d\\mathbf{x} \\approx \\sum_{q} w_q f(\\mathbf{x}_q)$$\n\u5bf9\u4e8e\u4e8c\u9636\u591a\u9879\u5f0f\uff0c\u9700\u8981\u81f3\u5c113\u00d73\u4e2a\u79ef\u5206\u70b9\u3002</p>\n<p><strong>\u6761\u4ef6\u6570\u95ee\u9898\uff1a</strong>\nG2P\u7684\u6700\u5c0f\u4e8c\u4e58\u7cfb\u7edf\u53ef\u80fd\u75c5\u6001\uff0c\u7279\u522b\u662f\u5f53\u7f51\u683c\u70b9\u63a5\u8fd1\u5171\u7ebf\u65f6\u3002\u89e3\u51b3\u65b9\u6cd5\uff1a</p>\n<ol>\n<li>\u4f7f\u7528SVD\u6c42\u89e3\uff0c\u622a\u65ad\u5c0f\u5947\u5f02\u503c</li>\n<li>\u6dfb\u52a0\u6b63\u5219\u5316\u9879</li>\n<li>\u4f7f\u7528\u6b63\u4ea4\u591a\u9879\u5f0f\u57fa</li>\n</ol>\n<p><strong>\u8fb9\u754c\u5904\u7406\uff1a</strong>\n\u7c92\u5b50\u9760\u8fd1\u8fb9\u754c\u65f6\uff0c\u5f71\u54cd\u57df\u53ef\u80fd\u53ea\u8986\u76d6\u90e8\u5206\u7f51\u683c\u70b9\uff0c\u5bfc\u81f4\u6b20\u5b9a\u7cfb\u7edf\u3002\u5904\u7406\u7b56\u7565\uff1a</p>\n<ol>\n<li>\u964d\u4f4e\u591a\u9879\u5f0f\u9636\u6570</li>\n<li>\u4f7f\u7528\u865a\u62df\u7f51\u683c\u70b9</li>\n<li>\u7279\u6b8a\u7684\u8fb9\u754c\u6838\u51fd\u6570</li>\n</ol>\n<h2 id=\"76-\">7.6 \u7c92\u5b50-\u7f51\u683c\u4f20\u8f93\u7ec6\u8282</h2>\n<p>\u9ad8\u8d28\u91cf\u7684\u7c92\u5b50-\u7f51\u683c\u4f20\u8f93\u662f\u6df7\u5408\u65b9\u6cd5\u6210\u529f\u7684\u5173\u952e\u3002\u672c\u8282\u6df1\u5165\u8ba8\u8bba\u5404\u79cd\u5b9e\u73b0\u7ec6\u8282\u548c\u4f18\u5316\u6280\u672f\u3002</p>\n<h3 id=\"761-b\">7.6.1 B\u6837\u6761\u6838\u51fd\u6570</h3>\n<p>B\u6837\u6761\u662f\u6700\u5e38\u7528\u7684\u63d2\u503c\u6838\u51fd\u6570\uff0c\u5177\u6709\u826f\u597d\u7684\u6570\u5b66\u6027\u8d28\u3002</p>\n<p><strong>\u9012\u5f52\u5b9a\u4e49\uff1a</strong>\n$$N_n(x) = \\frac{x}{n-1} N_{n-1}(x) + \\frac{n-x}{n-1} N_{n-1}(x-1)$$\n\u521d\u59cb\u6761\u4ef6\uff1a$N_1(x) = \\mathbb{1}_{[0,1)}(x)$</p>\n<p><strong>\u91cd\u8981\u6027\u8d28\uff1a</strong></p>\n<ol>\n<li>\u7d27\u652f\u6491\uff1a$N_n(x) = 0$ for $x \\notin [0, n]$</li>\n<li>\u975e\u8d1f\u6027\uff1a$N_n(x) \\geq 0$</li>\n<li>\u5f52\u4e00\u5316\uff1a$\\sum_{i} N_n(x-i) = 1$</li>\n<li>\u5149\u6ed1\u6027\uff1a$N_n \\in C^{n-2}$</li>\n</ol>\n<p><strong>\u5bfc\u6570\u8ba1\u7b97\uff1a</strong>\n$$N_n'(x) = N_{n-1}(x) - N_{n-1}(x-1)$$\n\u8fd9\u5728\u8ba1\u7b97\u901f\u5ea6\u68af\u5ea6\uff08\u5982APIC\u7684C\u77e9\u9635\uff09\u65f6\u5f88\u6709\u7528\u3002</p>\n<h3 id=\"762-vs\">7.6.2 \u4e8c\u6b21vs\u4e09\u6b21\u63d2\u503c</h3>\n<p>\u9009\u62e9\u63d2\u503c\u9636\u6570\u9700\u8981\u5728\u7cbe\u5ea6\u548c\u6548\u7387\u95f4\u6743\u8861\uff1a</p>\n<p><strong>\u4e8c\u6b21B\u6837\u6761\uff08\u63a8\u8350\u7528\u4e8e\u5927\u591a\u6570\u5e94\u7528\uff09\uff1a</strong></p>\n<ul>\n<li>\u652f\u6491\u57df\uff1a3\u00d73\u00d73\uff083D\uff09</li>\n<li>C\u00b9\u8fde\u7eed</li>\n<li>\u8ba1\u7b97\u6210\u672c\u9002\u4e2d</li>\n<li>\u8db3\u591f\u7684\u5149\u6ed1\u6027</li>\n</ul>\n<p><strong>\u4e09\u6b21B\u6837\u6761\uff1a</strong></p>\n<ul>\n<li>\u652f\u6491\u57df\uff1a4\u00d74\u00d74\uff083D\uff09</li>\n<li>C\u00b2\u8fde\u7eed</li>\n<li>\u8ba1\u7b97\u6210\u672c\u9ad8\uff0864vs27\u4e2a\u7f51\u683c\u70b9\uff09</li>\n<li>\u7528\u4e8e\u9700\u8981\u9ad8\u5149\u6ed1\u6027\u7684\u60c5\u51b5</li>\n</ul>\n<p><strong>\u6570\u503c\u6bd4\u8f83\uff1a</strong>\n\u5bf9\u4e8e\u5178\u578b\u7684\u6d41\u4f53\u4eff\u771f\uff0c\u4e8c\u6b21\u548c\u4e09\u6b21\u7684\u89c6\u89c9\u5dee\u5f02\u901a\u5e38\u5f88\u5c0f\uff0c\u4f46\u4e09\u6b21\u7684\u8ba1\u7b97\u6210\u672c\u663e\u8457\u66f4\u9ad8\u3002</p>\n<h3 id=\"763\">7.6.3 \u6838\u51fd\u6570\u7684\u7d27\u652f\u6027</h3>\n<p>\u7d27\u652f\u6027\uff08compact support\uff09\u662f\u6838\u51fd\u6570\u7684\u5173\u952e\u7279\u6027\uff0c\u5f71\u54cd\u7b97\u6cd5\u6548\u7387\u3002</p>\n<p><strong>\u7d27\u652f\u57df\u5927\u5c0f\uff1a</strong></p>\n<ul>\n<li>\u7ebf\u6027\uff1a$2^d$ \u4e2a\u7f51\u683c\u70b9</li>\n<li>\u4e8c\u6b21\uff1a$3^d$ \u4e2a\u7f51\u683c\u70b9</li>\n<li>\u4e09\u6b21\uff1a$4^d$ \u4e2a\u7f51\u683c\u70b9</li>\n</ul>\n<p><strong>\u4f18\u5316\u5b58\u50a8\u8bbf\u95ee\uff1a</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// 2D\u4e8c\u6b21B\u6837\u6761\u7684\u9ad8\u6548\u5b9e\u73b0</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">base_i</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">base_i</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">float</span><span class=\"w\"> </span><span class=\"n\">wi</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">N2</span><span class=\"p\">((</span><span class=\"n\">xp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"n\">dx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">dx</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">base_j</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">base_j</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">float</span><span class=\"w\"> </span><span class=\"n\">wj</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">N2</span><span class=\"p\">((</span><span class=\"n\">yp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"o\">*</span><span class=\"n\">dy</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">dy</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">float</span><span class=\"w\"> </span><span class=\"n\">w</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">wi</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">wj</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u6267\u884cP2G\u6216G2P\u64cd\u4f5c</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u8fb9\u754c\u5904\u7406\uff1a</strong>\n\u5f53\u7c92\u5b50\u9760\u8fd1\u57df\u8fb9\u754c\u65f6\uff0c\u90e8\u5206\u652f\u6491\u57df\u53ef\u80fd\u5728\u8fb9\u754c\u5916\uff1a</p>\n<ol>\n<li>\u5939clamp\u7d22\u5f15\u5230\u6709\u6548\u8303\u56f4</li>\n<li>\u4f7f\u7528\u5468\u671f\u8fb9\u754c\u6761\u4ef6</li>\n<li>\u6269\u5c55\u865a\u62df\u7f51\u683c\u70b9</li>\n</ol>\n<h3 id=\"764\">7.6.4 \u5e76\u884c\u4f20\u8f93\u7b97\u6cd5</h3>\n<p>P2G\u8fc7\u7a0b\u6d89\u53ca\u591a\u4e2a\u7c92\u5b50\u5199\u5165\u540c\u4e00\u7f51\u683c\u70b9\uff0c\u9700\u8981\u5904\u7406\u7ade\u6001\u6761\u4ef6\u3002</p>\n<p><strong>\u539f\u5b50\u64cd\u4f5c\u65b9\u6cd5\uff1a</strong></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">//</span><span class=\"w\"> </span><span class=\"n\">CUDA\u98ce\u683c\u4f2a\u4ee3\u7801</span>\n<span class=\"n\">atomicAdd</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">grid_mass</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wp</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">particle_mass</span><span class=\"p\">);</span>\n<span class=\"n\">atomicAdd</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">grid_momentum</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wp</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">particle_mass</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">particle_velocity</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<p>\u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u6b63\u786e\u6027\u4fdd\u8bc1\n\u7f3a\u70b9\uff1a\u539f\u5b50\u64cd\u4f5c\u5f00\u9500\uff0c\u53ef\u80fd\u6210\u4e3a\u74f6\u9888</p>\n<p><strong>\u5206\u5757\u5e76\u884c\uff08Tiling\uff09\uff1a</strong></p>\n<ol>\n<li>\u5c06\u7c92\u5b50\u5206\u914d\u5230\u4e0d\u91cd\u53e0\u7684\u5757</li>\n<li>\u6bcf\u4e2a\u5757\u72ec\u7acb\u5904\u7406\u5176\u7c92\u5b50</li>\n<li>\u5408\u5e76\u5404\u5757\u7684\u8d21\u732e</li>\n</ol>\n<p><strong>\u6392\u5e8f\u65b9\u6cd5\uff1a</strong></p>\n<ol>\n<li>\u6309\u7a7a\u95f4\u4f4d\u7f6e\u6392\u5e8f\u7c92\u5b50</li>\n<li>\u76f8\u90bb\u7c92\u5b50\u53ef\u80fd\u5f71\u54cd\u76f8\u540c\u7f51\u683c\u70b9</li>\n<li>\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u51cf\u5c11\u5168\u5c40\u5185\u5b58\u8bbf\u95ee</li>\n</ol>\n<p><strong>GPU\u4f18\u5316\u7b56\u7565\uff1a</strong></p>\n<ul>\n<li>\u4f7f\u7528texture\u5185\u5b58\u52a0\u901f\u7f51\u683c\u6570\u636e\u8bfb\u53d6</li>\n<li>Warp\u7ea7\u522b\u7684\u534f\u4f5c\uff0c\u51cf\u5c11\u539f\u5b50\u64cd\u4f5c</li>\n<li>\u6df7\u5408\u7cbe\u5ea6\uff1a\u4f4d\u7f6e\u7528float\uff0c\u7d2f\u52a0\u7528double</li>\n</ul>\n<h2 id=\"_1\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86\u6df7\u5408\u6b27\u62c9-\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u7684\u57fa\u672c\u6982\u5ff5\u548c\u7ecf\u5178\u7b97\u6cd5\u3002\u5173\u952e\u8981\u70b9\u5305\u62ec\uff1a</p>\n<ol>\n<li><strong>\u6df7\u5408\u65b9\u6cd5\u7684\u52a8\u673a</strong>\uff1a\u7ed3\u5408\u62c9\u683c\u6717\u65e5\u7684\u6750\u6599\u8ffd\u8e2a\u80fd\u529b\u548c\u6b27\u62c9\u7684\u9ad8\u6548\u6295\u5f71\u7b97\u6cd5</li>\n<li><strong>PIC\u65b9\u6cd5</strong>\uff1a\u7b80\u5355\u7a33\u5b9a\u4f46\u5b58\u5728\u6570\u503c\u8017\u6563\uff0c\u9002\u5408\u9700\u8981\u7a33\u5b9a\u6027\u7684\u5e94\u7528</li>\n<li><strong>FLIP\u65b9\u6cd5</strong>\uff1a\u901a\u8fc7\u589e\u91cf\u66f4\u65b0\u51cf\u5c11\u8017\u6563\uff0c\u4f46\u53ef\u80fd\u4ea7\u751f\u566a\u58f0</li>\n<li><strong>APIC\u65b9\u6cd5</strong>\uff1a\u5f15\u5165\u4eff\u5c04\u901f\u5ea6\u573a\uff0c\u5b9e\u73b0\u89d2\u52a8\u91cf\u5b88\u6052\uff0c\u662f\u73b0\u4ee3MPM\u7684\u57fa\u7840</li>\n<li><strong>PolyPIC\u65b9\u6cd5</strong>\uff1a\u4f7f\u7528\u9ad8\u9636\u591a\u9879\u5f0f\u5b9e\u73b0\u66f4\u9ad8\u7cbe\u5ea6\uff0c\u4f46\u8ba1\u7b97\u6210\u672c\u663e\u8457\u589e\u52a0</li>\n<li><strong>\u6838\u51fd\u6570\u9009\u62e9</strong>\uff1a\u4e8c\u6b21B\u6837\u6761\u901a\u5e38\u662f\u7cbe\u5ea6\u548c\u6548\u7387\u7684\u6700\u4f73\u5e73\u8861</li>\n</ol>\n<p>\u8fd9\u4e9b\u6df7\u5408\u65b9\u6cd5\u4e3a\u4e0b\u4e00\u7ae0\u7684\u7269\u8d28\u70b9\u6cd5\uff08MPM\uff09\u5960\u5b9a\u4e86\u7406\u8bba\u57fa\u7840\u3002MPM\u53ef\u4ee5\u770b\u4f5c\u662f\u5c06\u8fd9\u4e9b\u6982\u5ff5\u6269\u5c55\u5230\u56fa\u4f53\u529b\u5b66\u7684\u81ea\u7136\u63a8\u5e7f\u3002</p>\n<h2 id=\"_2\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_3\">\u57fa\u7840\u9898</h3>\n<p><strong>\u7ec3\u4e607.1</strong>\uff1a\u63a8\u5bfc\u4e8c\u7ef4\u60c5\u51b5\u4e0b\u7ebf\u6027\u63d2\u503c\u6838\u51fd\u6570\u7684\u663e\u5f0f\u8868\u8fbe\u5f0f\uff0c\u5e76\u9a8c\u8bc1\u5176\u6ee1\u8db3\u5f52\u4e00\u5316\u6761\u4ef6\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u7c92\u5b50\u4f4d\u4e8e $(x_p, y_p)$\uff0c\u7f51\u683c\u95f4\u8ddd\u4e3a $h$\u3002\u5bf9\u4e8e\u7f51\u683c\u70b9 $(i,j)$\uff0c\u6743\u91cd\u4e3a\uff1a\n$$w_{ij} = N\\left(\\frac{x_p - ih}{h}\\right) N\\left(\\frac{y_p - jh}{h}\\right)$$</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u7ebf\u6027\u6838\u51fd\u6570\u4e3a\uff1a\n$$N(x) = \\max(0, 1 - |x|)$$\n\u4e8c\u7ef4\u6743\u91cd\uff1a\n$$w_{ij} = \\max\\left(0, 1 - \\left|\\frac{x_p - ih}{h}\\right|\\right) \\max\\left(0, 1 - \\left|\\frac{y_p - jh}{h}\\right|\\right)$$\n\u5f52\u4e00\u5316\u9a8c\u8bc1\uff1a\u7c92\u5b50\u6700\u591a\u5f71\u54cd4\u4e2a\u7f51\u683c\u70b9\uff0c\u8bbe\u7c92\u5b50\u5728\u7f51\u683c $(i_0, j_0)$ \u548c $(i_0+1, j_0+1)$ \u4e4b\u95f4\uff0c\u5c40\u90e8\u5750\u6807 $(\\alpha, \\beta) \\in [0,1]^2$\uff0c\u5219\uff1a\n$$\\sum_{i,j} w_{ij} = (1-\\alpha)(1-\\beta) + \\alpha(1-\\beta) + (1-\\alpha)\\beta + \\alpha\\beta = 1$$</p>\n</details>\n<p><strong>\u7ec3\u4e607.2</strong>\uff1a\u5206\u6790PIC\u65b9\u6cd5\u5728\u4e00\u7ef4\u5468\u671f\u57df\u4e0a\u7684\u6570\u503c\u8017\u6563\u3002\u8bbe\u7c92\u5b50\u5747\u5300\u5206\u5e03\uff0c\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\uff0c\u8ba1\u7b97\u5355\u6b21P2G-G2P\u5faa\u73af\u540e\u7684\u80fd\u91cf\u635f\u5931\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u6b63\u5f26\u901f\u5ea6\u573a $v(x) = A\\sin(kx)$\uff0c\u5206\u6790\u4e0d\u540c\u6ce2\u6570 $k$ \u7684\u8870\u51cf\u7387\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5bf9\u4e8e\u6ce2\u6570 $k$ \u7684\u6b63\u5f26\u6a21\u5f0f\uff0c\u4f20\u8f93\u7b97\u5b50\u7684\u7279\u5f81\u503c\u4e3a\uff1a\n$$\\lambda(k) = \\frac{\\sin^2(kh/2)}{(kh/2)^2}$$\n\u80fd\u91cf\u4fdd\u7559\u7387\uff1a\n$$\\frac{E_{after}}{E_{before}} = \\lambda^2(k)$$\n\u5bf9\u4e8e $kh = \\pi$\uff08Nyquist\u9891\u7387\uff09\uff0c$\\lambda = 4/\\pi^2 \\approx 0.405$\uff0c\u80fd\u91cf\u4fdd\u7559\u7387\u4ec5\u4e3a 16.4%\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e607.3</strong>\uff1a\u5b9e\u73b0FLIP\u7684\u901f\u5ea6\u66f4\u65b0\u516c\u5f0f\uff0c\u5e76\u5206\u6790\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0bFLIP\u548cPIC\u4f1a\u7ed9\u51fa\u76f8\u540c\u7684\u7ed3\u679c\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u7279\u6b8a\u7684\u521d\u59cb\u6761\u4ef6\u6216\u6d41\u52a8\u72b6\u6001\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>FLIP\u66f4\u65b0\uff1a$\\mathbf{v}_p^{n+1} = \\mathbf{v}_p^n + \\sum_i w_{ip}(\\mathbf{v}_i^{n+1} - \\mathbf{v}_i^n)$</p>\n<p>PIC\u66f4\u65b0\uff1a$\\mathbf{v}_p^{n+1} = \\sum_i w_{ip}\\mathbf{v}_i^{n+1}$</p>\n<p>\u4e24\u8005\u76f8\u540c\u5f53\u4e14\u4ec5\u5f53\uff1a\n$$\\mathbf{v}_p^n = \\sum_i w_{ip}\\mathbf{v}_i^n$$\n\u5373\u7c92\u5b50\u901f\u5ea6\u5df2\u7ecf\u4e0e\u5176\u63d2\u503c\u5230\u7f51\u683c\u7684\u901f\u5ea6\u4e00\u81f4\u3002\u8fd9\u53d1\u751f\u5728\uff1a</p>\n<ol>\n<li>\u7a33\u6001\u6d41\u52a8</li>\n<li>\u7c92\u5b50\u901f\u5ea6\u573a\u5df2\u7ecf\u5145\u5206\u5149\u6ed1</li>\n<li>\u7b2c\u4e00\u4e2a\u65f6\u95f4\u6b65\uff08\u5982\u679c\u7c92\u5b50\u521d\u59cb\u5316\u4e3a\u7f51\u683c\u63d2\u503c\uff09</li>\n</ol>\n</details>\n<h3 id=\"_4\">\u6311\u6218\u9898</h3>\n<p><strong>\u7ec3\u4e607.4</strong>\uff1a\u8bc1\u660eAPIC\u65b9\u6cd5\u4fdd\u6301\u89d2\u52a8\u91cf\u5b88\u6052\u3002\u8003\u86512D\u60c5\u51b5\uff0c\u5199\u51faP2G\u548cG2P\u8fc7\u7a0b\u7684\u8be6\u7ec6\u516c\u5f0f\uff0c\u5e76\u8bc1\u660e\u603b\u89d2\u52a8\u91cf\u4e0d\u53d8\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u89d2\u52a8\u91cf $L = \\sum_p \\mathbf{x}_p \\times m_p \\mathbf{v}_p$\u3002\u9700\u8981\u8bc1\u660eP2G\u548cG2P\u8fc7\u7a0b\u90fd\u4fdd\u6301\u8fd9\u4e2a\u91cf\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>P2G\u4f20\u8f93\uff1a\n$$m_i = \\sum_p w_{ip} m_p$$\n$$m_i \\mathbf{v}_i = \\sum_p w_{ip} m_p[\\mathbf{v}_p + \\mathbf{C}_p(\\mathbf{x}_i - \\mathbf{x}_p)]$$\n\u5173\u952e\u89c2\u5bdf\uff1a$\\sum_i w_{ip}(\\mathbf{x}_i - \\mathbf{x}_p) = \\mathbf{0}$\uff08\u4e00\u9636\u77e9\u4e3a\u96f6\uff09</p>\n<p>\u56e0\u6b64\u7f51\u683c\u4e0a\u7684\u603b\u52a8\u91cf\uff1a\n$$\\sum_i m_i \\mathbf{v}_i = \\sum_p m_p \\mathbf{v}_p$$\n\u7f51\u683c\u4e0a\u7684\u89d2\u52a8\u91cf\uff1a\n$$\\sum_i \\mathbf{x}_i \\times m_i \\mathbf{v}_i = \\sum_p \\mathbf{x}_p \\times m_p \\mathbf{v}_p + \\sum_p m_p \\sum_i w_{ip}(\\mathbf{x}_i - \\mathbf{x}_p) \\times \\mathbf{C}_p(\\mathbf{x}_i - \\mathbf{x}_p)$$\n\u7b2c\u4e8c\u9879\u53ef\u4ee5\u8bc1\u660e\u4e3a\u96f6\uff08\u4f7f\u7528C\u77e9\u9635\u7684\u7279\u6b8a\u7ed3\u6784\uff09\u3002G2P\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u4ece\u800c\u603b\u89d2\u52a8\u91cf\u5b88\u6052\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e607.5</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u7684PIC/FLIP\u6df7\u5408\u7b56\u7565\uff0c\u6839\u636e\u5c40\u90e8\u6d41\u52a8\u7279\u5f81\uff08\u5982\u6da1\u5ea6\u3001\u6563\u5ea6\u3001\u5e94\u53d8\u7387\uff09\u52a8\u6001\u8c03\u6574\u6df7\u5408\u6bd4\u4f8b\u3002\u7ed9\u51fa\u5177\u4f53\u7684\u516c\u5f0f\u548c\u7269\u7406justification\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u4e0d\u540c\u6d41\u52a8\u7279\u5f81\u5bf9\u6570\u503c\u7a33\u5b9a\u6027\u548c\u7cbe\u5ea6\u7684\u8981\u6c42\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u81ea\u9002\u5e94\u6df7\u5408\u7b56\u7565\uff1a\n$$\\alpha = \\alpha_{base} \\cdot f_{vorticity} \\cdot f_{strain} \\cdot f_{divergence}$$\n\u5176\u4e2d\uff1a</p>\n<ol>\n<li>\n<p>\u6da1\u5ea6\u56e0\u5b50\uff08\u4fdd\u6301\u65cb\u8f6c\uff09\uff1a\n$$f_{vorticity} = \\min\\left(1, \\frac{|\\omega|/|\\omega|_{ref} + \\epsilon}{1 + \\epsilon}\\right)$$</p>\n</li>\n<li>\n<p>\u5e94\u53d8\u56e0\u5b50\uff08\u6291\u5236\u526a\u5207\u566a\u58f0\uff09\uff1a\n$$f_{strain} = \\exp\\left(-\\beta \\frac{||\\mathbf{S}||}{||\\mathbf{S}||_{avg}}\\right)$$</p>\n</li>\n<li>\n<p>\u6563\u5ea6\u56e0\u5b50\uff08\u538b\u7f29\u533a\u57df\u7a33\u5b9a\u6027\uff09\uff1a\n$$f_{divergence} = \\begin{cases}\n1 &amp; \\nabla \\cdot \\mathbf{v} \\geq 0 \\\\\n1 - \\gamma|\\nabla \\cdot \\mathbf{v}|/|\\mathbf{v}|_{max} &amp; \\nabla \\cdot \\mathbf{v} &lt; 0\n\\end{cases}$$\n\u7269\u7406\u52a8\u673a\uff1a</p>\n</li>\n</ol>\n<ul>\n<li>\u9ad8\u6da1\u5ea6\u533a\u9700\u8981FLIP\u4fdd\u6301\u80fd\u91cf</li>\n<li>\u9ad8\u5e94\u53d8\u7387\u533a\u9700\u8981PIC\u6291\u5236\u566a\u58f0</li>\n<li>\u538b\u7f29\u533a\u57df\u9700\u8981\u66f4\u591aPIC\u4fdd\u8bc1\u7a33\u5b9a\u6027</li>\n</ul>\n</details>\n<p><strong>\u7ec3\u4e607.6</strong>\uff1a\u63a8\u5bfcPolyPIC\u7684\u6700\u4f18G2P\u91cd\u6784\u516c\u5f0f\u3002\u7ed9\u5b9a\u7f51\u683c\u901f\u5ea6 $\\mathbf{v}_i$ \u548c\u6743\u91cd $w_{ip}$\uff0c\u5982\u4f55\u8ba1\u7b97\u7c92\u5b50\u7684\u591a\u9879\u5f0f\u7cfb\u6570\u4ee5\u6700\u5c0f\u5316\u91cd\u6784\u8bef\u5dee\uff1f</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8fd9\u662f\u4e00\u4e2a\u52a0\u6743\u6700\u5c0f\u4e8c\u4e58\u95ee\u9898\u3002\u6784\u5efa\u6cd5\u65b9\u7a0b\u5e76\u6c42\u89e3\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u6700\u5c0f\u5316\u76ee\u6807\u51fd\u6570\uff1a\n$$J = \\sum_i w_{ip} \\left|\\mathbf{v}_i - \\sum_{|\\alpha| \\leq k} \\mathbf{a}_{\\alpha} \\frac{(\\mathbf{x}_i - \\mathbf{x}_p)^{\\alpha}}{\\alpha!}\\right|^2$$\n\u4ee4 $\\mathbf{\\Phi}$ \u4e3a\u57fa\u51fd\u6570\u77e9\u9635\uff0c$\\mathbf{\\Phi}_{i,\\alpha} = \\frac{(\\mathbf{x}_i - \\mathbf{x}_p)^{\\alpha}}{\\alpha!}$</p>\n<p>\u6cd5\u65b9\u7a0b\uff1a\n$$(\\mathbf{\\Phi}^T \\mathbf{W} \\mathbf{\\Phi}) \\mathbf{a} = \\mathbf{\\Phi}^T \\mathbf{W} \\mathbf{v}$$\n\u5176\u4e2d $\\mathbf{W} = \\text{diag}(w_{ip})$\u3002</p>\n<p>\u89e3\uff1a\n$$\\mathbf{a} = (\\mathbf{\\Phi}^T \\mathbf{W} \\mathbf{\\Phi})^{-1} \\mathbf{\\Phi}^T \\mathbf{W} \\mathbf{v}$$</p>\n<p>\u5b9e\u8df5\u4e2d\uff0c\u9884\u8ba1\u7b97 $(\\mathbf{\\Phi}^T \\mathbf{W} \\mathbf{\\Phi})^{-1} \\mathbf{\\Phi}^T \\mathbf{W}$ \u5bf9\u4e8e\u89c4\u5219\u7f51\u683c\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e607.7</strong>\uff1a\u5206\u6790\u4e09\u7ef4APIC\u7684\u5b58\u50a8\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\u4e0ePIC\u548cFLIP\u76f8\u6bd4\uff0c\u989d\u5916\u7684\u5f00\u9500\u662f\u4ec0\u4e48\uff1f\u8fd9\u4e9b\u5f00\u9500\u5e26\u6765\u4e86\u4ec0\u4e48\u597d\u5904\uff1f</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651C\u77e9\u9635\u7684\u5b58\u50a8\u3001P2G/G2P\u7684\u989d\u5916\u8ba1\u7b97\u7b49\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u5b58\u50a8\u590d\u6742\u5ea6\uff1a</p>\n<ul>\n<li>PIC/FLIP: 3\u4e2a\u6d6e\u70b9\u6570\uff08\u901f\u5ea6\uff09+ 3\u4e2a\u6d6e\u70b9\u6570\uff08\u4f4d\u7f6e\uff09= 6\u4e2a\u6d6e\u70b9\u6570/\u7c92\u5b50</li>\n<li>APIC: \u989d\u59169\u4e2a\u6d6e\u70b9\u6570\uff083\u00d73 C\u77e9\u9635\uff09= 15\u4e2a\u6d6e\u70b9\u6570/\u7c92\u5b50</li>\n<li>\u5b58\u50a8\u589e\u52a0: 2.5\u500d</li>\n</ul>\n<p>\u8ba1\u7b97\u590d\u6742\u5ea6\uff08\u4f7f\u7528\u4e8c\u6b21B\u6837\u6761\uff09\uff1a</p>\n<ul>\n<li>PIC P2G: 27\u6b21\u6743\u91cd\u8ba1\u7b97 + 27\u00d73\u6b21\u52a0\u6cd5 \u2248 108 FLOPs</li>\n<li>APIC P2G: \u989d\u591627\u00d79\u6b21\u4e58\u52a0\uff08C\u77e9\u9635\u8d21\u732e\uff09\u2248 351 FLOPs</li>\n<li>\u8ba1\u7b97\u589e\u52a0: \u7ea63.25\u500d</li>\n</ul>\n<p>\u597d\u5904\uff1a</p>\n<ol>\n<li>\u89d2\u52a8\u91cf\u5b88\u6052\uff08\u65e0\u9700\u989d\u5916\u4fee\u6b63\uff09</li>\n<li>\u66f4\u597d\u7684\u7a33\u5b9a\u6027\uff08\u65e0\u9700PIC/FLIP\u6df7\u5408\uff09</li>\n<li>\u66f4\u51c6\u786e\u7684\u6da1\u65cb\u4fdd\u6301</li>\n<li>\u4e3aMPM\u63d0\u4f9b\u81ea\u7136\u7684\u5e94\u529b\u8ba1\u7b97\u6846\u67b6</li>\n</ol>\n<p>\u5f00\u9500\u662f\u503c\u5f97\u7684\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u9700\u8981\u51c6\u786e\u65cb\u8f6c\u8fd0\u52a8\u7684\u5e94\u7528\u3002</p>\n</details>\n<p><strong>\u7ec3\u4e607.8</strong>\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u5b9e\u9a8c\u6765\u5b9a\u91cf\u6bd4\u8f83PIC\u3001FLIP\u3001APIC\u548cPolyPIC\u7684\u6027\u80fd\u3002\u5e94\u8be5\u6d4b\u8bd5\u54ea\u4e9b\u573a\u666f\uff1f\u5982\u4f55\u91cf\u5316\u5404\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\uff1f</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u4e0d\u540c\u7684\u6d41\u52a8\u7279\u5f81\u548c\u8bc4\u4ef7\u6307\u6807\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>\u6d4b\u8bd5\u573a\u666f\uff1a</p>\n<ol>\n<li>\n<p><strong>Taylor-Green\u6da1\u65cb</strong>\uff1a\u6d4b\u8bd5\u80fd\u91cf\u5b88\u6052\u548c\u6da1\u65cb\u4fdd\u6301\n   - \u521d\u59cb\u6761\u4ef6\uff1a$u = \\sin(x)\\cos(y)$, $v = -\\cos(x)\\sin(y)$\n   - \u5ea6\u91cf\uff1a\u52a8\u80fd\u968f\u65f6\u95f4\u7684\u8870\u51cf\u3001\u6da1\u5ea6\u573a\u7684\u6f14\u5316</p>\n</li>\n<li>\n<p><strong>\u65cb\u8f6c\u5706\u76d8</strong>\uff1a\u6d4b\u8bd5\u89d2\u52a8\u91cf\u5b88\u6052\n   - \u521d\u59cb\u6761\u4ef6\uff1a\u521a\u4f53\u65cb\u8f6c\u901f\u5ea6\u573a\n   - \u5ea6\u91cf\uff1a\u603b\u89d2\u52a8\u91cf\u8bef\u5dee\u3001\u901f\u5ea6profile\u53d8\u5f62</p>\n</li>\n<li>\n<p><strong>Kelvin-Helmholtz\u4e0d\u7a33\u5b9a\u6027</strong>\uff1a\u6d4b\u8bd5\u5bf9\u590d\u6742\u6d41\u52a8\u7684\u89e3\u6790\u80fd\u529b\n   - \u521d\u59cb\u6761\u4ef6\uff1a\u526a\u5207\u5c42with\u5c0f\u6270\u52a8\n   - \u5ea6\u91cf\uff1a\u6da1\u65cb\u5377\u8d77\u7684\u65f6\u95f4\u3001\u5c0f\u5c3a\u5ea6\u7ed3\u6784</p>\n</li>\n<li>\n<p><strong>\u9759\u6c34\u5e73\u8861</strong>\uff1a\u6d4b\u8bd5\u6570\u503c\u566a\u58f0\n   - \u521d\u59cb\u6761\u4ef6\uff1a\u9759\u6b62\u6d41\u4f53\n   - \u5ea6\u91cf\uff1a\u901f\u5ea6\u573a\u7684RMS\u8bef\u5dee</p>\n</li>\n</ol>\n<p>\u8bc4\u4ef7\u6307\u6807\uff1a</p>\n<ul>\n<li>\u5b9a\u91cf\uff1a\u80fd\u91cf/\u52a8\u91cf/\u89d2\u52a8\u91cf\u8bef\u5dee\u3001L2/L\u221e\u8303\u6570\u8bef\u5dee</li>\n<li>\u5b9a\u6027\uff1a\u89c6\u89c9\u8d28\u91cf\u3001\u7a33\u5b9a\u6027</li>\n<li>\u6027\u80fd\uff1a\u8fd0\u884c\u65f6\u95f4\u3001\u5185\u5b58\u4f7f\u7528</li>\n</ul>\n<p>\u9884\u671f\u7ed3\u679c\uff1a</p>\n<ul>\n<li>PIC\uff1a\u6700\u7a33\u5b9a\u4f46\u8017\u6563\u6700\u5927</li>\n<li>FLIP\uff1a\u80fd\u91cf\u5b88\u6052\u6700\u597d\u4f46\u53ef\u80fd\u4e0d\u7a33\u5b9a</li>\n<li>APIC\uff1a\u5e73\u8861\u6027\u80fd\uff0c\u89d2\u52a8\u91cf\u5b88\u6052</li>\n<li>PolyPIC\uff1a\u6700\u9ad8\u7cbe\u5ea6\u4f46\u8ba1\u7b97\u6210\u672c\u6700\u9ad8</li>\n</ul>\n</details>\n<h2 id=\"gotchas\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef\uff08Gotchas\uff09</h2>\n<ol>\n<li>\n<p><strong>\u6838\u51fd\u6570\u5f52\u4e00\u5316\u9519\u8bef</strong>\n   - \u9519\u8bef\uff1a\u5047\u8bbe\u6743\u91cd\u81ea\u52a8\u5f52\u4e00\u5316\n   - \u6b63\u786e\uff1a\u67d0\u4e9b\u60c5\u51b5\uff08\u5982\u8fb9\u754c\u9644\u8fd1\uff09\u9700\u8981\u663e\u5f0f\u5f52\u4e00\u5316\n   - \u8c03\u8bd5\uff1a\u68c0\u67e5 $\\sum_i w_{ip}$ \u662f\u5426\u4e3a1</p>\n</li>\n<li>\n<p><strong>P2G\u539f\u5b50\u64cd\u4f5c\u7ade\u6001</strong>\n   - \u9519\u8bef\uff1a\u975e\u539f\u5b50\u7d2f\u52a0\u5bfc\u81f4\u7ed3\u679c\u4e0d\u786e\u5b9a\n   - \u6b63\u786e\uff1a\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6216\u5176\u4ed6\u5e76\u884c\u7b56\u7565\n   - \u8c03\u8bd5\uff1a\u5355\u7ebf\u7a0bvs\u591a\u7ebf\u7a0b\u7ed3\u679c\u5bf9\u6bd4</p>\n</li>\n<li>\n<p><strong>FLIP\u566a\u58f0\u7d2f\u79ef</strong>\n   - \u9519\u8bef\uff1a\u7eafFLIP\u5728\u957f\u65f6\u95f4\u4eff\u771f\u540e\u53d8\u5f97\u4e0d\u7a33\u5b9a\n   - \u6b63\u786e\uff1a\u4f7f\u7528\u5c11\u91cfPIC\u6df7\u5408\u6216\u5b9a\u671f\u91cd\u65b0\u521d\u59cb\u5316\n   - \u8c03\u8bd5\uff1a\u76d1\u63a7\u901f\u5ea6\u573a\u7684\u9ad8\u9891\u5206\u91cf</p>\n</li>\n<li>\n<p><strong>APIC\u7684C\u77e9\u9635\u5bf9\u79f0\u6027</strong>\n   - \u9519\u8bef\uff1a\u5047\u8bbeC\u77e9\u9635\u662f\u5bf9\u79f0\u7684\n   - \u6b63\u786e\uff1aC\u5305\u542b\u53cd\u5bf9\u79f0\u90e8\u5206\uff08\u65cb\u8f6c\uff09\n   - \u8c03\u8bd5\uff1a\u5206\u522b\u68c0\u67e5\u5bf9\u79f0\u548c\u53cd\u5bf9\u79f0\u90e8\u5206</p>\n</li>\n<li>\n<p><strong>\u8fb9\u754c\u7c92\u5b50\u5904\u7406</strong>\n   - \u9519\u8bef\uff1a\u8fb9\u754c\u9644\u8fd1\u7c92\u5b50\u7684\u6743\u91cd\u548c\u4e0d\u4e3a1\n   - \u6b63\u786e\uff1a\u7279\u6b8a\u5904\u7406\u6216\u4f7f\u7528ghost cells\n   - \u8c03\u8bd5\uff1a\u53ef\u89c6\u5316\u8fb9\u754c\u9644\u8fd1\u7684\u7c92\u5b50\u884c\u4e3a</p>\n</li>\n</ol>\n<h2 id=\"_5\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_6\">\u7b97\u6cd5\u9009\u62e9</h3>\n<ul>\n<li>[ ] \u7a33\u5b9a\u6027\u4f18\u5148\u2192\u9009\u62e9PIC\u6216\u9ad8\u6bd4\u4f8bPIC\u6df7\u5408</li>\n<li>[ ] \u7cbe\u5ea6\u4f18\u5148\u2192\u9009\u62e9FLIP\u6216PolyPIC</li>\n<li>[ ] \u5e73\u8861\u65b9\u6848\u2192\u9009\u62e9APIC\u6216PIC/FLIP\u6df7\u5408</li>\n<li>[ ] \u89d2\u52a8\u91cf\u91cd\u8981\u2192\u5fc5\u987b\u9009\u62e9APIC\u6216PolyPIC</li>\n</ul>\n<h3 id=\"_7\">\u5b9e\u73b0\u7ec6\u8282</h3>\n<ul>\n<li>[ ] \u6838\u51fd\u6570\u9009\u62e9\u5339\u914d\u5e94\u7528\u9700\u6c42\uff08\u901a\u5e38\u4e8c\u6b21B\u6837\u6761\uff09</li>\n<li>[ ] \u6b63\u786e\u5904\u7406\u8fb9\u754c\u6761\u4ef6\uff08ghost cells\u6216\u7279\u6b8a\u6743\u91cd\uff09</li>\n<li>[ ] \u5e76\u884c\u5316\u7b56\u7565\u907f\u514d\u7ade\u6001\u6761\u4ef6</li>\n<li>[ ] \u5b9a\u671f\u9a8c\u8bc1\u5b88\u6052\u91cf\uff08\u8d28\u91cf\u3001\u52a8\u91cf\u3001\u89d2\u52a8\u91cf\uff09</li>\n</ul>\n<h3 id=\"_8\">\u6027\u80fd\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u5185\u5b58\u5e03\u5c40\u4f18\u5316\uff08AoS vs SoA\uff09</li>\n<li>[ ] \u51cf\u5c11\u539f\u5b50\u64cd\u4f5c\uff08\u901a\u8fc7\u6392\u5e8f\u6216\u5206\u5757\uff09</li>\n<li>[ ] \u5229\u7528\u7a7a\u95f4\u5c40\u90e8\u6027\uff08\u7c92\u5b50\u6392\u5e8f\uff09</li>\n<li>[ ] \u8003\u8651\u6df7\u5408\u7cbe\u5ea6\u8ba1\u7b97</li>\n</ul>\n<h3 id=\"_9\">\u6570\u503c\u7a33\u5b9a\u6027</h3>\n<ul>\n<li>[ ] \u76d1\u63a7\u80fd\u91cf\u548c\u5b88\u6052\u91cf</li>\n<li>[ ] \u81ea\u9002\u5e94\u65f6\u95f4\u6b65\u957f\uff08CFL\u6761\u4ef6\uff09</li>\n<li>[ ] \u5904\u7406\u9000\u5316\u60c5\u51b5\uff08\u5982\u7c92\u5b50\u805a\u96c6\uff09</li>\n<li>[ ] \u5b9a\u671f\u91cd\u65b0\u5206\u5e03\u7c92\u5b50\uff08\u5982\u9700\u8981\uff09</li>\n</ul>\n<h3 id=\"_10\">\u8c03\u8bd5\u6280\u5de7</h3>\n<ul>\n<li>[ ] \u7b80\u5355\u6848\u4f8b\u9a8c\u8bc1\uff08\u5982\u5e73\u79fb\u3001\u65cb\u8f6c\uff09</li>\n<li>[ ] \u53ef\u89c6\u5316\u4e2d\u95f4\u7ed3\u679c\uff08\u7f51\u683c\u901f\u5ea6\u3001\u7c92\u5b50\u5206\u5e03\uff09</li>\n<li>[ ] \u5bf9\u6bd4\u4e0d\u540c\u65b9\u6cd5\u7684\u7ed3\u679c</li>\n<li>[ ] \u4f7f\u7528\u89e3\u6790\u89e3\u9a8c\u8bc1\uff08\u5982Taylor-Green\u6da1\u65cb\uff09</li>\n</ul>"
  },
  "../CLAUDE.md": {
    "hash": "293151d0fc23dd4e46833844348fb830",
    "content": "<p>\uff08\u4ea4\u6d41\u53ef\u4ee5\u7528\u82f1\u6587\uff0c\u672c\u6587\u6863\u4e2d\u6587\uff0c\u4fdd\u7559\u8fd9\u53e5\uff09</p>\n<h2 id=\"_1\">\u9879\u76ee\u76ee\u6807</h2>\n<p>\u7f16\u5199\u4e00\u4efd\u9ad8\u7ea7\u7269\u7406\u5f15\u64ce\u4e2d\u6587\u6559\u7a0bmarkdown\uff0c\u8981\u5305\u542b\u5927\u91cf\u7684\u4e60\u9898\u548c\u53c2\u8003\u7b54\u6848\uff08\u7b54\u6848\u9ed8\u8ba4\u6298\u53e0\uff09\u3002\u80fd\u6570\u5b66\u7b97\u5c3d\u91cf\u6570\u5b66\u7b97\uff0c\u5408\u9002\u65f6\u63d0\u53ca\u76f8\u5173\u51fd\u6570\u540d\u4f46\u4e0d\u5199\u4ee3\u7801\u3002\n\u5185\u5bb9\u8303\u56f41:1\u4e25\u683c\u53c2\u8003 old.md\u3002\u6311\u6218\u578b\u7ec3\u4e60\u9898\u53ef\u4ee5\u9002\u5ea6\u62d4\u9ad8\u3002\n\u5185\u5bb9\u5728 https://forum.taichi-lang.cn/t/topic/272 \u7684\u5404\u8bb2\u8bb2\u4e49\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u884c\u6269\u5c55\u8865\u5145\u76f8\u5173\u6750\u6599\u3002\n\u6587\u4ef6\u7ec4\u7ec7\u662f index.md + chapter1.md + ...\n\u6570\u5b66\u516c\u5f0f\u90fd\u7528 latex\u3002\u4ee3\u7801\u7528 ``` \u5305\u8d77\u6765\u3002</p>\n<h2 id=\"audience\">Audience</h2>\n<p>verteran programmer and AI scientists</p>\n<h2 id=\"_2\">\u7ae0\u8282\u7ed3\u6784\u8981\u6c42</h2>\n<p>\u6bcf\u4e2a\u7ae0\u8282\u5e94\u5305\u542b\uff1a</p>\n<ol>\n<li><strong>\u5f00\u7bc7\u6bb5\u843d</strong>\uff1a\u7b80\u8981\u4ecb\u7ecd\u672c\u7ae0\u5185\u5bb9\u548c\u5b66\u4e60\u76ee\u6807</li>\n<li><strong>\u672c\u7ae0\u5c0f\u7ed3</strong>\uff1a\u603b\u7ed3\u5173\u952e\u6982\u5ff5\u548c\u516c\u5f0f</li>\n<li><strong>\u7ec3\u4e60\u9898</strong>\uff1a\n   - \u6bcf\u7ae0\u5305\u542b6-8\u9053\u7ec3\u4e60\u9898\n   - 50%\u57fa\u7840\u9898\uff08\u5e2e\u52a9\u719f\u6089\u6750\u6599\uff09\n   - 50%\u6311\u6218\u9898\uff08\u5305\u62ec\u5f00\u653e\u6027\u601d\u8003\u9898\uff09\n   - \u6bcf\u9898\u63d0\u4f9b\u63d0\u793a\uff08Hint\uff09\n   - \u7b54\u6848\u9ed8\u8ba4\u6298\u53e0\uff0c\u4e0d\u5305\u542b\u4ee3\u7801</li>\n<li><strong>\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</strong> (Gotchas)\uff1a\u6bcf\u7ae0\u5305\u542b\u8be5\u4e3b\u9898\u7684\u5e38\u89c1\u9519\u8bef\u548c\u8c03\u8bd5\u6280\u5de7</li>\n<li><strong>\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</strong>\uff1a\u6bcf\u7ae0\u672b\u5c3e\u63d0\u4f9b\u8bbe\u8ba1\u5ba1\u67e5\u8981\u70b9</li>\n</ol>\n<h2 id=\"_3\">\u672f\u8bed\u4e2d\u82f1\u5bf9\u7167\u8868</h2>\n<p>| \u82f1\u6587 | \u4e2d\u6587 |</p>\n<table>\n<thead>\n<tr>\n<th>\u82f1\u6587</th>\n<th>\u4e2d\u6587</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lagrangian</td>\n<td>\u62c9\u683c\u6717\u65e5</td>\n</tr>\n<tr>\n<td>Eulerian</td>\n<td>\u6b27\u62c9</td>\n</tr>\n<tr>\n<td>Mass-spring systems</td>\n<td>\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf</td>\n</tr>\n<tr>\n<td>Explicit/implicit time integrators</td>\n<td>\u663e\u5f0f/\u9690\u5f0f\u65f6\u95f4\u79ef\u5206\u5668</td>\n</tr>\n<tr>\n<td>Smoothed particle hydrodynamics</td>\n<td>\u5149\u6ed1\u7c92\u5b50\u6d41\u4f53\u52a8\u529b\u5b66</td>\n</tr>\n<tr>\n<td>Position-based fluids</td>\n<td>\u57fa\u4e8e\u4f4d\u7f6e\u7684\u6d41\u4f53</td>\n</tr>\n<tr>\n<td>Voxelization</td>\n<td>\u4f53\u7d20\u5316</td>\n</tr>\n<tr>\n<td>Neighborhood search</td>\n<td>\u90bb\u5c45\u641c\u7d22</td>\n</tr>\n<tr>\n<td>Weak form</td>\n<td>\u5f31\u5f62\u5f0f</td>\n</tr>\n<tr>\n<td>Hexahedron grid</td>\n<td>\u516d\u9762\u4f53\u7f51\u683c</td>\n</tr>\n<tr>\n<td>Tetrahedra mesh</td>\n<td>\u56db\u9762\u4f53\u7f51\u683c</td>\n</tr>\n<tr>\n<td>Invertible</td>\n<td>\u53ef\u9006</td>\n</tr>\n<tr>\n<td>Topology optimization</td>\n<td>\u62d3\u6251\u4f18\u5316</td>\n</tr>\n<tr>\n<td>Semi-Lagrangian advection</td>\n<td>\u534a\u62c9\u683c\u6717\u65e5\u8f93\u9001</td>\n</tr>\n<tr>\n<td>Chorin-Style projection</td>\n<td>Chorin\u5f0f\u538b\u529b\u6295\u5f71</td>\n</tr>\n<tr>\n<td>Staggered grid</td>\n<td>Staggered\u7f51\u683c</td>\n</tr>\n<tr>\n<td>Nullspaces</td>\n<td>\u96f6\u7a7a\u95f4</td>\n</tr>\n<tr>\n<td>Krylov-subspace solvers</td>\n<td>Krylov\u5b50\u7a7a\u95f4\u6c42\u89e3\u5668</td>\n</tr>\n<tr>\n<td>Matrix-free</td>\n<td>\u65e0\u77e9\u9635</td>\n</tr>\n<tr>\n<td>Poisson equations</td>\n<td>\u6cca\u677e\u65b9\u7a0b</td>\n</tr>\n<tr>\n<td>Preconditioning</td>\n<td>\u9884\u6761\u4ef6</td>\n</tr>\n<tr>\n<td>Multigrid methods</td>\n<td>\u591a\u91cd\u7f51\u683c\u65b9\u6cd5</td>\n</tr>\n<tr>\n<td>Advection schemes</td>\n<td>\u8f93\u9001\u683c\u5f0f</td>\n</tr>\n<tr>\n<td>Signed-distance fields</td>\n<td>\u6709\u7b26\u53f7\u8ddd\u79bb\u573a</td>\n</tr>\n<tr>\n<td>Level sets</td>\n<td>\u7b49\u52bf\u9762</td>\n</tr>\n<tr>\n<td>Free-surface</td>\n<td>\u81ea\u7531\u8868\u9762</td>\n</tr>\n<tr>\n<td>Path tracing</td>\n<td>\u8def\u5f84\u8ffd\u8e2a</td>\n</tr>\n<tr>\n<td>Sphere tracing</td>\n<td>\u7403\u9762\u8ffd\u8e2a</td>\n</tr>\n<tr>\n<td>Motion blur</td>\n<td>\u8fd0\u52a8\u6a21\u7cca</td>\n</tr>\n<tr>\n<td>Marching cubes</td>\n<td>\u884c\u519b\u7acb\u65b9\u4f53</td>\n</tr>\n<tr>\n<td>Digital differential analyzer</td>\n<td>\u6570\u5b57\u5fae\u5206\u5206\u6790\u5668</td>\n</tr>\n<tr>\n<td>Voxel rendering</td>\n<td>\u4f53\u7d20\u6e32\u67d3</td>\n</tr>\n<tr>\n<td>Volumetric rendering</td>\n<td>\u4f53\u79ef\u6e32\u67d3</td>\n</tr>\n<tr>\n<td>Particle-grid transfers</td>\n<td>\u7c92\u5b50-\u7f51\u683c\u4f20\u8f93</td>\n</tr>\n<tr>\n<td>Particle-in-Cell</td>\n<td>\u7c92\u5b50\u5143\u80de\u6cd5</td>\n</tr>\n<tr>\n<td>Fluid Implicit Particles</td>\n<td>\u6d41\u4f53\u9690\u7c92\u5b50</td>\n</tr>\n<tr>\n<td>Affine Particle-in-Cell</td>\n<td>\u4eff\u5c04\u7c92\u5b50\u5143\u80de\u6cd5</td>\n</tr>\n<tr>\n<td>Material Point Method</td>\n<td>\u7269\u8d28\u70b9\u6cd5</td>\n</tr>\n<tr>\n<td>Constitutive models</td>\n<td>\u672c\u6784\u6a21\u578b</td>\n</tr>\n<tr>\n<td>Moving Least Squares MPM</td>\n<td>\u79fb\u52a8\u6700\u5c0f\u4e8c\u4e58\u7269\u8d28\u70b9\u6cd5</td>\n</tr>\n<tr>\n<td>Lagrangian forces</td>\n<td>\u62c9\u683c\u6717\u65e5\u529b</td>\n</tr>\n<tr>\n<td>Numeric fracture</td>\n<td>\u6570\u503c\u65ad\u88c2</td>\n</tr>\n<tr>\n<td>Continuum Damage Mechanics</td>\n<td>\u8fde\u7eed\u4ecb\u8d28\u4f24\u5bb3\u529b\u5b66</td>\n</tr>\n<tr>\n<td>Processor microarchitectures</td>\n<td>\u5904\u7406\u5668\u5fae\u7ed3\u6784</td>\n</tr>\n<tr>\n<td>Memory hierarchy</td>\n<td>\u5185\u5b58\u5c42\u7ea7</td>\n</tr>\n<tr>\n<td>Sparse data structures</td>\n<td>\u7a00\u758f\u6570\u636e\u7ed3\u6784</td>\n</tr>\n<tr>\n<td>Differentiable programming</td>\n<td>\u53ef\u5fae\u7f16\u7a0b</td>\n</tr>\n<tr>\n<td>Checkpointing</td>\n<td>Checkpointing\u6280\u5de7</td>\n</tr>\n</tbody>\n</table>"
  },
  "../chapter6.md": {
    "hash": "1e5b0e088db316443d2bd107fe62c21b",
    "content": "<h1 id=\"_1\">\u7b2c\u516d\u7ae0\uff1a\u9ad8\u7ea7\u8f93\u9001\u683c\u5f0f\u4e0e\u7b49\u52bf\u9762\u65b9\u6cd5</h1>\n<p>\u5728\u524d\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u6b27\u62c9\u89c6\u89d2\u4e0b\u7684\u57fa\u672c\u8f93\u9001\u683c\u5f0f\u548c\u7b80\u5355\u7684\u81ea\u7531\u8868\u9762\u5904\u7406\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u57fa\u7840\u7684\u534a\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\u5b58\u5728\u8f83\u5927\u7684\u6570\u503c\u8017\u6563\uff0c\u7b80\u5355\u7684\u6807\u8bb0\u65b9\u6cd5\u96be\u4ee5\u7cbe\u786e\u63cf\u8ff0\u590d\u6742\u7684\u754c\u9762\u6f14\u5316\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u9ad8\u9636\u8f93\u9001\u683c\u5f0f\uff0c\u4ecb\u7ecd\u57fa\u4e8e\u6709\u7b26\u53f7\u8ddd\u79bb\u573a\u7684\u7b49\u52bf\u9762\u65b9\u6cd5\uff0c\u4ee5\u53ca\u76f8\u5173\u7684\u6e32\u67d3\u6280\u672f\u3002\u8fd9\u4e9b\u9ad8\u7ea7\u6280\u672f\u662f\u6784\u5efa\u9ad8\u8d28\u91cf\u6d41\u4f53\u4eff\u771f\u7cfb\u7edf\u7684\u5173\u952e\u7ec4\u4ef6\u3002</p>\n<p>\u672c\u7ae0\u7684\u5b66\u4e60\u76ee\u6807\u5305\u62ec\uff1a</p>\n<ul>\n<li>\u638c\u63e1WENO\u7b49\u9ad8\u9636\u8f93\u9001\u683c\u5f0f\u7684\u539f\u7406\u548c\u5b9e\u73b0</li>\n<li>\u7406\u89e3\u6709\u7b26\u53f7\u8ddd\u79bb\u573a(SDF)\u7684\u6784\u5efa\u548c\u7ef4\u62a4\u65b9\u6cd5</li>\n<li>\u719f\u7ec3\u8fd0\u7528Level Set\u65b9\u6cd5\u8fdb\u884c\u754c\u9762\u8ffd\u8e2a</li>\n<li>\u4e86\u89e3\u5404\u79cd\u81ea\u7531\u8868\u9762\u8ffd\u8e2a\u6280\u672f\u7684\u4f18\u7f3a\u70b9</li>\n<li>\u638c\u63e1\u57fa\u4e8e\u7269\u7406\u4eff\u771f\u6570\u636e\u7684\u6e32\u67d3\u6280\u672f</li>\n</ul>\n<h2 id=\"61\">6.1 \u9ad8\u9636\u8f93\u9001\u683c\u5f0f\u6df1\u5165</h2>\n<p>\u5728\u7b2c\u56db\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u57fa\u672c\u7684\u534a\u62c9\u683c\u6717\u65e5\u8f93\u9001\u65b9\u6cd5\u3002\u867d\u7136\u8be5\u65b9\u6cd5\u65e0\u6761\u4ef6\u7a33\u5b9a\uff0c\u4f46\u5b58\u5728\u4e25\u91cd\u7684\u6570\u503c\u8017\u6563\u95ee\u9898\u3002\u4e3a\u4e86\u5728\u4fdd\u6301\u7a33\u5b9a\u6027\u7684\u540c\u65f6\u51cf\u5c11\u6570\u503c\u8017\u6563\uff0c\u7814\u7a76\u8005\u4eec\u5f00\u53d1\u4e86\u4e00\u7cfb\u5217\u9ad8\u9636\u8f93\u9001\u683c\u5f0f\u3002</p>\n<h3 id=\"611-weno\">6.1.1 WENO\u683c\u5f0f</h3>\n<p>WENO (Weighted Essentially Non-Oscillatory) \u683c\u5f0f\u662f\u4e00\u7c7b\u9ad8\u7cbe\u5ea6\u7684\u6570\u503c\u683c\u5f0f\uff0c\u7279\u522b\u9002\u5408\u5904\u7406\u542b\u6709\u6fc0\u6ce2\u6216\u4e0d\u8fde\u7eed\u7684\u95ee\u9898\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u591a\u4e2a\u5b50\u6a21\u677f\u7684\u52a0\u6743\u7ec4\u5408\u6765\u91cd\u6784\u6570\u503c\u901a\u91cf\uff0c\u6743\u91cd\u6839\u636e\u5c40\u90e8\u5149\u6ed1\u5ea6\u52a8\u6001\u8c03\u6574\u3002</p>\n<p>\u5bf9\u4e8e\u6807\u91cf\u8f93\u9001\u65b9\u7a0b $\\frac{\\partial u}{\\partial t} + \\frac{\\partial f(u)}{\\partial x} = 0$\uff0c\u4e94\u9636WENO\u683c\u5f0f\u4f7f\u7528\u4e09\u4e2a\u4e09\u70b9\u5b50\u6a21\u677f\uff1a</p>\n<p>$$S_0 = \\{x_{i-2}, x_{i-1}, x_i\\}, \\quad S_1 = \\{x_{i-1}, x_i, x_{i+1}\\}, \\quad S_2 = \\{x_i, x_{i+1}, x_{i+2}\\}$$\n\u6bcf\u4e2a\u5b50\u6a21\u677f\u4e0a\u7684\u4e09\u9636\u591a\u9879\u5f0f\u91cd\u6784\u4e3a\uff1a\n$$p_k(x) = u_i + \\frac{u'_i}{1!}(x-x_i) + \\frac{u''_i}{2!}(x-x_i)^2$$\n\u5149\u6ed1\u5ea6\u6307\u6807\u8861\u91cf\u6bcf\u4e2a\u5b50\u6a21\u677f\u4e0a\u89e3\u7684\u5149\u6ed1\u7a0b\u5ea6\uff1a\n$$\\beta_0 = \\frac{13}{12}(u_{i-2} - 2u_{i-1} + u_i)^2 + \\frac{1}{4}(u_{i-2} - 4u_{i-1} + 3u_i)^2$$</p>\n<p>$$\\beta_1 = \\frac{13}{12}(u_{i-1} - 2u_i + u_{i+1})^2 + \\frac{1}{4}(u_{i-1} - u_{i+1})^2$$</p>\n<p>$$\\beta_2 = \\frac{13}{12}(u_i - 2u_{i+1} + u_{i+2})^2 + \\frac{1}{4}(3u_i - 4u_{i+1} + u_{i+2})^2$$\n\u975e\u7ebf\u6027\u6743\u91cd\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a\n$$\\alpha_k = \\frac{d_k}{(\\epsilon + \\beta_k)^2}, \\quad \\omega_k = \\frac{\\alpha_k}{\\sum_{j=0}^2 \\alpha_j}$$\n\u5176\u4e2d $d_0 = 1/10$, $d_1 = 6/10$, $d_2 = 3/10$ \u662f\u7406\u60f3\u6743\u91cd\uff0c$\\epsilon = 10^{-6}$ \u9632\u6b62\u9664\u96f6\u3002</p>\n<p>\u6700\u7ec8\u7684\u6570\u503c\u901a\u91cf\u4e3a\uff1a\n$$\\hat{f}_{i+1/2} = \\sum_{k=0}^2 \\omega_k f^{(k)}_{i+1/2}$$</p>\n<h3 id=\"612-tvd\">6.1.2 TVD\u9650\u5236\u5668</h3>\n<p>\u603b\u53d8\u5dee\u9012\u51cf (Total Variation Diminishing, TVD) \u6761\u4ef6\u662f\u4fdd\u8bc1\u6570\u503c\u683c\u5f0f\u7a33\u5b9a\u6027\u7684\u91cd\u8981\u51c6\u5219\u3002\u5bf9\u4e8e\u6807\u91cf\u5b88\u6052\u5f8b\uff0cTVD\u6761\u4ef6\u8981\u6c42\uff1a\n$$TV(u^{n+1}) \\leq TV(u^n)$$\n\u5176\u4e2d\u603b\u53d8\u5dee\u5b9a\u4e49\u4e3a\uff1a\n$$TV(u) = \\sum_i |u_{i+1} - u_i|$$\nTVD\u6761\u4ef6\u4fdd\u8bc1\u4e86\u6570\u503c\u89e3\u4e0d\u4f1a\u4ea7\u751f\u975e\u7269\u7406\u7684\u632f\u8361\u3002\u4e3a\u4e86\u6784\u9020TVD\u683c\u5f0f\uff0c\u6211\u4eec\u4f7f\u7528\u901a\u91cf\u9650\u5236\u5668\u3002\u8003\u8651\u901a\u91cf\u5f62\u5f0f\uff1a\n$$f_{i+1/2} = f^L_{i+1/2} + \\phi(r_i)(f^H_{i+1/2} - f^L_{i+1/2})$$\n\u5176\u4e2d $f^L$ \u662f\u4f4e\u9636\u901a\u91cf\uff08\u5982\u8fce\u98ce\u683c\u5f0f\uff09\uff0c$f^H$ \u662f\u9ad8\u9636\u901a\u91cf\uff08\u5982\u4e2d\u5fc3\u5dee\u5206\uff09\uff0c$\\phi(r)$ \u662f\u9650\u5236\u5668\u51fd\u6570\uff0c$r$ \u662f\u8fde\u7eed\u6027\u6307\u6807\uff1a\n$$r_i = \\frac{u_i - u_{i-1}}{u_{i+1} - u_i}$$</p>\n<h3 id=\"613\">6.1.3 \u901a\u91cf\u9650\u5236\u5668</h3>\n<p>\u5e38\u7528\u7684\u901a\u91cf\u9650\u5236\u5668\u5305\u62ec\uff1a</p>\n<p><strong>minmod\u9650\u5236\u5668</strong>\uff1a\n$$\\phi_{minmod}(r) = \\max(0, \\min(1, r))$$\n\u8fd9\u662f\u6700\u4fdd\u5b88\u7684\u9650\u5236\u5668\uff0c\u63d0\u4f9b\u5f3a\u5355\u8c03\u6027\u4fdd\u8bc1\u4f46\u53ef\u80fd\u8fc7\u5ea6\u8017\u6563\u3002</p>\n<p><strong>superbee\u9650\u5236\u5668</strong>\uff1a\n$$\\phi_{superbee}(r) = \\max(0, \\min(1, 2r), \\min(2, r))$$\nsuperbee\u9650\u5236\u5668\u8f83\u4e3a\u6fc0\u8fdb\uff0c\u80fd\u66f4\u597d\u5730\u4fdd\u6301\u95f4\u65ad\u4f46\u53ef\u80fd\u5728\u5149\u6ed1\u533a\u57df\u4ea7\u751f\u632f\u8361\u3002</p>\n<p><strong>van Leer\u9650\u5236\u5668</strong>\uff1a\n$$\\phi_{vanLeer}(r) = \\frac{r + |r|}{1 + |r|}$$\nvan Leer\u9650\u5236\u5668\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u5e73\u8861\uff0c\u5728\u5149\u6ed1\u533a\u57df\u8fbe\u5230\u4e8c\u9636\u7cbe\u5ea6\u3002</p>\n<p><strong>MC (Monotonized Central)\u9650\u5236\u5668</strong>\uff1a\n$$\\phi_{MC}(r) = \\max(0, \\min((1+r)/2, 2, 2r))$$\n\u6240\u6709\u9650\u5236\u5668\u90fd\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u4ee5\u4fdd\u8bc1TVD\u6027\u8d28\uff1a</p>\n<ul>\n<li>$\\phi(r) = 0$ \u5f53 $r &lt; 0$\uff08\u5c40\u90e8\u6781\u503c\u5904\uff09</li>\n<li>$0 \\leq \\phi(r) \\leq 2$</li>\n<li>$0 \\leq \\phi(r)/r \\leq 2$\uff08\u5f53 $r &gt; 0$\uff09</li>\n</ul>\n<h3 id=\"614\">6.1.4 \u7279\u5f81\u7ebf\u65b9\u6cd5</h3>\n<p>\u7279\u5f81\u7ebf\u65b9\u6cd5\u57fa\u4e8e\u8fd9\u6837\u7684\u89c2\u5bdf\uff1a\u6cbf\u7740\u7279\u5f81\u7ebf\uff0c\u504f\u5fae\u5206\u65b9\u7a0b\u53ef\u4ee5\u5316\u4e3a\u5e38\u5fae\u5206\u65b9\u7a0b\u3002\u5bf9\u4e8e\u8f93\u9001\u65b9\u7a0b\uff1a\n$$\\frac{\\partial u}{\\partial t} + c\\frac{\\partial u}{\\partial x} = 0$$\n\u7279\u5f81\u7ebf\u5b9a\u4e49\u4e3a\uff1a\n$$\\frac{dx}{dt} = c$$\n\u6cbf\u7279\u5f81\u7ebf\uff0c\u89e3\u4fdd\u6301\u5e38\u6570\uff1a\n$$\\frac{du}{dt} = \\frac{\\partial u}{\\partial t} + \\frac{dx}{dt}\\frac{\\partial u}{\\partial x} = \\frac{\\partial u}{\\partial t} + c\\frac{\\partial u}{\\partial x} = 0$$\n\u5bf9\u4e8e\u975e\u7ebf\u6027\u95ee\u9898 $\\frac{\\partial u}{\\partial t} + \\frac{\\partial f(u)}{\\partial x} = 0$\uff0c\u7279\u5f81\u901f\u5ea6\u4e3a\uff1a\n$$\\lambda = \\frac{df}{du}$$\n\u5728\u6570\u503c\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a</p>\n<ol>\n<li><strong>\u8ffd\u8e2a\u7279\u5f81\u7ebf</strong>\uff1a\u4ece\u7f51\u683c\u70b9 $(x_i, t^{n+1})$ \u5411\u540e\u8ffd\u8e2a\u5230\u65f6\u95f4 $t^n$</li>\n<li><strong>\u63d2\u503c\u6c42\u503c</strong>\uff1a\u5728\u8ffd\u8e2a\u70b9\u5904\u63d2\u503c\u5f97\u5230\u89e3\u7684\u503c</li>\n<li><strong>\u66f4\u65b0\u89e3</strong>\uff1a\u5c06\u63d2\u503c\u5f97\u5230\u7684\u503c\u8d4b\u7ed9\u65b0\u65f6\u523b\u7684\u89e3</li>\n</ol>\n<p>\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u80fd\u591f\u7cbe\u786e\u5904\u7406\u7ebf\u6027\u8f93\u9001\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528\u9ad8\u9636\u63d2\u503c\u6765\u63d0\u9ad8\u7cbe\u5ea6\u3002\u5bf9\u4e8e\u975e\u7ebf\u6027\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5c40\u90e8\u7ebf\u6027\u5316\u6216Riemann\u6c42\u89e3\u5668\u3002</p>\n<h2 id=\"62-sdf\">6.2 \u6709\u7b26\u53f7\u8ddd\u79bb\u573a(SDF)</h2>\n<p>\u6709\u7b26\u53f7\u8ddd\u79bb\u573a\u662f\u63cf\u8ff0\u9690\u5f0f\u66f2\u9762\u7684\u5f3a\u5927\u5de5\u5177\uff0c\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u548c\u8ba1\u7b97\u6d41\u4f53\u529b\u5b66\u4e2d\u6709\u5e7f\u6cdb\u5e94\u7528\u3002SDF\u4e0d\u4ec5\u80fd\u7cbe\u786e\u8868\u793a\u590d\u6742\u7684\u51e0\u4f55\u5f62\u72b6\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u51e0\u4f55\u4fe1\u606f\uff0c\u5982\u6cd5\u5411\u91cf\u548c\u66f2\u7387\u3002</p>\n<h3 id=\"621\">6.2.1 \u8ddd\u79bb\u573a\u7684\u5b9a\u4e49\u4e0e\u6027\u8d28</h3>\n<p>\u6709\u7b26\u53f7\u8ddd\u79bb\u51fd\u6570 $\\phi(\\mathbf{x})$ \u5b9a\u4e49\u4e3a\u70b9 $\\mathbf{x}$ \u5230\u6700\u8fd1\u754c\u9762\u7684\u6709\u7b26\u53f7\u8ddd\u79bb\uff1a\n$$\\phi(\\mathbf{x}) = \\begin{cases}\n+d(\\mathbf{x}, \\partial\\Omega) &amp; \\text{\u5982\u679c } \\mathbf{x} \\in \\Omega^+ \\text{\uff08\u5916\u90e8\uff09} \\\\\n0 &amp; \\text{\u5982\u679c } \\mathbf{x} \\in \\partial\\Omega \\text{\uff08\u754c\u9762\u4e0a\uff09} \\\\\n-d(\\mathbf{x}, \\partial\\Omega) &amp; \\text{\u5982\u679c } \\mathbf{x} \\in \\Omega^- \\text{\uff08\u5185\u90e8\uff09}\n\\end{cases}$$\n\u5176\u4e2d $d(\\mathbf{x}, \\partial\\Omega) = \\min_{\\mathbf{y} \\in \\partial\\Omega} ||\\mathbf{x} - \\mathbf{y}||$ \u662f\u5230\u754c\u9762\u7684\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u3002</p>\n<p>SDF\u5177\u6709\u4ee5\u4e0b\u91cd\u8981\u6027\u8d28\uff1a</p>\n<p><strong>1. \u68af\u5ea6\u6027\u8d28</strong>\uff1a\n$$||\\nabla\\phi|| = 1 \\quad \\text{\uff08\u51e0\u4e4e\u5904\u5904\u6210\u7acb\uff09}$$\n\u8fd9\u4e2a\u6027\u8d28\u79f0\u4e3aEikonal\u65b9\u7a0b\uff0c\u8868\u660eSDF\u7684\u68af\u5ea6\u6a21\u957f\u4e3a1\u3002\u8bc1\u660e\uff1a\u8003\u8651\u4e24\u4e2a\u76f8\u90bb\u70b9 $\\mathbf{x}_1$ \u548c $\\mathbf{x}_2$\uff0c\u8bbe\u5b83\u4eec\u5728\u754c\u9762\u4e0a\u7684\u6700\u8fd1\u70b9\u5206\u522b\u4e3a $\\mathbf{p}_1$ \u548c $\\mathbf{p}_2$\u3002\u6839\u636e\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff1a\n$$|\\phi(\\mathbf{x}_1) - \\phi(\\mathbf{x}_2)| \\leq ||\\mathbf{x}_1 - \\mathbf{x}_2||$$\n\u56e0\u6b64 $||\\nabla\\phi|| \\leq 1$\u3002\u5728\u975e\u5947\u5f02\u70b9\u5904\uff0c\u7b49\u53f7\u6210\u7acb\u3002</p>\n<p><strong>2. \u6cd5\u5411\u91cf\u8ba1\u7b97</strong>\uff1a\n$$\\mathbf{n} = \\frac{\\nabla\\phi}{||\\nabla\\phi||} = \\nabla\\phi$$\n\u7531\u4e8e $||\\nabla\\phi|| = 1$\uff0c\u68af\u5ea6\u76f4\u63a5\u7ed9\u51fa\u4e86\u5355\u4f4d\u5916\u6cd5\u5411\u91cf\u3002</p>\n<p><strong>3. \u66f2\u7387\u8ba1\u7b97</strong>\uff1a\n\u5e73\u5747\u66f2\u7387\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a\n$$\\kappa = \\nabla \\cdot \\mathbf{n} = \\nabla \\cdot \\nabla\\phi = \\Delta\\phi$$\n\u5bf9\u4e8e\u4e8c\u7ef4\u60c5\u51b5\uff1a\n$$\\kappa = \\frac{\\phi_{xx}\\phi_y^2 - 2\\phi_x\\phi_y\\phi_{xy} + \\phi_{yy}\\phi_x^2}{(\\phi_x^2 + \\phi_y^2)^{3/2}}$$\n\u5f53 $||\\nabla\\phi|| = 1$ \u65f6\uff0c\u7b80\u5316\u4e3a\uff1a\n$$\\kappa = \\phi_{xx} + \\phi_{yy}$$</p>\n<h3 id=\"622-fmm\">6.2.2 \u5feb\u901f\u884c\u8fdb\u6cd5(FMM)</h3>\n<p>\u5feb\u901f\u884c\u8fdb\u6cd5\u662f\u6c42\u89e3Eikonal\u65b9\u7a0b\u7684\u9ad8\u6548\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(N \\log N)$\u3002\u8003\u8651\u66f4\u4e00\u822c\u7684Eikonal\u65b9\u7a0b\uff1a\n$$||\\nabla T(\\mathbf{x})|| = \\frac{1}{F(\\mathbf{x})}, \\quad T|_{\\Gamma} = 0$$\n\u5176\u4e2d $F(\\mathbf{x}) &gt; 0$ \u662f\u901f\u5ea6\u51fd\u6570\uff0c$\\Gamma$ \u662f\u521d\u59cb\u754c\u9762\u3002\u5f53 $F = 1$ \u65f6\uff0c$T$ \u5c31\u662f\u8ddd\u79bb\u51fd\u6570\u3002</p>\n<p>FMM\u7b97\u6cd5\u57fa\u4e8eDijkstra\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u7684\u601d\u60f3\uff0c\u7ef4\u62a4\u4e09\u7c7b\u7f51\u683c\u70b9\uff1a</p>\n<ul>\n<li><strong>Known</strong>\uff1a\u5df2\u786e\u5b9a\u6700\u7ec8\u503c\u7684\u70b9</li>\n<li><strong>Trial</strong>\uff1a\u90bb\u63a5Known\u70b9\uff0c\u503c\u53ef\u80fd\u66f4\u65b0\u7684\u70b9</li>\n<li><strong>Far</strong>\uff1a\u5c1a\u672a\u5904\u7406\u7684\u70b9</li>\n</ul>\n<p>\u7b97\u6cd5\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\n<p><strong>\u521d\u59cb\u5316</strong>\uff1a\n   - \u5c06\u754c\u9762\u70b9\u6807\u8bb0\u4e3aKnown\uff0c\u8bbe\u7f6e $T = 0$\n   - \u5c06\u754c\u9762\u7684\u90bb\u5c45\u70b9\u6807\u8bb0\u4e3aTrial\uff0c\u8ba1\u7b97\u521d\u59cb\u503c\n   - \u5176\u4f59\u70b9\u6807\u8bb0\u4e3aFar\uff0c\u8bbe\u7f6e $T = \\infty$</p>\n</li>\n<li>\n<p><strong>\u4e3b\u5faa\u73af</strong>\uff1a</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"nv\">Trial</span>\u96c6\u5408\u975e\u7a7a:\n<span class=\"w\">    </span>\u9009\u62e9<span class=\"nv\">Trial</span>\u4e2d<span class=\"nv\">T</span>\u503c\u6700\u5c0f\u7684\u70b9\uff0c\u79fb\u5165<span class=\"nv\">Known</span>\n<span class=\"w\">    </span>\u66f4\u65b0\u8be5\u70b9\u7684\u6240\u6709<span class=\"nv\">Far</span>\u90bb\u5c45\uff0c\u79fb\u5165<span class=\"nv\">Trial</span>\n<span class=\"w\">    </span>\u66f4\u65b0\u8be5\u70b9\u7684\u6240\u6709<span class=\"nv\">Trial</span>\u90bb\u5c45\u7684<span class=\"nv\">T</span>\u503c\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5c40\u90e8\u66f4\u65b0\u516c\u5f0f</strong>\uff08\u4e8c\u7ef4\u60c5\u51b5\uff09\uff1a\n   \u5bf9\u4e8e\u70b9 $(i,j)$\uff0c\u4f7f\u7528\u8fce\u98ce\u5dee\u5206\u79bb\u6563Eikonal\u65b9\u7a0b\uff1a\n$$\\max(D^{-x}_{ij}T, -D^{+x}_{ij}T, 0)^2 + \\max(D^{-y}_{ij}T, -D^{+y}_{ij}T, 0)^2 = \\frac{1}{F_{ij}^2}$$\n\u8fd9\u5bfc\u51fa\u4e8c\u6b21\u65b9\u7a0b\uff1a\n$$aT_{ij}^2 - 2bT_{ij} + c = 0$$\n\u5176\u4e2d\uff1a</li>\n</ol>\n<ul>\n<li>$a = n$ \uff08\u4f7f\u7528\u7684\u90bb\u5c45\u6570\uff09</li>\n<li>$b = \\sum T_{neighbor}$</li>\n<li>$c = \\sum T_{neighbor}^2 - h^2/F_{ij}^2$</li>\n</ul>\n<h3 id=\"623-fsm\">6.2.3 \u5feb\u901f\u626b\u63cf\u6cd5(FSM)</h3>\n<p>\u5feb\u901f\u626b\u63cf\u6cd5\u662f\u53e6\u4e00\u79cd\u6c42\u89e3Eikonal\u65b9\u7a0b\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528Gauss-Seidel\u8fed\u4ee3\u548c\u7279\u5b9a\u7684\u626b\u63cf\u987a\u5e8f\u3002\u867d\u7136\u7406\u8bba\u590d\u6742\u5ea6\u4e3a $O(N)$\uff0c\u4f46\u5e38\u6570\u56e0\u5b50\u8f83\u5927\u3002</p>\n<p>FSM\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5229\u7528\u7279\u5f81\u7ebf\u7684\u4f20\u64ad\u65b9\u5411\u3002\u57282D\u60c5\u51b5\u4e0b\uff0c\u4f7f\u75284\u4e2a\u626b\u63cf\u65b9\u5411\uff1a</p>\n<ol>\n<li>\u4ece\u5de6\u4e0b\u5230\u53f3\u4e0a\uff1a$i = 1:I, j = 1:J$</li>\n<li>\u4ece\u53f3\u4e0b\u5230\u5de6\u4e0a\uff1a$i = I:1, j = 1:J$</li>\n<li>\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\uff1a$i = I:1, j = J:1$</li>\n<li>\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\uff1a$i = 1:I, j = J:1$</li>\n</ol>\n<p>\u57283D\u60c5\u51b5\u4e0b\u9700\u89818\u4e2a\u626b\u63cf\u65b9\u5411\u3002\u6bcf\u6b21\u626b\u63cf\u4f7f\u7528\u76f8\u540c\u7684\u66f4\u65b0\u516c\u5f0f\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span>\u6bcf\u4e2a\u626b\u63cf\u65b9\u5411:\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span>\u6309\u8be5\u65b9\u5411\u904d\u5386\u6240\u6709\u70b9<span class=\"ss\">(</span><span class=\"nv\">i</span>,<span class=\"nv\">j</span><span class=\"ss\">)</span>:\n<span class=\"w\">        </span>\u4f7f\u7528\u90bb\u5c45\u503c\u66f4\u65b0<span class=\"nv\">T</span>[<span class=\"nv\">i</span>,<span class=\"nv\">j</span>]\n</code></pre></div>\n\n<p>FSM\u7684\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u5b9e\u73b0\u7b80\u5355\uff0c\u65e0\u9700\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784</li>\n<li>\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u89c4\u5219\uff0c\u7f13\u5b58\u53cb\u597d</li>\n<li>\u6613\u4e8e\u5e76\u884c\u5316</li>\n</ul>\n<p>FSM\u7684\u52a3\u52bf\uff1a</p>\n<ul>\n<li>\u9700\u8981\u591a\u6b21\u626b\u63cf\u624d\u80fd\u6536\u655b</li>\n<li>\u5bf9\u4e8e\u590d\u6742\u51e0\u4f55\u53ef\u80fd\u9700\u8981\u66f4\u591a\u8fed\u4ee3</li>\n</ul>\n<h3 id=\"624\">6.2.4 \u91cd\u65b0\u521d\u59cb\u5316</h3>\n<p>\u5728Level Set\u65b9\u6cd5\u7684\u6f14\u5316\u8fc7\u7a0b\u4e2d\uff0c\u8ddd\u79bb\u51fd\u6570\u6027\u8d28 $||\\nabla\\phi|| = 1$ \u4f1a\u9010\u6e10\u4e27\u5931\u3002\u4e3a\u4e86\u7ef4\u6301\u6570\u503c\u7a33\u5b9a\u6027\u548c\u7cbe\u5ea6\uff0c\u9700\u8981\u5b9a\u671f\u91cd\u65b0\u521d\u59cb\u5316\u3002</p>\n<p>\u91cd\u65b0\u521d\u59cb\u5316\u65b9\u7a0b\uff1a\n$$\\frac{\\partial\\phi}{\\partial\\tau} + S(\\phi_0)(||\\nabla\\phi|| - 1) = 0$$\n\u5176\u4e2d $\\tau$ \u662f\u865a\u62df\u65f6\u95f4\uff0c$S(\\phi_0)$ \u662f\u5149\u6ed1\u7684\u7b26\u53f7\u51fd\u6570\uff1a\n$$S(\\phi_0) = \\frac{\\phi_0}{\\sqrt{\\phi_0^2 + (\\Delta x)^2}}$$\n\u6216\u8005\u4f7f\u7528\u66f4\u7cbe\u786e\u7684\u5f62\u5f0f\uff1a\n$$S(\\phi_0) = \\begin{cases}\n-1 &amp; \\text{if } \\phi_0 &lt; -\\epsilon \\\\\n\\phi_0/\\epsilon + \\phi_0^3/\\epsilon^3 &amp; \\text{if } |\\phi_0| \\leq \\epsilon \\\\\n1 &amp; \\text{if } \\phi_0 &gt; \\epsilon\n\\end{cases}$$\n\u6570\u503c\u5b9e\u73b0\u65f6\uff0c\u4f7f\u7528\u8fce\u98ce\u683c\u5f0f\uff1a\n$$\\frac{\\partial\\phi}{\\partial\\tau} = -S(\\phi_0)G$$\n\u5176\u4e2d\uff1a\n$$G = \\begin{cases}\n\\sqrt{\\max(a^2, b^2) + \\max(c^2, d^2)} - 1 &amp; \\text{if } S(\\phi_0) &gt; 0 \\\\\n\\sqrt{\\max(A^2, B^2) + \\max(C^2, D^2)} - 1 &amp; \\text{if } S(\\phi_0) &lt; 0\n\\end{cases}$$\n\u8fd9\u91cc\uff1a</p>\n<ul>\n<li>$a = \\max(D^{-x}\\phi, 0)$, $b = \\min(D^{+x}\\phi, 0)$</li>\n<li>$c = \\max(D^{-y}\\phi, 0)$, $d = \\min(D^{+y}\\phi, 0)$</li>\n<li>$A = \\min(D^{-x}\\phi, 0)$, $B = \\max(D^{+x}\\phi, 0)$</li>\n<li>$C = \\min(D^{-y}\\phi, 0)$, $D = \\max(D^{+y}\\phi, 0)$</li>\n</ul>\n<p>\u91cd\u65b0\u521d\u59cb\u5316\u7684\u505c\u6b62\u51c6\u5219\uff1a</p>\n<ul>\n<li>\u56fa\u5b9a\u8fed\u4ee3\u6b21\u6570\uff08\u59825-10\u6b21\uff09</li>\n<li>\u6b8b\u5dee\u5c0f\u4e8e\u9608\u503c\uff1a$\\max ||\\nabla\\phi|| - 1| &lt; \\epsilon$</li>\n<li>\u754c\u9762\u79fb\u52a8\u91cf\u5c0f\u4e8e\u9608\u503c\uff1a$\\max |\\phi^{new} - \\phi^{old}|_{at\\ \\phi=0} &lt; \\epsilon$</li>\n</ul>\n<h2 id=\"63-level-set\">6.3 \u7b49\u52bf\u9762(Level Set)\u65b9\u6cd5</h2>\n<p>Level Set\u65b9\u6cd5\u662f\u8ffd\u8e2a\u79fb\u52a8\u754c\u9762\u7684\u5f3a\u5927\u5de5\u5177\uff0c\u7531Osher\u548cSethian\u57281988\u5e74\u63d0\u51fa\u3002\u8be5\u65b9\u6cd5\u5c06\u754c\u9762\u9690\u5f0f\u5730\u8868\u793a\u4e3a\u9ad8\u4e00\u7ef4\u51fd\u6570\u7684\u96f6\u7b49\u52bf\u9762\uff0c\u81ea\u7136\u5904\u7406\u62d3\u6251\u53d8\u5316\uff0c\u907f\u514d\u4e86\u663e\u5f0f\u754c\u9762\u8ffd\u8e2a\u7684\u590d\u6742\u6027\u3002</p>\n<h3 id=\"631\">6.3.1 \u754c\u9762\u6f14\u5316\u65b9\u7a0b</h3>\n<p>\u8003\u8651\u968f\u65f6\u95f4\u6f14\u5316\u7684\u754c\u9762 $\\Gamma(t)$\uff0c\u6211\u4eec\u5c06\u5176\u8868\u793a\u4e3a\u51fd\u6570 $\\phi(\\mathbf{x}, t)$ \u7684\u96f6\u7b49\u52bf\u9762\uff1a\n$$\\Gamma(t) = \\{\\mathbf{x} : \\phi(\\mathbf{x}, t) = 0\\}$$\n\u5bf9\u4e8e\u754c\u9762\u4e0a\u7684\u4efb\u610f\u70b9 $\\mathbf{x}(t)$\uff0c\u6709\uff1a\n$$\\phi(\\mathbf{x}(t), t) = 0$$\n\u5bf9\u65f6\u95f4\u6c42\u5bfc\u5f97\u5230\uff1a\n$$\\frac{\\partial\\phi}{\\partial t} + \\nabla\\phi \\cdot \\frac{d\\mathbf{x}}{dt} = 0$$\n\u8bbe\u754c\u9762\u7684\u6cd5\u5411\u901f\u5ea6\u4e3a $V_n$\uff08\u5411\u5916\u4e3a\u6b63\uff09\uff0c\u5219\uff1a\n$$\\frac{d\\mathbf{x}}{dt} \\cdot \\mathbf{n} = V_n$$\n\u5176\u4e2d $\\mathbf{n} = \\nabla\\phi / ||\\nabla\\phi||$ \u662f\u5355\u4f4d\u5916\u6cd5\u5411\u91cf\u3002\u56e0\u6b64\uff1a\n$$\\frac{\\partial\\phi}{\\partial t} + V_n ||\\nabla\\phi|| = 0$$\n\u8fd9\u5c31\u662fLevel Set\u6f14\u5316\u7684\u57fa\u672c\u65b9\u7a0b\u3002\u5bf9\u4e8e\u66f4\u4e00\u822c\u7684\u901f\u5ea6\u573a $\\mathbf{V}$\uff1a\n$$\\frac{\\partial\\phi}{\\partial t} + \\mathbf{V} \\cdot \\nabla\\phi = 0$$\n\u8fd9\u662f\u4e00\u4e2aHamilton-Jacobi\u578b\u65b9\u7a0b\uff0c\u9700\u8981\u4f7f\u7528\u7279\u6b8a\u7684\u6570\u503c\u683c\u5f0f\u6c42\u89e3\u3002</p>\n<p><strong>\u6570\u503c\u683c\u5f0f</strong>\uff1a</p>\n<p>\u5bf9\u4e8e\u8f93\u9001\u9879 $\\mathbf{V} \\cdot \\nabla\\phi$\uff0c\u4f7f\u7528\u8fce\u98ce\u683c\u5f0f\uff1a\n$$(\\mathbf{V} \\cdot \\nabla\\phi)_{ij} = \\max(u_{ij}, 0)D^{-x}\\phi + \\min(u_{ij}, 0)D^{+x}\\phi + \\max(v_{ij}, 0)D^{-y}\\phi + \\min(v_{ij}, 0)D^{+y}\\phi$$\n\u5bf9\u4e8eHamilton-Jacobi\u9879 $V_n||\\nabla\\phi||$\uff0c\u4f7f\u7528Godunov\u683c\u5f0f\uff1a</p>\n<p>\u5f53 $V_n &gt; 0$\uff08\u754c\u9762\u5411\u5916\u6269\u5f20\uff09\uff1a\n$$||\\nabla\\phi|| \\approx \\sqrt{\\max(D^{-x}\\phi, 0)^2 + \\min(D^{+x}\\phi, 0)^2 + \\max(D^{-y}\\phi, 0)^2 + \\min(D^{+y}\\phi, 0)^2}$$\n\u5f53 $V_n &lt; 0$\uff08\u754c\u9762\u5411\u5185\u6536\u7f29\uff09\uff1a\n$$||\\nabla\\phi|| \\approx \\sqrt{\\min(D^{-x}\\phi, 0)^2 + \\max(D^{+x}\\phi, 0)^2 + \\min(D^{-y}\\phi, 0)^2 + \\max(D^{+y}\\phi, 0)^2}$$</p>\n<h3 id=\"632\">6.3.2 \u901f\u5ea6\u5ef6\u62d3</h3>\n<p>\u5728\u8bb8\u591a\u5e94\u7528\u4e2d\uff0c\u901f\u5ea6\u53ea\u5728\u754c\u9762\u9644\u8fd1\u6709\u5b9a\u4e49\u3002\u4e3a\u4e86\u7a33\u5b9a\u5730\u6f14\u5316Level Set\u51fd\u6570\uff0c\u9700\u8981\u5c06\u901f\u5ea6\u5ef6\u62d3\u5230\u6574\u4e2a\u8ba1\u7b97\u57df\u3002\u901f\u5ea6\u5ef6\u62d3\u5e94\u6ee1\u8db3\uff1a</p>\n<ol>\n<li>\u5728\u754c\u9762\u4e0a\u4fdd\u6301\u539f\u901f\u5ea6\u503c</li>\n<li>\u6cbf\u6cd5\u5411\u4fdd\u6301\u5e38\u6570\uff1a$\\nabla\\phi \\cdot \\nabla V_{ext} = 0$</li>\n</ol>\n<p>\u8fd9\u786e\u4fdd\u4e86\u5ef6\u62d3\u901f\u5ea6\u4e0d\u4f1a\u5728\u6cd5\u5411\u4ea7\u751f\u989d\u5916\u7684\u53d8\u5316\u3002\u5ef6\u62d3\u65b9\u7a0b\u4e3a\uff1a\n$$\\frac{\\partial V_{ext}}{\\partial\\tau} + S(\\phi)\\mathbf{n} \\cdot \\nabla V_{ext} = 0$$\n\u5176\u4e2d $\\tau$ \u662f\u865a\u62df\u65f6\u95f4\uff0c$S(\\phi)$ \u662f\u7b26\u53f7\u51fd\u6570\u3002\u6570\u503c\u5b9e\u73b0\u65f6\uff1a\n$$\\frac{\\partial V_{ext}}{\\partial\\tau} = -S(\\phi)[\\max(\\mathbf{n}_x, 0)D^{-x}V + \\min(\\mathbf{n}_x, 0)D^{+x}V + \\max(\\mathbf{n}_y, 0)D^{-y}V + \\min(\\mathbf{n}_y, 0)D^{+y}V]$$</p>\n<h3 id=\"633\">6.3.3 \u8d28\u91cf\u5b88\u6052\u95ee\u9898</h3>\n<p>Level Set\u65b9\u6cd5\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u4e0d\u80fd\u7cbe\u786e\u4fdd\u6301\u8d28\u91cf\u5b88\u6052\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a</p>\n<ol>\n<li><strong>\u6570\u503c\u8017\u6563</strong>\uff1a\u6570\u503c\u683c\u5f0f\u5f15\u5165\u7684\u4eba\u5de5\u7c98\u6027\u5bfc\u81f4\u754c\u9762\u53d8\u5f97\u6a21\u7cca</li>\n<li><strong>\u91cd\u65b0\u521d\u59cb\u5316\u8bef\u5dee</strong>\uff1a\u91cd\u65b0\u521d\u59cb\u5316\u8fc7\u7a0b\u53ef\u80fd\u79fb\u52a8\u754c\u9762\u4f4d\u7f6e</li>\n<li><strong>\u6b20\u91c7\u6837</strong>\uff1a\u7f51\u683c\u5206\u8fa8\u7387\u4e0d\u8db3\u65f6\uff0c\u5c0f\u7279\u5f81\u53ef\u80fd\u6d88\u5931</li>\n</ol>\n<p>\u8d28\u91cf\u635f\u5931\u7684\u5b9a\u91cf\u5206\u6790\uff1a\n\u8bbe\u521d\u59cb\u4f53\u79ef\u4e3a $V_0 = \\int_{\\phi&lt;0} d\\mathbf{x}$\uff0c\u7ecf\u8fc7\u65f6\u95f4 $t$ \u540e\u7684\u4f53\u79ef\u4e3a $V(t)$\u3002\u8d28\u91cf\u635f\u5931\u7387\u4e3a\uff1a\n$$\\frac{dV}{dt} = -\\int_{\\phi=0} V_n dS$$\n\u6570\u503c\u8bef\u5dee\u5bfc\u81f4\u7684\u989d\u5916\u8d28\u91cf\u635f\u5931\u7ea6\u4e3a $O(\\Delta x)$\u3002</p>\n<p><strong>\u6539\u8fdb\u65b9\u6cd5</strong>\uff1a</p>\n<ol>\n<li><strong>\u9ad8\u9636\u683c\u5f0f</strong>\uff1a\u4f7f\u7528WENO\u3001ENO\u7b49\u9ad8\u9636\u683c\u5f0f\u51cf\u5c11\u6570\u503c\u8017\u6563</li>\n<li><strong>\u81ea\u9002\u5e94\u7f51\u683c</strong>\uff1a\u5728\u754c\u9762\u9644\u8fd1\u52a0\u5bc6\u7f51\u683c</li>\n<li><strong>\u6df7\u5408\u65b9\u6cd5</strong>\uff1a\u7ed3\u5408\u7c92\u5b50\u65b9\u6cd5\uff08\u5982PLS\uff09\u6216VOF\u65b9\u6cd5</li>\n</ol>\n<h3 id=\"634-pls\">6.3.4 \u7c92\u5b50\u7b49\u52bf\u9762(PLS)</h3>\n<p>\u7c92\u5b50\u7b49\u52bf\u9762\u65b9\u6cd5\u901a\u8fc7\u5728\u754c\u9762\u9644\u8fd1\u6492\u5e03\u62c9\u683c\u6717\u65e5\u7c92\u5b50\u6765\u6539\u5584\u8d28\u91cf\u5b88\u6052\u3002\u57fa\u672c\u601d\u60f3\u662f\uff1a</p>\n<ol>\n<li>\n<p><strong>\u7c92\u5b50\u521d\u59cb\u5316</strong>\uff1a\u5728\u754c\u9762\u4e24\u4fa7\u7684\u7a84\u5e26\u5185\u968f\u673a\u6492\u5e03\u7c92\u5b50\n   - \u6b63\u7c92\u5b50\uff08$\\phi &gt; 0$ \u533a\u57df\uff09\n   - \u8d1f\u7c92\u5b50\uff08$\\phi &lt; 0$ \u533a\u57df\uff09</p>\n</li>\n<li>\n<p><strong>\u7c92\u5b50\u8f93\u9001</strong>\uff1a\u4f7f\u7528\u901f\u5ea6\u573a\u8f93\u9001\u7c92\u5b50\n$$\\frac{d\\mathbf{x}_p}{dt} = \\mathbf{V}(\\mathbf{x}_p, t)$$</p>\n</li>\n<li>\n<p><strong>\u8bef\u5dee\u68c0\u6d4b</strong>\uff1a\u68c0\u67e5\u7c92\u5b50\u662f\u5426\u9003\u9038\u5230\u9519\u8bef\u7684\u4e00\u4fa7\n   - \u6b63\u7c92\u5b50\u8fdb\u5165 $\\phi &lt; 0$ \u533a\u57df \u2192 \u754c\u9762\u5e94\u8be5\u5411\u5916\u6269\u5f20\n   - \u8d1f\u7c92\u5b50\u8fdb\u5165 $\\phi &gt; 0$ \u533a\u57df \u2192 \u754c\u9762\u5e94\u8be5\u5411\u5185\u6536\u7f29</p>\n</li>\n<li>\n<p><strong>Level Set\u4fee\u6b63</strong>\uff1a\u6839\u636e\u9003\u9038\u7c92\u5b50\u4fee\u6b63 $\\phi$ \u503c</p>\n</li>\n</ol>\n<p>\u5bf9\u4e8e\u6bcf\u4e2a\u9003\u9038\u7c92\u5b50 $p$\uff0c\u5b9a\u4e49\u7403\u5f62\u4fee\u6b63\u51fd\u6570\uff1a\n$$\\phi_p(\\mathbf{x}) = s_p(r_p - ||\\mathbf{x} - \\mathbf{x}_p||)$$\n\u5176\u4e2d $s_p = \\pm 1$ \u662f\u7c92\u5b50\u7b26\u53f7\uff0c$r_p$ \u662f\u7c92\u5b50\u534a\u5f84\uff08\u901a\u5e38\u4e3a $0.5\\Delta x$\uff09\u3002</p>\n<p>\u6700\u7ec8\u7684\u4fee\u6b63\u503c\uff1a\n$$\\phi^{corrected} = \\begin{cases}\n   \\max(\\phi, \\max_p \\phi_p) &amp; \\text{\u6b63\u7c92\u5b50\u4fee\u6b63} \\\\\n   \\min(\\phi, \\min_p \\phi_p) &amp; \\text{\u8d1f\u7c92\u5b50\u4fee\u6b63}\n   \\end{cases}$$</p>\n<ol start=\"5\">\n<li><strong>\u7c92\u5b50\u91cd\u91c7\u6837</strong>\uff1a\u5b9a\u671f\u5220\u9664\u8fdc\u79bb\u754c\u9762\u7684\u7c92\u5b50\uff0c\u5728\u754c\u9762\u9644\u8fd1\u6dfb\u52a0\u65b0\u7c92\u5b50</li>\n</ol>\n<p>PLS\u65b9\u6cd5\u7684\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u663e\u8457\u6539\u5584\u8d28\u91cf\u5b88\u6052</li>\n<li>\u4fdd\u6301\u5c0f\u5c3a\u5ea6\u7279\u5f81</li>\n<li>\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355</li>\n</ul>\n<p>PLS\u65b9\u6cd5\u7684\u52a3\u52bf\uff1a</p>\n<ul>\n<li>\u589e\u52a0\u8ba1\u7b97\u548c\u5b58\u50a8\u5f00\u9500</li>\n<li>\u7c92\u5b50\u5206\u5e03\u53ef\u80fd\u4e0d\u5747\u5300</li>\n<li>\u9700\u8981\u5904\u7406\u7c92\u5b50\u7684\u6dfb\u52a0\u548c\u5220\u9664</li>\n</ul>\n<h2 id=\"64\">6.4 \u81ea\u7531\u8868\u9762\u8ffd\u8e2a</h2>\n<p>\u81ea\u7531\u8868\u9762\u662f\u6d41\u4f53\u4e0e\u7a7a\u6c14\uff08\u6216\u771f\u7a7a\uff09\u7684\u754c\u9762\uff0c\u5176\u8ffd\u8e2a\u662f\u6d41\u4f53\u4eff\u771f\u4e2d\u7684\u6838\u5fc3\u95ee\u9898\u3002\u9664\u4e86Level Set\u65b9\u6cd5\uff0c\u8fd8\u6709\u5176\u4ed6\u51e0\u79cd\u91cd\u8981\u7684\u754c\u9762\u8ffd\u8e2a\u6280\u672f\uff0c\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6709\u5176\u72ec\u7279\u7684\u4f18\u52bf\u548c\u5c40\u9650\u6027\u3002</p>\n<h3 id=\"641-vof\">6.4.1 VOF\u65b9\u6cd5\u5bf9\u6bd4</h3>\n<p>Volume of Fluid (VOF) \u65b9\u6cd5\u4f7f\u7528\u4f53\u79ef\u5206\u6570 $f$ \u6765\u8868\u793a\u6bcf\u4e2a\u7f51\u683c\u5355\u5143\u4e2d\u6d41\u4f53\u7684\u5360\u6bd4\uff1a\n$$f_{ij} = \\frac{V_{fluid}}{V_{cell}}$$\n\u5176\u4e2d $f = 1$ \u8868\u793a\u5b8c\u5168\u5145\u6ee1\u6d41\u4f53\uff0c$f = 0$ \u8868\u793a\u5b8c\u5168\u662f\u7a7a\u6c14\uff0c$0 &lt; f &lt; 1$ \u8868\u793a\u5305\u542b\u754c\u9762\u3002</p>\n<p><strong>VOF vs Level Set\u5bf9\u6bd4</strong>\uff1a</p>\n<p>| \u7279\u6027 | VOF\u65b9\u6cd5 | Level Set\u65b9\u6cd5 |</p>\n<table>\n<thead>\n<tr>\n<th>\u7279\u6027</th>\n<th>VOF\u65b9\u6cd5</th>\n<th>Level Set\u65b9\u6cd5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\u8d28\u91cf\u5b88\u6052</td>\n<td>\u7cbe\u786e\u5b88\u6052</td>\n<td>\u6709\u8d28\u91cf\u635f\u5931</td>\n</tr>\n<tr>\n<td>\u754c\u9762\u7cbe\u5ea6</td>\n<td>\u4e00\u9636\u7cbe\u5ea6</td>\n<td>\u9ad8\u9636\u7cbe\u5ea6\u53ef\u8fbe</td>\n</tr>\n<tr>\n<td>\u51e0\u4f55\u4fe1\u606f</td>\n<td>\u96be\u4ee5\u8ba1\u7b97\u6cd5\u5411\u548c\u66f2\u7387</td>\n<td>\u5bb9\u6613\u8ba1\u7b97</td>\n</tr>\n<tr>\n<td>\u62d3\u6251\u53d8\u5316</td>\n<td>\u9700\u8981\u7279\u6b8a\u5904\u7406</td>\n<td>\u81ea\u7136\u5904\u7406</td>\n</tr>\n<tr>\n<td>\u5b9e\u73b0\u590d\u6742\u5ea6</td>\n<td>\u754c\u9762\u91cd\u6784\u590d\u6742</td>\n<td>\u76f8\u5bf9\u7b80\u5355</td>\n</tr>\n<tr>\n<td>\u5185\u5b58\u9700\u6c42</td>\n<td>\u5355\u4e2a\u6807\u91cf\u573a</td>\n<td>\u5355\u4e2a\u6807\u91cf\u573a</td>\n</tr>\n</tbody>\n</table>\n<p>VOF\u7684\u6f14\u5316\u65b9\u7a0b\uff1a\n$$\\frac{\\partial f}{\\partial t} + \\nabla \\cdot (f\\mathbf{V}) = 0$$\n\u6570\u503c\u6c42\u89e3\u7684\u5173\u952e\u6311\u6218\u662f\u4fdd\u6301 $f$ \u7684\u9510\u5229\u6027\uff08\u907f\u514d\u6570\u503c\u6269\u6563\uff09\u548c\u6709\u754c\u6027\uff08$0 \\leq f \\leq 1$\uff09\u3002</p>\n<h3 id=\"642\">6.4.2 \u754c\u9762\u91cd\u6784\u6280\u672f</h3>\n<p>VOF\u65b9\u6cd5\u9700\u8981\u4ece\u4f53\u79ef\u5206\u6570\u91cd\u6784\u51fa\u754c\u9762\u7684\u51e0\u4f55\u5f62\u72b6\u3002\u5e38\u7528\u7684\u91cd\u6784\u65b9\u6cd5\u5305\u62ec\uff1a</p>\n<p><strong>SLIC (Simple Line Interface Calculation)</strong>\uff1a\n\u754c\u9762\u7528\u4e0e\u5750\u6807\u8f74\u5e73\u884c\u7684\u76f4\u7ebf\u8868\u793a\u3002\u5bf9\u4e8e2D\u60c5\u51b5\uff0c\u754c\u9762\u65b9\u5411\u57fa\u4e8e\u90bb\u8fd1\u5355\u5143\u7684 $f$ \u503c\u68af\u5ea6\uff1a\n$$\\text{\u5982\u679c} |f_{i+1,j} - f_{i-1,j}| &gt; |f_{i,j+1} - f_{i,j-1}|, \\text{\u5219\u754c\u9762\u5782\u76f4}$$\n\u754c\u9762\u4f4d\u7f6e\u901a\u8fc7\u4f53\u79ef\u5b88\u6052\u786e\u5b9a\uff1a\n$$x_{interface} = x_i - \\frac{\\Delta x}{2} + f_{ij} \\Delta x$$\n<strong>PLIC (Piecewise Linear Interface Calculation)</strong>\uff1a\n\u754c\u9762\u7528\u4efb\u610f\u65b9\u5411\u7684\u76f4\u7ebf\u6bb5\u8868\u793a\u3002\u754c\u9762\u6cd5\u5411\u91cf\u901a\u8fc7\u68af\u5ea6\u4f30\u8ba1\uff1a\n$$\\mathbf{n} = -\\frac{\\nabla f}{||\\nabla f||}$$\n\u754c\u9762\u65b9\u7a0b\u4e3a $\\mathbf{n} \\cdot (\\mathbf{x} - \\mathbf{x}_0) = 0$\uff0c\u5176\u4e2d $\\mathbf{x}_0$ \u901a\u8fc7\u4f53\u79ef\u7ea6\u675f\u786e\u5b9a\uff1a\n$$\\int_{cell \\cap \\{\\mathbf{n} \\cdot (\\mathbf{x} - \\mathbf{x}_0) &lt; 0\\}} d\\mathbf{x} = f_{ij} \\cdot V_{cell}$$\n<strong>\u9ad8\u9636\u91cd\u6784</strong>\uff1a\n\u4f7f\u7528\u4e8c\u6b21\u6216\u4e09\u6b21\u591a\u9879\u5f0f\u91cd\u6784\u754c\u9762\uff0c\u63d0\u9ad8\u7cbe\u5ea6\u4f46\u589e\u52a0\u590d\u6742\u5ea6\u3002\u4f8b\u5982\uff0c\u629b\u7269\u7ebf\u91cd\u6784\uff1a\n$$y = ax^2 + bx + c$$\n\u7cfb\u6570\u901a\u8fc7\u6700\u5c0f\u4e8c\u4e58\u62df\u5408\u90bb\u8fd1\u5355\u5143\u7684\u754c\u9762\u4f4d\u7f6e\u786e\u5b9a\u3002</p>\n<h3 id=\"643\">6.4.3 \u8868\u9762\u5f20\u529b\u8ba1\u7b97</h3>\n<p>\u8868\u9762\u5f20\u529b\u662f\u7ef4\u6301\u6db2\u6ef4\u3001\u6c14\u6ce1\u7b49\u5f62\u72b6\u7684\u91cd\u8981\u529b\u3002\u5728\u8fde\u7eed\u4ecb\u8d28\u6846\u67b6\u4e0b\uff0c\u8868\u9762\u5f20\u529b\u8868\u73b0\u4e3a\u538b\u529b\u8df3\u53d8\uff1a\n$$[p] = \\sigma \\kappa$$\n\u5176\u4e2d $\\sigma$ \u662f\u8868\u9762\u5f20\u529b\u7cfb\u6570\uff0c$\\kappa$ \u662f\u754c\u9762\u66f2\u7387\uff0c$[p]$ \u8868\u793a\u8de8\u754c\u9762\u7684\u538b\u529b\u8df3\u53d8\u3002</p>\n<p><strong>CSF (Continuum Surface Force) \u6a21\u578b</strong>\uff1a\n\u5c06\u8868\u9762\u5f20\u529b\u8f6c\u6362\u4e3a\u4f53\u79ef\u529b\uff1a\n$$\\mathbf{F}_{st} = \\sigma \\kappa \\delta(\\phi) \\nabla \\phi$$\n\u5176\u4e2d $\\delta(\\phi)$ \u662fDirac delta\u51fd\u6570\u7684\u5149\u6ed1\u8fd1\u4f3c\uff1a\n$$\\delta_\\epsilon(\\phi) = \\begin{cases}\n\\frac{1}{2\\epsilon}(1 + \\cos(\\pi\\phi/\\epsilon)) &amp; |\\phi| &lt; \\epsilon \\\\\n0 &amp; |\\phi| \\geq \\epsilon\n\\end{cases}$$\n\u66f2\u7387\u8ba1\u7b97\uff08\u4e8c\u7ef4\uff09\uff1a\n$$\\kappa = \\nabla \\cdot \\mathbf{n} = \\nabla \\cdot \\left(\\frac{\\nabla\\phi}{||\\nabla\\phi||}\\right)$$\n\u6570\u503c\u5b9e\u73b0\uff1a\n$$\\kappa_{ij} = \\frac{1}{||\\nabla\\phi||_{ij}} \\left[\\frac{\\phi_{i+1,j} - \\phi_{i-1,j}}{2\\Delta x} \\cdot \\frac{n^x_{i+1,j} - n^x_{i-1,j}}{2\\Delta x} + \\frac{\\phi_{i,j+1} - \\phi_{i,j-1}}{2\\Delta y} \\cdot \\frac{n^y_{i,j+1} - n^y_{i,j-1}}{2\\Delta y}\\right]$$\n<strong>Ghost Fluid\u65b9\u6cd5\u4e2d\u7684\u8868\u9762\u5f20\u529b</strong>\uff1a\n\u5728\u538b\u529b\u6295\u5f71\u6b65\u9aa4\u4e2d\u76f4\u63a5\u65bd\u52a0\u538b\u529b\u8df3\u53d8\u6761\u4ef6\uff1a\n$$p^+ - p^- = \\sigma \\kappa$$\n\u8fd9\u907f\u514d\u4e86\u5c06\u8868\u9762\u529b\u8f6c\u6362\u4e3a\u4f53\u79ef\u529b\u5e26\u6765\u7684\u6570\u503c\u62b9\u5e73\u3002</p>\n<h3 id=\"644\">6.4.4 \u62d3\u6251\u53d8\u5316\u5904\u7406</h3>\n<p>\u62d3\u6251\u53d8\u5316\uff08\u5982\u6db2\u6ef4\u5408\u5e76\u3001\u65ad\u88c2\uff09\u662f\u81ea\u7531\u8868\u9762\u6d41\u52a8\u7684\u91cd\u8981\u7279\u5f81\u3002</p>\n<p><strong>Level Set\u7684\u81ea\u7136\u5904\u7406</strong>\uff1a\nLevel Set\u65b9\u6cd5\u81ea\u52a8\u5904\u7406\u62d3\u6251\u53d8\u5316\uff0c\u65e0\u9700\u7279\u6b8a\u7b97\u6cd5\u3002\u5f53\u4e24\u4e2a\u754c\u9762\u9760\u8fd1\u65f6\uff1a\n$$\\phi_{merged} = \\min(\\phi_1, \\phi_2)$$\n\u5bf9\u4e8e\u5206\u79bb\uff0c\u5f53\u754c\u9762\u53d8\u8584\u65f6\u81ea\u7136\u65ad\u5f00\u3002</p>\n<p><strong>VOF\u7684\u62d3\u6251\u5904\u7406</strong>\uff1a\nVOF\u65b9\u6cd5\u9700\u8981\u663e\u5f0f\u68c0\u6d4b\u548c\u5904\u7406\u62d3\u6251\u53d8\u5316\uff1a</p>\n<ol>\n<li><strong>\u5408\u5e76\u68c0\u6d4b</strong>\uff1a\u5f53\u4e24\u4e2a\u5145\u6ee1\u6d41\u4f53\u7684\u5355\u5143\u76f8\u90bb\u65f6</li>\n<li><strong>\u5206\u79bb\u68c0\u6d4b</strong>\uff1a\u5f53\u8fde\u901a\u57df\u5206\u88c2\u65f6\uff08\u9700\u8981\u8fde\u901a\u6027\u5206\u6790\uff09</li>\n<li><strong>\u8584\u819c\u7834\u88c2</strong>\uff1a\u5f53\u754c\u9762\u539a\u5ea6\u5c0f\u4e8e\u9608\u503c\u65f6\u5f3a\u5236\u65ad\u5f00</li>\n</ol>\n<p><strong>\u6df7\u5408\u65b9\u6cd5CLSVOF</strong>\uff1a\n\u7ed3\u5408Level Set\u548cVOF\u7684\u4f18\u52bf\uff1a</p>\n<ul>\n<li>\u4f7f\u7528Level Set\u8ba1\u7b97\u51e0\u4f55\u4fe1\u606f</li>\n<li>\u4f7f\u7528VOF\u4fdd\u8bc1\u8d28\u91cf\u5b88\u6052</li>\n<li>\u901a\u8fc7VOF\u7ea6\u675f\u4fee\u6b63Level Set\uff1a\n$$\\int_{cell} H(-\\phi) d\\mathbf{x} = f_{ij} \\cdot V_{cell}$$\n\u5176\u4e2d $H$ \u662fHeaviside\u51fd\u6570\u3002</li>\n</ul>\n<h2 id=\"65\">6.5 \u6e32\u67d3\u6280\u672f</h2>\n<p>\u7269\u7406\u4eff\u771f\u7684\u6700\u7ec8\u76ee\u7684\u5f80\u5f80\u662f\u751f\u6210\u89c6\u89c9\u6548\u679c\u3002\u672c\u8282\u4ecb\u7ecd\u51e0\u79cd\u91cd\u8981\u7684\u6e32\u67d3\u6280\u672f\uff0c\u7279\u522b\u662f\u5982\u4f55\u9ad8\u6548\u5730\u6e32\u67d3\u6d41\u4f53\u8868\u9762\u548c\u4f53\u79ef\u6570\u636e\u3002</p>\n<h3 id=\"651-path-tracing\">6.5.1 \u8def\u5f84\u8ffd\u8e2a(Path Tracing)</h3>\n<p>\u8def\u5f84\u8ffd\u8e2a\u662f\u57fa\u4e8e\u7269\u7406\u7684\u6e32\u67d3\u65b9\u6cd5\uff0c\u901a\u8fc7\u6a21\u62df\u5149\u7ebf\u5728\u573a\u666f\u4e2d\u7684\u4f20\u64ad\u6765\u751f\u6210\u903c\u771f\u7684\u56fe\u50cf\u3002\u6e32\u67d3\u65b9\u7a0b\uff08Kajiya 1986\uff09\u63cf\u8ff0\u4e86\u5149\u7684\u4f20\u8f93\uff1a\n$$L_o(\\mathbf{x}, \\omega_o) = L_e(\\mathbf{x}, \\omega_o) + \\int_{\\Omega} f_r(\\mathbf{x}, \\omega_i, \\omega_o) L_i(\\mathbf{x}, \\omega_i) (\\omega_i \\cdot \\mathbf{n}) d\\omega_i$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$L_o$\uff1a\u51fa\u5c04\u8f90\u5c04\u5ea6</li>\n<li>$L_e$\uff1a\u81ea\u53d1\u5149</li>\n<li>$f_r$\uff1a\u53cc\u5411\u53cd\u5c04\u5206\u5e03\u51fd\u6570(BRDF)</li>\n<li>$L_i$\uff1a\u5165\u5c04\u8f90\u5c04\u5ea6</li>\n<li>$\\Omega$\uff1a\u534a\u7403\u7acb\u4f53\u89d2</li>\n</ul>\n<p><strong>Monte Carlo\u79ef\u5206</strong>\uff1a\n\u7531\u4e8e\u6e32\u67d3\u65b9\u7a0b\u7684\u79ef\u5206\u96be\u4ee5\u89e3\u6790\u6c42\u89e3\uff0c\u4f7f\u7528Monte Carlo\u65b9\u6cd5\uff1a\n$$L_o \\approx L_e + \\frac{1}{N} \\sum_{i=1}^N \\frac{f_r(\\omega_i) L_i(\\omega_i) (\\omega_i \\cdot \\mathbf{n})}{p(\\omega_i)}$$\n\u5176\u4e2d $p(\\omega_i)$ \u662f\u91c7\u6837\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002</p>\n<p><strong>\u4fc4\u7f57\u65af\u8f6e\u76d8\u8d4c</strong>\uff1a\n\u4e3a\u4e86\u4fdd\u8bc1\u7b97\u6cd5\u6536\u655b\uff0c\u4f7f\u7528\u4fc4\u7f57\u65af\u8f6e\u76d8\u8d4c\u7ec8\u6b62\u5149\u7ebf\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>if (random() &lt; p_rr):\n    \u7ee7\u7eed\u8ffd\u8e2a\uff0c\u6743\u91cd\u4e58\u4ee5 1/p_rr\nelse:\n    \u7ec8\u6b62\u5149\u7ebf\n</code></pre></div>\n\n<p><strong>\u91cd\u8981\u6027\u91c7\u6837</strong>\uff1a\n\u6839\u636eBRDF\u7684\u5f62\u72b6\u91c7\u6837\u65b9\u5411\uff0c\u63d0\u9ad8\u6536\u655b\u901f\u5ea6\u3002\u5bf9\u4e8e\u6f2b\u53cd\u5c04\u8868\u9762\uff0c\u4f7f\u7528\u4f59\u5f26\u52a0\u6743\u91c7\u6837\uff1a\n$$p(\\theta, \\phi) = \\frac{\\cos\\theta}{\\pi}$$\n\u751f\u6210\u91c7\u6837\u65b9\u5411\uff1a\n$$\\theta = \\arccos(\\sqrt{1 - \\xi_1}), \\quad \\phi = 2\\pi\\xi_2$$</p>\n<h3 id=\"652-sphere-tracing\">6.5.2 \u7403\u9762\u8ffd\u8e2a(Sphere Tracing)</h3>\n<p>\u7403\u9762\u8ffd\u8e2a\u662f\u5229\u7528\u6709\u7b26\u53f7\u8ddd\u79bb\u573a\u52a0\u901f\u5149\u7ebf\u884c\u8fdb\u7684\u6280\u672f\u3002\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5728\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5b89\u5168\u5730\u524d\u8fdb\u5230\u6700\u8fd1\u8868\u9762\u7684\u8ddd\u79bb\u3002</p>\n<p>\u7b97\u6cd5\u6d41\u7a0b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>pos = ray_origin\nwhile (distance_traveled &lt; max_distance):\n    d = SDF(pos)\n    if (d &lt; epsilon):\n        return hit\n    pos += d * ray_direction\n    distance_traveled += d\nreturn miss\n</code></pre></div>\n\n<p><strong>\u8f6f\u9634\u5f71</strong>\uff1a\n\u4f7f\u7528SDF\u53ef\u4ee5\u9ad8\u6548\u8ba1\u7b97\u8f6f\u9634\u5f71\uff1a\n$$shadow = \\min\\left(1, k \\cdot \\min_{t \\in [0,1]} \\frac{SDF(p + t \\cdot l)}{t}\\right)$$\n\u5176\u4e2d $k$ \u63a7\u5236\u9634\u5f71\u7684\u8f6f\u786c\u7a0b\u5ea6\uff0c$l$ \u662f\u5230\u5149\u6e90\u7684\u65b9\u5411\u3002</p>\n<p><strong>\u73af\u5883\u5149\u906e\u853d(AO)</strong>\uff1a\n$$AO = 1 - \\frac{k}{N} \\sum_{i=1}^N \\frac{SDF(p + s_i \\cdot n)}{s_i}$$\n\u5176\u4e2d $s_i$ \u662f\u91c7\u6837\u8ddd\u79bb\uff0c$n$ \u662f\u8868\u9762\u6cd5\u5411\u3002</p>\n<h3 id=\"653-marching-cubes\">6.5.3 \u884c\u519b\u7acb\u65b9\u4f53(Marching Cubes)</h3>\n<p>\u884c\u519b\u7acb\u65b9\u4f53\u7b97\u6cd5\u4ece\u4f53\u7d20\u6570\u636e\uff08\u5982Level Set\u573a\uff09\u63d0\u53d6\u4e09\u89d2\u7f51\u683c\u3002\u7b97\u6cd5\u57fa\u4e8e\u67e5\u8868\uff1a\u7acb\u65b9\u4f53\u76848\u4e2a\u9876\u70b9\u53ef\u4ee5\u6709256\u79cd\u5185\u5916\u914d\u7f6e\u3002</p>\n<p><strong>\u57fa\u672c\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li><strong>\u5206\u7c7b</strong>\uff1a\u5bf9\u6bcf\u4e2a\u4f53\u7d20\uff0c\u68c0\u67e58\u4e2a\u9876\u70b9\u7684\u7b26\u53f7</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">cube_index</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"ow\">in</span><span class=\"w\"> </span><span class=\"k\">range</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span><span class=\"err\">:</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"k\">values</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"nl\">isolevel</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">cube_index</span><span class=\"w\"> </span><span class=\"o\">|=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<ol start=\"2\">\n<li>\n<p><strong>\u8fb9\u7f18\u63d2\u503c</strong>\uff1a\u5728\u8de8\u8d8a\u7b49\u503c\u9762\u7684\u8fb9\u4e0a\u7ebf\u6027\u63d2\u503c\n$$t = \\frac{isolevel - v_1}{v_2 - v_1}$$\n   $$\\mathbf{p} = \\mathbf{p}_1 + t(\\mathbf{p}_2 - \\mathbf{p}_1)$$</p>\n</li>\n<li>\n<p><strong>\u67e5\u8868\u751f\u6210\u4e09\u89d2\u5f62</strong>\uff1a\u4f7f\u7528\u9884\u8ba1\u7b97\u7684\u67e5\u627e\u8868</p>\n</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">triangles</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">edge_table</span><span class=\"o\">[</span><span class=\"n\">cube_index</span><span class=\"o\">]</span>\n<span class=\"n\">vertices</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">[]</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">edge</span><span class=\"w\"> </span><span class=\"ow\">in</span><span class=\"w\"> </span><span class=\"nl\">triangles</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"n\">vertices</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">interpolate</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">))</span>\n</code></pre></div>\n\n<p><strong>\u4e8c\u4e49\u6027\u5904\u7406</strong>\uff1a\n\u67d0\u4e9b\u914d\u7f6e\u5b58\u5728\u4e8c\u4e49\u6027\uff08\u5982\u5bf9\u89d2\u914d\u7f6e\uff09\u3002\u89e3\u51b3\u65b9\u6cd5\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u6e10\u8fdb\u7acb\u65b9\u4f53(Asymptotic Decider)</li>\n<li>\u68c0\u67e5\u9762\u548c\u4f53\u7684\u978d\u70b9</li>\n</ul>\n<p><strong>\u6539\u8fdb\u7b97\u6cd5</strong>\uff1a</p>\n<ul>\n<li><strong>Dual Contouring</strong>\uff1a\u5728\u5bf9\u5076\u7f51\u683c\u4e0a\u751f\u6210\u9876\u70b9\uff0c\u4fdd\u6301\u5c16\u9510\u7279\u5f81</li>\n<li><strong>Extended Marching Cubes</strong>\uff1a\u4f7f\u7528\u6cd5\u5411\u4fe1\u606f\u6539\u5584\u7f51\u683c\u8d28\u91cf</li>\n<li><strong>Adaptive Marching Cubes</strong>\uff1a\u6839\u636e\u66f2\u7387\u81ea\u9002\u5e94\u7ec6\u5206</li>\n</ul>\n<h3 id=\"654\">6.5.4 \u8fd0\u52a8\u6a21\u7cca\u4e0e\u666f\u6df1</h3>\n<p>\u8fd9\u4e9b\u6548\u679c\u6a21\u62df\u76f8\u673a\u7684\u7269\u7406\u7279\u6027\uff0c\u589e\u5f3a\u771f\u5b9e\u611f\u3002</p>\n<p><strong>\u8fd0\u52a8\u6a21\u7cca</strong>\uff1a\n\u5bf9\u5feb\u95e8\u5f00\u542f\u65f6\u95f4\u79ef\u5206\uff1a\n$$I(\\mathbf{x}) = \\frac{1}{T} \\int_0^T L(\\mathbf{x}(t), t) dt$$\n\u5b9e\u73b0\u65b9\u6cd5\uff1a</p>\n<ol>\n<li><strong>\u540e\u5904\u7406</strong>\uff1a\u4f7f\u7528\u901f\u5ea6\u7f13\u51b2\u533a\u5728\u5c4f\u5e55\u7a7a\u95f4\u6a21\u7cca</li>\n<li><strong>\u7d2f\u79ef\u7f13\u51b2</strong>\uff1a\u6e32\u67d3\u591a\u4e2a\u65f6\u95f4\u91c7\u6837\u5e76\u5e73\u5747</li>\n<li><strong>\u968f\u673a\u91c7\u6837</strong>\uff1a\u8def\u5f84\u8ffd\u8e2a\u65f6\u968f\u673a\u91c7\u6837\u65f6\u95f4</li>\n</ol>\n<p>\u65f6\u95f4\u91c7\u6837\u7684\u8def\u5f84\u8ffd\u8e2a\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>t = random() * shutter_time\nupdate_scene_to_time(t)\nray = generate_ray(pixel, t)\ncolor += trace_ray(ray)\n</code></pre></div>\n\n<p><strong>\u666f\u6df1</strong>\uff1a\n\u6a21\u62df\u6709\u9650\u5b54\u5f84\u5927\u5c0f\u7684\u900f\u955c\u7cfb\u7edf\uff1a\n$$I(\\mathbf{x}) = \\int_{aperture} L(\\mathbf{x}, \\mathbf{u}) K(\\mathbf{u}) d\\mathbf{u}$$\n\u5176\u4e2d $K(\\mathbf{u})$ \u662f\u5b54\u5f84\u5f62\u72b6\u51fd\u6570\u3002</p>\n<p>\u8584\u900f\u955c\u6a21\u578b\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">lens_u</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lens_v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sample_disk</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">aperture_radius</span>\n<span class=\"n\">ray_origin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">camera_pos</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lens_u</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lens_v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">focal_point</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ray_origin</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">focal_distance</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">initial_direction</span>\n<span class=\"n\">ray_direction</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"k\">focal_point</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">ray_origin</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>\u6563\u7126\u6a21\u7cca\u7684\u827a\u672f\u63a7\u5236</strong>\uff1a</p>\n<ul>\n<li>\u5149\u5708\u5f62\u72b6\uff1a\u5706\u5f62\u3001\u591a\u8fb9\u5f62\u3001\u81ea\u5b9a\u4e49\u5f62\u72b6</li>\n<li>\u6563\u666f\u6548\u679c\uff1a\u4f7f\u7528\u7279\u6b8a\u7684\u6838\u51fd\u6570</li>\n<li>\u7126\u70b9\u547c\u5438\uff1a\u7126\u8ddd\u968f\u65f6\u95f4\u53d8\u5316</li>\n</ul>\n<h2 id=\"66\">6.6 \u4f53\u7d20\u6e32\u67d3</h2>\n<p>\u4f53\u7d20\u6e32\u67d3\u76f4\u63a5\u5904\u7406\u4e09\u7ef4\u4f53\u6570\u636e\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6d41\u4f53\u4eff\u771f\u3001\u533b\u5b66\u6210\u50cf\u548c\u79d1\u5b66\u53ef\u89c6\u5316\u3002\u4e0e\u8868\u9762\u6e32\u67d3\u4e0d\u540c\uff0c\u4f53\u6e32\u67d3\u8003\u8651\u6574\u4e2a\u4f53\u79ef\u5185\u7684\u8d21\u732e\u3002</p>\n<h3 id=\"661-dda\">6.6.1 \u6570\u5b57\u5fae\u5206\u5206\u6790\u5668(DDA)</h3>\n<p>DDA\u662f\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u5149\u7ebf\u904d\u5386\u4f53\u7d20\u7684\u57fa\u7840\u7b97\u6cd5\uff0c\u7c7b\u4f3c\u4e8e2D\u7684Bresenham\u7b97\u6cd5\u3002\u76ee\u6807\u662f\u627e\u51fa\u5149\u7ebf\u7ecf\u8fc7\u7684\u6240\u6709\u4f53\u7d20\u3002</p>\n<p><strong>3D DDA\u7b97\u6cd5</strong>\uff1a</p>\n<p>\u8bbe\u5149\u7ebf\u65b9\u7a0b\u4e3a $\\mathbf{r}(t) = \\mathbf{o} + t\\mathbf{d}$\uff0c\u5176\u4e2d $\\mathbf{o}$ \u662f\u8d77\u70b9\uff0c$\\mathbf{d}$ \u662f\u65b9\u5411\u3002</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u521d\u59cb\u5316</span>\n<span class=\"n\">voxel</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nb\">floor</span><span class=\"p\">(</span><span class=\"n\">ray_origin</span><span class=\"p\">)</span>\n<span class=\"n\">step</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nb\">sign</span><span class=\"p\">(</span><span class=\"n\">ray_direction</span><span class=\"p\">)</span>\n<span class=\"n\">t_max</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">voxel</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">ray_origin</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">ray_direction</span>\n<span class=\"n\">t_delta</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">ray_direction</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// \u904d\u5386</span>\n<span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">in_bounds</span><span class=\"p\">(</span><span class=\"n\">voxel</span><span class=\"p\">)):</span>\n<span class=\"w\">    </span><span class=\"n\">visit</span><span class=\"p\">(</span><span class=\"n\">voxel</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u627e\u5230\u6700\u5c0f\u7684t_max</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"n\">voxel</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">step</span><span class=\"p\">.</span><span class=\"n\">x</span>\n<span class=\"w\">        </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">t_delta</span><span class=\"p\">.</span><span class=\"n\">x</span>\n<span class=\"w\">    </span><span class=\"n\">elif</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"n\">voxel</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">step</span><span class=\"p\">.</span><span class=\"n\">y</span>\n<span class=\"w\">        </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">t_delta</span><span class=\"p\">.</span><span class=\"n\">y</span>\n<span class=\"w\">    </span><span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">voxel</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">step</span><span class=\"p\">.</span><span class=\"n\">z</span>\n<span class=\"w\">        </span><span class=\"n\">t_max</span><span class=\"p\">.</span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">t_delta</span><span class=\"p\">.</span><span class=\"n\">z</span>\n</code></pre></div>\n\n<p><strong>\u4f18\u5316\u6280\u5de7</strong>\uff1a</p>\n<ul>\n<li><strong>\u7a7a\u95f4\u8df3\u8dc3</strong>\uff1a\u4f7f\u7528\u5c42\u6b21\u7ed3\u6784\u8df3\u8fc7\u7a7a\u4f53\u7d20</li>\n<li><strong>\u65e9\u671f\u7ec8\u6b62</strong>\uff1a\u5f53\u7d2f\u79ef\u4e0d\u900f\u660e\u5ea6\u63a5\u8fd11\u65f6\u505c\u6b62</li>\n<li><strong>\u81ea\u9002\u5e94\u91c7\u6837</strong>\uff1a\u6839\u636e\u5185\u5bb9\u5bc6\u5ea6\u8c03\u6574\u6b65\u957f</li>\n</ul>\n<h3 id=\"662\">6.6.2 \u5149\u7ebf\u884c\u8fdb\u7b97\u6cd5</h3>\n<p>\u5149\u7ebf\u884c\u8fdb\u662f\u4f53\u6e32\u67d3\u7684\u6838\u5fc3\uff0c\u6cbf\u5149\u7ebf\u79ef\u5206\u4f53\u7d20\u8d21\u732e\u3002</p>\n<p><strong>\u57fa\u7840\u7b97\u6cd5</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>color = 0\ntransmittance = 1.0\nt = t_start\n\nwhile (t &lt; t_end &amp;&amp; transmittance &gt; epsilon):\n    pos = ray_origin + t <span class=\"gs\">* ray_direction</span>\n\n<span class=\"gs\">    // \u91c7\u6837\u4f53\u7d20\u503c</span>\n<span class=\"gs\">    density = sample_volume(pos)</span>\n\n<span class=\"gs\">    // \u8ba1\u7b97\u8d21\u732e</span>\n<span class=\"gs\">    dt = compute_step_size(t, density)</span>\n<span class=\"gs\">    absorption = exp(-density *</span> dt)\n    emission = compute_emission(density, pos)\n\n    // \u7d2f\u79ef\u989c\u8272\n    color += transmittance <span class=\"gs\">* emission *</span> (1 - absorption)\n    transmittance *= absorption\n\n    t += dt\n</code></pre></div>\n\n<p><strong>\u81ea\u9002\u5e94\u6b65\u957f</strong>\uff1a\n\u6839\u636e\u5bc6\u5ea6\u68af\u5ea6\u8c03\u6574\u6b65\u957f\uff1a\n$$\\Delta t = \\min\\left(\\Delta t_{max}, \\frac{\\epsilon}{||\\nabla\\rho|| + \\epsilon}\\right)$$\n<strong>\u9884\u79ef\u5206\u4f20\u8f93\u51fd\u6570</strong>\uff1a\n\u9884\u8ba1\u7b97\u5bc6\u5ea6\u5230\u989c\u8272/\u4e0d\u900f\u660e\u5ea6\u7684\u6620\u5c04\uff0c\u5b58\u50a8\u4e3a\u67e5\u627e\u8868\uff1a\n$$C(\\rho) = \\int_0^\\rho c(s) \\alpha(s) e^{-\\int_0^s \\alpha(u)du} ds$$</p>\n<h3 id=\"663\">6.6.3 \u4f53\u79ef\u6e32\u67d3\u65b9\u7a0b</h3>\n<p>\u4f53\u79ef\u6e32\u67d3\u8003\u8651\u4ecb\u8d28\u4e2d\u7684\u5438\u6536\u3001\u53d1\u5c04\u548c\u6563\u5c04\u3002</p>\n<p><strong>\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b</strong>\uff1a\n$$\\frac{dL}{ds} = -\\sigma_t L + \\sigma_a L_e + \\sigma_s \\int_{4\\pi} p(\\omega' \\to \\omega) L(\\omega') d\\omega'$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\sigma_t = \\sigma_a + \\sigma_s$\uff1a\u6d88\u5149\u7cfb\u6570</li>\n<li>$\\sigma_a$\uff1a\u5438\u6536\u7cfb\u6570</li>\n<li>$\\sigma_s$\uff1a\u6563\u5c04\u7cfb\u6570</li>\n<li>$p(\\omega' \\to \\omega)$\uff1a\u76f8\u51fd\u6570</li>\n<li>$L_e$\uff1a\u53d1\u5c04</li>\n</ul>\n<p><strong>\u5149\u5b66\u6df1\u5ea6\u4e0e\u900f\u5c04\u7387</strong>\uff1a\n\u5149\u5b66\u6df1\u5ea6\uff1a\n$$\\tau(s_0, s_1) = \\int_{s_0}^{s_1} \\sigma_t(s) ds$$\n\u900f\u5c04\u7387\uff1a\n$$T(s_0, s_1) = e^{-\\tau(s_0, s_1)}$$\n<strong>\u4f53\u79ef\u6e32\u67d3\u79ef\u5206</strong>\uff1a\n\u6cbf\u89c6\u7ebf\u7684\u6700\u7ec8\u8f90\u5c04\u5ea6\uff1a\n$$L = \\int_0^D T(0, s) \\cdot [\\sigma_a(s)L_e(s) + \\sigma_s(s)L_{in}(s)] ds$$\n<strong>\u5355\u6b21\u6563\u5c04\u8fd1\u4f3c</strong>\uff1a\n\u5ffd\u7565\u591a\u6b21\u6563\u5c04\uff0c\u53ea\u8003\u8651\u76f4\u63a5\u5149\u7167\uff1a\n$$L_{in}(s) = L_{light} \\cdot T(s, s_{light}) \\cdot p(\\omega_l \\to \\omega_v)$$</p>\n<h3 id=\"664\">6.6.4 \u5b9e\u65f6\u4f53\u6e32\u67d3\u4f18\u5316</h3>\n<p>\u5b9e\u65f6\u5e94\u7528\u9700\u8981\u5404\u79cd\u4f18\u5316\u6280\u672f\u6765\u8fbe\u5230\u4ea4\u4e92\u5e27\u7387\u3002</p>\n<p><strong>\u7a7a\u95f4\u8df3\u8dc3(Empty Space Skipping)</strong>\uff1a\n\u4f7f\u7528\u591a\u5206\u8fa8\u7387\u6570\u636e\u7ed3\u6784\u6807\u8bb0\u7a7a\u533a\u57df\uff1a</p>\n<ol>\n<li><strong>Min-Max\u5757</strong>\uff1a\u5b58\u50a8\u6bcf\u4e2a\u5757\u7684\u6700\u5c0f/\u6700\u5927\u503c</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>if (block_max &lt; iso_min || block_min &gt; iso_max):\n    skip_block()\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u8ddd\u79bb\u56fe</strong>\uff1a\u9884\u8ba1\u7b97\u5230\u6700\u8fd1\u975e\u7a7a\u4f53\u7d20\u7684\u8ddd\u79bb</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">skip_distance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">distance_map</span><span class=\"o\">[</span><span class=\"n\">current_voxel</span><span class=\"o\">]</span>\n<span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">skip_distance</span>\n</code></pre></div>\n\n<p><strong>GPU\u4f18\u5316</strong>\uff1a</p>\n<ol>\n<li><strong>\u7eb9\u7406\u7f13\u5b58</strong>\uff1a\u5229\u75283D\u7eb9\u7406\u786c\u4ef6</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>value = texture3D(volume_texture, pos / volume_size)\n</code></pre></div>\n\n<ol start=\"2\">\n<li><strong>\u63d0\u524d\u5149\u7ebf\u7ec8\u6b62</strong>\uff1a</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>if (accumulated_opacity &gt; 0.99):\n    break\n</code></pre></div>\n\n<ol start=\"3\">\n<li><strong>\u5757\u5149\u7ebf\u8ffd\u8e2a</strong>\uff1a\u540c\u65f6\u5904\u7406\u591a\u6761\u5149\u7ebf</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>for each 8x8 tile:\n    find_entry_exit_points()\n    march_rays_coherently()\n</code></pre></div>\n\n<p><strong>\u65f6\u5e8f\u4e00\u81f4\u6027</strong>\uff1a\n\u5229\u7528\u5e27\u95f4\u76f8\u5173\u6027\uff1a</p>\n<ol>\n<li><strong>\u91cd\u6295\u5f71</strong>\uff1a\u4f7f\u7528\u4e0a\u4e00\u5e27\u7ed3\u679c\u4f5c\u4e3a\u521d\u59cb\u731c\u6d4b</li>\n<li><strong>\u6e10\u8fdb\u5f0f\u7ec6\u5316</strong>\uff1a\u4f4e\u5206\u8fa8\u7387\u9884\u89c8\uff0c\u9010\u6b65\u63d0\u9ad8\u8d28\u91cf</li>\n<li><strong>\u65f6\u95f4\u8d85\u91c7\u6837</strong>\uff1a\u7d2f\u79ef\u591a\u5e27\u7ed3\u679c\u964d\u566a</li>\n</ol>\n<p><strong>\u6df7\u5408\u6e32\u67d3</strong>\uff1a\n\u7ed3\u5408\u4f53\u6e32\u67d3\u548c\u8868\u9762\u6e32\u67d3\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">// \u5148\u6e32\u67d3\u4e0d\u900f\u660e\u8868\u9762</span>\n<span class=\"n\">render_opaque_geometry</span><span class=\"p\">()</span>\n\n<span class=\"c1\">// \u7136\u540e\u6e32\u67d3\u534a\u900f\u660e\u4f53\u79ef</span>\n<span class=\"n\">enable_blending</span><span class=\"p\">()</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">each</span><span class=\"w\"> </span><span class=\"n\">volume</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">intersects_view_frustum</span><span class=\"p\">(</span><span class=\"n\">volume</span><span class=\"p\">)):</span>\n<span class=\"w\">        </span><span class=\"n\">render_volume_with_depth_test</span><span class=\"p\">()</span>\n</code></pre></div>\n\n<p>\u8fd9\u6837\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u4f53\u79ef\u4e0e\u51e0\u4f55\u4f53\u7684\u906e\u6321\u5173\u7cfb\u3002</p>\n<h2 id=\"_2\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u6df1\u5165\u63a2\u8ba8\u4e86\u9ad8\u7ea7\u8f93\u9001\u683c\u5f0f\u548c\u7b49\u52bf\u9762\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u6280\u672f\u662f\u6784\u5efa\u9ad8\u8d28\u91cf\u6d41\u4f53\u4eff\u771f\u7cfb\u7edf\u7684\u6838\u5fc3\uff1a</p>\n<ol>\n<li>\n<p><strong>\u9ad8\u9636\u8f93\u9001\u683c\u5f0f</strong>\uff1aWENO\u683c\u5f0f\u901a\u8fc7\u81ea\u9002\u5e94\u6743\u91cd\u9009\u62e9\u907f\u514d\u6570\u503c\u632f\u8361\uff0cTVD\u9650\u5236\u5668\u4fdd\u8bc1\u6570\u503c\u7a33\u5b9a\u6027\uff0c\u5404\u79cd\u901a\u91cf\u9650\u5236\u5668\u5728\u7cbe\u5ea6\u548c\u7a33\u5b9a\u6027\u95f4\u63d0\u4f9b\u4e0d\u540c\u7684\u6743\u8861\u3002</p>\n</li>\n<li>\n<p><strong>\u6709\u7b26\u53f7\u8ddd\u79bb\u573a(SDF)</strong>\uff1a\u63d0\u4f9b\u4e86\u7cbe\u786e\u7684\u51e0\u4f55\u8868\u793a\uff0c\u6ee1\u8db3Eikonal\u65b9\u7a0b $||\\nabla\\phi|| = 1$\uff0c\u53ef\u4ee5\u4f7f\u7528FMM\u6216FSM\u9ad8\u6548\u6784\u5efa\uff0c\u9700\u8981\u5b9a\u671f\u91cd\u65b0\u521d\u59cb\u5316\u4ee5\u7ef4\u6301\u8ddd\u79bb\u6027\u8d28\u3002</p>\n</li>\n<li>\n<p><strong>Level Set\u65b9\u6cd5</strong>\uff1a\u5c06\u754c\u9762\u8868\u793a\u4e3a\u96f6\u7b49\u52bf\u9762\uff0c\u81ea\u7136\u5904\u7406\u62d3\u6251\u53d8\u5316\uff0c\u4f46\u5b58\u5728\u8d28\u91cf\u635f\u5931\u95ee\u9898\uff0c\u53ef\u901a\u8fc7PLS\u7b49\u65b9\u6cd5\u6539\u5584\u3002</p>\n</li>\n<li>\n<p><strong>\u81ea\u7531\u8868\u9762\u8ffd\u8e2a</strong>\uff1aVOF\u65b9\u6cd5\u7cbe\u786e\u5b88\u6052\u4f46\u51e0\u4f55\u4fe1\u606f\u5dee\uff0cLevel Set\u65b9\u6cd5\u51e0\u4f55\u7cbe\u5ea6\u9ad8\u4f46\u6709\u8d28\u91cf\u635f\u5931\uff0c\u6df7\u5408\u65b9\u6cd5\u7ed3\u5408\u4e24\u8005\u4f18\u52bf\u3002</p>\n</li>\n<li>\n<p><strong>\u6e32\u67d3\u6280\u672f</strong>\uff1a\u8def\u5f84\u8ffd\u8e2a\u63d0\u4f9b\u7269\u7406\u6b63\u786e\u7684\u6e32\u67d3\uff0c\u7403\u9762\u8ffd\u8e2a\u5229\u7528SDF\u52a0\u901f\uff0cMarching Cubes\u4ece\u4f53\u6570\u636e\u63d0\u53d6\u7f51\u683c\uff0c\u8fd0\u52a8\u6a21\u7cca\u548c\u666f\u6df1\u589e\u5f3a\u771f\u5b9e\u611f\u3002</p>\n</li>\n<li>\n<p><strong>\u4f53\u7d20\u6e32\u67d3</strong>\uff1aDDA\u7b97\u6cd5\u9ad8\u6548\u904d\u5386\u4f53\u7d20\uff0c\u5149\u7ebf\u884c\u8fdb\u6cbf\u8def\u5f84\u79ef\u5206\uff0c\u4f53\u79ef\u6e32\u67d3\u65b9\u7a0b\u8003\u8651\u5438\u6536\u3001\u53d1\u5c04\u548c\u6563\u5c04\uff0c\u591a\u79cd\u4f18\u5316\u6280\u672f\u652f\u6301\u5b9e\u65f6\u6e32\u67d3\u3002</p>\n</li>\n</ol>\n<p>\u5173\u952e\u516c\u5f0f\u56de\u987e\uff1a</p>\n<ul>\n<li>Level Set\u6f14\u5316\u65b9\u7a0b\uff1a$\\frac{\\partial\\phi}{\\partial t} + V_n ||\\nabla\\phi|| = 0$</li>\n<li>\u91cd\u65b0\u521d\u59cb\u5316\u65b9\u7a0b\uff1a$\\frac{\\partial\\phi}{\\partial\\tau} + S(\\phi_0)(||\\nabla\\phi|| - 1) = 0$</li>\n<li>\u6e32\u67d3\u65b9\u7a0b\uff1a$L_o = L_e + \\int_{\\Omega} f_r L_i (\\omega_i \\cdot \\mathbf{n}) d\\omega_i$</li>\n<li>\u4f53\u79ef\u6e32\u67d3\u79ef\u5206\uff1a$L = \\int_0^D T(0, s) \\cdot [\\sigma_a L_e + \\sigma_s L_{in}] ds$</li>\n</ul>\n<h2 id=\"_3\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_4\">\u57fa\u7840\u9898</h3>\n<ol>\n<li><strong>WENO\u6743\u91cd\u8ba1\u7b97</strong>\n   \u7ed9\u5b9a\u4e09\u4e2a\u5b50\u6a21\u677f\u7684\u503c\uff1a$u_{i-2} = 1$, $u_{i-1} = 2$, $u_i = 2.5$, $u_{i+1} = 2.8$, $u_{i+2} = 3$\uff0c\u8ba1\u7b97\u4e94\u9636WENO\u683c\u5f0f\u5728\u70b9$i+1/2$\u7684\u6570\u503c\u901a\u91cf\u3002</li>\n</ol>\n<p><em>\u63d0\u793a</em>\uff1a\u9996\u5148\u8ba1\u7b97\u4e09\u4e2a\u5b50\u6a21\u677f\u7684\u5149\u6ed1\u5ea6\u6307\u6807$\\beta_k$\uff0c\u7136\u540e\u8ba1\u7b97\u975e\u7ebf\u6027\u6743\u91cd$\\omega_k$\u3002</p>\n<ol start=\"2\">\n<li><strong>SDF\u6027\u8d28\u8bc1\u660e</strong>\n   \u8bc1\u660e\u5bf9\u4e8e\u7403\u9762 $||\\mathbf{x} - \\mathbf{c}|| = R$\uff0c\u5176\u6709\u7b26\u53f7\u8ddd\u79bb\u51fd\u6570 $\\phi(\\mathbf{x}) = ||\\mathbf{x} - \\mathbf{c}|| - R$ \u6ee1\u8db3 $||\\nabla\\phi|| = 1$\u3002</li>\n</ol>\n<p><em>\u63d0\u793a</em>\uff1a\u76f4\u63a5\u8ba1\u7b97\u68af\u5ea6\u5e76\u6c42\u5176\u6a21\u957f\u3002</p>\n<ol start=\"3\">\n<li><strong>Level Set\u8d28\u91cf\u8ba1\u7b97</strong>\n   \u7ed9\u5b9a\u4e8c\u7ef4Level Set\u51fd\u6570 $\\phi(x,y) = x^2 + y^2 - 1$\uff08\u5355\u4f4d\u5706\uff09\uff0c\u8ba1\u7b97\u5176\u6240\u5305\u56f4\u7684\u9762\u79ef\u3002\u5982\u679c\u4f7f\u7528\u4e00\u9636\u7cbe\u5ea6\u7684\u6570\u503c\u683c\u5f0f\u6f14\u5316\u540e\uff0c$\\phi$ \u53d8\u4e3a $\\phi'(x,y) = x^2 + y^2 - 0.9$\uff0c\u8ba1\u7b97\u8d28\u91cf\u635f\u5931\u767e\u5206\u6bd4\u3002</li>\n</ol>\n<p><em>\u63d0\u793a</em>\uff1a\u9762\u79ef\u4e3a $A = \\int_{\\phi&lt;0} dxdy$\u3002</p>\n<ol start=\"4\">\n<li><strong>\u66f2\u7387\u8ba1\u7b97</strong>\n   \u5bf9\u4e8e\u4e8c\u7ef4Level Set\u51fd\u6570 $\\phi(x,y) = x^2 + y^2 - R^2$\uff0c\u63a8\u5bfc\u5e76\u8ba1\u7b97\u754c\u9762\u4e0a\u7684\u66f2\u7387\u3002</li>\n</ol>\n<p><em>\u63d0\u793a</em>\uff1a\u4f7f\u7528\u516c\u5f0f $\\kappa = \\nabla \\cdot (\\nabla\\phi/||\\nabla\\phi||)$\u3002</p>\n<h3 id=\"_5\">\u6311\u6218\u9898</h3>\n<ol start=\"5\">\n<li><strong>\u8bbe\u8ba1\u65b0\u7684TVD\u9650\u5236\u5668</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u65b0\u7684\u901a\u91cf\u9650\u5236\u5668 $\\phi(r)$\uff0c\u6ee1\u8db3\uff1a</li>\n</ol>\n<ul>\n<li>TVD\u6761\u4ef6\uff1a$0 \\leq \\phi(r) \\leq 2$</li>\n<li>\u5728\u5149\u6ed1\u533a\u57df\u8fbe\u5230\u4e09\u9636\u7cbe\u5ea6</li>\n<li>\u6bd4van Leer\u9650\u5236\u5668\u66f4\u5c11\u8017\u6563</li>\n</ul>\n<p>\u5206\u6790\u4f60\u7684\u9650\u5236\u5668\u7684\u6027\u8d28\u5e76\u4e0e\u73b0\u6709\u9650\u5236\u5668\u6bd4\u8f83\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u8003\u8651\u5206\u6bb5\u591a\u9879\u5f0f\u5f62\u5f0f\uff0c\u786e\u4fdd\u5728$r=1$\u9644\u8fd1\u7684\u884c\u4e3a\u3002</p>\n<ol start=\"6\">\n<li><strong>\u4f18\u5316FMM\u7b97\u6cd5</strong>\n   \u5feb\u901f\u884c\u8fdb\u6cd5\u7684\u6807\u51c6\u5b9e\u73b0\u4f7f\u7528\u5806\u6765\u7ef4\u62a4Trial\u96c6\u5408\u3002\u8bbe\u8ba1\u4e00\u79cd\u6539\u8fdb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u7f51\u683c\u89c4\u5219\u4e14\u901f\u5ea6\u51fd\u6570\u53d8\u5316\u7f13\u6162\u65f6\u80fd\u8fbe\u5230\u66f4\u597d\u7684\u6027\u80fd\u3002\u5206\u6790\u4f60\u7684\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002</li>\n</ol>\n<p><em>\u63d0\u793a</em>\uff1a\u8003\u8651\u5229\u7528\u7f51\u683c\u7684\u89c4\u5219\u6027\u548c\u901f\u5ea6\u51fd\u6570\u7684\u5c40\u90e8\u6027\u3002</p>\n<ol start=\"7\">\n<li><strong>\u5b9e\u73b0PLS\u65b9\u6cd5\u7684\u7c92\u5b50\u7ba1\u7406</strong>\n   \u8bbe\u8ba1\u4e00\u4e2a\u9ad8\u6548\u7684\u7c92\u5b50\u7ba1\u7406\u7cfb\u7edf\u7528\u4e8ePLS\u65b9\u6cd5\uff0c\u9700\u8981\u5904\u7406\uff1a</li>\n</ol>\n<ul>\n<li>\u7c92\u5b50\u7684\u7a7a\u95f4\u7d22\u5f15\uff08\u5feb\u901f\u67e5\u627e\u67d0\u533a\u57df\u5185\u7684\u7c92\u5b50\uff09</li>\n<li>\u52a8\u6001\u6dfb\u52a0/\u5220\u9664\u7c92\u5b50</li>\n<li>\u5e76\u884c\u5316\u8003\u8651</li>\n</ul>\n<p>\u7ed9\u51fa\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\u548c\u5173\u952e\u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u8003\u8651\u7a7a\u95f4\u54c8\u5e0c\u6216\u516b\u53c9\u6811\u7ed3\u6784\u3002</p>\n<ol start=\"8\">\n<li><strong>\u4f53\u79ef\u6e32\u67d3\u7684\u91cd\u8981\u6027\u91c7\u6837</strong>\n   \u5bf9\u4e8e\u53c2\u4e0e\u4ecb\u8d28\u7684\u4f53\u79ef\u6e32\u67d3\uff0c\u8bbe\u8ba1\u4e00\u79cd\u91cd\u8981\u6027\u91c7\u6837\u7b56\u7565\uff0c\u80fd\u591f\uff1a</li>\n</ol>\n<ul>\n<li>\u6839\u636e\u4ecb\u8d28\u5bc6\u5ea6\u81ea\u9002\u5e94\u91c7\u6837</li>\n<li>\u8003\u8651\u5149\u6e90\u4f4d\u7f6e\u8fdb\u884c\u65b9\u5411\u91c7\u6837</li>\n<li>\u4fdd\u8bc1\u65e0\u504f\u6027</li>\n</ul>\n<p>\u63a8\u5bfc\u4f60\u7684\u91c7\u6837\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u548c\u76f8\u5e94\u7684\u6743\u91cd\u3002</p>\n<p><em>\u63d0\u793a</em>\uff1a\u8003\u8651\u4f7f\u7528\u5149\u5b66\u6df1\u5ea6\u8fdb\u884c\u8ddd\u79bb\u91c7\u6837\uff0c\u76f8\u51fd\u6570\u8fdb\u884c\u65b9\u5411\u91c7\u6837\u3002</p>\n<details>\n<summary>\u53c2\u8003\u7b54\u6848</summary>\n<ol>\n<li>\n<p>\u5149\u6ed1\u5ea6\u6307\u6807\u8ba1\u7b97\uff1a\n   - $\\beta_0 = \\frac{13}{12}(1-4+2.5)^2 + \\frac{1}{4}(1-8+7.5)^2 = \\frac{13}{12}(0.25) + \\frac{1}{4}(0.25) = 0.333$\n   - $\\beta_1 = \\frac{13}{12}(2-5+2.8)^2 + \\frac{1}{4}(2-2.8)^2 = \\frac{13}{12}(0.04) + \\frac{1}{4}(0.64) = 0.203$\n   - $\\beta_2 = \\frac{13}{12}(2.5-5.6+3)^2 + \\frac{1}{4}(7.5-11.2+3)^2 = \\frac{13}{12}(0.01) + \\frac{1}{4}(0.49) = 0.134$</p>\n</li>\n<li>\n<p>\u5bf9\u7403\u9762SDF\uff1a\n   $\\nabla\\phi = \\nabla(||\\mathbf{x} - \\mathbf{c}|| - R) = \\frac{\\mathbf{x} - \\mathbf{c}}{||\\mathbf{x} - \\mathbf{c}||}$\n   \u56e0\u6b64 $||\\nabla\\phi|| = 1$</p>\n</li>\n<li>\n<p>\u539f\u9762\u79ef\uff1a$A = \\pi R^2 = \\pi$\n   \u65b0\u9762\u79ef\uff1a$A' = \\pi (0.9) = 0.9\\pi$\n   \u8d28\u91cf\u635f\u5931\uff1a$(1 - 0.9)\\pi / \\pi = 10\\%$</p>\n</li>\n<li>\n<p>\u66f2\u7387\uff1a$\\kappa = \\frac{1}{R}$\uff08\u5e38\u6570\uff0c\u7b26\u5408\u5706\u7684\u6027\u8d28\uff09</p>\n</li>\n</ol>\n<p>5-8\u9898\u4e3a\u5f00\u653e\u6027\u8bbe\u8ba1\u9898\uff0c\u7b54\u6848\u56e0\u4eba\u800c\u5f02\u3002</p>\n</details>\n<h2 id=\"_6\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<h3 id=\"_7\">\u6570\u503c\u683c\u5f0f\u9677\u9631</h3>\n<ul>\n<li><strong>WENO\u9000\u5316</strong>\uff1a\u5f53\u6240\u6709\u5b50\u6a21\u677f\u7684\u5149\u6ed1\u5ea6\u6307\u6807\u90fd\u5f88\u5c0f\u65f6\uff0c\u6743\u91cd\u53ef\u80fd\u9000\u5316\uff0c\u5bfc\u81f4\u7cbe\u5ea6\u4e0b\u964d</li>\n<li><strong>\u9650\u5236\u5668\u5931\u6548</strong>\uff1a\u5728\u6781\u503c\u70b9\u9644\u8fd1\uff0c\u9650\u5236\u5668\u53ef\u80fd\u8fc7\u5ea6\u9650\u5236\uff0c\u5bfc\u81f4\u7cbe\u5ea6\u635f\u5931</li>\n<li><strong>CFL\u6761\u4ef6\u8fdd\u53cd</strong>\uff1a\u9ad8\u9636\u683c\u5f0f\u53ef\u80fd\u9700\u8981\u66f4\u4e25\u683c\u7684CFL\u6761\u4ef6</li>\n</ul>\n<h3 id=\"sdf\">SDF\u7ef4\u62a4\u9519\u8bef</h3>\n<ul>\n<li><strong>\u91cd\u65b0\u521d\u59cb\u5316\u65f6\u673a</strong>\uff1a\u8fc7\u4e8e\u9891\u7e41\u4f1a\u7d2f\u79ef\u8bef\u5dee\uff0c\u8fc7\u4e8e\u7a00\u758f\u4f1a\u5931\u53bb\u8ddd\u79bb\u6027\u8d28</li>\n<li><strong>\u8fb9\u754c\u5904\u7406</strong>\uff1aFMM\u548cFSM\u5728\u8fb9\u754c\u9644\u8fd1\u9700\u8981\u7279\u6b8a\u5904\u7406</li>\n<li><strong>\u6570\u503c\u7cbe\u5ea6</strong>\uff1a\u68af\u5ea6\u8ba1\u7b97\u7684\u6570\u503c\u8bef\u5dee\u4f1a\u7d2f\u79ef</li>\n</ul>\n<h3 id=\"level-set\">Level Set\u5e38\u89c1\u95ee\u9898</h3>\n<ul>\n<li><strong>\u8d28\u91cf\u635f\u5931\u7d2f\u79ef</strong>\uff1a\u957f\u65f6\u95f4\u6f14\u5316\u540e\u53ef\u80fd\u635f\u5931\u5927\u91cf\u8d28\u91cf</li>\n<li><strong>\u8584\u7ed3\u6784\u6d88\u5931</strong>\uff1a\u7f51\u683c\u5206\u8fa8\u7387\u4e0d\u8db3\u65f6\uff0c\u8584\u7247\u3001\u7ec6\u4e1d\u7b49\u7279\u5f81\u4f1a\u6d88\u5931</li>\n<li><strong>\u901f\u5ea6\u5ef6\u62d3\u9519\u8bef</strong>\uff1a\u4e0d\u5f53\u7684\u5ef6\u62d3\u53ef\u80fd\u5bfc\u81f4\u975e\u7269\u7406\u7684\u754c\u9762\u8fd0\u52a8</li>\n</ul>\n<h3 id=\"_8\">\u6e32\u67d3\u76f8\u5173\u95ee\u9898</h3>\n<ul>\n<li><strong>\u91c7\u6837\u4e0d\u8db3</strong>\uff1aMonte Carlo\u65b9\u6cd5\u7684\u566a\u58f0\uff0c\u9700\u8981\u8db3\u591f\u7684\u6837\u672c\u6570</li>\n<li><strong>\u6570\u503c\u7cbe\u5ea6</strong>\uff1a\u7403\u9762\u8ffd\u8e2a\u7684epsilon\u9009\u62e9\uff0c\u8fc7\u5c0f\u5bfc\u81f4\u65e0\u9650\u5faa\u73af\uff0c\u8fc7\u5927\u5bfc\u81f4\u7a7f\u900f</li>\n<li><strong>\u6027\u80fd\u74f6\u9888</strong>\uff1a\u4f53\u6e32\u67d3\u7684\u5185\u5b58\u5e26\u5bbd\u9650\u5236\uff0c\u9700\u8981\u4f18\u5316\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f</li>\n</ul>\n<h2 id=\"_9\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_10\">\u8f93\u9001\u683c\u5f0f\u9009\u62e9</h3>\n<ul>\n<li>[ ] \u8bc4\u4f30\u95ee\u9898\u7684\u5149\u6ed1\u6027\uff0c\u9009\u62e9\u5408\u9002\u9636\u6570\u7684\u683c\u5f0f</li>\n<li>[ ] \u8003\u8651\u8ba1\u7b97\u6210\u672c\u4e0e\u7cbe\u5ea6\u7684\u5e73\u8861</li>\n<li>[ ] \u9a8c\u8bc1\u683c\u5f0f\u5728\u6d4b\u8bd5\u95ee\u9898\u4e0a\u7684\u6536\u655b\u9636</li>\n<li>[ ] \u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u5b88\u6052\u6027\u8981\u6c42</li>\n</ul>\n<h3 id=\"sdf_1\">SDF\u6784\u5efa\u4e0e\u7ef4\u62a4</h3>\n<ul>\n<li>[ ] \u9009\u62e9\u5408\u9002\u7684\u521d\u59cb\u5316\u65b9\u6cd5\uff08\u89e3\u6790/FMM/FSM\uff09</li>\n<li>[ ] \u8bbe\u5b9a\u5408\u7406\u7684\u91cd\u65b0\u521d\u59cb\u5316\u9891\u7387\u548c\u6536\u655b\u51c6\u5219</li>\n<li>[ ] \u5728\u754c\u9762\u9644\u8fd1\u4f7f\u7528\u66f4\u9ad8\u7684\u7f51\u683c\u5206\u8fa8\u7387</li>\n<li>[ ] \u9a8c\u8bc1\u68af\u5ea6\u6a21\u957f\u662f\u5426\u63a5\u8fd11</li>\n</ul>\n<h3 id=\"level-set_1\">Level Set\u65b9\u6cd5\u5b9e\u65bd</h3>\n<ul>\n<li>[ ] \u4f7f\u7528\u9ad8\u9636\u8f93\u9001\u683c\u5f0f\u51cf\u5c11\u6570\u503c\u8017\u6563</li>\n<li>[ ] \u5b9e\u65bd\u8d28\u91cf\u4fee\u6b63\u7b56\u7565\uff08\u5982PLS\uff09</li>\n<li>[ ] \u6b63\u786e\u5904\u7406\u901f\u5ea6\u573a\u7684\u5ef6\u62d3</li>\n<li>[ ] \u76d1\u63a7\u8d28\u91cf\u5b88\u6052\u548c\u754c\u9762\u9510\u5229\u5ea6</li>\n</ul>\n<h3 id=\"_11\">\u6e32\u67d3\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u6839\u636e\u573a\u666f\u7279\u70b9\u9009\u62e9\u5408\u9002\u7684\u6e32\u67d3\u65b9\u6cd5</li>\n<li>[ ] \u5b9e\u65bd\u7a7a\u95f4\u52a0\u901f\u7ed3\u6784</li>\n<li>[ ] \u5229\u7528\u65f6\u95f4\u76f8\u5173\u6027\u548c\u7a7a\u95f4\u76f8\u5173\u6027</li>\n<li>[ ] \u5e73\u8861\u8d28\u91cf\u4e0e\u6027\u80fd\uff0c\u4f7f\u7528\u81ea\u9002\u5e94\u91c7\u6837</li>\n</ul>"
  },
  "../chapter2.md": {
    "hash": "446ab4ba4fe04c880076cae67de4066d",
    "content": "<h1 id=\"1\">\u7b2c\u4e8c\u7ae0\uff1a\u62c9\u683c\u6717\u65e5\u89c6\u89d2\uff081\uff09</h1>\n<p>\u672c\u7ae0\u5c06\u4ecb\u7ecd\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u4e0b\u7684\u7269\u7406\u4eff\u771f\u65b9\u6cd5\uff0c\u4ece\u6700\u57fa\u7840\u7684\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u5f00\u59cb\uff0c\u9010\u6b65\u6df1\u5165\u5230\u73b0\u4ee3\u6d41\u4f53\u4eff\u771f\u6280\u672f\u3002\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u8ffd\u8e2a\u6750\u6599\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c\u7406\u89e3\u663e\u5f0f\u4e0e\u9690\u5f0f\u65f6\u95f4\u79ef\u5206\u7684\u6743\u8861\uff0c\u638c\u63e1SPH\u548cPBF\u7b49\u65e0\u7f51\u683c\u65b9\u6cd5\uff0c\u5e76\u5b9e\u73b0\u9ad8\u6548\u7684\u90bb\u5c45\u641c\u7d22\u7b97\u6cd5\u3002\u901a\u8fc7\u672c\u7ae0\u5b66\u4e60\uff0c\u8bfb\u8005\u5c06\u5efa\u7acb\u8d77\u7c92\u5b50\u7cfb\u7edf\u4eff\u771f\u7684\u5b8c\u6574\u77e5\u8bc6\u4f53\u7cfb\uff0c\u4e3a\u540e\u7eed\u7684\u6709\u9650\u5143\u548c\u6df7\u5408\u65b9\u6cd5\u6253\u4e0b\u575a\u5b9e\u57fa\u7840\u3002</p>\n<h2 id=\"21\">2.1 \u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf</h2>\n<p>\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u662f\u7269\u7406\u4eff\u771f\u7684\u57fa\u77f3\uff0c\u901a\u8fc7\u79bb\u6563\u7684\u8d28\u70b9\u548c\u8fde\u63a5\u5b83\u4eec\u7684\u5f39\u7c27\u6765\u8fd1\u4f3c\u8fde\u7eed\u4f53\u7684\u884c\u4e3a\u3002\u8fd9\u79cd\u65b9\u6cd5\u76f4\u89c2\u7b80\u5355\uff0c\u5374\u80fd\u6a21\u62df\u51fa\u4e30\u5bcc\u7684\u7269\u7406\u73b0\u8c61\u3002</p>\n<h3 id=\"211\">2.1.1 \u80e1\u514b\u5b9a\u5f8b\u4e0e\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b</h3>\n<p>\u5f39\u7c27\u7684\u5f39\u6027\u529b\u9075\u5faa\u80e1\u514b\u5b9a\u5f8b\u3002\u5bf9\u4e8e\u8fde\u63a5\u8d28\u70b9$i$\u548c$j$\u7684\u5f39\u7c27\uff0c\u5f39\u6027\u529b\u4e3a\uff1a</p>\n<p>$$\\mathbf{f}_{ij} = -k(|\\mathbf{x}_i - \\mathbf{x}_j| - l_{ij})\\frac{\\mathbf{x}_i - \\mathbf{x}_j}{|\\mathbf{x}_i - \\mathbf{x}_j|}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$k$\u662f\u5f39\u7c27\u521a\u5ea6\u7cfb\u6570</li>\n<li>$l_{ij}$\u662f\u5f39\u7c27\u7684\u9759\u6b62\u957f\u5ea6</li>\n<li>$\\mathbf{x}_i, \\mathbf{x}_j$\u662f\u8d28\u70b9\u7684\u4f4d\u7f6e\u5411\u91cf</li>\n</ul>\n<p>\u6ce8\u610f\u8fd9\u4e2a\u516c\u5f0f\u4e2d\u7684\u65b9\u5411\uff1a\u5f53\u5f39\u7c27\u88ab\u62c9\u4f38\u65f6\uff08$|\\mathbf{x}_i - \\mathbf{x}_j| &gt; l_{ij}$\uff09\uff0c\u529b\u7684\u65b9\u5411\u4e0e$(\\mathbf{x}_i - \\mathbf{x}_j)$\u76f8\u53cd\uff0c\u5c06\u8d28\u70b9\u62c9\u8fd1\uff1b\u5f53\u5f39\u7c27\u88ab\u538b\u7f29\u65f6\uff0c\u529b\u5c06\u8d28\u70b9\u63a8\u5f00\u3002</p>\n<p>\u6bcf\u4e2a\u8d28\u70b9\u7684\u8fd0\u52a8\u9075\u5faa\u725b\u987f\u7b2c\u4e8c\u5b9a\u5f8b\uff1a\n$$m_i\\frac{d\\mathbf{v}_i}{dt} = \\sum_j \\mathbf{f}_{ij} + \\mathbf{f}_i^{ext}$$\n\u5176\u4e2d$\\mathbf{f}_i^{ext}$\u5305\u542b\u91cd\u529b\u3001\u98ce\u529b\u7b49\u5916\u529b\u3002\u5728\u5b9e\u9645\u8ba1\u7b97\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u52a0\u5165\u963b\u5c3c\u529b\u6765\u7a33\u5b9a\u7cfb\u7edf\uff1a\n$$\\mathbf{f}_{ij}^{damping} = -c(\\mathbf{v}_i - \\mathbf{v}_j) \\cdot \\frac{\\mathbf{x}_i - \\mathbf{x}_j}{|\\mathbf{x}_i - \\mathbf{x}_j|} \\cdot \\frac{\\mathbf{x}_i - \\mathbf{x}_j}{|\\mathbf{x}_i - \\mathbf{x}_j|}$$\n\u8fd9\u662f\u6295\u5f71\u5230\u5f39\u7c27\u65b9\u5411\u7684\u76f8\u5bf9\u901f\u5ea6\u963b\u5c3c\uff0c$c$\u662f\u963b\u5c3c\u7cfb\u6570\u3002</p>\n<h3 id=\"212\">2.1.2 \u5f39\u7c27\u521a\u5ea6\u4e0e\u963b\u5c3c\u7cfb\u6570</h3>\n<p>\u9009\u62e9\u5408\u9002\u7684\u5f39\u7c27\u53c2\u6570\u5bf9\u4eff\u771f\u7a33\u5b9a\u6027\u81f3\u5173\u91cd\u8981\u3002\u521a\u5ea6\u7cfb\u6570$k$\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u54cd\u5e94\u901f\u5ea6\u548c\u6570\u503c\u7a33\u5b9a\u6027\u6761\u4ef6\u3002\u5bf9\u4e8e\u5355\u4e2a\u5f39\u7c27-\u8d28\u70b9\u7cfb\u7edf\uff0c\u56fa\u6709\u9891\u7387\u4e3a\uff1a\n$$\\omega = \\sqrt{\\frac{k}{m}}$$\n\u65f6\u95f4\u6b65\u957f\u5fc5\u987b\u6ee1\u8db3\uff1a\n$$\\Delta t &lt; \\frac{2}{\\omega} = 2\\sqrt{\\frac{m}{k}}$$\n\u963b\u5c3c\u7cfb\u6570\u7684\u9009\u62e9\u901a\u5e38\u57fa\u4e8e\u963b\u5c3c\u6bd4$\\zeta$\uff1a\n$$c = 2\\zeta\\sqrt{km}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\zeta &lt; 1$\uff1a\u6b20\u963b\u5c3c\uff0c\u7cfb\u7edf\u4f1a\u632f\u8361</li>\n<li>$\\zeta = 1$\uff1a\u4e34\u754c\u963b\u5c3c\uff0c\u6700\u5feb\u8fbe\u5230\u5e73\u8861\u65e0\u632f\u8361</li>\n<li>$\\zeta &gt; 1$\uff1a\u8fc7\u963b\u5c3c\uff0c\u7f13\u6162\u8fbe\u5230\u5e73\u8861</li>\n</ul>\n<p>\u5728\u5e03\u6599\u4eff\u771f\u4e2d\uff0c\u901a\u5e38\u9009\u62e9$\\zeta \\approx 0.1$\u4fdd\u6301\u4e00\u5b9a\u7684\u52a8\u6001\u6548\u679c\uff1b\u5728\u9700\u8981\u5feb\u901f\u6536\u655b\u7684\u573a\u5408\uff08\u5982\u6c42\u89e3\u9759\u6001\u5e73\u8861\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528$\\zeta \\geq 1$\u3002</p>\n<h3 id=\"213\">2.1.3 \u7cfb\u7edf\u7684\u80fd\u91cf\u5b88\u6052</h3>\n<p>\u7406\u60f3\u7684\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u5e94\u8be5\u4fdd\u6301\u603b\u80fd\u91cf\u5b88\u6052\u3002\u7cfb\u7edf\u7684\u603b\u80fd\u91cf\u5305\u62ec\uff1a</p>\n<p>\u52a8\u80fd\uff1a\n$$T = \\sum_i \\frac{1}{2}m_i|\\mathbf{v}_i|^2$$\n\u5f39\u6027\u52bf\u80fd\uff1a\n$$U = \\sum_{(i,j)} \\frac{1}{2}k(|\\mathbf{x}_i - \\mathbf{x}_j| - l_{ij})^2$$\n\u91cd\u529b\u52bf\u80fd\uff1a\n$$V = \\sum_i m_i g h_i$$\n\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c$E = T + U + V$\u5e94\u8be5\u4fdd\u6301\u6052\u5b9a\u3002\u7136\u800c\uff0c\u6570\u503c\u79ef\u5206\u4f1a\u5f15\u5165\u80fd\u91cf\u6f02\u79fb\uff1a</p>\n<ul>\n<li>\u663e\u5f0f\u79ef\u5206\u901a\u5e38\u4f1a\u589e\u52a0\u80fd\u91cf\uff08\u6570\u503c\u4e0d\u7a33\u5b9a\uff09</li>\n<li>\u9690\u5f0f\u79ef\u5206\u901a\u5e38\u4f1a\u8017\u6563\u80fd\u91cf\uff08\u6570\u503c\u963b\u5c3c\uff09</li>\n</ul>\n<p>\u8f9b\u79ef\u5206\u5668\uff08\u5982\u8f9b\u6b27\u62c9\u6cd5\uff09\u80fd\u66f4\u597d\u5730\u4fdd\u6301\u957f\u65f6\u95f4\u4eff\u771f\u7684\u80fd\u91cf\u5b88\u6052\u6027\u3002</p>\n<h3 id=\"214\">2.1.4 \u591a\u8d28\u70b9\u7cfb\u7edf\u7684\u77e9\u9635\u8868\u793a</h3>\n<p>\u5bf9\u4e8e\u5305\u542b$n$\u4e2a\u8d28\u70b9\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u65b9\u7a0b\u7ec4\u88c5\u6210\u77e9\u9635\u5f62\u5f0f\u3002\u5b9a\u4e49\uff1a</p>\n<ul>\n<li>\u4f4d\u7f6e\u5411\u91cf\uff1a$\\mathbf{x} = [\\mathbf{x}_1^T, \\mathbf{x}_2^T, ..., \\mathbf{x}_n^T]^T \\in \\mathbb{R}^{3n}$</li>\n<li>\u901f\u5ea6\u5411\u91cf\uff1a$\\mathbf{v} = [\\mathbf{v}_1^T, \\mathbf{v}_2^T, ..., \\mathbf{v}_n^T]^T \\in \\mathbb{R}^{3n}$</li>\n</ul>\n<p>\u7cfb\u7edf\u7684\u8fd0\u52a8\u65b9\u7a0b\u53ef\u4ee5\u5199\u6210\uff1a\n$$\\mathbf{M}\\frac{d\\mathbf{v}}{dt} = -\\mathbf{K}(\\mathbf{x} - \\mathbf{x}_0) - \\mathbf{C}\\mathbf{v} + \\mathbf{f}^{ext}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathbf{M} = \\text{diag}(m_1\\mathbf{I}_3, m_2\\mathbf{I}_3, ..., m_n\\mathbf{I}_3)$\u662f\u8d28\u91cf\u77e9\u9635</li>\n<li>$\\mathbf{K}$\u662f\u521a\u5ea6\u77e9\u9635\uff08\u6ce8\u610f\uff1a\u5bf9\u4e8e\u975e\u7ebf\u6027\u5f39\u7c27\uff0c\u8fd9\u662f\u7ebf\u6027\u5316\u7684\u7ed3\u679c\uff09</li>\n<li>$\\mathbf{C}$\u662f\u963b\u5c3c\u77e9\u9635</li>\n<li>$\\mathbf{x}_0$\u662f\u9759\u6b62\u4f4d\u7f6e</li>\n</ul>\n<p>\u8fd9\u79cd\u77e9\u9635\u8868\u793a\u4e3a\u540e\u7eed\u7684\u9690\u5f0f\u79ef\u5206\u65b9\u6cd5\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u5728Taichi\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528<code>ti.Matrix</code>\u6765\u9ad8\u6548\u5730\u5904\u7406\u8fd9\u4e9b\u77e9\u9635\u8fd0\u7b97\u3002</p>\n<h2 id=\"22\">2.2 \u5e03\u6599\u6a21\u62df</h2>\n<p>\u5e03\u6599\u662f\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u7684\u7ecf\u5178\u5e94\u7528\u3002\u901a\u8fc7\u5728\u89c4\u5219\u7f51\u683c\u4e0a\u5e03\u7f6e\u8d28\u70b9\uff0c\u5e76\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u5f39\u7c27\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u51fa\u903c\u771f\u7684\u5e03\u6599\u884c\u4e3a\u3002</p>\n<h3 id=\"221\">2.2.1 \u7ed3\u6784\u5f39\u7c27\u3001\u526a\u5207\u5f39\u7c27\u4e0e\u5f2f\u66f2\u5f39\u7c27</h3>\n<p>\u5e03\u6599\u6a21\u578b\u901a\u5e38\u5305\u542b\u4e09\u79cd\u7c7b\u578b\u7684\u5f39\u7c27\uff1a</p>\n<p><strong>\u7ed3\u6784\u5f39\u7c27\uff08Structural Springs\uff09</strong>\uff1a\u8fde\u63a5\u6c34\u5e73\u548c\u5782\u76f4\u76f8\u90bb\u7684\u8d28\u70b9\uff0c\u7ef4\u6301\u5e03\u6599\u7684\u57fa\u672c\u5f62\u72b6\u3002\u5bf9\u4e8e\u7f51\u683c\u4f4d\u7f6e$(i,j)$\u7684\u8d28\u70b9\uff0c\u7ed3\u6784\u5f39\u7c27\u8fde\u63a5\u5230$(i+1,j)$\u548c$(i,j+1)$\u3002</p>\n<p><strong>\u526a\u5207\u5f39\u7c27\uff08Shearing Springs\uff09</strong>\uff1a\u8fde\u63a5\u5bf9\u89d2\u76f8\u90bb\u7684\u8d28\u70b9\uff0c\u62b5\u6297\u526a\u5207\u53d8\u5f62\u3002\u8fde\u63a5$(i,j)$\u5230$(i+1,j+1)$\u548c$(i+1,j-1)$\u3002</p>\n<p><strong>\u5f2f\u66f2\u5f39\u7c27\uff08Bending Springs\uff09</strong>\uff1a\u8fde\u63a5\u95f4\u9694\u4e00\u4e2a\u8d28\u70b9\u7684\u90bb\u5c45\uff0c\u63d0\u4f9b\u5f2f\u66f2\u521a\u5ea6\u3002\u8fde\u63a5$(i,j)$\u5230$(i+2,j)$\u548c$(i,j+2)$\u3002</p>\n<p>\u4e0d\u540c\u5f39\u7c27\u7684\u521a\u5ea6\u7cfb\u6570\u53cd\u6620\u4e86\u6750\u6599\u7279\u6027\uff1a</p>\n<ul>\n<li>\u7ed3\u6784\u5f39\u7c27\u521a\u5ea6$k_s$\uff1a\u51b3\u5b9a\u62c9\u4f38\u5f3a\u5ea6</li>\n<li>\u526a\u5207\u5f39\u7c27\u521a\u5ea6$k_{sh}$\uff1a\u901a\u5e38$k_{sh} \\approx 0.5k_s$</li>\n<li>\u5f2f\u66f2\u5f39\u7c27\u521a\u5ea6$k_b$\uff1a\u901a\u5e38$k_b \\ll k_s$\uff0c\u4f7f\u5e03\u6599\u6613\u5f2f\u66f2</li>\n</ul>\n<p>\u9759\u6b62\u957f\u5ea6\u7684\u8bbe\u7f6e\uff1a</p>\n<ul>\n<li>\u7ed3\u6784\u5f39\u7c27\uff1a\u7f51\u683c\u95f4\u8ddd$l_0$</li>\n<li>\u526a\u5207\u5f39\u7c27\uff1a$\\sqrt{2}l_0$</li>\n<li>\u5f2f\u66f2\u5f39\u7c27\uff1a$2l_0$</li>\n</ul>\n<h3 id=\"222\">2.2.2 \u5916\u529b</h3>\n<p>\u5e03\u6599\u4eff\u771f\u4e2d\u5e38\u89c1\u7684\u5916\u529b\u5305\u62ec\uff1a</p>\n<p><strong>\u91cd\u529b</strong>\uff1a\n$$\\mathbf{f}_i^{gravity} = m_i\\mathbf{g}$$\n\u5176\u4e2d$\\mathbf{g} = [0, -9.8, 0]^T$ m/s\u00b2\u3002</p>\n<p><strong>\u98ce\u529b</strong>\uff1a\u98ce\u529b\u7684\u8ba1\u7b97\u9700\u8981\u8003\u8651\u5e03\u6599\u7684\u6cd5\u5411\u91cf\u548c\u76f8\u5bf9\u901f\u5ea6\uff1a\n$$\\mathbf{f}_{wind} = c_{wind}((\\mathbf{v}_{wind} - \\mathbf{v}) \\cdot \\mathbf{n})\\mathbf{n}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\mathbf{v}_{wind}$\u662f\u98ce\u901f</li>\n<li>$\\mathbf{v}$\u662f\u5e03\u6599\u8868\u9762\u901f\u5ea6</li>\n<li>$\\mathbf{n}$\u662f\u8868\u9762\u6cd5\u5411\u91cf</li>\n<li>$c_{wind}$\u662f\u98ce\u529b\u7cfb\u6570</li>\n</ul>\n<p>\u5bf9\u4e8e\u4e09\u89d2\u5f62$(i,j,k)$\uff0c\u6cd5\u5411\u91cf\u8ba1\u7b97\u4e3a\uff1a\n$$\\mathbf{n} = \\frac{(\\mathbf{x}_j - \\mathbf{x}_i) \\times (\\mathbf{x}_k - \\mathbf{x}_i)}{|(\\mathbf{x}_j - \\mathbf{x}_i) \\times (\\mathbf{x}_k - \\mathbf{x}_i)|}$$\n<strong>\u78b0\u649e\u529b</strong>\uff1a\u5f53\u8d28\u70b9\u7a7f\u900f\u969c\u788d\u7269\u65f6\uff0c\u65bd\u52a0\u6392\u65a5\u529b\uff1a\n$$\\mathbf{f}_{collision} = k_{collision} \\cdot d \\cdot \\mathbf{n}_{surface}$$\n\u5176\u4e2d$d$\u662f\u7a7f\u900f\u6df1\u5ea6\uff0c$\\mathbf{n}_{surface}$\u662f\u969c\u788d\u7269\u8868\u9762\u6cd5\u5411\u91cf\u3002</p>\n<h3 id=\"223\">2.2.3 \u7ea6\u675f\u5904\u7406</h3>\n<p>\u5e03\u6599\u4eff\u771f\u7ecf\u5e38\u9700\u8981\u5904\u7406\u5404\u79cd\u7ea6\u675f\uff1a</p>\n<p><strong>\u56fa\u5b9a\u7ea6\u675f</strong>\uff1a\u67d0\u4e9b\u8d28\u70b9\u88ab\u56fa\u5b9a\u5728\u7a7a\u95f4\u4e2d\uff08\u5982\u667e\u8863\u7ef3\u4e0a\u7684\u8863\u670d\uff09\u3002\u5b9e\u73b0\u65b9\u6cd5\uff1a</p>\n<ul>\n<li>\u6bcf\u4e2a\u65f6\u95f4\u6b65\u540e\u5c06\u56fa\u5b9a\u70b9\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u91cd\u7f6e</li>\n<li>\u6216\u5728\u6c42\u89e3\u65f6\u5c06\u5bf9\u5e94\u81ea\u7531\u5ea6\u4ece\u7cfb\u7edf\u4e2d\u79fb\u9664</li>\n</ul>\n<p><strong>\u6ed1\u52a8\u7ea6\u675f</strong>\uff1a\u8d28\u70b9\u88ab\u7ea6\u675f\u5728\u66f2\u7ebf\u6216\u66f2\u9762\u4e0a\u6ed1\u52a8\u3002\u5904\u7406\u65b9\u6cd5\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u65e0\u7ea6\u675f\u7684\u65b0\u4f4d\u7f6e$\\mathbf{x}_{new}$</li>\n<li>\u5c06\u4f4d\u7f6e\u6295\u5f71\u5230\u7ea6\u675f\u6d41\u5f62\u4e0a\uff1a$\\mathbf{x}_{projected} = \\text{Project}(\\mathbf{x}_{new})$</li>\n<li>\u66f4\u65b0\u901f\u5ea6\u4ee5\u4fdd\u6301\u4e00\u81f4\u6027\uff1a$\\mathbf{v}_{new} = (\\mathbf{x}_{projected} - \\mathbf{x}_{old})/\\Delta t$</li>\n</ol>\n<p><strong>\u8ddd\u79bb\u7ea6\u675f</strong>\uff1a\u4fdd\u6301\u4e24\u70b9\u95f4\u8ddd\u79bb\u6052\u5b9a\uff08\u4e0d\u53ef\u5ef6\u5c55\u5e03\u6599\uff09\u3002\u4f7f\u7528\u4f4d\u7f6e\u4fee\u6b63\uff1a\n$$\\Delta\\mathbf{x}_i = -\\frac{w_i}{w_i + w_j}\\frac{|\\mathbf{x}_i - \\mathbf{x}_j| - l_{ij}}{|\\mathbf{x}_i - \\mathbf{x}_j|}(\\mathbf{x}_i - \\mathbf{x}_j)$$\n\u5176\u4e2d$w_i = 1/m_i$\u662f\u8d28\u70b9\u7684\u9006\u8d28\u91cf\u3002</p>\n<h3 id=\"224\">2.2.4 \u81ea\u78b0\u649e\u68c0\u6d4b\u4e0e\u54cd\u5e94</h3>\n<p>\u5e03\u6599\u7684\u81ea\u78b0\u649e\u662f\u4eff\u771f\u4e2d\u7684\u4e3b\u8981\u6311\u6218\u4e4b\u4e00\u3002</p>\n<p><strong>\u7a7a\u95f4\u54c8\u5e0c\u52a0\u901f</strong>\uff1a\u5c06\u7a7a\u95f4\u5212\u5206\u4e3a\u7f51\u683c\uff0c\u6bcf\u4e2a\u5355\u5143\u5927\u5c0f\u7ea6\u4e3a\u5178\u578b\u78b0\u649e\u8ddd\u79bb\u76842\u500d\u3002\u5bf9\u6bcf\u4e2a\u8d28\u70b9\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u5176\u6240\u5728\u7684\u7f51\u683c\u5355\u5143\uff1a<code>cell = floor(position / cell_size)</code></li>\n<li>\u68c0\u67e5\u76f8\u90bb\u768427\u4e2a\u5355\u5143\u4e2d\u7684\u6240\u6709\u8d28\u70b9</li>\n<li>\u53ea\u5bf9\u8ddd\u79bb\u5c0f\u4e8e\u9608\u503c\u7684\u8d28\u70b9\u5bf9\u8fdb\u884c\u7cbe\u786e\u78b0\u649e\u68c0\u6d4b</li>\n</ol>\n<p><strong>\u8fde\u7eed\u78b0\u649e\u68c0\u6d4b\uff08CCD\uff09</strong>\uff1a\u5bf9\u4e8e\u9ad8\u901f\u8fd0\u52a8\uff0c\u9700\u8981\u68c0\u6d4b\u8fd0\u52a8\u8f68\u8ff9\u95f4\u7684\u78b0\u649e\u3002\u7ed9\u5b9a\u4e24\u4e2a\u4e09\u89d2\u5f62\u5728$t$\u548c$t+\\Delta t$\u65f6\u523b\u7684\u4f4d\u7f6e\uff0c\u6c42\u89e3\uff1a\n$$\\text{min } t \\in [0,1] \\text{ such that triangles intersect}$$\n\u8fd9\u901a\u5e38\u9700\u8981\u6c42\u89e3\u4e00\u4e2a\u4e09\u6b21\u65b9\u7a0b\u3002</p>\n<p><strong>\u51b2\u91cf\u54cd\u5e94</strong>\uff1a\u5f53\u68c0\u6d4b\u5230\u78b0\u649e\u65f6\uff0c\u65bd\u52a0\u51b2\u91cf\u5206\u79bb\u8d28\u70b9\uff1a\n$$\\mathbf{J} = \\frac{2m_i m_j}{m_i + m_j}v_{rel} \\cdot \\mathbf{n}$$\n\u5176\u4e2d$v_{rel}$\u662f\u76f8\u5bf9\u901f\u5ea6\uff0c$\\mathbf{n}$\u662f\u78b0\u649e\u6cd5\u5411\u91cf\u3002</p>\n<p>\u4e3a\u4e86\u7a33\u5b9a\u6027\uff0c\u901a\u5e38\u4f1a\u52a0\u5165\u4e00\u4e2a\u5c0f\u7684\u5206\u79bb\u8ddd\u79bb$\\epsilon$\uff08\u59822mm\uff09\uff0c\u5728\u8d28\u70b9\u8ddd\u79bb\u5c0f\u4e8e$\\epsilon$\u65f6\u5c31\u5f00\u59cb\u65bd\u52a0\u6392\u65a5\u529b\u3002</p>\n<h2 id=\"23\">2.3 \u663e\u5f0f\u4e0e\u9690\u5f0f\u65f6\u95f4\u79ef\u5206\u5668</h2>\n<p>\u65f6\u95f4\u79ef\u5206\u662f\u5c06\u8fde\u7eed\u7684\u8fd0\u52a8\u65b9\u7a0b\u79bb\u6563\u5316\u7684\u5173\u952e\u6b65\u9aa4\u3002\u4e0d\u540c\u7684\u79ef\u5206\u65b9\u6cd5\u5728\u7cbe\u5ea6\u3001\u7a33\u5b9a\u6027\u548c\u8ba1\u7b97\u6548\u7387\u4e0a\u6709\u4e0d\u540c\u7684\u6743\u8861\u3002</p>\n<h3 id=\"231\">2.3.1 \u524d\u5411\u6b27\u62c9\u6cd5</h3>\n<p>\u524d\u5411\u6b27\u62c9\u6cd5\u662f\u6700\u7b80\u5355\u7684\u663e\u5f0f\u79ef\u5206\u65b9\u6cd5\uff1a\n$$\\mathbf{v}_{t+\\Delta t} = \\mathbf{v}_t + \\Delta t \\frac{\\mathbf{f}_t}{m}$$\n$$\\mathbf{x}_{t+\\Delta t} = \\mathbf{x}_t + \\Delta t \\mathbf{v}_t$$\n\u6ce8\u610f\u901f\u5ea6\u66f4\u65b0\u4f7f\u7528\u7684\u662f\u65f6\u523b$t$\u7684\u529b\uff0c\u4f4d\u7f6e\u66f4\u65b0\u4f7f\u7528\u7684\u662f\u65f6\u523b$t$\u7684\u901f\u5ea6\u3002</p>\n<p><strong>\u7a33\u5b9a\u6027\u6761\u4ef6</strong>\uff1a\u5bf9\u4e8e\u5f39\u7c27\u7cfb\u7edf\uff0c\u524d\u5411\u6b27\u62c9\u6cd5\u7684\u7a33\u5b9a\u6027\u8981\u6c42\uff1a\n$$\\Delta t &lt; \\frac{2}{\\omega_{max}} = 2\\sqrt{\\frac{m}{k_{max}}}$$\n\u5176\u4e2d$\\omega_{max}$\u662f\u7cfb\u7edf\u7684\u6700\u5927\u56fa\u6709\u9891\u7387\u3002\u8fd9\u610f\u5473\u7740\uff1a</p>\n<ul>\n<li>\u521a\u5ea6\u8d8a\u5927\uff0c\u9700\u8981\u7684\u65f6\u95f4\u6b65\u957f\u8d8a\u5c0f</li>\n<li>\u8d28\u91cf\u8d8a\u5c0f\uff0c\u9700\u8981\u7684\u65f6\u95f4\u6b65\u957f\u8d8a\u5c0f</li>\n</ul>\n<p><strong>\u80fd\u91cf\u884c\u4e3a</strong>\uff1a\u524d\u5411\u6b27\u62c9\u6cd5\u4f1a\u4eba\u5de5\u589e\u52a0\u7cfb\u7edf\u80fd\u91cf\uff0c\u5bfc\u81f4\"\u7206\u70b8\"\u4e0d\u7a33\u5b9a\u6027\u3002\u8003\u8651\u7b80\u8c10\u632f\u5b50$\\ddot{x} + \\omega^2 x = 0$\uff0c\u524d\u5411\u6b27\u62c9\u7684\u653e\u5927\u56e0\u5b50\u4e3a\uff1a\n$$|1 + i\\omega\\Delta t| = \\sqrt{1 + (\\omega\\Delta t)^2} &gt; 1$$</p>\n<h3 id=\"232\">2.3.2 \u8f9b\u6b27\u62c9\u6cd5</h3>\n<p>\u8f9b\u6b27\u62c9\u6cd5\uff08Symplectic Euler\uff09\u53ea\u9700\u8981\u4ea4\u6362\u66f4\u65b0\u987a\u5e8f\uff1a\n$$\\mathbf{v}_{t+\\Delta t} = \\mathbf{v}_t + \\Delta t \\frac{\\mathbf{f}_t}{m}$$\n$$\\mathbf{x}_{t+\\Delta t} = \\mathbf{x}_t + \\Delta t \\mathbf{v}_{t+\\Delta t}$$\n\u6ce8\u610f\u4f4d\u7f6e\u66f4\u65b0\u4f7f\u7528\u7684\u662f\u65b0\u7684\u901f\u5ea6$\\mathbf{v}_{t+\\Delta t}$\u3002</p>\n<p><strong>\u8f9b\u6027\u8d28</strong>\uff1a\u8f9b\u6b27\u62c9\u6cd5\u4fdd\u6301\u76f8\u7a7a\u95f4\u4f53\u79ef\uff08Liouville\u5b9a\u7406\uff09\uff0c\u8fd9\u5bf9\u957f\u65f6\u95f4\u4eff\u771f\u5f88\u91cd\u8981\u3002\u5bf9\u4e8e\u54c8\u5bc6\u987f\u7cfb\u7edf\uff0c\u8f9b\u79ef\u5206\u5668\u80fd\u66f4\u597d\u5730\u4fdd\u6301\u80fd\u91cf\u6709\u754c\u3002</p>\n<p><strong>\u7a33\u5b9a\u57df</strong>\uff1a\u8f9b\u6b27\u62c9\u6cd5\u7684\u7a33\u5b9a\u6761\u4ef6\u4e0e\u524d\u5411\u6b27\u62c9\u76f8\u540c\uff0c\u4f46\u80fd\u91cf\u884c\u4e3a\u66f4\u597d\u2014\u2014\u5b83\u4e0d\u4f1a\u5355\u8c03\u589e\u52a0\u6216\u51cf\u5c11\u80fd\u91cf\uff0c\u800c\u662f\u5728\u771f\u5b9e\u503c\u9644\u8fd1\u632f\u8361\u3002</p>\n<h3 id=\"233\">2.3.3 \u540e\u5411\u6b27\u62c9\u6cd5</h3>\n<p>\u540e\u5411\u6b27\u62c9\u6cd5\u662f\u6700\u57fa\u672c\u7684\u9690\u5f0f\u65b9\u6cd5\uff1a\n$$\\mathbf{v}_{t+\\Delta t} = \\mathbf{v}_t + \\Delta t \\frac{\\mathbf{f}(\\mathbf{x}_{t+\\Delta t})}{m}$$\n$$\\mathbf{x}_{t+\\Delta t} = \\mathbf{x}_t + \\Delta t \\mathbf{v}_{t+\\Delta t}$$\n\u5173\u952e\u533a\u522b\u662f\u529b$\\mathbf{f}$\u5728\u65b0\u4f4d\u7f6e$\\mathbf{x}_{t+\\Delta t}$\u5904\u8ba1\u7b97\uff0c\u8fd9\u5bfc\u81f4\u9700\u8981\u6c42\u89e3\u975e\u7ebf\u6027\u65b9\u7a0b\u3002</p>\n<p><strong>\u65e0\u6761\u4ef6\u7a33\u5b9a\u6027</strong>\uff1a\u540e\u5411\u6b27\u62c9\u6cd5\u5bf9\u4efb\u610f\u5927\u7684\u65f6\u95f4\u6b65\u957f\u90fd\u662f\u7a33\u5b9a\u7684\uff08A-\u7a33\u5b9a\uff09\u3002\u8fd9\u5141\u8bb8\u4f7f\u7528\u5927\u65f6\u95f4\u6b65\u957f\uff0c\u7279\u522b\u9002\u5408\u521a\u6027\u7cfb\u7edf\u3002</p>\n<p><strong>\u6570\u503c\u963b\u5c3c</strong>\uff1a\u540e\u5411\u6b27\u62c9\u4f1a\u5f15\u5165\u4eba\u5de5\u963b\u5c3c\uff0c\u5bfc\u81f4\u80fd\u91cf\u8017\u6563\u3002\u632f\u5e45\u8870\u51cf\u56e0\u5b50\u7ea6\u4e3a\uff1a\n$$\\text{damping} \\approx 1 - \\frac{\\omega^2\\Delta t^2}{2}$$\n<strong>\u6c42\u89e3\u7b56\u7565</strong>\uff1a\u901a\u5e38\u4f7f\u7528Newton-Raphson\u8fed\u4ee3\u6216\u56fa\u5b9a\u70b9\u8fed\u4ee3\u6c42\u89e3\u975e\u7ebf\u6027\u7cfb\u7edf\u3002\u5bf9\u4e8e\u5f39\u7c27\u7cfb\u7edf\uff0c\u4e00\u6b21Newton\u8fed\u4ee3\u901a\u5e38\u5c31\u8db3\u591f\u4e86\u3002</p>\n<h3 id=\"234-rk4\">2.3.4 \u4e2d\u70b9\u6cd5\u4e0eRK4</h3>\n<p><strong>\u4e2d\u70b9\u6cd5\uff08Midpoint Method\uff09</strong>\uff1a\u4e8c\u9636\u7cbe\u5ea6\u7684\u9690\u5f0f\u65b9\u6cd5\uff1a\n$$\\mathbf{k}_1 = \\mathbf{v}_t + \\frac{\\Delta t}{2}\\frac{\\mathbf{f}(\\mathbf{x}_t + \\frac{\\Delta t}{2}\\mathbf{k}_1)}{m}$$\n$$\\mathbf{x}_{t+\\Delta t} = \\mathbf{x}_t + \\Delta t \\mathbf{k}_1$$\n<strong>\u901a\u7528$\\beta$\u65b9\u6cd5</strong>\uff1a\n$$\\mathbf{x}_{t+\\Delta t} = \\mathbf{x}_t + \\Delta t \\mathbf{v}_t + \\Delta t^2[(1-\\beta)\\mathbf{a}_t + \\beta\\mathbf{a}_{t+\\Delta t}]$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$\\beta = 0$\uff1a\u663e\u5f0f\u6b27\u62c9</li>\n<li>$\\beta = 0.5$\uff1a\u4e2d\u70b9\u6cd5\uff08\u4e8c\u9636\u7cbe\u5ea6\uff09</li>\n<li>$\\beta = 1$\uff1a\u540e\u5411\u6b27\u62c9</li>\n</ul>\n<p><strong>Runge-Kutta 4\uff08RK4\uff09</strong>\uff1a\u56db\u9636\u7cbe\u5ea6\u7684\u663e\u5f0f\u65b9\u6cd5\uff1a\n$$\\mathbf{k}_1 = \\mathbf{f}(\\mathbf{x}_t, t)$$\n$$\\mathbf{k}_2 = \\mathbf{f}(\\mathbf{x}_t + \\frac{\\Delta t}{2}\\mathbf{k}_1, t + \\frac{\\Delta t}{2})$$\n$$\\mathbf{k}_3 = \\mathbf{f}(\\mathbf{x}_t + \\frac{\\Delta t}{2}\\mathbf{k}_2, t + \\frac{\\Delta t}{2})$$\n$$\\mathbf{k}_4 = \\mathbf{f}(\\mathbf{x}_t + \\Delta t\\mathbf{k}_3, t + \\Delta t)$$\n$$\\mathbf{x}_{t+\\Delta t} = \\mathbf{x}_t + \\frac{\\Delta t}{6}(\\mathbf{k}_1 + 2\\mathbf{k}_2 + 2\\mathbf{k}_3 + \\mathbf{k}_4)$$\nRK4\u63d0\u4f9b\u4e86\u7cbe\u5ea6\u548c\u8ba1\u7b97\u6210\u672c\u7684\u826f\u597d\u5e73\u8861\uff0c\u6bcf\u6b65\u9700\u89814\u6b21\u529b\u8ba1\u7b97\u3002</p>\n<h2 id=\"24\">2.4 \u9690\u5f0f\u79ef\u5206\u7684\u7ebf\u6027\u5316\u4e0e\u6c42\u89e3</h2>\n<p>\u9690\u5f0f\u65b9\u6cd5\u7684\u6838\u5fc3\u6311\u6218\u662f\u6c42\u89e3\u975e\u7ebf\u6027\u7cfb\u7edf\u3002\u672c\u8282\u4ecb\u7ecd\u5b9e\u7528\u7684\u7ebf\u6027\u5316\u548c\u8fed\u4ee3\u6c42\u89e3\u6280\u672f\u3002</p>\n<h3 id=\"241\">2.4.1 \u725b\u987f\u6cd5\u7ebf\u6027\u5316</h3>\n<p>\u5bf9\u4e8e\u9690\u5f0f\u6b27\u62c9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u6c42\u89e3\uff1a\n$$\\mathbf{v}_{t+\\Delta t} = \\mathbf{v}_t + \\Delta t \\mathbf{M}^{-1}\\mathbf{f}(\\mathbf{x}_t + \\Delta t \\mathbf{v}_{t+\\Delta t})$$\n\u4f7f\u7528\u6cf0\u52d2\u5c55\u5f00\u7ebf\u6027\u5316\u529b\uff1a\n$$\\mathbf{f}(\\mathbf{x} + \\Delta \\mathbf{x}) \\approx \\mathbf{f}(\\mathbf{x}) + \\frac{\\partial \\mathbf{f}}{\\partial \\mathbf{x}}\\Delta \\mathbf{x}$$\n\u5b9a\u4e49\u96c5\u53ef\u6bd4\u77e9\u9635$\\mathbf{J} = \\frac{\\partial \\mathbf{f}}{\\partial \\mathbf{x}}$\uff0c\u4ee3\u5165\u5f97\u5230\u7ebf\u6027\u7cfb\u7edf\uff1a\n$$(\\mathbf{I} - \\Delta t^2 \\mathbf{M}^{-1}\\mathbf{J})\\Delta \\mathbf{v} = \\Delta t \\mathbf{M}^{-1}\\mathbf{f}(\\mathbf{x}_t)$$\n\u5bf9\u4e8e\u5f39\u7c27\u529b\uff0c\u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u5143\u7d20\u4e3a\uff1a\n$$\\mathbf{J}_{ij} = -k\\left[\\frac{(\\mathbf{x}_i - \\mathbf{x}_j)(\\mathbf{x}_i - \\mathbf{x}_j)^T}{|\\mathbf{x}_i - \\mathbf{x}_j|^2} + \\left(1 - \\frac{l_{ij}}{|\\mathbf{x}_i - \\mathbf{x}_j|}\\right)\\mathbf{I}\\right]$$</p>\n<h3 id=\"242\">2.4.2 \u96c5\u53ef\u6bd4\u77e9\u9635\u7684\u6784\u5efa</h3>\n<p>\u7cfb\u7edf\u7684\u5b8c\u6574\u96c5\u53ef\u6bd4\u77e9\u9635\u662f\u7a00\u758f\u7684\uff0c\u53ea\u5728\u6709\u5f39\u7c27\u8fde\u63a5\u7684\u8d28\u70b9\u95f4\u6709\u975e\u96f6\u5143\u7d20\u3002</p>\n<p><strong>\u77e9\u9635\u7ed3\u6784</strong>\uff1a\u5bf9\u4e8e$n$\u4e2a\u8d28\u70b9\u76843D\u7cfb\u7edf\uff0c\u96c5\u53ef\u6bd4\u77e9\u9635\u5927\u5c0f\u4e3a$3n \\times 3n$\u3002\u6bcf\u4e2a\u5f39\u7c27\u8d21\u732e4\u4e2a$3 \\times 3$\u7684\u5757\uff1a</p>\n<ul>\n<li>$\\mathbf{J}_{ii}$\uff1a\u8d28\u70b9$i$\u5bf9\u81ea\u8eab\u7684\u5bfc\u6570</li>\n<li>$\\mathbf{J}_{ij}$\uff1a\u8d28\u70b9$i$\u5bf9\u8d28\u70b9$j$\u7684\u5bfc\u6570</li>\n<li>$\\mathbf{J}_{ji}$\uff1a\u8d28\u70b9$j$\u5bf9\u8d28\u70b9$i$\u7684\u5bfc\u6570</li>\n<li>$\\mathbf{J}_{jj}$\uff1a\u8d28\u70b9$j$\u5bf9\u81ea\u8eab\u7684\u5bfc\u6570</li>\n</ul>\n<p><strong>\u5bf9\u79f0\u6027</strong>\uff1a\u7531\u725b\u987f\u7b2c\u4e09\u5b9a\u5f8b\uff0c$\\mathbf{J}_{ij} = -\\mathbf{J}_{ji}$\uff0c\u56e0\u6b64\u6574\u4f53\u96c5\u53ef\u6bd4\u77e9\u9635\u662f\u5bf9\u79f0\u7684\u3002</p>\n<p><strong>\u6b63\u5b9a\u6027</strong>\uff1a\u52a0\u5165\u963b\u5c3c\u9879\u548c\u9690\u5f0f\u79ef\u5206\u7684\u7cfb\u6570\u540e\uff0c\u7cfb\u7edf\u77e9\u9635$\\mathbf{A} = \\mathbf{I} - \\Delta t^2 \\mathbf{M}^{-1}\\mathbf{J}$\u901a\u5e38\u662f\u5bf9\u79f0\u6b63\u5b9a\u7684\uff0c\u8fd9\u4fdd\u8bc1\u4e86\u552f\u4e00\u89e3\u7684\u5b58\u5728\u3002</p>\n<h3 id=\"243-jacobigauss-seidel\">2.4.3 Jacobi\u4e0eGauss-Seidel\u8fed\u4ee3</h3>\n<p>\u5bf9\u4e8e\u5927\u89c4\u6a21\u7cfb\u7edf\uff0c\u76f4\u63a5\u6c42\u89e3\u7ebf\u6027\u7cfb\u7edf\u53ef\u80fd\u8fc7\u4e8e\u6602\u8d35\u3002\u8fed\u4ee3\u65b9\u6cd5\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u66ff\u4ee3\u65b9\u6848\u3002</p>\n<p><strong>Jacobi\u8fed\u4ee3</strong>\uff1a\n$$\\mathbf{x}_i^{(k+1)} = \\frac{1}{\\mathbf{A}_{ii}}\\left(\\mathbf{b}_i - \\sum_{j \\neq i} \\mathbf{A}_{ij}\\mathbf{x}_j^{(k)}\\right)$$\nJacobi\u65b9\u6cd5\u7684\u4f18\u70b9\uff1a</p>\n<ul>\n<li>\u5b8c\u5168\u5e76\u884c\uff0c\u9002\u5408GPU\u5b9e\u73b0</li>\n<li>\u5b9e\u73b0\u7b80\u5355\uff0c\u5185\u5b58\u8bbf\u95ee\u89c4\u5219</li>\n<li>\u5bf9\u4e8e\u5bf9\u89d2\u5360\u4f18\u77e9\u9635\u6536\u655b</li>\n</ul>\n<p><strong>Gauss-Seidel\u8fed\u4ee3</strong>\uff1a\n$$\\mathbf{x}_i^{(k+1)} = \\frac{1}{\\mathbf{A}_{ii}}\\left(\\mathbf{b}_i - \\sum_{j &lt; i} \\mathbf{A}_{ij}\\mathbf{x}_j^{(k+1)} - \\sum_{j &gt; i} \\mathbf{A}_{ij}\\mathbf{x}_j^{(k)}\\right)$$\nGauss-Seidel\u4f7f\u7528\u6700\u65b0\u7684\u503c\uff0c\u6536\u655b\u901f\u5ea6\u7ea6\u4e3aJacobi\u7684\u4e24\u500d\u3002</p>\n<p><strong>\u677e\u5f1b\u56e0\u5b50</strong>\uff1a\u8d85\u677e\u5f1b\uff08SOR\uff09\u53ef\u4ee5\u52a0\u901f\u6536\u655b\uff1a\n$$\\mathbf{x}_i^{(k+1)} = (1-\\omega)\\mathbf{x}_i^{(k)} + \\omega\\mathbf{x}_i^{GS}$$\n\u5176\u4e2d$\\omega \\in (0, 2)$\u662f\u677e\u5f1b\u56e0\u5b50\u3002\u6700\u4f18$\\omega$\u4f9d\u8d56\u4e8e\u77e9\u9635\u8c31\u534a\u5f84\uff0c\u5b9e\u8df5\u4e2d\u901a\u5e38\u9009\u62e9$\\omega \\in [1.2, 1.8]$\u3002</p>\n<p><strong>\u6536\u655b\u51c6\u5219</strong>\uff1a\u8fed\u4ee3\u76f4\u5230\u6b8b\u5dee\u8db3\u591f\u5c0f\uff1a\n$$|\\mathbf{A}\\mathbf{x}^{(k)} - \\mathbf{b}| &lt; \\epsilon|\\mathbf{b}|$$\n\u901a\u5e38$\\epsilon = 10^{-3}$\u5230$10^{-5}$\u5c31\u8db3\u591f\u4e86\u3002</p>\n<h3 id=\"244\">2.4.4 \u5171\u8f6d\u68af\u5ea6\u6cd5\u7b80\u4ecb</h3>\n<p>\u5171\u8f6d\u68af\u5ea6\uff08CG\uff09\u6cd5\u662f\u6c42\u89e3\u5bf9\u79f0\u6b63\u5b9a\u7cfb\u7edf\u7684\u9996\u9009\u65b9\u6cd5\u3002</p>\n<p><strong>\u57fa\u672c\u7b97\u6cd5</strong>\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u5316\uff1a$\\mathbf{r}_0 = \\mathbf{b} - \\mathbf{A}\\mathbf{x}_0$\uff0c$\\mathbf{p}_0 = \\mathbf{r}_0$</li>\n<li>\u8fed\u4ee3\uff1a\n   - $\\alpha_k = \\frac{\\mathbf{r}_k^T\\mathbf{r}_k}{\\mathbf{p}_k^T\\mathbf{A}\\mathbf{p}_k}$\n   - $\\mathbf{x}_{k+1} = \\mathbf{x}_k + \\alpha_k\\mathbf{p}_k$\n   - $\\mathbf{r}_{k+1} = \\mathbf{r}_k - \\alpha_k\\mathbf{A}\\mathbf{p}_k$\n   - $\\beta_k = \\frac{\\mathbf{r}_{k+1}^T\\mathbf{r}_{k+1}}{\\mathbf{r}_k^T\\mathbf{r}_k}$\n   - $\\mathbf{p}_{k+1} = \\mathbf{r}_{k+1} + \\beta_k\\mathbf{p}_k$</li>\n</ol>\n<p><strong>\u6536\u655b\u6027</strong>\uff1aCG\u7406\u8bba\u4e0a\u5728$n$\u6b65\u5185\u6536\u655b\uff08$n$\u662f\u77e9\u9635\u7ef4\u5ea6\uff09\uff0c\u4f46\u5b9e\u9645\u6536\u655b\u901f\u5ea6\u53d6\u51b3\u4e8e\u6761\u4ef6\u6570$\\kappa(\\mathbf{A})$\uff1a\n$$|\\mathbf{e}_k|_{\\mathbf{A}} \\leq 2\\left(\\frac{\\sqrt{\\kappa}-1}{\\sqrt{\\kappa}+1}\\right)^k|\\mathbf{e}_0|_{\\mathbf{A}}$$\n<strong>\u9884\u6761\u4ef6</strong>\uff1a\u4f7f\u7528\u9884\u6761\u4ef6\u77e9\u9635$\\mathbf{M} \\approx \\mathbf{A}$\u53ef\u4ee5\u663e\u8457\u52a0\u901f\u6536\u655b\u3002\u5bf9\u4e8e\u5f39\u7c27\u7cfb\u7edf\uff0c\u5bf9\u89d2\u9884\u6761\u4ef6\uff08Jacobi\u9884\u6761\u4ef6\uff09\u901a\u5e38\u5c31\u5f88\u6709\u6548\uff1a\n$$\\mathbf{M} = \\text{diag}(\\mathbf{A})$$\n\u5728Taichi\u4e2d\u5b9e\u73b0CG\u65f6\uff0c\u6ce8\u610f\u5229\u7528\u7a00\u758f\u77e9\u9635\u7ed3\u6784\u548c\u5411\u91cf\u5316\u64cd\u4f5c\u6765\u4f18\u5316\u6027\u80fd\u3002</p>\n<h2 id=\"25-sph\">2.5 \u5149\u6ed1\u7c92\u5b50\u6d41\u4f53\u52a8\u529b\u5b66(SPH)</h2>\n<p>SPH\u662f\u4e00\u79cd\u65e0\u7f51\u683c\u7684\u62c9\u683c\u6717\u65e5\u65b9\u6cd5\uff0c\u901a\u8fc7\u7c92\u5b50\u548c\u6838\u51fd\u6570\u6765\u79bb\u6563\u5316\u8fde\u7eed\u573a\u3002\u5b83\u7279\u522b\u9002\u5408\u5904\u7406\u5927\u53d8\u5f62\u548c\u81ea\u7531\u8868\u9762\u6d41\u52a8\u3002</p>\n<h3 id=\"251\">2.5.1 \u6838\u51fd\u6570\u4e0e\u7c92\u5b50\u8fd1\u4f3c</h3>\n<p>SPH\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7528\u79bb\u6563\u7c92\u5b50\u7684\u52a0\u6743\u548c\u6765\u8fd1\u4f3c\u8fde\u7eed\u573a\u3002\u5bf9\u4e8e\u4efb\u610f\u7269\u7406\u91cf$A(\\mathbf{x})$\uff1a\n$$A(\\mathbf{x}) = \\int A(\\mathbf{x}')W(\\mathbf{x} - \\mathbf{x}', h)d\\mathbf{x}' \\approx \\sum_j A_j \\frac{m_j}{\\rho_j}W(\\mathbf{x} - \\mathbf{x}_j, h)$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$W(\\mathbf{r}, h)$\u662f\u6838\u51fd\u6570\uff0c$h$\u662f\u5149\u6ed1\u957f\u5ea6</li>\n<li>$m_j$\u662f\u7c92\u5b50$j$\u7684\u8d28\u91cf</li>\n<li>$\\rho_j$\u662f\u7c92\u5b50$j$\u5904\u7684\u5bc6\u5ea6</li>\n</ul>\n<p><strong>\u6838\u51fd\u6570\u6027\u8d28</strong>\uff1a</p>\n<ol>\n<li>\u5f52\u4e00\u5316\uff1a$\\int W(\\mathbf{r}, h)d\\mathbf{r} = 1$</li>\n<li>\u7d27\u652f\u6027\uff1a$W(\\mathbf{r}, h) = 0$ for $|\\mathbf{r}| &gt; kh$\uff08\u901a\u5e38$k=2$\u6216$3$\uff09</li>\n<li>\u5bf9\u79f0\u6027\uff1a$W(\\mathbf{r}, h) = W(-\\mathbf{r}, h)$</li>\n<li>\u5149\u6ed1\u6027\uff1a\u81f3\u5c11$C^1$\u8fde\u7eed</li>\n</ol>\n<p><strong>Cubic Spline\u6838\u51fd\u6570</strong>\uff08\u6700\u5e38\u7528\uff09\uff1a\n$$W(r, h) = \\frac{\\sigma_d}{h^d} \\begin{cases}\n1 - \\frac{3}{2}q^2 + \\frac{3}{4}q^3 &amp; 0 \\leq q \\leq 1 \\\\\n\\frac{1}{4}(2-q)^3 &amp; 1 &lt; q \\leq 2 \\\\\n0 &amp; q &gt; 2\n\\end{cases}$$\n\u5176\u4e2d$q = r/h$\uff0c$\\sigma_d$\u662f\u5f52\u4e00\u5316\u5e38\u6570\uff082D: $10/7\\pi$\uff0c3D: $1/\\pi$\uff09\u3002</p>\n<p><strong>\u68af\u5ea6\u8ba1\u7b97</strong>\uff1aSPH\u4e2d\u68af\u5ea6\u7684\u8fd1\u4f3c\u7279\u522b\u91cd\u8981\uff1a\n$$\\nabla A(\\mathbf{x}) \\approx \\sum_j A_j \\frac{m_j}{\\rho_j}\\nabla W(\\mathbf{x} - \\mathbf{x}_j, h)$$\n\u6ce8\u610f\u68af\u5ea6\u4f5c\u7528\u5728\u6838\u51fd\u6570\u4e0a\uff0c\u800c\u4e0d\u662f\u7269\u7406\u91cf\u4e0a\u3002</p>\n<h3 id=\"252\">2.5.2 \u5bc6\u5ea6\u8ba1\u7b97\u4e0e\u72b6\u6001\u65b9\u7a0b</h3>\n<p><strong>\u5bc6\u5ea6\u8ba1\u7b97</strong>\u662fSPH\u7684\u7b2c\u4e00\u6b65\uff1a\n$$\\rho_i = \\sum_j m_j W(\\mathbf{x}_i - \\mathbf{x}_j, h)$$\n\u8fd9\u4fdd\u8bc1\u4e86\u8d28\u91cf\u5b88\u6052\uff1a$\\sum_i m_i = \\sum_i \\rho_i V_i$\u3002</p>\n<p><strong>\u72b6\u6001\u65b9\u7a0b</strong>\u5c06\u5bc6\u5ea6\u4e0e\u538b\u529b\u8054\u7cfb\u8d77\u6765\u3002\u5bf9\u4e8e\u5f31\u53ef\u538b\u7f29\u6d41\u4f53\uff0c\u5e38\u7528Tait\u65b9\u7a0b\uff1a\n$$p = B\\left[\\left(\\frac{\\rho}{\\rho_0}\\right)^\\gamma - 1\\right]$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$B = \\frac{\\rho_0 c_s^2}{\\gamma}$\uff0c$c_s$\u662f\u58f0\u901f</li>\n<li>$\\gamma = 7$\uff08\u6c34\uff09</li>\n<li>$\\rho_0$\u662f\u53c2\u8003\u5bc6\u5ea6</li>\n</ul>\n<p>\u9009\u62e9\u5408\u9002\u7684$B$\u503c\u5f88\u91cd\u8981\uff1a</p>\n<ul>\n<li>\u592a\u5c0f\uff1a\u6d41\u4f53\u8fc7\u4e8e\u53ef\u538b\u7f29</li>\n<li>\u592a\u5927\uff1a\u65f6\u95f4\u6b65\u957f\u9650\u5236\u4e25\u683c\uff08$\\Delta t \\propto 1/c_s$\uff09</li>\n</ul>\n<p>\u5b9e\u8df5\u4e2d\uff0c\u901a\u5e38\u9009\u62e9$c_s = 10 v_{max}$\uff0c\u5176\u4e2d$v_{max}$\u662f\u9884\u671f\u7684\u6700\u5927\u901f\u5ea6\u3002</p>\n<h3 id=\"253\">2.5.3 \u538b\u529b\u68af\u5ea6\u4e0e\u7c98\u6027\u529b</h3>\n<p><strong>\u538b\u529b\u68af\u5ea6</strong>\u7684\u8ba1\u7b97\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u76f4\u63a5\u4f7f\u7528\u68af\u5ea6\u516c\u5f0f\u4f1a\u5bfc\u81f4\u52a8\u91cf\u4e0d\u5b88\u6052\u3002\u5bf9\u79f0\u5f62\u5f0f\uff1a\n$$\\nabla p_i = \\rho_i \\sum_j m_j \\left(\\frac{p_i}{\\rho_i^2} + \\frac{p_j}{\\rho_j^2}\\right)\\nabla W_{ij}$$\n\u8fd9\u4fdd\u8bc1\u4e86\u4f5c\u7528\u529b\u4e0e\u53cd\u4f5c\u7528\u529b\u76f8\u7b49\u3002</p>\n<p><strong>\u7c98\u6027\u529b</strong>\u6a21\u62df\u6d41\u4f53\u7684\u5185\u6469\u64e6\u3002\u7269\u7406\u7c98\u6027\uff1a\n$$\\mathbf{f}_i^{viscosity} = \\mu \\sum_j \\frac{m_j}{\\rho_j}\\frac{\\mathbf{v}_j - \\mathbf{v}_i}{r_{ij}^2 + 0.01h^2}\\mathbf{r}_{ij} \\cdot \\nabla W_{ij}$$\n\u5176\u4e2d$\\mu$\u662f\u52a8\u529b\u7c98\u5ea6\uff0c$0.01h^2$\u9879\u9632\u6b62\u9664\u96f6\u3002</p>\n<p><strong>\u4eba\u5de5\u7c98\u6027</strong>\u7528\u4e8e\u7a33\u5b9a\u6570\u503c\u89e3\uff1a\n$$\\Pi_{ij} = \\begin{cases}\n-\\alpha \\bar{c}_{ij} \\frac{\\mathbf{v}_{ij} \\cdot \\mathbf{r}_{ij}}{\\bar{\\rho}_{ij}(r_{ij}^2 + 0.01h^2)} &amp; \\mathbf{v}_{ij} \\cdot \\mathbf{r}_{ij} &lt; 0 \\\\\n0 &amp; \\text{otherwise}\n\\end{cases}$$\n\u5176\u4e2d$\\alpha \\approx 0.01-0.1$\uff0c$\\bar{c}_{ij}$\u548c$\\bar{\\rho}_{ij}$\u662f\u5e73\u5747\u503c\u3002</p>\n<h3 id=\"254\">2.5.4 \u8868\u9762\u5f20\u529b\u6a21\u578b</h3>\n<p>\u8868\u9762\u5f20\u529b\u5728\u5c0f\u5c3a\u5ea6\u6d41\u52a8\u4e2d\u5f88\u91cd\u8981\u3002<strong>CSF\uff08Continuum Surface Force\uff09\u65b9\u6cd5</strong>\u5c06\u8868\u9762\u5f20\u529b\u8f6c\u6362\u4e3a\u4f53\u79ef\u529b\u3002</p>\n<p>\u9996\u5148\u5b9a\u4e49\u989c\u8272\u573a\uff1a\n$$c_i = \\sum_j \\frac{m_j}{\\rho_j}W_{ij}$$\n\u8868\u9762\u6cd5\u5411\u91cf\uff1a\n$$\\mathbf{n}_i = \\nabla c_i = \\sum_j \\frac{m_j}{\\rho_j}\\nabla W_{ij}$$\n\u66f2\u7387\uff1a\n$$\\kappa_i = -\\nabla \\cdot \\hat{\\mathbf{n}}_i = -\\sum_j \\frac{m_j}{\\rho_j}\\frac{\\mathbf{n}_j - \\mathbf{n}_i}{|\\mathbf{n}_j - \\mathbf{n}_i|} \\cdot \\nabla W_{ij}$$\n\u8868\u9762\u5f20\u529b\uff1a\n$$\\mathbf{f}_i^{surface} = \\sigma \\kappa_i \\mathbf{n}_i$$\n\u5176\u4e2d$\\sigma$\u662f\u8868\u9762\u5f20\u529b\u7cfb\u6570\u3002\u53ea\u5728$|\\mathbf{n}_i| &gt; \\epsilon$\u7684\u7c92\u5b50\u4e0a\u65bd\u52a0\u6b64\u529b\uff0c\u4ee5\u8bc6\u522b\u8868\u9762\u7c92\u5b50\u3002</p>\n<p><strong>\u7b97\u6cd5\u6d41\u7a0b\u603b\u7ed3</strong>\uff1a</p>\n<ol>\n<li>\u90bb\u5c45\u641c\u7d22</li>\n<li>\u8ba1\u7b97\u5bc6\u5ea6\uff1a$\\rho_i = \\sum_j m_j W_{ij}$</li>\n<li>\u8ba1\u7b97\u538b\u529b\uff1a$p_i = B[(\\rho_i/\\rho_0)^7 - 1]$</li>\n<li>\u8ba1\u7b97\u52a0\u901f\u5ea6\uff1a\n   - \u538b\u529b\uff1a$-\\sum_j m_j (p_i/\\rho_i^2 + p_j/\\rho_j^2)\\nabla W_{ij}$\n   - \u7c98\u6027\uff1a\u7c98\u6027\u529b\u516c\u5f0f\n   - \u91cd\u529b\uff1a$\\mathbf{g}$\n   - \u8868\u9762\u5f20\u529b\uff08\u5982\u9700\u8981\uff09</li>\n<li>\u65f6\u95f4\u79ef\u5206\u66f4\u65b0\u4f4d\u7f6e\u548c\u901f\u5ea6</li>\n</ol>\n<h2 id=\"26-pbf\">2.6 \u57fa\u4e8e\u4f4d\u7f6e\u7684\u6d41\u4f53(PBF)</h2>\n<p>PBF\u5c06\u4e0d\u53ef\u538b\u7f29\u6027\u4f5c\u4e3a\u7ea6\u675f\u6761\u4ef6\uff0c\u901a\u8fc7\u8fed\u4ee3\u6295\u5f71\u6765\u6ee1\u8db3\u3002\u8fd9\u79cd\u65b9\u6cd5\u7a33\u5b9a\u6027\u597d\uff0c\u7279\u522b\u9002\u5408\u5b9e\u65f6\u5e94\u7528\u3002</p>\n<h3 id=\"261\">2.6.1 \u4f4d\u7f6e\u7ea6\u675f\u4e0e\u62c9\u683c\u6717\u65e5\u4e58\u5b50</h3>\n<p>PBF\u7684\u6838\u5fc3\u662f\u5bc6\u5ea6\u7ea6\u675f\uff1a\n$$C_i(\\mathbf{x}_1, ..., \\mathbf{x}_n) = \\frac{\\rho_i}{\\rho_0} - 1 = 0$$\n\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\uff0c\u4f4d\u7f6e\u4fee\u6b63\u4e3a\uff1a\n$$\\Delta \\mathbf{x}_i = -\\sum_j \\lambda_j \\nabla_{\\mathbf{x}_i} C_j$$\n\u5176\u4e2d$\\lambda_j$\u662f\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u3002\u5bf9\u4e8e\u5bc6\u5ea6\u7ea6\u675f\uff1a\n$$\\nabla_{\\mathbf{x}_i} C_j = \\frac{1}{\\rho_0}\\nabla_{\\mathbf{x}_i}\\rho_j = \\frac{1}{\\rho_0}\\sum_k m_k \\nabla_{\\mathbf{x}_i} W_{jk}$$\n\u5f53$i = j$\u65f6\uff1a\n$$\\nabla_{\\mathbf{x}_i} C_i = \\frac{1}{\\rho_0}\\sum_{k \\neq i} m_k \\nabla W_{ik}$$\n\u5f53$i \\neq j$\u65f6\uff1a\n$$\\nabla_{\\mathbf{x}_i} C_j = -\\frac{m_i}{\\rho_0}\\nabla W_{ij}$$</p>\n<h3 id=\"262\">2.6.2 \u4e0d\u53ef\u538b\u7f29\u6027\u7ea6\u675f</h3>\n<p>\u901a\u8fc7Newton\u8fed\u4ee3\u6c42\u89e3$\\lambda_i$\uff1a\n$$\\lambda_i = -\\frac{C_i(\\mathbf{x})}{\\sum_k |\\nabla_{\\mathbf{x}_k} C_i|^2 + \\epsilon}$$\n\u5176\u4e2d$\\epsilon$\u662f\u677e\u5f1b\u53c2\u6570\uff0c\u9632\u6b62\u9664\u96f6\u3002</p>\n<p>\u5b8c\u6574\u7684\u5206\u6bcd\u5c55\u5f00\uff1a\n$$\\sum_k |\\nabla_{\\mathbf{x}_k} C_i|^2 = \\frac{1}{\\rho_0^2}\\left[\\left|\\sum_{k \\neq i} m_k \\nabla W_{ik}\\right|^2 + \\sum_{k \\neq i} m_k^2 |\\nabla W_{ik}|^2\\right]$$\n\u4f4d\u7f6e\u4fee\u6b63\uff1a\n$$\\Delta \\mathbf{x}_i = -\\frac{1}{\\rho_0}\\sum_j \\lambda_j m_j \\nabla W_{ij}$$\n\u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u4e86\u5bf9\u79f0\u5316\u7684\u68af\u5ea6\uff0c\u4fdd\u8bc1\u52a8\u91cf\u5b88\u6052\u3002</p>\n<h3 id=\"263\">2.6.3 \u4eba\u5de5\u538b\u529b\u4e0e\u6da1\u91cf\u8865\u507f</h3>\n<p><strong>\u4eba\u5de5\u538b\u529b</strong>\u9632\u6b62\u7c92\u5b50\u805a\u96c6\u3002\u5728\u8ba1\u7b97$\\lambda$\u65f6\u52a0\u5165\u4fee\u6b63\u9879\uff1a\n$$s_{corr} = -k\\left(\\frac{W(\\mathbf{x}_i - \\mathbf{x}_j, h)}{W(\\Delta \\mathbf{q}, h)}\\right)^n$$\n\u5176\u4e2d$k = 0.1$\uff0c$n = 4$\uff0c$\\Delta \\mathbf{q} = 0.1h$\u3002\u4fee\u6b63\u540e\u7684$\\lambda$\uff1a\n$$\\lambda_i^{corr} = \\lambda_i + s_{corr}$$\n<strong>\u6da1\u91cf\u8865\u507f</strong>\u6062\u590d\u6570\u503c\u8017\u6563\u635f\u5931\u7684\u65cb\u8f6c\u8fd0\u52a8\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u6da1\u91cf\uff1a$\\boldsymbol{\\omega}_i = \\nabla \\times \\mathbf{v}_i = \\sum_j \\frac{m_j}{\\rho_j}\\mathbf{v}_{ij} \\times \\nabla W_{ij}$</li>\n<li>\u8ba1\u7b97\u6da1\u91cf\u529b\uff1a$\\mathbf{f}_i^{vorticity} = \\epsilon(\\mathbf{N}_i \\times \\boldsymbol{\\omega}_i)$</li>\n<li>\u5176\u4e2d$\\mathbf{N}_i = \\nabla|\\boldsymbol{\\omega}|_i/|\\nabla|\\boldsymbol{\\omega}|_i|$\uff0c$\\epsilon \\approx 0.01$</li>\n</ol>\n<h3 id=\"264-pcisphdfsph\">2.6.4 PCISPH\u4e0eDFSPH\u65b9\u6cd5</h3>\n<p><strong>PCISPH\uff08Predictive-Corrective Incompressible SPH\uff09</strong>\uff1a</p>\n<ol>\n<li>\u9884\u6d4b\u901f\u5ea6\u548c\u4f4d\u7f6e</li>\n<li>\u8ba1\u7b97\u9884\u6d4b\u5bc6\u5ea6\u8bef\u5dee</li>\n<li>\u8ba1\u7b97\u538b\u529b\uff1a$p_i = \\delta \\rho_i^{err} / (\\Delta t^2 \\beta)$</li>\n<li>\u5176\u4e2d$\\beta = 2m^2(\\sum_j \\nabla W_{ij})^2/\\rho_0^2$</li>\n<li>\u8fed\u4ee3\u76f4\u5230\u5bc6\u5ea6\u8bef\u5dee\u5c0f\u4e8e\u9608\u503c</li>\n</ol>\n<p><strong>DFSPH\uff08Divergence-Free SPH\uff09</strong>\uff1a\n\u9664\u4e86\u5bc6\u5ea6\u7ea6\u675f\uff0c\u8fd8\u5f3a\u5236\u901f\u5ea6\u573a\u6563\u5ea6\u4e3a\u96f6\uff1a\n$$\\nabla \\cdot \\mathbf{v} = 0$$\n\u8fd9\u9700\u8981\u4e24\u4e2a\u6295\u5f71\u6b65\u9aa4\uff1a</p>\n<ol>\n<li>\u5bc6\u5ea6\u4e0d\u53d8\u6295\u5f71\uff08\u786e\u4fdd$D\\rho/Dt = 0$\uff09</li>\n<li>\u6563\u5ea6\u81ea\u7531\u6295\u5f71\uff08\u786e\u4fdd$\\nabla \\cdot \\mathbf{v} = 0$\uff09</li>\n</ol>\n<p>DFSPH\u80fd\u66f4\u597d\u5730\u4fdd\u6301\u4e0d\u53ef\u538b\u7f29\u6027\uff0c\u51cf\u5c11\u5bc6\u5ea6\u632f\u8361\u3002</p>\n<p><strong>PBF\u7b97\u6cd5\u603b\u7ed3</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">1.</span><span class=\"w\"> </span><span class=\"n\">\u9884\u6d4b\u4f4d\u7f6e</span><span class=\"err\">\uff1a</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">\u0394t</span><span class=\"err\">\u00b7</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">\u0394t\u00b2</span><span class=\"err\">\u00b7</span><span class=\"n\">f_ext</span>\n<span class=\"mf\">2.</span><span class=\"w\"> </span><span class=\"n\">\u90bb\u5c45\u641c\u7d22</span>\n<span class=\"mf\">3.</span><span class=\"w\"> </span><span class=\"n\">while</span><span class=\"w\"> </span><span class=\"n\">\u5bc6\u5ea6\u8bef\u5dee</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">\u9608\u503c</span><span class=\"err\">\uff1a</span>\n<span class=\"w\">   </span><span class=\"n\">a</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u8ba1\u7b97\u5bc6\u5ea6</span>\n<span class=\"w\">   </span><span class=\"n\">b</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u8ba1\u7b97\u03bb_i</span>\n<span class=\"w\">   </span><span class=\"n\">c</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u8ba1\u7b97\u4f4d\u7f6e\u4fee\u6b63\u0394x</span>\n<span class=\"w\">   </span><span class=\"n\">d</span><span class=\"mf\">.</span><span class=\"w\"> </span><span class=\"n\">\u66f4\u65b0\u4f4d\u7f6e</span><span class=\"err\">\uff1a</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">\u0394x</span>\n\n<span class=\"mf\">4.</span><span class=\"w\"> </span><span class=\"n\">\u66f4\u65b0\u901f\u5ea6</span><span class=\"err\">\uff1a</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">\u0394t</span>\n<span class=\"mf\">5.</span><span class=\"w\"> </span><span class=\"n\">\u5e94\u7528\u6da1\u91cf\u8865\u507f</span>\n<span class=\"mf\">6.</span><span class=\"w\"> </span><span class=\"n\">\u66f4\u65b0\u4f4d\u7f6e</span><span class=\"err\">\uff1a</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">*</span>\n</code></pre></div>\n\n<h2 id=\"27\">2.7 \u4f53\u7d20\u5316\uff1a\u4ece\u4e09\u89d2\u7f51\u683c\u751f\u6210\u7c92\u5b50</h2>\n<p>\u5c06\u4e09\u89d2\u7f51\u683c\u8f6c\u6362\u4e3a\u7c92\u5b50\u8868\u793a\u662f\u521d\u59cb\u5316\u7c92\u5b50\u7cfb\u7edf\u7684\u5173\u952e\u6b65\u9aa4\u3002</p>\n<h3 id=\"271\">2.7.1 \u70b9\u5728\u591a\u8fb9\u5f62\u5185\u6d4b\u8bd5</h3>\n<p><strong>\u5c04\u7ebf\u6cd5\uff08Ray Casting\uff09</strong>\uff1a\u4ece\u6d4b\u8bd5\u70b9\u53d1\u5c04\u5c04\u7ebf\uff0c\u8ba1\u7b97\u4e0e\u591a\u8fb9\u5f62\u8fb9\u754c\u7684\u4ea4\u70b9\u6570\uff1a</p>\n<ul>\n<li>\u5947\u6570\u6b21\u76f8\u4ea4\uff1a\u70b9\u5728\u5185\u90e8</li>\n<li>\u5076\u6570\u6b21\u76f8\u4ea4\uff1a\u70b9\u5728\u5916\u90e8</li>\n</ul>\n<p>\u5b9e\u73b0\u7ec6\u8282\uff1a</p>\n<ol>\n<li>\u9009\u62e9\u5c04\u7ebf\u65b9\u5411\uff08\u901a\u5e38\u662f+X\u65b9\u5411\uff09</li>\n<li>\u5904\u7406\u7279\u6b8a\u60c5\u51b5\uff1a\n   - \u5c04\u7ebf\u7a7f\u8fc7\u9876\u70b9\uff1a\u53ea\u5728\u9876\u70b9Y\u5750\u6807\u5927\u4e8e\u5c04\u7ebfY\u5750\u6807\u65f6\u8ba1\u6570\n   - \u5c04\u7ebf\u4e0e\u8fb9\u5e73\u884c\uff1a\u5ffd\u7565\u8be5\u8fb9\n   - \u6570\u503c\u7cbe\u5ea6\uff1a\u4f7f\u7528$\\epsilon$\u5bb9\u5dee</li>\n</ol>\n<p><strong>\u7ed5\u6570\uff08Winding Number\uff09\u65b9\u6cd5</strong>\uff1a\u8ba1\u7b97\u591a\u8fb9\u5f62\u76f8\u5bf9\u4e8e\u6d4b\u8bd5\u70b9\u7684\u7ed5\u6570\uff1a\n$$w = \\frac{1}{2\\pi}\\sum_{i=0}^{n-1} \\theta_i$$\n\u5176\u4e2d$\\theta_i$\u662f\u4ece\u70b9\u5230\u8fb9$(v_i, v_{i+1})$\u7684\u6709\u5411\u89d2\u3002$|w| \\geq 1$\u8868\u793a\u70b9\u5728\u5185\u90e8\u3002</p>\n<p><strong>\u89d2\u5ea6\u548c\u65b9\u6cd5</strong>\uff1a\u5bf9\u4e8e\u51f8\u591a\u8fb9\u5f62\uff0c\u8ba1\u7b97\u70b9\u5230\u6240\u6709\u9876\u70b9\u7684\u89d2\u5ea6\u548c\uff1a\n$$\\sum_{i=0}^{n-1} \\angle(v_i, p, v_{i+1}) = \\begin{cases}\n2\\pi &amp; \\text{\u70b9\u5728\u5185\u90e8} \\\\\n0 &amp; \\text{\u70b9\u5728\u5916\u90e8}\n\\end{cases}$$</p>\n<h3 id=\"272-\">2.7.2 \u5c04\u7ebf-\u4e09\u89d2\u5f62\u76f8\u4ea4</h3>\n<p><strong>M\u00f6ller-Trumbore\u7b97\u6cd5</strong>\u662f\u6700\u9ad8\u6548\u7684\u5c04\u7ebf-\u4e09\u89d2\u5f62\u76f8\u4ea4\u6d4b\u8bd5\u3002\u7ed9\u5b9a\u5c04\u7ebf$\\mathbf{r}(t) = \\mathbf{o} + t\\mathbf{d}$\u548c\u4e09\u89d2\u5f62\u9876\u70b9$\\mathbf{v}_0, \\mathbf{v}_1, \\mathbf{v}_2$\uff1a</p>\n<p>\u53c2\u6570\u5316\u4e09\u89d2\u5f62\u5185\u7684\u70b9\uff1a\n$$\\mathbf{p}(u,v) = (1-u-v)\\mathbf{v}_0 + u\\mathbf{v}_1 + v\\mathbf{v}_2$$\n\u6c42\u89e3\u76f8\u4ea4\uff1a\n$$\\mathbf{o} + t\\mathbf{d} = (1-u-v)\\mathbf{v}_0 + u\\mathbf{v}_1 + v\\mathbf{v}_2$$\n\u6574\u7406\u5f97\u5230\u7ebf\u6027\u7cfb\u7edf\uff1a\n$$\\begin{bmatrix}\n-\\mathbf{d} &amp; \\mathbf{v}_1-\\mathbf{v}_0 &amp; \\mathbf{v}_2-\\mathbf{v}_0\n\\end{bmatrix}\n\\begin{bmatrix}\nt \\\\ u \\\\ v\n\\end{bmatrix} = \\mathbf{o} - \\mathbf{v}_0$$\n\u4f7f\u7528Cramer\u6cd5\u5219\u6c42\u89e3\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>E1 = v1 - v0\nE2 = v2 - v0\nP = d \u00d7 E2\ndet = E1 \u00b7 P\nif |det| &lt; \u03b5: return no_intersection\n\nT = o - v0\nu = (T \u00b7 P) / det\nif u &lt; 0 or u &gt; 1: return no_intersection\n\nQ = T \u00d7 E1\nv = (d \u00b7 Q) / det\nif v &lt; 0 or u + v &gt; 1: return no_intersection\n\nt = (E2 \u00b7 Q) / det\nif t &gt; 0: return intersection at t\n</code></pre></div>\n\n<h3 id=\"273-sdf\">2.7.3 \u6709\u7b26\u53f7\u8ddd\u79bb\u573a(SDF)</h3>\n<p>SDF\u63d0\u4f9b\u4e86\u66f4\u4e30\u5bcc\u7684\u51e0\u4f55\u4fe1\u606f\uff1a\n$$\\phi(\\mathbf{x}) = \\begin{cases}\n-d(\\mathbf{x}, \\partial\\Omega) &amp; \\mathbf{x} \\in \\Omega \\\\\n+d(\\mathbf{x}, \\partial\\Omega) &amp; \\mathbf{x} \\notin \\Omega\n\\end{cases}$$\n<strong>\u5feb\u901f\u884c\u8fdb\u6cd5\uff08FMM\uff09\u6784\u5efaSDF</strong>\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u5316\uff1a\n   - \u8fb9\u754c\u70b9\uff1a$\\phi = 0$\uff0c\u6807\u8bb0\u4e3a\u5df2\u77e5\n   - \u5176\u4ed6\u70b9\uff1a$\\phi = \\infty$\uff0c\u6807\u8bb0\u4e3a\u8fdc\u573a</li>\n<li>\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff08\u6700\u5c0f\u5806\uff09\uff0c\u5305\u542b\u6240\u6709\u8bd5\u63a2\u70b9</li>\n<li>\u91cd\u590d\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\uff1a\n   - \u53d6\u51fa\u6700\u5c0f\u8ddd\u79bb\u7684\u8bd5\u63a2\u70b9\uff0c\u6807\u8bb0\u4e3a\u5df2\u77e5\n   - \u66f4\u65b0\u5176\u90bb\u5c45\u7684\u8ddd\u79bb\u503c\n   - \u5c06\u65b0\u7684\u8bd5\u63a2\u70b9\u52a0\u5165\u961f\u5217</li>\n</ol>\n<p>\u8ddd\u79bb\u66f4\u65b0\u4f7f\u7528Eikonal\u65b9\u7a0b\u7684\u6570\u503c\u89e3\uff1a\n$$|\\nabla \\phi| = 1$$\n\u5bf9\u4e8e\u89c4\u5219\u7f51\u683c\uff0c\u4f7f\u7528\u8fce\u98ce\u5dee\u5206\uff1a\n$$\\max(D^{-x}\\phi, -D^{+x}\\phi, 0)^2 + \\max(D^{-y}\\phi, -D^{+y}\\phi, 0)^2 = 1$$</p>\n<h3 id=\"274\">2.7.4 \u81ea\u9002\u5e94\u91c7\u6837\u7b56\u7565</h3>\n<p>\u5747\u5300\u91c7\u6837\u53ef\u80fd\u5bfc\u81f4\u7c92\u5b50\u5206\u5e03\u4e0d\u7406\u60f3\u3002\u81ea\u9002\u5e94\u91c7\u6837\u6839\u636e\u5c40\u90e8\u7279\u5f81\u8c03\u6574\u5bc6\u5ea6\u3002</p>\n<p><strong>\u57fa\u4e8e\u66f2\u7387\u7684\u91c7\u6837</strong>\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u8868\u9762\u66f2\u7387\uff1a$\\kappa = \\nabla \\cdot (\\nabla\\phi/|\\nabla\\phi|)$</li>\n<li>\u91c7\u6837\u5bc6\u5ea6\uff1a$\\rho_{sample} = \\rho_{min} + (\\rho_{max} - \\rho_{min})|\\kappa|/\\kappa_{max}$</li>\n<li>\u5728\u9ad8\u66f2\u7387\u533a\u57df\u653e\u7f6e\u66f4\u591a\u7c92\u5b50</li>\n</ol>\n<p><strong>\u84dd\u566a\u58f0\u5206\u5e03</strong>\u4ea7\u751f\u89c6\u89c9\u4e0a\u66f4\u5747\u5300\u7684\u5206\u5e03\uff1a</p>\n<ul>\n<li>\u4efb\u610f\u4e24\u4e2a\u7c92\u5b50\u7684\u6700\u5c0f\u8ddd\u79bb\u88ab\u6700\u5927\u5316</li>\n<li>\u907f\u514d\u805a\u96c6\u548c\u7a7a\u6d1e</li>\n</ul>\n<p><strong>Poisson Disk\u91c7\u6837</strong>\uff1a</p>\n<ol>\n<li>\u521d\u59cb\u5316\uff1a\u968f\u673a\u9009\u62e9\u7b2c\u4e00\u4e2a\u6837\u672c</li>\n<li>\u5bf9\u6bcf\u4e2a\u73b0\u6709\u6837\u672c\uff1a\n   - \u5728\u73af\u5f62\u533a\u57df$[r, 2r]$\u5185\u751f\u6210$k$\u4e2a\u5019\u9009\u70b9\uff08\u901a\u5e38$k=30$\uff09\n   - \u68c0\u67e5\u6bcf\u4e2a\u5019\u9009\u70b9\u662f\u5426\u4e0e\u73b0\u6709\u70b9\u8ddd\u79bb$&gt; r$\n   - \u63a5\u53d7\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5019\u9009\u70b9</li>\n<li>\u4f7f\u7528\u7a7a\u95f4\u6570\u636e\u7ed3\u6784\uff08\u5982\u7f51\u683c\uff09\u52a0\u901f\u8ddd\u79bb\u67e5\u8be2</li>\n</ol>\n<p><strong>\u7b97\u6cd5\u5b9e\u73b0\u8981\u70b9</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">function</span><span class=\"w\"> </span><span class=\"nf\">voxelize</span><span class=\"p\">(</span>mesh, particle_radius<span class=\"p\">):</span>\n<span class=\"w\">    </span>#<span class=\"w\"> </span><span class=\"mf\">1.</span><span class=\"w\"> </span>\u8ba1\u7b97\u5305\u56f4\u76d2\n<span class=\"w\">    </span><span class=\"n\">bbox</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">compute_bbox</span><span class=\"p\">(</span><span class=\"nb\">mesh</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span>#<span class=\"w\"> </span><span class=\"mf\">2.</span><span class=\"w\"> </span>\u6784\u5efa<span class=\"n\">SDF</span>\uff08\u53ef\u9009\uff09\n<span class=\"w\">    </span><span class=\"n\">sdf</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">build_sdf</span><span class=\"p\">(</span><span class=\"nb\">mesh</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bbox</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">grid_size</span><span class=\"p\">=</span><span class=\"n\">particle_radius</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span>#<span class=\"w\"> </span><span class=\"mf\">3.</span><span class=\"w\"> </span>\u751f\u6210\u5019\u9009\u70b9\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">use_adaptive_sampling</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">candidates</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">adaptive_sample</span><span class=\"p\">(</span><span class=\"n\">sdf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">particle_radius</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">else</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"n\">candidates</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">uniform_grid</span><span class=\"p\">(</span><span class=\"n\">bbox</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">particle_radius</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span>#<span class=\"w\"> </span><span class=\"mf\">4.</span><span class=\"w\"> </span>\u7b5b\u9009\u5185\u90e8\u70b9\n<span class=\"w\">    </span><span class=\"n\">particles</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"w\"> </span><span class=\"n\">candidates</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">point_in_mesh</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">mesh</span><span class=\"p\">):</span><span class=\"w\">  </span>#<span class=\"w\"> </span>\u4f7f\u7528\u5c04\u7ebf\u6cd5\u6216<span class=\"n\">SDF</span>\n<span class=\"w\">            </span><span class=\"n\">particles</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span>#<span class=\"w\"> </span><span class=\"mf\">5.</span><span class=\"w\"> </span>\u540e\u5904\u7406\uff08\u53ef\u9009\uff09\n<span class=\"w\">    </span><span class=\"n\">particles</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">blue_noise_relaxation</span><span class=\"p\">(</span><span class=\"n\">particles</span><span class=\"p\">)</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">particles</span>\n</code></pre></div>\n\n<h2 id=\"28\">2.8 \u5feb\u901f\u90bb\u5c45\u641c\u7d22</h2>\n<p>\u9ad8\u6548\u7684\u90bb\u5c45\u641c\u7d22\u662f\u7c92\u5b50\u65b9\u6cd5\u6027\u80fd\u7684\u5173\u952e\u3002\u5bf9\u4e8e$n$\u4e2a\u7c92\u5b50\uff0c\u6734\u7d20\u7684$O(n^2)$\u641c\u7d22\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002</p>\n<h3 id=\"281\">2.8.1 \u5747\u5300\u7f51\u683c\u6cd5</h3>\n<p>\u6700\u7b80\u5355\u6709\u6548\u7684\u52a0\u901f\u7ed3\u6784\u3002\u5c06\u7a7a\u95f4\u5212\u5206\u4e3a\u89c4\u5219\u7f51\u683c\uff0c\u6bcf\u4e2a\u5355\u5143\u5b58\u50a8\u5176\u5185\u7684\u7c92\u5b50\u3002</p>\n<p><strong>\u7f51\u683c\u5927\u5c0f\u9009\u62e9</strong>\uff1a\u8bbe\u7f6e\u4e3a\u652f\u6301\u534a\u5f84$h$\uff0c\u8fd9\u6837\u6bcf\u4e2a\u7c92\u5b50\u53ea\u9700\u68c0\u67e5$3^d$\u4e2a\u76f8\u90bb\u5355\u5143\uff08$d$\u662f\u7ef4\u5ea6\uff09\u3002</p>\n<p><strong>\u5b9e\u73b0\u6b65\u9aa4</strong>\uff1a</p>\n<ol>\n<li>\u8ba1\u7b97\u7c92\u5b50\u6240\u5728\u5355\u5143\uff1a<code>cell = floor(position / h)</code></li>\n<li>\u5c06\u7c92\u5b50ID\u63d2\u5165\u5bf9\u5e94\u5355\u5143\u7684\u5217\u8868</li>\n<li>\u67e5\u8be2\u65f6\uff0c\u904d\u5386\u76f8\u90bb\u5355\u5143\u7684\u6240\u6709\u7c92\u5b50</li>\n</ol>\n<p><strong>\u6570\u636e\u7ed3\u6784\u9009\u62e9</strong>\uff1a</p>\n<ul>\n<li>\u5bc6\u96c6\u7f51\u683c\uff1a\u76f4\u63a5\u5206\u914d\u6240\u6709\u5355\u5143\uff0c\u9002\u5408\u7c92\u5b50\u5206\u5e03\u5747\u5300\u7684\u60c5\u51b5</li>\n<li>\u54c8\u5e0c\u8868\uff1a\u53ea\u5b58\u50a8\u975e\u7a7a\u5355\u5143\uff0c\u9002\u5408\u7a00\u758f\u5206\u5e03</li>\n</ul>\n<p><strong>\u5e76\u884c\u6784\u5efa</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u5e76\u884c\u8ba1\u6570</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">each</span><span class=\"w\"> </span><span class=\"n\">particle</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"ow\">in</span><span class=\"w\"> </span><span class=\"nl\">parallel</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"n\">cell</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nf\">floor</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"nf\">count</span><span class=\"o\">[</span><span class=\"n\">cell</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u524d\u7f00\u548c\u8ba1\u7b97\u504f\u79fb</span>\n<span class=\"n\">offset</span><span class=\"o\">[</span><span class=\"n\">0</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"k\">to</span><span class=\"w\"> </span><span class=\"nl\">num_cells</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"n\">offset</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"o\">[</span><span class=\"n\">i-1</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nf\">count</span><span class=\"o\">[</span><span class=\"n\">i-1</span><span class=\"o\">]</span>\n\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">\u5e76\u884c\u63d2\u5165</span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">each</span><span class=\"w\"> </span><span class=\"n\">particle</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"ow\">in</span><span class=\"w\"> </span><span class=\"nl\">parallel</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"n\">cell</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nf\">floor</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">[</span><span class=\"n\">i</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">idx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">atomic_add</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"o\">[</span><span class=\"n\">cell</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">particle_list</span><span class=\"o\">[</span><span class=\"n\">idx</span><span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">i</span>\n</code></pre></div>\n\n<h3 id=\"282-compact-hashing\">2.8.2 \u7d27\u51d1\u54c8\u5e0c(Compact Hashing)</h3>\n<p>\u5bf9\u4e8e\u7a00\u758f\u5206\u5e03\uff0c\u54c8\u5e0c\u8868\u66f4\u8282\u7701\u5185\u5b58\u3002\u4f7f\u7528\u7a7a\u95f4\u54c8\u5e0c\u51fd\u6570\u5c063D\u5750\u6807\u6620\u5c04\u52301D\uff1a</p>\n<p><strong>Z-order\u54c8\u5e0c</strong>\uff08Morton\u7801\uff09\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">morton_3d</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">spread_bits</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># 0b0000 -&gt; 0b0000000</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">spread_bits</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>  <span class=\"c1\"># 0b0000 -&gt; 0b0000000</span>\n    <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">spread_bits</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>  <span class=\"c1\"># 0b0000 -&gt; 0b0000000</span>\n    <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">z</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">spread_bits</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">):</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">16</span><span class=\"p\">))</span> <span class=\"o\">&amp;</span> <span class=\"mh\">0x030000FF</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">8</span><span class=\"p\">))</span>  <span class=\"o\">&amp;</span> <span class=\"mh\">0x0300F00F</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">4</span><span class=\"p\">))</span>  <span class=\"o\">&amp;</span> <span class=\"mh\">0x030C30C3</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">2</span><span class=\"p\">))</span>  <span class=\"o\">&amp;</span> <span class=\"mh\">0x09249249</span>\n    <span class=\"k\">return</span> <span class=\"n\">v</span>\n</code></pre></div>\n\n<p><strong>\u54c8\u5e0c\u51b2\u7a81\u5904\u7406</strong>\uff1a</p>\n<ul>\n<li>\u5f00\u653e\u5bfb\u5740\uff1a\u7ebf\u6027\u63a2\u6d4b\u6216\u4e8c\u6b21\u63a2\u6d4b</li>\n<li>\u94fe\u8868\u6cd5\uff1a\u6bcf\u4e2a\u69fd\u5b58\u50a8\u94fe\u8868</li>\n<li>Cuckoo hashing\uff1a\u4fdd\u8bc1\u6700\u574f\u60c5\u51b5O(1)\u67e5\u8be2</li>\n</ul>\n<h3 id=\"283-z-order\">2.8.3 Z-order\u4e0e\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf</h3>\n<p>\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf\u5c06\u591a\u7ef4\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u7ef4\uff0c\u540c\u65f6\u4fdd\u6301\u7a7a\u95f4\u5c40\u90e8\u6027\u3002</p>\n<p><strong>Z-order\u66f2\u7ebf\u4f18\u52bf</strong>\uff1a</p>\n<ol>\n<li>\u4fdd\u6301\u7a7a\u95f4\u5c40\u90e8\u6027\uff1a\u76f8\u8fd1\u7684\u70b9\u5728\u66f2\u7ebf\u4e0a\u4e5f\u76f8\u8fd1\uff08\u5927\u90e8\u5206\u60c5\u51b5\uff09</li>\n<li>\u7f13\u5b58\u53cb\u597d\uff1a\u987a\u5e8f\u8bbf\u95ee\u65f6\u7a7a\u95f4\u8df3\u8dc3\u5c0f</li>\n<li>\u6613\u4e8e\u8ba1\u7b97\uff1a\u4f4d\u64cd\u4f5c\u5373\u53ef</li>\n</ol>\n<p><strong>\u5176\u4ed6\u7a7a\u95f4\u586b\u5145\u66f2\u7ebf</strong>\uff1a</p>\n<ul>\n<li>Hilbert\u66f2\u7ebf\uff1a\u5c40\u90e8\u6027\u66f4\u597d\u4f46\u8ba1\u7b97\u590d\u6742</li>\n<li>Peano\u66f2\u7ebf\uff1a\u7c7b\u4f3cHilbert</li>\n<li>Gray\u7801\uff1a\u51cf\u5c11\u4f4d\u7ffb\u8f6c</li>\n</ul>\n<p><strong>\u5206\u5c42Z-order</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code>level_0: [    0    ] \u6574\u4e2a\u7a7a\u95f4\nlevel_1: [0][1][2][3] \u56db\u4e2a\u8c61\u9650\nlevel_2: 16\u4e2a\u5b50\u533a\u57df\n...\n</code></pre></div>\n\n<p>\u7528\u4e8e\u81ea\u9002\u5e94\u7ed3\u6784\uff0c\u5982\u516b\u53c9\u6811\u3002</p>\n<h3 id=\"284\">2.8.4 \u5e76\u884c\u90bb\u5c45\u641c\u7d22\u7b97\u6cd5</h3>\n<p>GPU\u4e0a\u7684\u9ad8\u6548\u5b9e\u73b0\u9700\u8981\u7279\u522b\u8003\u8651\u3002</p>\n<p><strong>\u539f\u5b50\u64cd\u4f5c\u6784\u5efa</strong>\uff1a</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kr\">__global__</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">build_grid</span><span class=\"p\">(</span><span class=\"kt\">float3</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">positions</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">grid</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">blockIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nb\">blockDim</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">threadIdx</span><span class=\"p\">.</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int3</span><span class=\"w\"> </span><span class=\"n\">cell</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">make_int3</span><span class=\"p\">(</span><span class=\"n\">positions</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">cell_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">hash</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">hash_function</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// \u539f\u5b50\u64cd\u4f5c\u63d2\u5165</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">old</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">atomicExch</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">grid</span><span class=\"p\">[</span><span class=\"n\">hash</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">idx</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">-1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// \u5904\u7406\u51b2\u7a81\uff1a\u94fe\u8868\u6216\u5176\u4ed6\u65b9\u6cd5</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p><strong>\u907f\u514d\u7ade\u6001\u6761\u4ef6</strong>\uff1a</p>\n<ol>\n<li>\u4e24\u904d\u6cd5\uff1a\u7b2c\u4e00\u904d\u8ba1\u6570\uff0c\u7b2c\u4e8c\u904d\u586b\u5145</li>\n<li>\u539f\u5b50\u64cd\u4f5c\uff1a\u4f7f\u7528atomicAdd\u7b49</li>\n<li>\u6392\u5e8f\u6cd5\uff1a\u5148\u6392\u5e8f\u7c92\u5b50\uff0c\u7136\u540e\u987a\u5e8f\u6784\u5efa</li>\n</ol>\n<p><strong>\u67e5\u8be2\u4f18\u5316</strong>\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u7f13\u5b58\u90bb\u5c45\u5355\u5143</li>\n<li>\u5408\u5e76\u5185\u5b58\u8bbf\u95ee</li>\n<li>\u4f7f\u7528\u7eb9\u7406\u5185\u5b58\uff08\u5982\u679c\u9002\u7528\uff09</li>\n</ul>\n<p><strong>\u6027\u80fd\u8003\u8651</strong>\uff1a</p>\n<ul>\n<li>\u8d1f\u8f7d\u5747\u8861\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u76f8\u4f3c\u6570\u91cf\u7684\u90bb\u5c45</li>\n<li>\u5185\u5b58\u5408\u5e76\uff1a\u8fde\u7eed\u7ebf\u7a0b\u8bbf\u95ee\u8fde\u7eed\u5185\u5b58</li>\n<li>\u5360\u7528\u7387\uff1a\u5e73\u8861\u5bc4\u5b58\u5668\u4f7f\u7528\u548c\u7ebf\u7a0b\u5757\u5927\u5c0f</li>\n</ul>\n<h2 id=\"29\">2.9 \u521a\u4f53\u6a21\u62df\u7b80\u4ecb</h2>\n<p>\u521a\u4f53\u662f\u4e0d\u53ef\u53d8\u5f62\u7684\u7406\u60f3\u5316\u7269\u4f53\uff0c\u5176\u5185\u90e8\u4efb\u610f\u4e24\u70b9\u7684\u8ddd\u79bb\u4fdd\u6301\u6052\u5b9a\u3002</p>\n<h3 id=\"291\">2.9.1 \u521a\u4f53\u8fd0\u52a8\u5b66</h3>\n<p>\u521a\u4f53\u7684\u72b6\u6001\u7531\u8d28\u5fc3\u4f4d\u7f6e\u548c\u59ff\u6001\u5b8c\u5168\u786e\u5b9a\u3002</p>\n<p><strong>\u72b6\u6001\u8868\u793a</strong>\uff1a</p>\n<ul>\n<li>\u4f4d\u7f6e\uff1a$\\mathbf{x} \\in \\mathbb{R}^3$</li>\n<li>\u59ff\u6001\uff1a\u56db\u5143\u6570$\\mathbf{q} = (w, x, y, z)$\uff0c\u6ee1\u8db3$|\\mathbf{q}| = 1$</li>\n<li>\u7ebf\u901f\u5ea6\uff1a$\\mathbf{v} \\in \\mathbb{R}^3$</li>\n<li>\u89d2\u901f\u5ea6\uff1a$\\boldsymbol{\\omega} \\in \\mathbb{R}^3$</li>\n</ul>\n<p><strong>\u56db\u5143\u6570\u4f18\u52bf</strong>\uff1a</p>\n<ul>\n<li>\u65e0\u5947\u5f02\u6027\uff08vs\u6b27\u62c9\u89d2\uff09</li>\n<li>\u7d27\u51d1\u8868\u793a\uff084\u4e2a\u6570vs9\u4e2a\u65cb\u8f6c\u77e9\u9635\uff09</li>\n<li>\u63d2\u503c\u7b80\u5355\uff08SLERP\uff09</li>\n</ul>\n<p><strong>\u56db\u5143\u6570\u8fd0\u7b97</strong>\uff1a</p>\n<ul>\n<li>\u65cb\u8f6c\u5411\u91cf\uff1a$\\mathbf{v}' = \\mathbf{q} \\mathbf{v} \\mathbf{q}^*$</li>\n<li>\u56db\u5143\u6570\u4e58\u6cd5\uff1a$\\mathbf{q}_1 \\mathbf{q}_2 = (w_1w_2 - \\mathbf{v}_1 \\cdot \\mathbf{v}_2, w_1\\mathbf{v}_2 + w_2\\mathbf{v}_1 + \\mathbf{v}_1 \\times \\mathbf{v}_2)$</li>\n<li>\u89d2\u901f\u5ea6\u66f4\u65b0\uff1a$\\dot{\\mathbf{q}} = \\frac{1}{2}\\boldsymbol{\\omega} \\mathbf{q}$</li>\n</ul>\n<p><strong>\u901f\u5ea6\u626d\u66f2\uff08Twist\uff09\u8868\u793a</strong>\uff1a\n$$\\boldsymbol{\\xi} = \\begin{bmatrix} \\mathbf{v} \\\\ \\boldsymbol{\\omega} \\end{bmatrix} \\in \\mathbb{R}^6$$\n\u7edf\u4e00\u8868\u793a\u7ebf\u901f\u5ea6\u548c\u89d2\u901f\u5ea6\uff0c\u4fbf\u4e8e\u7ea6\u675f\u6c42\u89e3\u3002</p>\n<h3 id=\"292\">2.9.2 \u521a\u4f53\u52a8\u529b\u5b66</h3>\n<p><strong>\u725b\u987f-\u6b27\u62c9\u65b9\u7a0b</strong>\uff1a\n$$m\\dot{\\mathbf{v}} = \\mathbf{F}$$\n$$\\mathbf{I}\\dot{\\boldsymbol{\\omega}} + \\boldsymbol{\\omega} \\times \\mathbf{I}\\boldsymbol{\\omega} = \\boldsymbol{\\tau}$$\n\u5176\u4e2d\uff1a</p>\n<ul>\n<li>$m$\u662f\u8d28\u91cf</li>\n<li>$\\mathbf{I}$\u662f\u60ef\u6027\u5f20\u91cf\uff08\u4e16\u754c\u5750\u6807\u7cfb\uff09</li>\n<li>$\\mathbf{F}$\u662f\u5408\u5916\u529b</li>\n<li>$\\boldsymbol{\\tau}$\u662f\u5408\u5916\u529b\u77e9</li>\n</ul>\n<p><strong>\u60ef\u6027\u5f20\u91cf\u8ba1\u7b97</strong>\uff1a\n\u5bf9\u4e8e\u79bb\u6563\u8d28\u70b9\u7cfb\u7edf\uff1a\n$$\\mathbf{I} = \\sum_i m_i [(\\mathbf{r}_i^T\\mathbf{r}_i)\\mathbf{I}_3 - \\mathbf{r}_i\\mathbf{r}_i^T]$$\n\u5bf9\u4e8e\u8fde\u7eed\u4f53\uff1a\n$$I_{ij} = \\int_V \\rho(x_k x_k \\delta_{ij} - x_i x_j)dV$$\n<strong>\u4e16\u754c\u5750\u6807\u7cfb\u60ef\u6027\u5f20\u91cf</strong>\uff1a\n$$\\mathbf{I}_{world} = \\mathbf{R}\\mathbf{I}_{body}\\mathbf{R}^T$$\n\u5176\u4e2d$\\mathbf{R}$\u662f\u65cb\u8f6c\u77e9\u9635\uff0c$\\mathbf{I}_{body}$\u662f\u7269\u4f53\u5750\u6807\u7cfb\u4e0b\u7684\u60ef\u6027\u5f20\u91cf\uff08\u5e38\u91cf\uff09\u3002</p>\n<h3 id=\"293\">2.9.3 \u78b0\u649e\u68c0\u6d4b</h3>\n<p><strong>\u5bbd\u76f8\u4f4d\uff08Broad Phase\uff09</strong>\uff1a\u5feb\u901f\u6392\u9664\u4e0d\u53ef\u80fd\u78b0\u649e\u7684\u7269\u4f53\u5bf9\u3002</p>\n<ul>\n<li>AABB\uff08\u8f74\u5bf9\u9f50\u5305\u56f4\u76d2\uff09\u6811</li>\n<li>Sweep and Prune</li>\n<li>\u7a7a\u95f4\u54c8\u5e0c</li>\n</ul>\n<p><strong>\u7a84\u76f8\u4f4d\uff08Narrow Phase\uff09</strong>\uff1a\u7cbe\u786e\u68c0\u6d4b\u78b0\u649e\u3002</p>\n<p><strong>GJK\u7b97\u6cd5</strong>\uff08Gilbert-Johnson-Keerthi\uff09\uff1a\u8ba1\u7b97\u51f8\u7269\u4f53\u95f4\u7684\u6700\u8fd1\u8ddd\u79bb\u3002</p>\n<ul>\n<li>\u57fa\u4e8eMinkowski\u5dee\u7684\u539f\u7406</li>\n<li>\u8fed\u4ee3\u641c\u7d22\u652f\u6491\u70b9</li>\n<li>\u53ef\u6269\u5c55\u4e3aEPA\uff08Expanding Polytope Algorithm\uff09\u8ba1\u7b97\u7a7f\u900f\u6df1\u5ea6</li>\n</ul>\n<p><strong>SAT\uff08\u5206\u79bb\u8f74\u5b9a\u7406\uff09</strong>\uff1a\u5982\u679c\u4e24\u4e2a\u51f8\u7269\u4f53\u4e0d\u76f8\u4ea4\uff0c\u5219\u5b58\u5728\u4e00\u4e2a\u8f74\u4f7f\u5f97\u4e24\u7269\u4f53\u5728\u8be5\u8f74\u4e0a\u7684\u6295\u5f71\u4e0d\u91cd\u53e0\u3002</p>\n<ul>\n<li>\u5bf9\u4e8e\u51f8\u591a\u9762\u4f53\uff0c\u53ea\u9700\u68c0\u67e5\u9762\u6cd5\u7ebf\u548c\u8fb9\u53c9\u79ef\u65b9\u5411</li>\n<li>\u5bf9\u4e8e\u76d2\u5b50\uff0c\u53ea\u9700\u68c0\u67e515\u4e2a\u8f74\uff083+3+9\uff09</li>\n</ul>\n<h3 id=\"294\">2.9.4 \u78b0\u649e\u54cd\u5e94</h3>\n<p><strong>\u51b2\u91cf\u8ba1\u7b97</strong>\uff1a\n\u78b0\u649e\u70b9\u7684\u76f8\u5bf9\u901f\u5ea6\uff1a\n$$\\mathbf{v}_{rel} = (\\mathbf{v}_A + \\boldsymbol{\\omega}_A \\times \\mathbf{r}_A) - (\\mathbf{v}_B + \\boldsymbol{\\omega}_B \\times \\mathbf{r}_B)$$\n\u6cd5\u5411\u51b2\u91cf\uff1a\n$$j_n = \\frac{-(1+e)(\\mathbf{v}_{rel} \\cdot \\mathbf{n})}{\\frac{1}{m_A} + \\frac{1}{m_B} + \\mathbf{n} \\cdot [(\\mathbf{I}_A^{-1}(\\mathbf{r}_A \\times \\mathbf{n})) \\times \\mathbf{r}_A + (\\mathbf{I}_B^{-1}(\\mathbf{r}_B \\times \\mathbf{n})) \\times \\mathbf{r}_B]}$$\n\u5176\u4e2d$e$\u662f\u6062\u590d\u7cfb\u6570\uff080=\u5b8c\u5168\u975e\u5f39\u6027\uff0c1=\u5b8c\u5168\u5f39\u6027\uff09\u3002</p>\n<p><strong>\u6469\u64e6\u5904\u7406</strong>\uff1a\n\u5e93\u4ed1\u6469\u64e6\u6a21\u578b\uff1a$|\\mathbf{f}_t| \\leq \\mu|\\mathbf{f}_n|$</p>\n<p>\u5207\u5411\u51b2\u91cf\uff1a\n$$j_t = \\min(\\mu j_n, j_{t,stick})$$\n\u5176\u4e2d$j_{t,stick}$\u662f\u4f7f\u76f8\u5bf9\u5207\u5411\u901f\u5ea6\u4e3a\u96f6\u6240\u9700\u7684\u51b2\u91cf\u3002</p>\n<p><strong>LCP\uff08\u7ebf\u6027\u4e92\u8865\u95ee\u9898\uff09\u6c42\u89e3</strong>\uff1a\n\u5bf9\u4e8e\u591a\u63a5\u89e6\u70b9\uff0c\u9700\u8981\u540c\u65f6\u6c42\u89e3\u6240\u6709\u7ea6\u675f\uff1a\n$$\\mathbf{A}\\boldsymbol{\\lambda} + \\mathbf{b} \\geq 0, \\boldsymbol{\\lambda} \\geq 0, \\boldsymbol{\\lambda}^T(\\mathbf{A}\\boldsymbol{\\lambda} + \\mathbf{b}) = 0$$</p>\n<p>\u4f7f\u7528\u6295\u5f71Gauss-Seidel\uff08PGS\uff09\u8fed\u4ee3\u6c42\u89e3\u3002</p>\n<h2 id=\"_1\">\u672c\u7ae0\u5c0f\u7ed3</h2>\n<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86\u62c9\u683c\u6717\u65e5\u89c6\u89d2\u4e0b\u7684\u7c92\u5b50\u4eff\u771f\u65b9\u6cd5\uff0c\u6db5\u76d6\u4e86\u4ece\u57fa\u7840\u7684\u5f39\u7c27\u8d28\u70b9\u7cfb\u7edf\u5230\u5148\u8fdb\u7684\u6d41\u4f53\u4eff\u771f\u6280\u672f\uff1a</p>\n<p><strong>\u6838\u5fc3\u6982\u5ff5</strong>\uff1a</p>\n<ul>\n<li><strong>\u62c9\u683c\u6717\u65e5\u89c6\u89d2</strong>\uff1a\u8ffd\u8e2a\u6750\u6599\u7c92\u5b50\u7684\u8fd0\u52a8\u8f68\u8ff9\uff0c$\\frac{D}{Dt} = \\frac{\\partial}{\\partial t} + \\mathbf{v} \\cdot \\nabla$</li>\n<li><strong>\u65f6\u95f4\u79ef\u5206</strong>\uff1a\u663e\u5f0f\u65b9\u6cd5\uff08\u524d\u5411\u6b27\u62c9\u3001RK4\uff09\u6761\u4ef6\u7a33\u5b9a\u4f46\u9ad8\u6548\uff1b\u9690\u5f0f\u65b9\u6cd5\uff08\u540e\u5411\u6b27\u62c9\uff09\u65e0\u6761\u4ef6\u7a33\u5b9a\u4f46\u9700\u6c42\u89e3\u975e\u7ebf\u6027\u7cfb\u7edf</li>\n<li><strong>SPH\u6838\u8fd1\u4f3c</strong>\uff1a$A(\\mathbf{x}) \\approx \\sum_j A_j \\frac{m_j}{\\rho_j}W(\\mathbf{x} - \\mathbf{x}_j, h)$</li>\n<li><strong>\u4f4d\u7f6e\u57fa\u65b9\u6cd5</strong>\uff1a\u5c06\u7269\u7406\u7ea6\u675f\u8f6c\u5316\u4e3a\u51e0\u4f55\u7ea6\u675f\uff0c\u901a\u8fc7\u8fed\u4ee3\u6295\u5f71\u6ee1\u8db3</li>\n</ul>\n<p><strong>\u5173\u952e\u516c\u5f0f</strong>\uff1a</p>\n<ol>\n<li>\u5f39\u7c27\u529b\uff1a$\\mathbf{f}_{ij} = -k(|\\mathbf{x}_i - \\mathbf{x}_j| - l_{ij})\\frac{\\mathbf{x}_i - \\mathbf{x}_j}{|\\mathbf{x}_i - \\mathbf{x}_j|}$</li>\n<li>SPH\u5bc6\u5ea6\uff1a$\\rho_i = \\sum_j m_j W_{ij}$</li>\n<li>SPH\u538b\u529b\u68af\u5ea6\uff1a$\\nabla p_i = \\rho_i \\sum_j m_j (\\frac{p_i}{\\rho_i^2} + \\frac{p_j}{\\rho_j^2})\\nabla W_{ij}$</li>\n<li>PBF\u5bc6\u5ea6\u7ea6\u675f\uff1a$C_i = \\frac{\\rho_i}{\\rho_0} - 1 = 0$</li>\n<li>\u521a\u4f53\u89d2\u52a8\u91cf\uff1a$\\mathbf{I}\\dot{\\boldsymbol{\\omega}} + \\boldsymbol{\\omega} \\times \\mathbf{I}\\boldsymbol{\\omega} = \\boldsymbol{\\tau}$</li>\n</ol>\n<p><strong>\u6570\u503c\u7a33\u5b9a\u6027\u8981\u70b9</strong>\uff1a</p>\n<ul>\n<li>\u663e\u5f0f\u79ef\u5206\u65f6\u95f4\u6b65\u957f\u9650\u5236\uff1a$\\Delta t &lt; 2\\sqrt{m/k}$</li>\n<li>SPH\u4e2d\u9009\u62e9\u5408\u9002\u7684\u58f0\u901f\uff1a$c_s \\approx 10 v_{max}$</li>\n<li>PBF\u4e2d\u4f7f\u7528\u4eba\u5de5\u538b\u529b\u9632\u6b62\u7c92\u5b50\u805a\u96c6</li>\n<li>\u90bb\u5c45\u641c\u7d22\u4f7f\u7528\u7a7a\u95f4\u6570\u636e\u7ed3\u6784\u5c06\u590d\u6742\u5ea6\u4ece$O(n^2)$\u964d\u81f3$O(n)$</li>\n</ul>\n<h2 id=\"_2\">\u7ec3\u4e60\u9898</h2>\n<h3 id=\"_3\">\u57fa\u7840\u9898</h3>\n<p><strong>\u4e60\u98982.1</strong> \u5f39\u7c27\u7cfb\u7edf\u7a33\u5b9a\u6027\u5206\u6790\n\u8003\u8651\u4e00\u4e2a\u7531\u4e24\u4e2a\u8d28\u70b9\u7ec4\u6210\u7684\u5f39\u7c27\u7cfb\u7edf\uff0c\u8d28\u91cf\u5206\u522b\u4e3a$m_1 = 1$kg\u548c$m_2 = 2$kg\uff0c\u5f39\u7c27\u521a\u5ea6$k = 100$N/m\u3002\na) \u4f7f\u7528\u524d\u5411\u6b27\u62c9\u6cd5\uff0c\u8ba1\u7b97\u4fdd\u8bc1\u6570\u503c\u7a33\u5b9a\u7684\u6700\u5927\u65f6\u95f4\u6b65\u957f\u3002\nb) \u5982\u679c\u4f7f\u7528\u8f9b\u6b27\u62c9\u6cd5\uff0c\u7cfb\u7edf\u7684\u603b\u80fd\u91cf\u4f1a\u5982\u4f55\u53d8\u5316\uff1f\nc) \u63a8\u5bfc\u8be5\u7cfb\u7edf\u7684\u56fa\u6709\u9891\u7387\u3002</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u7cfb\u7edf\u7684\u6700\u9ad8\u9891\u7387\u6a21\u5f0f\uff0c\u8fd9\u51b3\u5b9a\u4e86\u7a33\u5b9a\u6027\u6761\u4ef6\u3002\u5bf9\u4e8e\u4e24\u8d28\u70b9\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5148\u8f6c\u6362\u5230\u8d28\u5fc3\u5750\u6807\u7cfb\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) \u8f6c\u6362\u5230\u76f8\u5bf9\u5750\u6807\uff1a$\\mu = \\frac{m_1 m_2}{m_1 + m_2} = \\frac{2}{3}$kg\n   \u56fa\u6709\u9891\u7387\uff1a$\\omega = \\sqrt{\\frac{k}{\\mu}} = \\sqrt{\\frac{100}{2/3}} = \\sqrt{150} \\approx 12.25$ rad/s\n   \u6700\u5927\u65f6\u95f4\u6b65\u957f\uff1a$\\Delta t_{max} = \\frac{2}{\\omega} = \\frac{2}{12.25} \\approx 0.163$s</p>\n<p>b) \u8f9b\u6b27\u62c9\u6cd5\u4fdd\u6301\u76f8\u7a7a\u95f4\u4f53\u79ef\uff0c\u603b\u80fd\u91cf\u5728\u771f\u5b9e\u503c\u9644\u8fd1\u632f\u8361\uff0c\u632f\u8361\u5e45\u5ea6\u7ea6\u4e3a$O(\\Delta t^2)$\u3002</p>\n<p>c) \u7cfb\u7edf\u6709\u4e24\u4e2a\u6a21\u5f0f\uff1a</p>\n<ul>\n<li>\u8d28\u5fc3\u6a21\u5f0f\uff08\u9891\u7387\u4e3a0\uff09</li>\n<li>\u76f8\u5bf9\u8fd0\u52a8\u6a21\u5f0f\uff1a$\\omega = \\sqrt{\\frac{k(m_1 + m_2)}{m_1 m_2}} = \\sqrt{150}$ rad/s</li>\n</ul>\n</details>\n<p><strong>\u4e60\u98982.2</strong> SPH\u6838\u51fd\u6570\u6027\u8d28\n\u7ed9\u5b9aCubic Spline\u6838\u51fd\u6570\uff0c\u8bc1\u660e\uff1a\na) \u6838\u51fd\u6570\u6ee1\u8db3\u5f52\u4e00\u5316\u6761\u4ef6\nb) \u8ba1\u7b972D\u60c5\u51b5\u4e0b\u7684\u5f52\u4e00\u5316\u5e38\u6570$\\sigma_2$\nc) \u63a8\u5bfc\u6838\u51fd\u6570\u7684\u68af\u5ea6\u8868\u8fbe\u5f0f</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u4f7f\u7528\u6781\u5750\u6807\u8fdb\u884c\u79ef\u5206\uff0c\u6ce8\u610f\u5206\u6bb5\u51fd\u6570\u7684\u5904\u7406\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) 2D\u6781\u5750\u6807\u79ef\u5206\uff1a\n   $\\int_0^{2\\pi} \\int_0^{\\infty} W(r,h) r dr d\\theta = 2\\pi \\sigma_2 \\int_0^{2h} W(r,h) r dr = 1$</p>\n<p>b) \u5206\u6bb5\u79ef\u5206\uff1a\n   $\\int_0^h (1 - \\frac{3r^2}{2h^2} + \\frac{3r^3}{4h^3}) r dr + \\int_h^{2h} \\frac{1}{4}(\\frac{2h-r}{h})^3 r dr = \\frac{7h^2}{10\\pi\\sigma_2}$</p>\n<p>\u56e0\u6b64$\\sigma_2 = \\frac{10}{7\\pi}$</p>\n<p>c) \u68af\u5ea6\uff1a\n   $\\nabla W = \\frac{\\partial W}{\\partial r} \\frac{\\mathbf{r}}{r}$\uff0c\u5176\u4e2d\n   $\\frac{\\partial W}{\\partial r} = \\frac{\\sigma_2}{h^2} \\begin{cases}\n   -\\frac{3r}{h^2} + \\frac{9r^2}{4h^3} &amp; 0 \\leq r \\leq h \\\n   -\\frac{3(2h-r)^2}{4h^3} &amp; h &lt; r \\leq 2h \\\n   0 &amp; r &gt; 2h\n   \\end{cases}$</p>\n</details>\n<p><strong>\u4e60\u98982.3</strong> PBF\u7ea6\u675f\u6295\u5f71\n\u5728PBF\u7b97\u6cd5\u4e2d\uff0c\u8003\u86513\u4e2a\u7c92\u5b50\u7684\u4e00\u7ef4\u60c5\u51b5\uff0c\u4f4d\u7f6e\u5206\u522b\u4e3a$x_1 = 0$, $x_2 = 0.8h$, $x_3 = 1.6h$\uff0c\u6bcf\u4e2a\u7c92\u5b50\u8d28\u91cf\u4e3a$m$\u3002\na) \u8ba1\u7b97\u7c92\u5b502\u7684\u5bc6\u5ea6\uff08\u4f7f\u7528\u7b80\u5316\u7684\u7ebf\u6027\u6838$W(r) = 1 - r/h$\u5f53$r &lt; h$\uff09\nb) \u8ba1\u7b97\u5bc6\u5ea6\u7ea6\u675f\u7684\u68af\u5ea6\nc) \u6c42\u89e3\u62c9\u683c\u6717\u65e5\u4e58\u5b50$\\lambda_2$</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u5728\u4e00\u7ef4\u60c5\u51b5\u4e0b\uff0c\u68af\u5ea6\u7b80\u5316\u4e3a\u5bfc\u6570\u3002\u6ce8\u610f\u6838\u51fd\u6570\u7684\u652f\u6301\u57df\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) $\\rho_2 = m[W(0) + W(0.8h) + W(0.8h)] = m[1 + 0.2 + 0.2] = 1.4m$</p>\n<p>b) \u68af\u5ea6\uff1a</p>\n<ul>\n<li>$\\nabla_{x_1} C_2 = -\\frac{m}{\\rho_0 h} = -\\frac{m}{\\rho_0 h}$</li>\n<li>$\\nabla_{x_2} C_2 = \\frac{m}{\\rho_0 h} + \\frac{m}{\\rho_0 h} = \\frac{2m}{\\rho_0 h}$</li>\n<li>$\\nabla_{x_3} C_2 = -\\frac{m}{\\rho_0 h}$</li>\n</ul>\n<p>c) $\\lambda_2 = -\\frac{C_2}{\\sum |\\nabla C_2|^2} = -\\frac{1.4m/\\rho_0 - 1}{6m^2/(\\rho_0 h)^2}$</p>\n</details>\n<h3 id=\"_4\">\u6311\u6218\u9898</h3>\n<p><strong>\u4e60\u98982.4</strong> \u9690\u5f0f\u79ef\u5206\u5668\u8bbe\u8ba1\n\u8bbe\u8ba1\u4e00\u4e2a\u4ecb\u4e8e\u663e\u5f0f\u548c\u9690\u5f0f\u4e4b\u95f4\u7684\u79ef\u5206\u5668\uff0c\u4f7f\u5176\u5728\u4fdd\u6301\u7a33\u5b9a\u6027\u7684\u540c\u65f6\u51cf\u5c11\u80fd\u91cf\u8017\u6563\u3002\na) \u63d0\u51fa\u4e00\u4e2a\u6df7\u5408\u65b9\u6848\uff0c\u660e\u786e\u8bf4\u660e\u54ea\u4e9b\u9879\u4f7f\u7528\u663e\u5f0f/\u9690\u5f0f\u5904\u7406\nb) \u5206\u6790\u8be5\u65b9\u6848\u7684\u7a33\u5b9a\u6027\u6761\u4ef6\nc) \u8ba8\u8bba\u5982\u4f55\u81ea\u9002\u5e94\u5730\u8c03\u6574\u6df7\u5408\u6bd4\u4f8b</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u5c06\u529b\u5206\u89e3\u4e3a\u7ebf\u6027\u90e8\u5206\uff08\u5f39\u6027\u529b\uff09\u548c\u975e\u7ebf\u6027\u90e8\u5206\uff08\u78b0\u649e\u529b\u7b49\uff09\uff0c\u5bf9\u4e0d\u540c\u90e8\u5206\u4f7f\u7528\u4e0d\u540c\u7684\u5904\u7406\u65b9\u5f0f\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) \u6df7\u5408\u65b9\u6848\uff1a</p>\n<ul>\n<li>\u7ebf\u6027\u5f39\u6027\u529b\u4f7f\u7528\u9690\u5f0f\uff1a$\\mathbf{f}_{elastic}^{n+1}$</li>\n<li>\u975e\u7ebf\u6027\u529b\u4f7f\u7528\u663e\u5f0f\uff1a$\\mathbf{f}_{nonlinear}^n$</li>\n<li>\u66f4\u65b0\u65b9\u7a0b\uff1a$\\mathbf{v}^{n+1} = \\mathbf{v}^n + \\Delta t[\\alpha \\mathbf{f}_{elastic}^{n+1} + (1-\\alpha)\\mathbf{f}_{elastic}^n + \\mathbf{f}_{nonlinear}^n]/m$</li>\n</ul>\n<p>b) \u7a33\u5b9a\u6027\u5206\u6790\uff1a</p>\n<ul>\n<li>\u5f53$\\alpha \\geq 0.5$\u65f6\uff0c\u5bf9\u7ebf\u6027\u7cfb\u7edf\u65e0\u6761\u4ef6\u7a33\u5b9a</li>\n<li>\u975e\u7ebf\u6027\u9879\u4ecd\u9700\u6ee1\u8db3CFL\u6761\u4ef6</li>\n<li>\u6709\u6548\u65f6\u95f4\u6b65\u957f\uff1a$\\Delta t_{eff} = \\min(\\Delta t_{implicit}, \\Delta t_{CFL})$</li>\n</ul>\n<p>c) \u81ea\u9002\u5e94\u7b56\u7565\uff1a</p>\n<ul>\n<li>\u76d1\u6d4b\u80fd\u91cf\u53d8\u5316\u7387\uff1a$\\alpha = \\min(1, \\max(0.5, 1 - |dE/dt|/E_{threshold}))$</li>\n<li>\u57fa\u4e8e\u5c40\u90e8\u521a\u5ea6\uff1a\u9ad8\u521a\u5ea6\u533a\u57df\u589e\u5927$\\alpha$</li>\n<li>\u4f7f\u7528\u8bef\u5dee\u4f30\u8ba1\uff1a\u6bd4\u8f83\u663e\u5f0f\u548c\u9690\u5f0f\u9884\u6d4b\u7684\u5dee\u5f02</li>\n</ul>\n</details>\n<p><strong>\u4e60\u98982.5</strong> SPH\u8868\u9762\u5f20\u529b\u4f18\u5316\n\u6807\u51c6CSF\u65b9\u6cd5\u5728\u8ba1\u7b97\u8868\u9762\u5f20\u529b\u65f6\u5b58\u5728\u6570\u503c\u566a\u58f0\u3002\u8bbe\u8ba1\u4e00\u4e2a\u6539\u8fdb\u7684\u8868\u9762\u5f20\u529b\u6a21\u578b\u3002\na) \u5206\u6790CSF\u65b9\u6cd5\u4ea7\u751f\u566a\u58f0\u7684\u539f\u56e0\nb) \u63d0\u51fa\u81f3\u5c11\u4e24\u79cd\u964d\u566a\u7b56\u7565\nc) \u8bbe\u8ba1\u4e00\u4e2a\u81ea\u9002\u5e94\u8868\u9762\u5f20\u529b\u7cfb\u6570</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u6cd5\u5411\u91cf\u8ba1\u7b97\u7684\u6570\u503c\u8bef\u5dee\uff0c\u4ee5\u53ca\u66f2\u7387\u8ba1\u7b97\u7684\u4e8c\u9636\u5bfc\u6570\u6027\u8d28\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) \u566a\u58f0\u6765\u6e90\uff1a</p>\n<ul>\n<li>\u989c\u8272\u573a\u68af\u5ea6\u5728\u5185\u90e8\u7c92\u5b50\u5904\u63a5\u8fd1\u96f6\uff0c\u5bfc\u81f4\u6cd5\u5411\u91cf\u4e0d\u7a33\u5b9a</li>\n<li>\u66f2\u7387\u8ba1\u7b97\u6d89\u53ca\u4e8c\u9636\u5bfc\u6570\uff0c\u653e\u5927\u6570\u503c\u8bef\u5dee</li>\n<li>\u6838\u51fd\u6570\u5728\u8fb9\u754c\u5904\u7684\u622a\u65ad\u8bef\u5dee</li>\n</ul>\n<p>b) \u964d\u566a\u7b56\u7565\uff1a</p>\n<ol>\n<li>\u6cd5\u5411\u91cf\u5e73\u6ed1\uff1a$\\mathbf{n}_i^{smooth} = \\sum_j \\frac{m_j}{\\rho_j} \\mathbf{n}_j W_{ij} / \\sum_j \\frac{m_j}{\\rho_j} W_{ij}$</li>\n<li>\u4f7f\u7528\u9ad8\u9636\u6838\u51fd\u6570\u8ba1\u7b97\u66f2\u7387</li>\n<li>\u53ea\u5728$|\\mathbf{n}| &gt; \\epsilon_{surface}$\u7684\u7c92\u5b50\u4e0a\u65bd\u52a0\u8868\u9762\u5f20\u529b</li>\n<li>\u65f6\u95f4\u5e73\u5747\uff1a$\\kappa_i^{filtered} = \\alpha \\kappa_i^{new} + (1-\\alpha)\\kappa_i^{old}$</li>\n</ol>\n<p>c) \u81ea\u9002\u5e94\u7cfb\u6570\uff1a\n   $\\sigma_{adaptive} = \\sigma_0 \\cdot f(|\\mathbf{n}|) \\cdot g(|\\nabla \\rho|/\\rho)$\n   \u5176\u4e2d$f(x) = \\tanh(x/\\epsilon)$\u8fc7\u6ee4\u5185\u90e8\u7c92\u5b50\uff0c$g(x)$\u6839\u636e\u5bc6\u5ea6\u68af\u5ea6\u8c03\u6574\u5f3a\u5ea6</p>\n</details>\n<p><strong>\u4e60\u98982.6</strong> \u9ad8\u6548\u90bb\u5c45\u641c\u7d22\u6570\u636e\u7ed3\u6784\n\u8bbe\u8ba1\u4e00\u4e2a\u9488\u5bf9\u975e\u5747\u5300\u7c92\u5b50\u5206\u5e03\u7684\u81ea\u9002\u5e94\u90bb\u5c45\u641c\u7d22\u7ed3\u6784\u3002\na) \u63d0\u51fa\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\nb) \u5206\u6790\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\nc) \u8ba8\u8bba\u5e76\u884c\u5316\u7b56\u7565</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u7ed3\u5408\u591a\u79cd\u6570\u636e\u7ed3\u6784\u7684\u4f18\u70b9\uff0c\u5982\u516b\u53c9\u6811\u7684\u81ea\u9002\u5e94\u6027\u548c\u7f51\u683c\u7684\u7b80\u5355\u6027\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) \u6df7\u5408\u6570\u636e\u7ed3\u6784\uff1a</p>\n<ul>\n<li>\u9876\u5c42\uff1a\u677e\u6563\u516b\u53c9\u6811\uff0c\u53f6\u8282\u70b9\u5927\u5c0f\u81ea\u9002\u5e94</li>\n<li>\u53f6\u8282\u70b9\uff1a\u5f53\u7c92\u5b50\u6570&gt;\u9608\u503c\u65f6\uff0c\u4f7f\u7528\u5c40\u90e8\u5747\u5300\u7f51\u683c</li>\n<li>\u7a00\u758f\u533a\u57df\uff1a\u76f4\u63a5\u5b58\u50a8\u7c92\u5b50\u5217\u8868</li>\n<li>\u5bc6\u96c6\u533a\u57df\uff1aZ-order\u54c8\u5e0c\u8868</li>\n</ul>\n<p>b) \u590d\u6742\u5ea6\u5206\u6790\uff1a</p>\n<ul>\n<li>\u6784\u5efa\uff1a$O(n \\log n)$\u5e73\u5747\u60c5\u51b5\uff0c$O(n^2)$\u6700\u574f\u60c5\u51b5\uff08\u6240\u6709\u7c92\u5b50\u805a\u96c6\uff09</li>\n<li>\u67e5\u8be2\uff1a$O(k)$\u5e73\u5747\u60c5\u51b5\uff0c$k$\u662f\u90bb\u5c45\u6570</li>\n<li>\u7a7a\u95f4\uff1a$O(n + m)$\uff0c$m$\u662f\u6d3b\u8dc3\u8282\u70b9\u6570</li>\n</ul>\n<p>c) \u5e76\u884c\u5316\uff1a</p>\n<ul>\n<li>\u6784\u5efa\u9636\u6bb5\uff1a\u81ea\u9876\u5411\u4e0b\u5e76\u884c\u5206\u88c2\u8282\u70b9</li>\n<li>\u4f7f\u7528Morton\u7801\u5e76\u884c\u6392\u5e8f\u7c92\u5b50</li>\n<li>\u67e5\u8be2\u9636\u6bb5\uff1a\u6bcf\u4e2a\u7c92\u5b50\u72ec\u7acb\u67e5\u8be2\uff0c\u65e0\u9700\u540c\u6b65</li>\n<li>\u52a8\u6001\u66f4\u65b0\uff1a\u4f7f\u7528\u53cc\u7f13\u51b2\u907f\u514d\u8bfb\u5199\u51b2\u7a81</li>\n</ul>\n</details>\n<p><strong>\u4e60\u98982.7</strong> \u521a\u4f53-\u6d41\u4f53\u8026\u5408\n\u8bbe\u8ba1\u4e00\u4e2a\u521a\u4f53\u6f02\u6d6e\u5728SPH\u6d41\u4f53\u4e0a\u7684\u8026\u5408\u7b97\u6cd5\u3002\na) \u63a8\u5bfc\u6d41\u4f53\u5bf9\u521a\u4f53\u7684\u529b\u548c\u529b\u77e9\nb) \u5904\u7406\u521a\u4f53\u8fb9\u754c\u6761\u4ef6\nc) \u4fdd\u8bc1\u52a8\u91cf\u5b88\u6052</p>\n<details>\n<summary>\u63d0\u793a</summary>\n<p>\u8003\u8651\u4f7f\u7528\u865a\u62df\u7c92\u5b50\u6216\u8005\u8fb9\u754c\u79ef\u5206\u65b9\u6cd5\u3002\u6ce8\u610f\u4f5c\u7528\u529b\u548c\u53cd\u4f5c\u7528\u529b\u3002</p>\n</details>\n<details>\n<summary>\u7b54\u6848</summary>\n<p>a) \u529b\u548c\u529b\u77e9\u8ba1\u7b97\uff1a</p>\n<ul>\n<li>\u538b\u529b\uff1a$\\mathbf{F}_p = -\\sum_i \\rho_i V_i p_i \\nabla W_{ib}$</li>\n<li>\u7c98\u6027\uff1a$\\mathbf{F}_v = \\mu \\sum_i \\frac{m_i}{\\rho_i} (\\mathbf{v}_b - \\mathbf{v}_i) \\nabla^2 W_{ib}$</li>\n<li>\u529b\u77e9\uff1a$\\boldsymbol{\\tau} = \\sum_i (\\mathbf{x}_i - \\mathbf{x}_{cm}) \\times \\mathbf{f}_i$</li>\n</ul>\n<p>b) \u8fb9\u754c\u6761\u4ef6\uff1a</p>\n<ul>\n<li>\u865a\u62df\u7c92\u5b50\u6cd5\uff1a\u5728\u521a\u4f53\u8868\u9762\u751f\u6210\u865a\u62df\u7c92\u5b50</li>\n<li>\u865a\u62df\u7c92\u5b50\u901f\u5ea6\uff1a$\\mathbf{v}_{virtual} = \\mathbf{v}_{rigid} + \\boldsymbol{\\omega} \\times \\mathbf{r}$</li>\n<li>\u538b\u529b\u955c\u50cf\uff1a$p_{virtual} = p_{fluid} + \\rho g \\Delta h$</li>\n</ul>\n<p>c) \u52a8\u91cf\u5b88\u6052\uff1a</p>\n<ul>\n<li>\u4f7f\u7528\u5bf9\u79f0\u7684\u529b\u8ba1\u7b97\u786e\u4fdd\u4f5c\u7528\u529b\u7b49\u4e8e\u53cd\u4f5c\u7528\u529b</li>\n<li>\u540c\u65f6\u66f4\u65b0\u6d41\u4f53\u548c\u521a\u4f53\uff1a$m_{fluid}\\Delta\\mathbf{v}_{fluid} + m_{rigid}\\Delta\\mathbf{v}_{rigid} = 0$</li>\n<li>\u65f6\u95f4\u79ef\u5206\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u6848</li>\n</ul>\n</details>\n<h2 id=\"_5\">\u5e38\u89c1\u9677\u9631\u4e0e\u9519\u8bef</h2>\n<h3 id=\"_6\">\u6570\u503c\u4e0d\u7a33\u5b9a</h3>\n<ol>\n<li>\n<p><strong>\u65f6\u95f4\u6b65\u957f\u8fc7\u5927</strong>\uff1a\u663e\u5f0f\u79ef\u5206\u7206\u70b8\uff0c\u8868\u73b0\u4e3a\u7c92\u5b50\u98de\u6563\n   - \u89e3\u51b3\uff1a\u4f7f\u7528CFL\u6761\u4ef6\u81ea\u52a8\u8c03\u6574\u65f6\u95f4\u6b65\u957f</p>\n</li>\n<li>\n<p><strong>\u521a\u5ea6\u77e9\u9635\u75c5\u6001</strong>\uff1a\u9690\u5f0f\u6c42\u89e3\u4e0d\u6536\u655b\n   - \u89e3\u51b3\uff1a\u6dfb\u52a0\u6b63\u5219\u5316\u9879\u6216\u4f7f\u7528\u9884\u6761\u4ef6</p>\n</li>\n<li>\n<p><strong>\u7c92\u5b50\u805a\u96c6</strong>\uff1aSPH/PBF\u4e2d\u7c92\u5b50\u8fc7\u5ea6\u805a\u96c6\n   - \u89e3\u51b3\uff1a\u4f7f\u7528\u4eba\u5de5\u538b\u529b\u6216XSPH\u7c98\u6027</p>\n</li>\n</ol>\n<h3 id=\"_7\">\u6027\u80fd\u9677\u9631</h3>\n<ol>\n<li>\n<p><strong>\u90bb\u5c45\u641c\u7d22\u4f4e\u6548</strong>\uff1a\u4f7f\u7528$O(n^2)$\u7684\u6734\u7d20\u641c\u7d22\n   - \u89e3\u51b3\uff1a\u5b9e\u73b0\u7a7a\u95f4\u6570\u636e\u7ed3\u6784</p>\n</li>\n<li>\n<p><strong>\u7f13\u5b58\u672a\u547d\u4e2d</strong>\uff1a\u968f\u673a\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\n   - \u89e3\u51b3\uff1a\u4f7f\u7528\u7a7a\u95f4\u6392\u5e8f\u63d0\u9ad8\u5c40\u90e8\u6027</p>\n</li>\n<li>\n<p><strong>\u8fc7\u5ea6\u540c\u6b65</strong>\uff1aGPU\u4e0a\u9891\u7e41\u7684\u5168\u5c40\u540c\u6b65\n   - \u89e3\u51b3\uff1a\u8bbe\u8ba1\u5f02\u6b65\u7b97\u6cd5\uff0c\u51cf\u5c11\u540c\u6b65\u70b9</p>\n</li>\n</ol>\n<h3 id=\"_8\">\u7269\u7406\u5931\u771f</h3>\n<ol>\n<li>\n<p><strong>\u80fd\u91cf\u4e0d\u5b88\u6052</strong>\uff1a\u957f\u65f6\u95f4\u4eff\u771f\u540e\u80fd\u91cf\u6f02\u79fb\n   - \u89e3\u51b3\uff1a\u4f7f\u7528\u8f9b\u79ef\u5206\u5668\u6216\u80fd\u91cf\u4fee\u6b63</p>\n</li>\n<li>\n<p><strong>\u4f53\u79ef\u635f\u5931</strong>\uff1a\u6d41\u4f53\u4f53\u79ef\u9010\u6e10\u51cf\u5c11\n   - \u89e3\u51b3\uff1a\u4f7f\u7528DFSPH\u6216\u4f53\u79ef\u4fee\u6b63</p>\n</li>\n<li>\n<p><strong>\u7a7f\u900f\u95ee\u9898</strong>\uff1a\u9ad8\u901f\u78b0\u649e\u65f6\u7269\u4f53\u7a7f\u900f\n   - \u89e3\u51b3\uff1a\u4f7f\u7528CCD\u6216\u51cf\u5c0f\u65f6\u95f4\u6b65\u957f</p>\n</li>\n</ol>\n<h2 id=\"_9\">\u6700\u4f73\u5b9e\u8df5\u68c0\u67e5\u6e05\u5355</h2>\n<h3 id=\"_10\">\u7b97\u6cd5\u9009\u62e9</h3>\n<ul>\n<li>[ ] \u6839\u636e\u521a\u5ea6\u9009\u62e9\u663e\u5f0f/\u9690\u5f0f\u79ef\u5206\u5668</li>\n<li>[ ] \u6d41\u4f53\u4eff\u771f\u8003\u8651SPH vs PBF\u7684\u6743\u8861</li>\n<li>[ ] \u5927\u53d8\u5f62\u7528\u62c9\u683c\u6717\u65e5\uff0c\u590d\u6742\u8fb9\u754c\u7528\u6b27\u62c9</li>\n<li>[ ] \u5b9e\u65f6\u5e94\u7528\u4f18\u5148\u8003\u8651\u7a33\u5b9a\u6027</li>\n</ul>\n<h3 id=\"_11\">\u53c2\u6570\u8c03\u4f18</h3>\n<ul>\n<li>[ ] \u65f6\u95f4\u6b65\u957f\u6ee1\u8db3\u7a33\u5b9a\u6027\u6761\u4ef6</li>\n<li>[ ] \u7c92\u5b50\u95f4\u8ddd\u4e0e\u6838\u51fd\u6570\u652f\u6301\u57df\u5339\u914d\uff08\u901a\u5e38$h = 2\\Delta x$\uff09</li>\n<li>[ ] \u4eba\u5de5\u7c98\u6027/\u538b\u529b\u53c2\u6570\u7ecf\u8fc7\u6d4b\u8bd5</li>\n<li>[ ] \u8fed\u4ee3\u6c42\u89e3\u5668\u7684\u6536\u655b\u9608\u503c\u5408\u7406</li>\n</ul>\n<h3 id=\"_12\">\u6570\u636e\u7ed3\u6784</h3>\n<ul>\n<li>[ ] \u4f7f\u7528\u7a7a\u95f4\u6570\u636e\u7ed3\u6784\u52a0\u901f\u90bb\u5c45\u641c\u7d22</li>\n<li>[ ] \u8003\u8651\u5185\u5b58\u8bbf\u95ee\u6a21\u5f0f\u4f18\u5316\u7f13\u5b58</li>\n<li>[ ] \u7c92\u5b50\u6570\u636e\u4f7f\u7528SoA\u5e03\u5c40</li>\n<li>[ ] \u9884\u5206\u914d\u5185\u5b58\u907f\u514d\u52a8\u6001\u5206\u914d</li>\n</ul>\n<h3 id=\"_13\">\u5e76\u884c\u4f18\u5316</h3>\n<ul>\n<li>[ ] \u8bc6\u522b\u5e76\u884c\u5316\u673a\u4f1a\uff08\u7c92\u5b50\u66f4\u65b0\u3001\u90bb\u5c45\u641c\u7d22\uff09</li>\n<li>[ ] \u6700\u5c0f\u5316\u539f\u5b50\u64cd\u4f5c\u548c\u540c\u6b65</li>\n<li>[ ] \u8d1f\u8f7d\u5747\u8861\uff08\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u76f8\u4f3c\u5de5\u4f5c\u91cf\uff09</li>\n<li>[ ] \u5229\u7528\u5171\u4eab\u5185\u5b58\u51cf\u5c11\u5168\u5c40\u5185\u5b58\u8bbf\u95ee</li>\n</ul>\n<h3 id=\"_14\">\u8c03\u8bd5\u9a8c\u8bc1</h3>\n<ul>\n<li>[ ] \u5b9e\u73b0\u80fd\u91cf/\u52a8\u91cf\u76d1\u6d4b</li>\n<li>[ ] \u8fb9\u754c\u6761\u4ef6\u6b63\u786e\u5904\u7406</li>\n<li>[ ] \u5355\u5143\u6d4b\u8bd5\u6838\u5fc3\u7b97\u6cd5</li>\n<li>[ ] \u53ef\u89c6\u5316\u4e2d\u95f4\u7ed3\u679c</li>\n</ul>"
  }
}